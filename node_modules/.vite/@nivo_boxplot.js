import {
  R,
  S
} from "./chunk-P6YTOCWM.js";
import {
  B,
  C,
  cn
} from "./chunk-JTYFOI3S.js";
import "./chunk-B545YG5G.js";
import {
  O
} from "./chunk-5CPLXP24.js";
import {
  Xe,
  pr
} from "./chunk-LIF42OKE.js";
import "./chunk-6YWBRFZ4.js";
import {
  require_uniqBy
} from "./chunk-SY6HMO6G.js";
import "./chunk-AD5TROZ4.js";
import {
  require_sortBy
} from "./chunk-6JM3GFV6.js";
import "./chunk-DZU3R4ZD.js";
import "./chunk-3T4KNB5M.js";
import "./chunk-NIFAYVBJ.js";
import {
  Cn,
  In,
  It,
  Ot,
  Rn,
  St,
  Ur,
  Wn,
  g,
  gn,
  k,
  require_jsx_runtime,
  wt,
  zt
} from "./chunk-CIEVK6OE.js";
import {
  AnimatedObject,
  FluidValue,
  addFluidObserver,
  callFluidObservers,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  hasFluidValue,
  is,
  removeFluidObserver,
  toArray,
  useTransition
} from "./chunk-UROOLUEL.js";
import "./chunk-JMENM4FH.js";
import "./chunk-B7PIYN4Z.js";
import "./chunk-V2CXUUTH.js";
import {
  require_react_dom
} from "./chunk-2J4CPGJC.js";
import "./chunk-SEBMSOEZ.js";
import {
  require_react
} from "./chunk-3HGGCXHU.js";
import {
  __objRest,
  __toModule
} from "./chunk-AXQKKFRM.js";

// node_modules/@nivo/boxplot/dist/nivo-boxplot.es.js
var import_react = __toModule(require_react());
var import_jsx_runtime = __toModule(require_jsx_runtime());

// node_modules/@nivo/boxplot/node_modules/@react-spring/web/dist/react-spring_web.legacy-esm.js
var import_react_dom = __toModule(require_react_dom());
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const _a = props, {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox
  } = _a, attributes = __objRest(_a, [
    "className",
    "style",
    "children",
    "scrollTop",
    "scrollLeft",
    "viewBox"
  ]);
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n2) => "-" + n2.toLowerCase())));
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor(_a) {
    var _b = _a, { x, y, z: z2 } = _b, style = __objRest(_b, ["x", "y", "z"]);
    const inputs = [];
    const transforms = [];
    if (x || y || z2) {
      inputs.push([x || 0, y || 0, z2 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(key === "rotate3d" ? ([x2, y2, z22, deg]) => [
          `rotate3d(${x2},${y2},${z22},${addUnit(deg, unit)})`,
          isValueIdentity(deg, 0)
        ] : (input) => [
          `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
          isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
        ]);
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  observerAdded(count) {
    if (count == 1)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && addFluidObserver(value, this)));
  }
  observerRemoved(count) {
    if (count == 0)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && removeFluidObserver(value, this)));
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  getComponentProps: (_a) => {
    var _b = _a, { scrollTop, scrollLeft } = _b, props = __objRest(_b, ["scrollTop", "scrollLeft"]);
    return props;
  }
});
var animated = host.animated;

// node_modules/@nivo/boxplot/dist/nivo-boxplot.es.js
var import_uniqBy = __toModule(require_uniqBy());
var import_sortBy = __toModule(require_sortBy());
function E() {
  return E = Object.assign ? Object.assign.bind() : function(e2) {
    for (var o2 = 1; o2 < arguments.length; o2++) {
      var i2 = arguments[o2];
      for (var r2 in i2)
        Object.prototype.hasOwnProperty.call(i2, r2) && (e2[r2] = i2[r2]);
    }
    return e2;
  }, E.apply(this, arguments);
}
var O2 = function(e2) {
  return { x: e2.x + e2.width / 2, y: e2.y + e2.height / 2 };
};
var q = function(e2) {
  var o2 = e2.width, i2 = e2.height;
  return { width: o2, height: i2, size: Math.max(o2, i2) };
};
var F = function(e2) {
  var o2 = e2.boxPlots, i2 = e2.annotations, r2 = S({ data: o2, annotations: i2, getPosition: O2, getDimensions: q });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: r2.map(function(e3, o3) {
    return (0, import_jsx_runtime.jsx)(R, E({}, e3), o3);
  }) });
};
var T = function(e2) {
  var o2 = e2.width, i2 = e2.height, r2 = e2.legends;
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: r2.map(function(e3, r3) {
    var n2, t2 = e3[0], a = e3[1];
    return (0, import_jsx_runtime.jsx)(O, E({}, t2, { containerWidth: o2, containerHeight: i2, data: (n2 = t2.data) != null ? n2 : a }), r3);
  }) });
};
var A = function(e2) {
  var o2 = e2.distStart, i2 = e2.distEnd, r2 = e2.whiskerEndSize, n2 = e2.whiskerColor, t2 = e2.whiskerWidth;
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(animated.line, { x1: 0, x2: 0, y1: o2, y2: i2, strokeWidth: t2, stroke: n2 }), r2 > 0 ? (0, import_jsx_runtime.jsx)(animated.line, { x1: -r2, x2: r2, y1: i2, y2: i2, strokeWidth: t2, stroke: n2 }) : null] });
};
var z = function(r2) {
  var n2, t2 = r2.boxPlot, a = r2.layout, l = r2.animatedProps, u = l.borderColor, d = l.medianColor, s = l.whiskerColor, c = l.color, v = l.opacity, p = l.transform, m = l.valueInterval, h = l.valueDistance0, g2 = l.valueDistance1, b = l.valueDistance3, f = l.valueDistance4, y = r2.borderRadius, x = r2.borderWidth, w2 = r2.medianWidth, C2 = r2.whiskerWidth, P = r2.whiskerEndSize, L = r2.isInteractive, I = r2.onClick, W = r2.onMouseEnter, M = r2.onMouseLeave, V2 = r2.setActiveItem, D2 = r2.tooltip, E2 = r2.isFocusable, O3 = r2.ariaLabel, q2 = r2.ariaLabelledBy, F2 = r2.ariaDescribedBy, T2 = k(), z2 = T2.showTooltipFromEvent, R3 = T2.hideTooltip, j2 = a === "vertical", H2 = j2 ? t2.width : t2.height, X2 = (0, import_react.useMemo)(function() {
    return function() {
      return (0, import_react.createElement)(D2, t2);
    };
  }, [D2, t2]), Y2 = (0, import_react.useCallback)(function(e2) {
    I == null || I(t2, e2);
  }, [t2, I]), N2 = (0, import_react.useCallback)(function(e2) {
    return z2(X2(), e2);
  }, [z2, X2]), Q2 = (0, import_react.useCallback)(function(e2) {
    W == null || W(t2, e2), z2(X2(), e2), V2(t2);
  }, [t2, W, z2, X2, V2]), K2 = (0, import_react.useCallback)(function(e2) {
    M == null || M(t2, e2), R3(), V2(null);
  }, [t2, R3, M, V2]), J2 = (0, import_react.useCallback)(function() {
    R3();
  }, [R3]);
  return (0, import_jsx_runtime.jsxs)(animated.g, { "data-key": "boxplot." + t2.key, transform: p, opacity: v, onMouseEnter: L ? Q2 : void 0, onMouseMove: L ? N2 : void 0, onMouseLeave: L ? K2 : void 0, onClick: L ? Y2 : void 0, onBlur: L && E2 ? J2 : void 0, focusable: E2, tabIndex: E2 ? 0 : void 0, "aria-label": O3 ? O3(t2) : void 0, "aria-labelledby": q2 ? q2(t2) : void 0, "aria-describedby": F2 ? F2(t2) : void 0, children: [(0, import_jsx_runtime.jsx)(animated.rect, { x: -H2 / 2, y: j2 ? b : g2, width: H2, height: m, rx: y, ry: y, fill: (n2 = t2.fill) != null ? n2 : c, strokeWidth: x, stroke: u }), (0, import_jsx_runtime.jsx)(animated.line, { x1: -H2 / 2, x2: H2 / 2, y1: 0, y2: 0, strokeWidth: w2, stroke: d }), (0, import_jsx_runtime.jsx)(A, { distStart: g2, distEnd: h, whiskerEndSize: P * H2 / 2, whiskerColor: s, whiskerWidth: C2 }), (0, import_jsx_runtime.jsx)(A, { distStart: b, distEnd: f, whiskerEndSize: P * H2 / 2, whiskerColor: s, whiskerWidth: C2 })] });
};
var R2 = { n: "n", mean: "mean", min: "min", max: "max", Summary: "Summary", Quantiles: "Quantiles" };
var j = (0, import_react.memo)(function(e2) {
  var o2 = e2.label, i2 = e2.formatted, r2 = e2.enableChip, n2 = r2 !== void 0 && r2, t2 = e2.color, a = zt(), l = R2;
  (function(e3) {
    return "translation" in e3;
  })(a) && (l = E({}, R2, a.translation));
  var d = i2.quantiles.map(function(e3, o3) {
    return (0, import_jsx_runtime.jsxs)("div", { children: [e3, "%: ", (0, import_jsx_runtime.jsx)("strong", { children: i2.values[o3] })] }, "quantile." + o3);
  });
  return (0, import_jsx_runtime.jsxs)("div", { style: a.tooltip.container, children: [(0, import_jsx_runtime.jsxs)("div", { style: a.tooltip.basic, children: [n2 && (0, import_jsx_runtime.jsx)(g, { color: t2 != null ? t2 : "", style: a.tooltip.chip }), o2] }), (0, import_jsx_runtime.jsxs)("div", { style: { display: "flex", marginTop: "1rem" }, children: [(0, import_jsx_runtime.jsxs)("div", { style: { marginRight: "2rem" }, children: [(0, import_jsx_runtime.jsxs)("div", { children: [l.n, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.n })] }), (0, import_jsx_runtime.jsx)("div", { style: { marginTop: "1rem" }, children: l.Summary }), (0, import_jsx_runtime.jsxs)("div", { children: [l.mean, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.mean })] }), (0, import_jsx_runtime.jsxs)("div", { children: [l.min, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.extrema[0] })] }), (0, import_jsx_runtime.jsxs)("div", { children: [l.max, ": ", (0, import_jsx_runtime.jsx)("strong", { children: i2.extrema[1] })] })] }), (0, import_jsx_runtime.jsxs)("div", { children: [(0, import_jsx_runtime.jsx)("div", { children: l.Quantiles }), d] })] })] });
});
var H = { value: "value", groupBy: "group", groups: null, subGroupBy: null, subGroups: null, quantiles: [0.1, 0.25, 0.5, 0.75, 0.9], layout: "vertical", minValue: "auto", maxValue: "auto", valueScale: { type: "linear" }, indexScale: { type: "band", round: true }, padding: 0.1, innerPadding: 6, opacity: 1, activeOpacity: 1, inactiveOpacity: 0.25, axisBottom: {}, axisLeft: {}, enableGridX: false, enableGridY: true, valueFormat: function(e2) {
  return e2.toPrecision(4);
}, colorBy: "subGroup", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, medianWidth: 3, medianColor: { from: "color", modifiers: [["darker", 2]] }, whiskerWidth: 2, whiskerColor: { from: "color" }, whiskerEndSize: 0, isInteractive: true, tooltip: function(e2) {
  var o2 = e2.color, i2 = e2.label, r2 = e2.formatted;
  return (0, import_jsx_runtime.jsx)(j, { label: i2, formatted: r2, enableChip: true, color: o2 });
}, tooltipLabel: function(e2) {
  return e2.subGroup ? e2.group + " - " + e2.subGroup : e2.group;
}, legends: [], annotations: [], markers: [] };
var X = E({}, H, { layers: ["grid", "axes", "boxPlots", "markers", "legends", "annotations"], boxPlotComponent: z, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false });
var Y = function(e2) {
  var o2 = e2.data, i2 = e2.layout, r2 = e2.groups, n2 = e2.subGroups, t2 = e2.formatValue, a = e2.minValue, l = e2.maxValue, u = e2.width, d = e2.height, s = e2.padding, c = e2.innerPadding, v = e2.valueScale, p = e2.indexScale, m = e2.getTooltipLabel, h = i2 === "vertical" ? ["y", "x", u] : ["x", "y", d], g2 = h[0], b = function(e3, o3, i3, r3, n3) {
    return cn(i3, { all: e3, min: 0, max: 0 }, r3, n3).padding(o3);
  }(r2 != null ? r2 : [], s, p, h[2], h[1]), f = E({ max: l, min: a }, v), y = o2.map(function(e3) {
    return e3.values;
  }).flat(), x = y.reduce(function(e3, o3) {
    return Math.min(e3, o3);
  }, 1 / 0), k3 = y.reduce(function(e3, o3) {
    return Math.max(e3, o3);
  }, -1 / 0), w2 = cn(f, { all: [x, k3], min: x, max: k3 }, g2 === "x" ? u : d, g2), S3 = i2 === "vertical" ? [b, w2] : [w2, b], C2 = S3[0], G = S3[1], P = Math.max(1, n2 ? n2.length : 1), B2 = (b.bandwidth() - c * (P - 1)) / P, L = function(e3) {
    var o3 = e3.data, i3 = e3.getTooltipLabel, r3 = e3.innerPadding, n3 = r3 === void 0 ? 0 : r3, t3 = e3.groups, a2 = e3.indexScale, l2 = e3.valueScale, u2 = e3.formatValue, d2 = e3.bandwidth, s2 = e3.layout;
    if (d2 === 0)
      return Array();
    var c2 = s2 === "vertical";
    return o3.map(function(e4) {
      var o4, r4, v2, p2 = e4.group, m2 = e4.subGroup, h2 = e4.groupIndex, g3 = e4.subGroupIndex, b2 = e4.values, f2 = ((o4 = a2(t3[h2])) != null ? o4 : 0) + d2 * g3 + n3 * g3, y2 = h2 + "." + g3, x2 = b2.map(l2).map(function(e5) {
        return e5 != null ? e5 : 0;
      }), k4 = [0, 1, 2, 3].map(function(e5) {
        var o5;
        return (o5 = Math.abs(x2[e5 + 1] - x2[e5])) != null ? o5 : 0;
      }), w3 = c2 ? { x: f2, y: (r4 = l2(e4.values[3])) != null ? r4 : 0, width: d2, height: k4[1] + k4[2] } : { x: (v2 = l2(e4.values[1])) != null ? v2 : 0, y: f2, width: k4[1] + k4[2], height: d2 };
      return E({ key: y2, group: p2, subGroup: m2, data: e4, formatted: { n: String(e4.n), mean: u2(e4.mean), extrema: e4.extrema.map(u2), values: e4.values.map(u2), quantiles: e4.quantiles.map(function(e5) {
        return String(100 * e5);
      }) } }, w3, { coordinates: { index: f2, values: b2.map(function(e5) {
        var o5;
        return (o5 = l2(e5)) != null ? o5 : 0;
      }) }, bandwidth: d2, label: i3(e4), layout: s2 });
    });
  }({ data: o2, groups: r2, subGroups: n2, getTooltipLabel: m, innerPadding: c, indexScale: b, valueScale: w2, formatValue: t2, bandwidth: B2, layout: i2 });
  return { xScale: C2, yScale: G, boxPlots: L };
};
var N = function(e2) {
  return e2.reduce(function(e3, o2) {
    return e3 + o2;
  }, 0) / e2.length;
};
var Q = function(e2) {
  var o2, i2 = e2.data, r2 = e2.getValue, n2 = e2.groups, t2 = e2.subGroups, a = e2.groupIndex, l = e2.subGroupIndex, u = e2.quantiles;
  if (i2.length === 1 && (o2 = i2[0], ["values", "extrema", "mean", "quantiles", "group", "subGroup", "n"].every(function(e3) {
    return e3 in o2;
  })))
    return E({ groupIndex: a, subGroupIndex: l }, i2[0]);
  var d = i2.map(function(e3) {
    return Number(r2(e3));
  });
  return d.sort(function(e3, o3) {
    return e3 - o3;
  }), { group: n2 ? n2[a] : "", groupIndex: a, subGroup: t2 ? t2[l] : "", subGroupIndex: l, n: d.length, extrema: [d[0], d[d.length - 1]], quantiles: u, values: u.map(function(e3) {
    return function(e4, o3) {
      o3 === void 0 && (o3 = 0.5);
      var i3 = (e4.length - 1) * Math.max(0, Math.min(1, o3)), r3 = Math.floor(i3);
      if (i3 === r3)
        return e4[r3];
      var n3 = e4[r3];
      return n3 + (e4[r3 + 1] - n3) * (i3 - r3);
    }(d, e3);
  }), mean: N(d) };
};
var K = function(e2, o2, i2) {
  var r2 = Wn(i2 != null ? i2 : "id");
  if (e2)
    return e2;
  if (!i2)
    return null;
  var n2 = new Set(o2.map(function(e3) {
    return r2(e3);
  }));
  return Array.from(n2);
};
var J = function(o2) {
  var i2 = o2.data, r2 = o2.value, t2 = o2.groupBy, a = o2.groups, l = a === void 0 ? H.groups : a, v = o2.subGroupBy, p = v === void 0 ? H.subGroupBy : v, m = o2.subGroups, h = m === void 0 ? H.subGroups : m, g2 = o2.quantiles, b = g2 === void 0 ? H.quantiles : g2, f = o2.width, y = o2.height, x = o2.layout, k3 = o2.minValue, w2 = o2.maxValue, S3 = o2.valueScale, C2 = S3 === void 0 ? H.valueScale : S3, G = o2.indexScale, P = G === void 0 ? H.indexScale : G, B2 = o2.padding, L = B2 === void 0 ? H.padding : B2, M = o2.innerPadding, O3 = M === void 0 ? H.innerPadding : M, q2 = o2.colorBy, F2 = q2 === void 0 ? H.colorBy : q2, T2 = o2.colors, A2 = T2 === void 0 ? H.colors : T2, z2 = o2.opacity, R3 = o2.activeOpacity, j2 = o2.inactiveOpacity, X2 = o2.borderColor, N2 = o2.medianColor, J2 = o2.whiskerColor, U2 = o2.legendLabel, Z2 = o2.tooltipLabel, $2 = o2.valueFormat, _2 = $2 === void 0 ? H.valueFormat : $2, ee = o2.legends, oe = ee === void 0 ? H.legends : ee;
  l = K(l, i2, t2), h = K(h, i2, p);
  var ie = Wn(t2 != null ? t2 : "group"), re = Wn(p != null ? p : "subGroup"), ne = Wn(Z2), te = Wn(r2), ae = Ot(_2), le = zt(), ue = pr(A2, F2);
  l && F2 === "group" && l.map(function(e2) {
    return ue({ group: e2 });
  }), h && F2 === "subGroup" && h.map(function(e2) {
    return ue({ subGroup: e2 });
  });
  var de = Xe(X2, le), se = Xe(N2, le), ce = Xe(J2, le), ve = function(e2) {
    var o3 = e2.data, i3 = e2.groups, r3 = i3 === void 0 ? H.groups : i3, n2 = e2.getGroup, t3 = e2.subGroups, a2 = t3 === void 0 ? H.subGroups : t3, l2 = e2.getSubGroup, u = {};
    r3 && r3.map(function(e3, o4) {
      return u[e3] = o4;
    });
    var d = {};
    a2 && a2.map(function(e3, o4) {
      return d[e3] = o4;
    });
    var s = Math.max(1, r3 ? r3.length : 1), c = Math.max(1, a2 ? a2.length : 1), v2 = Array(s * c).fill([]).map(function() {
      return Array();
    });
    return o3.forEach(function(e3) {
      var o4, i4 = n2 ? Number(u[n2(e3)]) : 0, r4 = l2 ? Number((o4 = d[l2(e3)]) != null ? o4 : 0) : 0, t4 = i4 * c + r4;
      t4 >= 0 && v2[t4].push(e3);
    }), v2;
  }({ data: i2, groups: l, getGroup: ie, subGroups: h, getSubGroup: re }), pe = Math.max(1, h ? h.length : 1), me = (0, import_react.useMemo)(function() {
    return ve.map(function(e2, o3) {
      return Q({ data: e2, getValue: te, groups: l, subGroups: h, groupIndex: Math.floor(o3 / pe), subGroupIndex: o3 % pe, quantiles: b });
    });
  }, [ve, te, l, h, pe, b]), he = (0, import_react.useMemo)(function() {
    return Y({ layout: x, data: me.filter(function(e2) {
      return e2.n > 0;
    }), groups: l, subGroups: h, formatValue: ae, minValue: k3, maxValue: w2, width: f, height: y, padding: L, innerPadding: O3, valueScale: C2, indexScale: P, getTooltipLabel: ne });
  }, [x, me, l, h, ae, k3, w2, f, y, L, O3, C2, P, ne]), ge = he.boxPlots, be = he.xScale, fe = he.yScale, ye = (0, import_react.useState)(null), xe = ye[0], ke = ye[1], we = (0, import_react.useMemo)(function() {
    if (!xe)
      return [];
    var e2 = xe.group, o3 = xe.subGroup;
    return ge.filter(function(i3) {
      return e2 === i3.group || o3 === i3.subGroup;
    }).map(function(e3) {
      return e3.key;
    });
  }, [ge, xe]), Se = (0, import_react.useMemo)(function() {
    return ge.map(function(e2) {
      var o3 = we.includes(e2.key) ? R3 : j2;
      return xe || (o3 = z2), E({}, e2, { color: ue(e2.data), opacity: o3 });
    });
  }, [ge, xe, we, z2, R3, j2, ue]), Ce = (0, import_react.useMemo)(function() {
    return oe.map(function(e2) {
      var o3 = function(e3) {
        var o4 = e3.boxPlots, i3 = e3.dataFrom, r3 = e3.legendLabel, n2 = Cn(r3 != null ? r3 : i3), t3 = i3 === "group", a2 = o4.map(function(e4) {
          return { id: t3 ? e4.data.groupIndex : e4.data.subGroupIndex, label: n2(e4 == null ? void 0 : e4.data), color: e4 == null ? void 0 : e4.color };
        });
        return (0, import_sortBy.default)((0, import_uniqBy.default)(a2, function(e4) {
          return e4.label;
        }), function(e4) {
          return e4.id;
        });
      }({ boxPlots: Se, dataFrom: F2, legendLabel: U2 });
      return [e2, o3];
    });
  }, [oe, Se, F2, U2]);
  return { boxPlots: Se, xScale: be, yScale: fe, getTooltipLabel: ne, formatValue: ae, getColor: ue, getBorderColor: de, getMedianColor: se, getWhiskerColor: ce, legendsData: Ce, activeItem: xe, setActiveItem: ke };
};
var U = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var Z = function(i2) {
  var r2 = i2.data, n2 = i2.value, u = n2 === void 0 ? X.value : n2, d = i2.groupBy, s = d === void 0 ? X.groupBy : d, c = i2.groups, v = c === void 0 ? X.groups : c, f = i2.subGroupBy, y = f === void 0 ? X.subGroupBy : f, x = i2.subGroups, w2 = x === void 0 ? X.subGroups : x, S3 = i2.quantiles, C2 = S3 === void 0 ? X.quantiles : S3, G = i2.margin, B2 = i2.width, L = i2.height, I = i2.layout, W = I === void 0 ? X.layout : I, M = i2.minValue, V2 = M === void 0 ? X.minValue : M, D2 = i2.maxValue, O3 = D2 === void 0 ? X.maxValue : D2, q2 = i2.valueScale, A2 = q2 === void 0 ? X.valueScale : q2, z2 = i2.indexScale, R3 = z2 === void 0 ? X.indexScale : z2, j2 = i2.padding, H2 = j2 === void 0 ? X.padding : j2, Y2 = i2.innerPadding, N2 = Y2 === void 0 ? X.innerPadding : Y2, Q2 = i2.opacity, K2 = Q2 === void 0 ? X.opacity : Q2, U2 = i2.activeOpacity, Z2 = U2 === void 0 ? X.activeOpacity : U2, $2 = i2.inactiveOpacity, _2 = $2 === void 0 ? X.inactiveOpacity : $2, ee = i2.axisTop, oe = i2.axisRight, ie = i2.axisBottom, re = ie === void 0 ? X.axisBottom : ie, ne = i2.axisLeft, te = ne === void 0 ? X.axisLeft : ne, ae = i2.enableGridX, le = ae === void 0 ? X.enableGridX : ae, ue = i2.enableGridY, de = ue === void 0 ? X.enableGridY : ue, se = i2.gridXValues, ce = i2.gridYValues, ve = i2.layers, pe = ve === void 0 ? X.layers : ve, me = i2.boxPlotComponent, he = me === void 0 ? X.boxPlotComponent : me, ge = i2.colorBy, be = ge === void 0 ? X.colorBy : ge, fe = i2.colors, ye = fe === void 0 ? X.colors : fe, xe = i2.defs, ke = xe === void 0 ? X.defs : xe, we = i2.fill, Se = i2.borderRadius, Ce = Se === void 0 ? X.borderRadius : Se, Ge = i2.borderWidth, Pe = Ge === void 0 ? X.borderWidth : Ge, Be = i2.borderColor, Le = Be === void 0 ? X.borderColor : Be, Ie = i2.medianWidth, We = Ie === void 0 ? X.medianWidth : Ie, Me = i2.medianColor, Ve = Me === void 0 ? X.medianColor : Me, De = i2.whiskerWidth, Ee = De === void 0 ? X.whiskerWidth : De, Oe = i2.whiskerColor, qe = Oe === void 0 ? X.whiskerColor : Oe, Fe = i2.whiskerEndSize, Te = Fe === void 0 ? X.whiskerEndSize : Fe, Ae = i2.markers, ze = Ae === void 0 ? X.markers : Ae, Re = i2.legendLabel, je = i2.tooltipLabel, He = je === void 0 ? X.tooltipLabel : je, Xe2 = i2.valueFormat, Ye = i2.isInteractive, Ne = Ye === void 0 ? X.isInteractive : Ye, Qe = i2.tooltip, Ke = Qe === void 0 ? X.tooltip : Qe, Je = i2.onClick, Ue = i2.onMouseEnter, Ze = i2.onMouseLeave, $e = i2.annotations, _e = $e === void 0 ? X.annotations : $e, eo = i2.legends, oo = eo === void 0 ? X.legends : eo, io = i2.role, ro = io === void 0 ? X.role : io, no = i2.ariaLabel, to = i2.ariaLabelledBy, ao = i2.ariaDescribedBy, lo = i2.isFocusable, uo = lo === void 0 ? X.isFocusable : lo, so = i2.boxPlotAriaLabel, co = i2.boxPlotAriaLabelledBy, vo = i2.boxPlotAriaDescribedBy, po = Ur(), mo = po.animate, ho = po.config, go = wt(B2, L, G), bo = go.outerWidth, fo = go.outerHeight, yo = go.margin, xo = go.innerWidth, ko = go.innerHeight, wo = J({ data: r2, value: u, groupBy: s, groups: v, subGroupBy: y, subGroups: w2, quantiles: C2, width: xo, height: ko, layout: W, minValue: V2, maxValue: O3, valueScale: A2, indexScale: R3, padding: H2, innerPadding: N2, colorBy: be, colors: ye, opacity: K2, activeOpacity: Z2, inactiveOpacity: _2, borderColor: Le, medianColor: Ve, whiskerColor: qe, legendLabel: Re, tooltipLabel: He, valueFormat: Xe2, legends: oo }), So = wo.boxPlots, Co = wo.xScale, Go = wo.yScale, Po = wo.getTooltipLabel, Bo = wo.getBorderColor, Lo = wo.getMedianColor, Io = wo.getWhiskerColor, Wo = wo.legendsData, Mo = wo.activeItem, Vo = wo.setActiveItem, Do = function(e2) {
    var o2 = e2.boxPlots, i3 = e2.getBorderColor, r3 = e2.getMedianColor, n3 = e2.getWhiskerColor, t2 = e2.animate, a = e2.springConfig, l = function(e3) {
      return { borderColor: i3(e3), medianColor: r3(e3), whiskerColor: n3(e3), color: e3.color, opacity: e3.opacity, valueInterval: Math.abs(e3.coordinates.values[3] - e3.coordinates.values[1]), valueDistance0: e3.coordinates.values[0] - e3.coordinates.values[2], valueDistance1: e3.coordinates.values[1] - e3.coordinates.values[2], valueDistance3: e3.coordinates.values[3] - e3.coordinates.values[2], valueDistance4: e3.coordinates.values[4] - e3.coordinates.values[2], transform: e3.layout === "vertical" ? "translate(" + (e3.x + e3.width / 2) + ", " + e3.coordinates.values[2] + ")" : "translate(" + e3.coordinates.values[2] + ", " + (e3.y + e3.height / 2) + ") rotate(-90)" };
    };
    return useTransition(o2, { keys: function(e3) {
      return e3.key;
    }, initial: t2 ? void 0 : null, from: function(e3) {
      return E({}, l(e3), { valueInterval: 0, valueDistance0: 0, valueDistance1: 0, valueDistance3: 0, valueDistance4: 0 });
    }, enter: function(e3) {
      return E({}, l(e3));
    }, update: function(e3) {
      return E({}, l(e3));
    }, leave: function(e3) {
      return E({}, l(e3), { valueInterval: 0, valueDistance0: 0, valueDistance1: 0, valueDistance3: 0, valueDistance4: 0 });
    }, config: a, immediate: !t2 });
  }({ boxPlots: So, getBorderColor: Bo, getMedianColor: Lo, getWhiskerColor: Io, animate: mo, springConfig: ho }), Eo = (0, import_react.useMemo)(function() {
    return { borderRadius: Ce, borderWidth: Pe, medianWidth: We, whiskerWidth: Ee, whiskerEndSize: Te, padding: H2, innerPadding: N2, isInteractive: Ne, onClick: Je, onMouseEnter: Ue, onMouseLeave: Ze, getTooltipLabel: Po, tooltip: Ke, isFocusable: uo, ariaLabel: so, ariaLabelledBy: co, ariaDescribedBy: vo, activeItem: Mo, setActiveItem: Vo };
  }, [Ce, Pe, We, Ee, Te, H2, N2, Ne, Je, Ue, Ze, Ke, Po, uo, so, co, vo, Mo, Vo]), Oo = In(ke, So, we, { dataKey: "data", targetKey: "fill" }), qo = { annotations: null, axes: null, boxPlots: null, grid: null, legends: null, markers: null };
  pe.includes("annotations") && (qo.annotations = (0, import_jsx_runtime.jsx)(F, { boxPlots: So, annotations: _e }, "annotations")), pe.includes("axes") && (qo.axes = (0, import_jsx_runtime.jsx)(B, { xScale: Co, yScale: Go, width: xo, height: ko, top: ee, right: oe, bottom: re, left: te }, "axes")), pe.includes("boxPlots") && (qo.boxPlots = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: Do(function(e2, i3) {
    return (0, import_react.createElement)(he, E({}, Eo, { boxPlot: i3, layout: W, animatedProps: e2 }));
  }) }, "boxPlots")), pe.includes("grid") && (qo.grid = (0, import_jsx_runtime.jsx)(C, { width: xo, height: ko, xScale: le ? Co : null, yScale: de ? Go : null, xValues: se, yValues: ce }, "grid")), pe.includes("legends") && (qo.legends = (0, import_jsx_runtime.jsx)(T, { width: xo, height: ko, legends: Wo }, "legends")), pe.includes("markers") && (qo.markers = (0, import_jsx_runtime.jsx)(Rn, { markers: ze, width: xo, height: ko, xScale: Co, yScale: Go }, "markers"));
  var Fo = (0, import_react.useMemo)(function() {
    return E({}, Eo, { layout: W, margin: yo, width: B2, height: L, innerWidth: xo, innerHeight: ko, padding: H2, innerPadding: N2, boxPlots: So, onClick: Je, onMouseEnter: Ue, onMouseLeave: Ze, tooltip: Ke, getTooltipLabel: Po, xScale: Co, yScale: Go });
  }, [Eo, W, yo, B2, L, xo, ko, H2, N2, So, Je, Ue, Ze, Ke, Po, Co, Go]);
  return (0, import_jsx_runtime.jsx)(gn, { width: bo, height: fo, margin: yo, defs: Oo, role: ro, ariaLabel: no, ariaLabelledBy: to, ariaDescribedBy: ao, isFocusable: uo, children: pe.map(function(e2, i3) {
    var r3;
    return typeof e2 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e2, Fo) }, i3) : (r3 = qo == null ? void 0 : qo[e2]) != null ? r3 : null;
  }) });
};
var $ = function(e2) {
  var o2 = e2.isInteractive, i2 = o2 === void 0 ? X.isInteractive : o2, r2 = e2.animate, n2 = r2 === void 0 ? X.animate : r2, t2 = e2.motionConfig, a = t2 === void 0 ? X.motionConfig : t2, l = e2.theme, u = e2.renderWrapper, d = function(e3, o3) {
    if (e3 == null)
      return {};
    var i3, r3, n3 = {}, t3 = Object.keys(e3);
    for (r3 = 0; r3 < t3.length; r3++)
      i3 = t3[r3], o3.indexOf(i3) >= 0 || (n3[i3] = e3[i3]);
    return n3;
  }(e2, U);
  return (0, import_jsx_runtime.jsx)(St, { animate: n2, isInteractive: i2, motionConfig: a, renderWrapper: u, theme: l, children: (0, import_jsx_runtime.jsx)(Z, E({ isInteractive: i2 }, d)) });
};
var _ = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(o2) {
    var i2 = o2.width, r2 = o2.height;
    return (0, import_jsx_runtime.jsx)($, E({ width: i2, height: r2 }, e2));
  } });
};
export {
  $ as BoxPlot,
  z as BoxPlotItem,
  _ as ResponsiveBoxPlot,
  H as defaultProps,
  X as svgDefaultProps
};
//# sourceMappingURL=@nivo_boxplot.js.map
