{
  "version": 3,
  "sources": ["../d3-sankey/src/align.js", "../d3-sankey/src/constant.js", "../d3-sankey/src/sankey.js", "../d3-sankey/node_modules/d3-path/src/path.js", "../d3-sankey/node_modules/d3-shape/src/math.js", "../d3-sankey/node_modules/d3-shape/src/curve/linear.js", "../d3-sankey/node_modules/d3-shape/src/curve/radial.js", "../d3-sankey/node_modules/d3-shape/src/array.js", "../d3-sankey/node_modules/d3-shape/src/symbol/diamond.js", "../d3-sankey/node_modules/d3-shape/src/symbol/star.js", "../d3-sankey/node_modules/d3-shape/src/symbol/triangle.js", "../d3-sankey/node_modules/d3-shape/src/symbol/wye.js", "../d3-sankey/node_modules/d3-shape/src/noop.js", "../d3-sankey/node_modules/d3-shape/src/curve/basis.js", "../d3-sankey/node_modules/d3-shape/src/curve/basisClosed.js", "../d3-sankey/node_modules/d3-shape/src/curve/basisOpen.js", "../d3-sankey/node_modules/d3-shape/src/curve/bundle.js", "../d3-sankey/node_modules/d3-shape/src/curve/cardinal.js", "../d3-sankey/node_modules/d3-shape/src/curve/cardinalClosed.js", "../d3-sankey/node_modules/d3-shape/src/curve/cardinalOpen.js", "../d3-sankey/node_modules/d3-shape/src/curve/catmullRom.js", "../d3-sankey/node_modules/d3-shape/src/curve/catmullRomClosed.js", "../d3-sankey/node_modules/d3-shape/src/curve/catmullRomOpen.js", "../d3-sankey/node_modules/d3-shape/src/curve/linearClosed.js", "../d3-sankey/node_modules/d3-shape/src/curve/monotone.js", "../d3-sankey/node_modules/d3-shape/src/curve/natural.js", "../d3-sankey/node_modules/d3-shape/src/curve/step.js", "../@nivo/sankey/node_modules/@react-spring/web/src/index.ts", "../@nivo/sankey/node_modules/@react-spring/web/src/applyAnimatedValues.ts", "../@nivo/sankey/node_modules/@react-spring/web/src/AnimatedStyle.ts", "../@nivo/sankey/node_modules/@react-spring/web/src/primitives.ts", "../@nivo/sankey/src/SankeyNodeTooltip.tsx", "../@nivo/sankey/src/SankeyLinkTooltip.tsx", "../@nivo/sankey/src/props.ts", "../@nivo/sankey/src/hooks.ts", "../@nivo/sankey/src/SankeyNodesItem.tsx", "../@nivo/sankey/src/SankeyNodes.tsx", "../@nivo/sankey/src/SankeyLinkGradient.tsx", "../@nivo/sankey/src/SankeyLinksItem.tsx", "../@nivo/sankey/src/SankeyLinks.tsx", "../@nivo/sankey/src/links.ts", "../@nivo/sankey/src/SankeyLabels.tsx", "../@nivo/sankey/src/Sankey.tsx", "../@nivo/sankey/src/ResponsiveSankey.tsx"],
  "sourcesContent": ["import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n", "export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n", "var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We\u2019re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n", "export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "export var slice = Array.prototype.slice;\n", "var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {pi, tau} from \"../math.js\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic B\u00E9zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n", "import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const {\n    className,\n    style,\n    children,\n    scrollTop,\n    scrollLeft,\n    viewBox,\n    ...attributes\n  } = props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (className !== void 0) {\n    instance.className = className\n  }\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute('viewBox', viewBox)\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n", "import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n      ? value === id\n      : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n            ? 'deg'\n            : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(\n    readonly inputs: Inputs,\n    readonly transforms: Transforms\n  ) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n", "export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n", "import { BasicTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyNodeDatum } from './types'\n\nexport interface SankeyNodeTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n}\n\nexport const SankeyNodeTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n}: SankeyNodeTooltipProps<N, L>) => (\n    <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n)\n", "import { BasicTooltip, Chip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nexport interface SankeyLinkTooltipProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n}\n\nexport const SankeyLinkTooltip = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n}: SankeyLinkTooltipProps<N, L>) => (\n    <BasicTooltip\n        id={\n            <span style={tooltipStyles.container}>\n                <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n                <strong>{link.source.label}</strong>\n                {' > '}\n                <strong>{link.target.label}</strong>\n                <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n                <strong>{link.formattedValue}</strong>\n            </span>\n        }\n    />\n)\n", "import { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { SankeyLayerId, SankeyNodeDatum, SankeyAlignType } from './types'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { SankeyNodeTooltip } from './SankeyNodeTooltip'\nimport { SankeyLinkTooltip } from './SankeyLinkTooltip'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping) as SankeyAlignType[]\n\nexport const sankeyAlignmentFromProp = (prop: SankeyAlignType) => sankeyAlignmentPropMapping[prop]\n\nexport const svgDefaultProps = {\n    layout: 'horizontal' as const,\n    align: 'center' as const,\n    sort: 'auto' as const,\n\n    colors: { scheme: 'nivo' as const },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n    nodeBorderRadius: 0,\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply' as const,\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside' as const,\n    labelPadding: 9,\n    labelOrientation: 'horizontal' as const,\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] } as InheritedColorConfig<\n        SankeyNodeDatum<any, any>\n    >,\n\n    isInteractive: true,\n    nodeTooltip: SankeyNodeTooltip,\n    linkTooltip: SankeyLinkTooltip,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'] as SankeyLayerId[],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n", "import { useState, useMemo } from 'react'\nimport cloneDeep from 'lodash/cloneDeep'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, usePropertyAccessor, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyAlignFunction,\n    SankeyCommonProps,\n    SankeyDataProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySortFunction,\n} from './types'\n\nconst getId = <N extends DefaultNode>(node: N) => node.id\n\nexport const computeNodeAndLinks = <N extends DefaultNode, L extends DefaultLink>({\n    data: _data,\n    formatValue,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLabel,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    formatValue: (value: number) => string\n    layout: SankeyCommonProps<N, L>['layout']\n    alignFunction: SankeyAlignFunction\n    sortFunction: null | undefined | SankeySortFunction<N, L>\n    linkSortMode: null | undefined\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    width: number\n    height: number\n    getColor: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n    getLabel: (node: Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>) => string\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        // @ts-ignore: this method signature is incorrect in current @types/d3-sankey\n        .nodeSort(sortFunction)\n        // @ts-ignore: this method is not available in current @types/d3-sankey\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = cloneDeep(_data) as unknown as {\n        nodes: SankeyNodeDatum<N, L>[]\n        links: SankeyLinkDatum<N, L>[]\n    }\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        node.formattedValue = formatValue(node.value)\n\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.formattedValue = formatValue(link.value)\n        link.color = link.source.color\n        // @ts-ignore\n        link.pos0 = link.y0\n        // @ts-ignore\n        link.pos1 = link.y1\n        // @ts-ignore\n        link.thickness = link.width\n        // @ts-ignore\n        delete link.y0\n        // @ts-ignore\n        delete link.y1\n        // @ts-ignore\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelTextColor,\n}: {\n    data: SankeyDataProps<N, L>['data']\n    valueFormat?: SankeyCommonProps<N, L>['valueFormat']\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    sort: SankeyCommonProps<N, L>['sort']\n    align: SankeyCommonProps<N, L>['align']\n    colors: SankeyCommonProps<N, L>['colors']\n    nodeThickness: SankeyCommonProps<N, L>['nodeThickness']\n    nodeSpacing: SankeyCommonProps<N, L>['nodeSpacing']\n    nodeInnerPadding: SankeyCommonProps<N, L>['nodeInnerPadding']\n    nodeBorderColor: SankeyCommonProps<N, L>['nodeBorderColor']\n    label: SankeyCommonProps<N, L>['label']\n    labelTextColor: SankeyCommonProps<N, L>['labelTextColor']\n}) => {\n    const [currentNode, setCurrentNode] = useState<SankeyNodeDatum<N, L> | null>(null)\n    const [currentLink, setCurrentLink] = useState<SankeyLinkDatum<N, L> | null>(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => a.value - b.value\n        }\n        if (sort === 'descending') {\n            return (a: SankeyNodeDatum<N, L>, b: SankeyNodeDatum<N, L>) => b.value - a.value\n        }\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => {\n        if (typeof align === 'function') return align\n        return sankeyAlignmentFromProp(align)\n    }, [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<Omit<SankeyNodeDatum<N, L>, 'color' | 'label'>, string>(\n        label\n    )\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks<N, L>({\n                data,\n                formatValue,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLabel,\n            }),\n        [\n            data,\n            formatValue,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n", "import { createElement, useCallback, MouseEvent } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyNodesItemProps<N extends DefaultNode, L extends DefaultLink> {\n    node: SankeyNodeDatum<N, L>\n    x: number\n    y: number\n    width: number\n    height: number\n    color: string\n    opacity: number\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    borderColor: string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrent: (node: SankeyNodeDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodesItem = <N extends DefaultNode, L extends DefaultLink>({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    borderRadius,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesItemProps<N, L>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            setCurrent(node)\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [showTooltipFromEvent, node, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            rx={borderRadius}\n            ry={borderRadius}\n            width={animatedProps.width.to(v => Math.max(v, 0))}\n            height={animatedProps.height.to(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n", "import {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyNodesItem } from './SankeyNodesItem'\n\ninterface SankeyNodesProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    nodeOpacity: SankeyCommonProps<N, L>['nodeOpacity']\n    nodeHoverOpacity: SankeyCommonProps<N, L>['nodeHoverOpacity']\n    nodeHoverOthersOpacity: SankeyCommonProps<N, L>['nodeHoverOthersOpacity']\n    borderWidth: SankeyCommonProps<N, L>['nodeBorderWidth']\n    getBorderColor: (node: SankeyNodeDatum<N, L>) => string\n    borderRadius: SankeyCommonProps<N, L>['nodeBorderRadius']\n    setCurrentNode: (node: SankeyNodeDatum<N, L> | null) => void\n    currentNode: SankeyNodeDatum<N, L> | null\n    currentLink: SankeyLinkDatum<N, L> | null\n    isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['nodeTooltip']\n}\n\nexport const SankeyNodes = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    borderWidth,\n    getBorderColor,\n    borderRadius,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyNodesProps<N, L>) => {\n    const getOpacity = (node: SankeyNodeDatum<N, L>) => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return (\n        <>\n            {nodes.map(node => (\n                <SankeyNodesItem<N, L>\n                    key={node.id}\n                    node={node}\n                    x={node.x}\n                    y={node.y}\n                    width={node.width}\n                    height={node.height}\n                    color={node.color}\n                    opacity={getOpacity(node)}\n                    borderWidth={borderWidth}\n                    borderColor={getBorderColor(node)}\n                    borderRadius={borderRadius}\n                    setCurrent={setCurrentNode}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n", "import { SankeyCommonProps } from './types'\n\ninterface SankeyLinkGradientProps {\n    id: string\n    layout: SankeyCommonProps<any, any>['layout']\n    startColor: string\n    endColor: string\n}\n\nexport const SankeyLinkGradient = ({\n    id,\n    layout,\n    startColor,\n    endColor,\n}: SankeyLinkGradientProps) => {\n    let gradientProps: {\n        x1: string\n        x2: string\n        y1: string\n        y2: string\n    }\n    if (layout === 'horizontal') {\n        gradientProps = {\n            x1: '0%',\n            x2: '100%',\n            y1: '0%',\n            y2: '0%',\n        }\n    } else {\n        gradientProps = {\n            x1: '0%',\n            x2: '0%',\n            y1: '0%',\n            y2: '100%',\n        }\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n}\n", "import { createElement, useCallback, MouseEvent } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { SankeyLinkGradient } from './SankeyLinkGradient'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyLinkDatum } from './types'\n\ninterface SankeyLinksItemProps<N extends DefaultNode, L extends DefaultLink> {\n    link: SankeyLinkDatum<N, L>\n    layout: SankeyCommonProps<N, L>['layout']\n    path: string\n    color: string\n    opacity: number\n    blendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    setCurrent: (link: SankeyLinkDatum<N, L> | null) => void\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n}\n\nexport const SankeyLinksItem = <N extends DefaultNode, L extends DefaultLink>({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    isInteractive,\n    onClick,\n}: SankeyLinksItemProps<N, L>) => {\n    const linkId = `${link.source.id}.${link.target.id}.${link.index}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            setCurrent(link)\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { link }), event, 'left')\n        },\n        [showTooltipFromEvent, link, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGPathElement>) => {\n            onClick?.(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n", "import { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyCommonProps,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n} from './types'\nimport { SankeyLinksItem } from './SankeyLinksItem'\nimport { useMemo } from 'react'\n\ninterface SankeyLinksProps<N extends DefaultNode, L extends DefaultLink> {\n    layout: SankeyCommonProps<N, L>['layout']\n    links: SankeyLinkDatum<N, L>[]\n    linkOpacity: SankeyCommonProps<N, L>['linkOpacity']\n    linkHoverOpacity: SankeyCommonProps<N, L>['linkHoverOpacity']\n    linkHoverOthersOpacity: SankeyCommonProps<N, L>['linkHoverOthersOpacity']\n    linkContract: SankeyCommonProps<N, L>['linkContract']\n    linkBlendMode: SankeyCommonProps<N, L>['linkBlendMode']\n    enableLinkGradient: SankeyCommonProps<N, L>['enableLinkGradient']\n    tooltip: SankeyCommonProps<N, L>['linkTooltip']\n    setCurrentLink: (link: SankeyLinkDatum<N, L> | null) => void\n    currentLink: SankeyLinkDatum<N, L> | null\n    currentNode: SankeyNodeDatum<N, L> | null\n    isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean\n    isInteractive: SankeyCommonProps<N, L>['isInteractive']\n    onClick?: SankeyCommonProps<N, L>['onClick']\n}\n\nexport const SankeyLinks = <N extends DefaultNode, L extends DefaultLink>({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentLink,\n    currentNode,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltip,\n}: SankeyLinksProps<N, L>) => {\n    const getOpacity = (link: SankeyLinkDatum<N, L>) => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = useMemo(\n        () => (layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()),\n        [layout]\n    )\n\n    return (\n        <>\n            {links.map(link => (\n                <SankeyLinksItem<N, L>\n                    key={`${link.source.id}.${link.target.id}.${link.index}`}\n                    link={link}\n                    layout={layout}\n                    path={getLinkPath(link, linkContract)}\n                    color={link.color}\n                    opacity={getOpacity(link)}\n                    blendMode={linkBlendMode}\n                    enableGradient={enableLinkGradient}\n                    setCurrent={setCurrentLink}\n                    isInteractive={isInteractive}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            ))}\n        </>\n    )\n}\n", "import { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\nimport { DefaultLink, DefaultNode, SankeyLinkDatum } from './types'\n\nexport const sankeyLinkHorizontal = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.x0 - link.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.source.x1, link.pos0 - halfThickness],\n            [link.source.x1 + padLength, link.pos0 - halfThickness],\n            [link.target.x0 - padLength, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 - halfThickness],\n            [link.target.x0, link.pos1 + halfThickness],\n            [link.target.x0 - padLength, link.pos1 + halfThickness],\n            [link.source.x1 + padLength, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 + halfThickness],\n            [link.source.x1, link.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = <N extends DefaultNode, L extends DefaultLink>() => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (link: SankeyLinkDatum<N, L>, contract: number) => {\n        const thickness = Math.max(1, link.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = link.target.y0 - link.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots: [number, number][] = [\n            [link.pos0 + halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1 + padLength],\n            [link.pos1 + halfThickness, link.target.y0 - padLength],\n            [link.pos1 + halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0],\n            [link.pos1 - halfThickness, link.target.y0 - padLength],\n            [link.pos0 - halfThickness, link.source.y1 + padLength],\n            [link.pos0 - halfThickness, link.source.y1],\n            [link.pos0 + halfThickness, link.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n", "import { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeyCommonProps, SankeyNodeDatum } from './types'\n\ninterface SankeyLabelsProps<N extends DefaultNode, L extends DefaultLink> {\n    nodes: SankeyNodeDatum<N, L>[]\n    layout: SankeyCommonProps<N, L>['layout']\n    width: number\n    height: number\n    labelPosition: SankeyCommonProps<N, L>['labelPosition']\n    labelPadding: SankeyCommonProps<N, L>['labelPadding']\n    labelOrientation: SankeyCommonProps<N, L>['labelOrientation']\n    getLabelTextColor: (node: SankeyNodeDatum<N, L>) => string\n}\n\nexport const SankeyLabels = <N extends DefaultNode, L extends DefaultLink>({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}: SankeyLabelsProps<N, L>) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return (\n                    <animated.text\n                        key={label.id}\n                        dominantBaseline=\"central\"\n                        textAnchor={label.textAnchor}\n                        transform={animatedProps.transform}\n                        style={{\n                            ...theme.labels.text,\n                            fill: animatedProps.color,\n                            pointerEvents: 'none',\n                        }}\n                    >\n                        {label.label}\n                    </animated.text>\n                )\n            })}\n        </>\n    )\n}\n", "import { createElement, Fragment, ReactNode } from 'react'\nimport uniq from 'lodash/uniq'\nimport { SvgWrapper, useDimensions, Container } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { svgDefaultProps } from './props'\nimport { useSankey } from './hooks'\nimport { SankeyNodes } from './SankeyNodes'\nimport { SankeyLinks } from './SankeyLinks'\nimport { SankeyLabels } from './SankeyLabels'\nimport {\n    DefaultLink,\n    DefaultNode,\n    SankeyLayerId,\n    SankeyLinkDatum,\n    SankeyNodeDatum,\n    SankeySvgProps,\n} from './types'\n\ntype InnerSankeyProps<N extends DefaultNode, L extends DefaultLink> = Omit<\n    SankeySvgProps<N, L>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerSankey = <N extends DefaultNode, L extends DefaultLink>({\n    data,\n    valueFormat,\n    layout = svgDefaultProps.layout,\n    sort = svgDefaultProps.sort,\n    align = svgDefaultProps.align,\n    width,\n    height,\n    margin: partialMargin,\n    colors = svgDefaultProps.colors,\n    nodeThickness = svgDefaultProps.nodeThickness,\n    nodeSpacing = svgDefaultProps.nodeThickness,\n    nodeInnerPadding = svgDefaultProps.nodeInnerPadding,\n    nodeBorderColor = svgDefaultProps.nodeBorderColor,\n    nodeOpacity = svgDefaultProps.nodeOpacity,\n    nodeHoverOpacity = svgDefaultProps.nodeHoverOpacity,\n    nodeHoverOthersOpacity = svgDefaultProps.nodeHoverOthersOpacity,\n    nodeBorderWidth = svgDefaultProps.nodeBorderWidth,\n    nodeBorderRadius = svgDefaultProps.nodeBorderRadius,\n    linkOpacity = svgDefaultProps.linkOpacity,\n    linkHoverOpacity = svgDefaultProps.linkHoverOpacity,\n    linkHoverOthersOpacity = svgDefaultProps.linkHoverOthersOpacity,\n    linkContract = svgDefaultProps.linkContract,\n    linkBlendMode = svgDefaultProps.linkBlendMode,\n    enableLinkGradient = svgDefaultProps.enableLinkGradient,\n    enableLabels = svgDefaultProps.enableLabels,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelPadding = svgDefaultProps.labelPadding,\n    labelOrientation = svgDefaultProps.labelOrientation,\n    label = svgDefaultProps.label,\n    labelTextColor = svgDefaultProps.labelTextColor,\n    nodeTooltip = svgDefaultProps.nodeTooltip,\n    linkTooltip = svgDefaultProps.linkTooltip,\n    isInteractive = svgDefaultProps.isInteractive,\n    onClick,\n    legends = svgDefaultProps.legends,\n    layers = svgDefaultProps.layers,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerSankeyProps<N, L>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey<N, L>({\n        data,\n        valueFormat,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelTextColor,\n    })\n\n    let isCurrentNode: (node: SankeyNodeDatum<N, L>) => boolean = () => false\n    let isCurrentLink: (link: SankeyLinkDatum<N, L>) => boolean = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }: SankeyNodeDatum<N, L>) =>\n            id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }: SankeyLinkDatum<N, L>) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById: Record<SankeyLayerId, ReactNode> = {\n        links: null,\n        nodes: null,\n        labels: null,\n        legends: null,\n    }\n\n    if (layers.includes('links')) {\n        layerById.links = (\n            <SankeyLinks<N, L>\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <SankeyNodes<N, L>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                borderWidth={nodeBorderWidth}\n                borderRadius={nodeBorderRadius}\n                getBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabels) {\n        layerById.labels = (\n            <SankeyLabels<N, L>\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={`legend${i}`}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sankey = <N extends DefaultNode = DefaultNode, L extends DefaultLink = DefaultLink>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: SankeySvgProps<N, L>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerSankey<N, L> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultLink, DefaultNode, SankeySvgProps } from './types'\nimport { Sankey } from './Sankey'\n\nexport const ResponsiveSankey = <\n    N extends DefaultNode = DefaultNode,\n    L extends DefaultLink = DefaultLink\n>(\n    props: Omit<SankeySvgProps<N, L>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey<N, L> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],
  "mappings": "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",
  "names": []
}
