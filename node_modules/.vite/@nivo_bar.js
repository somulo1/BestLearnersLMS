import {
  J,
  R,
  S,
  j as j2
} from "./chunk-P6YTOCWM.js";
import {
  B,
  C,
  cn,
  j,
  z
} from "./chunk-JTYFOI3S.js";
import "./chunk-B545YG5G.js";
import {
  H,
  O
} from "./chunk-5CPLXP24.js";
import {
  Xe,
  pr
} from "./chunk-LIF42OKE.js";
import "./chunk-6YWBRFZ4.js";
import {
  require_uniqBy
} from "./chunk-SY6HMO6G.js";
import "./chunk-AD5TROZ4.js";
import "./chunk-6JM3GFV6.js";
import "./chunk-DZU3R4ZD.js";
import "./chunk-3T4KNB5M.js";
import "./chunk-NIFAYVBJ.js";
import {
  Cn,
  In,
  It,
  Ot,
  Rn,
  Sn,
  St,
  Ur,
  Wn,
  gn,
  jn,
  k,
  require_jsx_runtime,
  w,
  wt,
  zt
} from "./chunk-CIEVK6OE.js";
import {
  AnimatedObject,
  FluidValue,
  addFluidObserver,
  callFluidObservers,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  hasFluidValue,
  is,
  removeFluidObserver,
  to,
  toArray,
  useTransition
} from "./chunk-UROOLUEL.js";
import {
  diverging_default,
  stack_default
} from "./chunk-JMENM4FH.js";
import "./chunk-B7PIYN4Z.js";
import "./chunk-V2CXUUTH.js";
import {
  require_react_dom
} from "./chunk-2J4CPGJC.js";
import "./chunk-SEBMSOEZ.js";
import {
  require_react
} from "./chunk-3HGGCXHU.js";
import {
  __objRest,
  __toModule
} from "./chunk-AXQKKFRM.js";

// node_modules/@nivo/bar/node_modules/@react-spring/web/dist/react-spring_web.legacy-esm.js
var import_react_dom = __toModule(require_react_dom());
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const _a = props, {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox
  } = _a, attributes = __objRest(_a, [
    "className",
    "style",
    "children",
    "scrollTop",
    "scrollLeft",
    "viewBox"
  ]);
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n) => "-" + n.toLowerCase())));
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i) => {
    instance.setAttribute(name, values[i]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor(_a) {
    var _b = _a, { x, y: y2, z: z2 } = _b, style = __objRest(_b, ["x", "y", "z"]);
    const inputs = [];
    const transforms = [];
    if (x || y2 || z2) {
      inputs.push([x || 0, y2 || 0, z2 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(key === "rotate3d" ? ([x2, y22, z22, deg]) => [
          `rotate3d(${x2},${y22},${z22},${addUnit(deg, unit)})`,
          isValueIdentity(deg, 0)
        ] : (input) => [
          `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
          isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
        ]);
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i) => {
      const arg1 = getFluidValue(input[0]);
      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += " " + t;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  observerAdded(count) {
    if (count == 1)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && addFluidObserver(value, this)));
  }
  observerRemoved(count) {
    if (count == 0)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && removeFluidObserver(value, this)));
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  getComponentProps: (_a) => {
    var _b = _a, { scrollTop, scrollLeft } = _b, props = __objRest(_b, ["scrollTop", "scrollLeft"]);
    return props;
  }
});
var animated = host.animated;

// node_modules/@nivo/bar/dist/nivo-bar.es.js
var import_react = __toModule(require_react());
var import_jsx_runtime = __toModule(require_jsx_runtime());
var import_uniqBy = __toModule(require_uniqBy());
function j3() {
  return j3 = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t = 1; t < arguments.length; t++) {
      var a = arguments[t];
      for (var i in a)
        Object.prototype.hasOwnProperty.call(a, i) && (e2[i] = a[i]);
    }
    return e2;
  }, j3.apply(this, arguments);
}
function q(e2, t) {
  if (e2 == null)
    return {};
  var a, i, n = {}, l = Object.keys(e2);
  for (i = 0; i < l.length; i++)
    a = l[i], t.indexOf(a) >= 0 || (n[a] = e2[a]);
  return n;
}
var K;
var _ = function(e2) {
  var t = e2.bars, a = e2.annotations, i = S({ data: t, annotations: a, getPosition: function(e3) {
    return { x: e3.x + e3.width / 2, y: e3.y + e3.height / 2 };
  }, getDimensions: function(e3) {
    var t2 = e3.height, a2 = e3.width;
    return { width: a2, height: t2, size: Math.max(a2, t2) };
  } });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: i.map(function(e3, t2) {
    return (0, import_jsx_runtime.jsx)(R, j3({}, e3), t2);
  }) });
};
var J2 = function(e2) {
  var t = e2.width, a = e2.height, i = e2.legends, n = e2.toggleSerie;
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: i.map(function(e3, i2) {
    var l, r = e3[0], o = e3[1];
    return (0, import_jsx_runtime.jsx)(O, j3({}, r, { containerWidth: t, containerHeight: a, data: (l = r.data) != null ? l : o, toggleSerie: r.toggleSerie && r.dataFrom === "keys" ? n : void 0 }), i2);
  }) });
};
var Q = ["data"];
var U = function(e2) {
  var t, a = e2.bar, i = a.data, l = q(a, Q), r = e2.style, o = r.borderColor, d = r.color, u = r.height, c = r.labelColor, s = r.labelOpacity, h = r.labelX, f = r.labelY, b = r.transform, v = r.width, g = r.textAnchor, x = e2.borderRadius, w3 = e2.borderWidth, L2 = e2.label, C3 = e2.shouldRenderLabel, V2 = e2.isInteractive, M2 = e2.onClick, W = e2.onMouseEnter, T = e2.onMouseLeave, B2 = e2.tooltip, O2 = e2.isFocusable, P2 = e2.ariaLabel, H2 = e2.ariaLabelledBy, R2 = e2.ariaDescribedBy, F = e2.ariaDisabled, D = e2.ariaHidden, X = zt(), Y = k(), G = Y.showTooltipFromEvent, z2 = Y.showTooltipAt, N2 = Y.hideTooltip, K2 = (0, import_react.useMemo)(function() {
    return function() {
      return (0, import_react.createElement)(B2, j3({}, l, i));
    };
  }, [B2, l, i]), _2 = (0, import_react.useCallback)(function(e3) {
    M2 == null || M2(j3({ color: l.color }, i), e3);
  }, [l, i, M2]), J3 = (0, import_react.useCallback)(function(e3) {
    return G(K2(), e3);
  }, [G, K2]), U2 = (0, import_react.useCallback)(function(e3) {
    W == null || W(i, e3), G(K2(), e3);
  }, [i, W, G, K2]), Z2 = (0, import_react.useCallback)(function(e3) {
    T == null || T(i, e3), N2();
  }, [i, N2, T]), $2 = (0, import_react.useCallback)(function() {
    z2(K2(), [l.absX + l.width / 2, l.absY]);
  }, [z2, K2, l]), ee2 = (0, import_react.useCallback)(function() {
    N2();
  }, [N2]);
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: b, children: [(0, import_jsx_runtime.jsx)(animated.rect, { width: to(v, function(e3) {
    return Math.max(e3, 0);
  }), height: to(u, function(e3) {
    return Math.max(e3, 0);
  }), rx: x, ry: x, fill: (t = i.fill) != null ? t : d, strokeWidth: w3, stroke: o, focusable: O2, tabIndex: O2 ? 0 : void 0, "aria-label": P2 ? P2(i) : void 0, "aria-labelledby": H2 ? H2(i) : void 0, "aria-describedby": R2 ? R2(i) : void 0, "aria-disabled": F ? F(i) : void 0, "aria-hidden": D ? D(i) : void 0, onMouseEnter: V2 ? U2 : void 0, onMouseMove: V2 ? J3 : void 0, onMouseLeave: V2 ? Z2 : void 0, onClick: V2 ? _2 : void 0, onFocus: V2 && O2 ? $2 : void 0, onBlur: V2 && O2 ? ee2 : void 0 }), C3 && (0, import_jsx_runtime.jsx)(animated.text, { x: h, y: f, textAnchor: g, dominantBaseline: "central", fillOpacity: s, style: j3({}, X.labels.text, { pointerEvents: "none", fill: c }), children: L2 })] });
};
var Z = ["color", "label"];
var $ = function(e2) {
  var t = e2.color, a = e2.label, i = q(e2, Z);
  return (0, import_jsx_runtime.jsx)(w, { id: a, value: i.formattedValue, enableChip: true, color: t });
};
var ee = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", reverse: false, minValue: "auto", maxValue: "auto", valueScale: { type: "linear" }, indexScale: { type: "band", round: true }, padding: 0.1, innerPadding: 0, axisBottom: {}, axisLeft: {}, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelPosition: "middle", labelOffset: 0, labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { from: "theme", theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: $, tooltipLabel: function(e2) {
  return e2.id + " - " + e2.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], markers: [], enableTotals: false, totalsOffset: 10 };
var te = j3({}, ee, { layers: ["grid", "axes", "bars", "totals", "markers", "legends", "annotations"], barComponent: U, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false });
var ae = j3({}, ee, { layers: ["grid", "axes", "bars", "totals", "legends", "annotations"], pixelRatio: typeof window != "undefined" && (K = window.devicePixelRatio) != null ? K : 1 });
var ie = function(e2, t, a, i, n, l) {
  return cn(i, { all: e2.map(t), min: 0, max: 0 }, n, l).padding(a);
};
var ne = function(e2, t) {
  return e2.map(function(e3) {
    return j3({}, t.reduce(function(e4, t2) {
      return e4[t2] = null, e4;
    }, {}), e3);
  });
};
var le = function(e2) {
  return Object.keys(e2).reduce(function(t, a) {
    return e2[a] && (t[a] = e2[a]), t;
  }, {});
};
var re = function(e2) {
  return [e2, Number(e2)];
};
function oe(e2, t, a, i) {
  return e2 === void 0 && (e2 = ee.layout), t === void 0 && (t = ee.reverse), a === void 0 && (a = ee.labelPosition), i === void 0 && (i = ee.labelOffset), function(n, l) {
    var r = i * (t ? -1 : 1);
    if (e2 === "horizontal") {
      var o = n / 2;
      return a === "start" ? o = t ? n : 0 : a === "end" && (o = t ? 0 : n), { labelX: o + r, labelY: l / 2, textAnchor: a === "middle" ? "middle" : t ? "end" : "start" };
    }
    var d = l / 2;
    return a === "start" ? d = t ? 0 : l : a === "end" && (d = t ? l : 0), { labelX: n / 2, labelY: d - r, textAnchor: "middle" };
  };
}
var de = ["layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var ue = function(e2, t) {
  return e2 > t;
};
var ce = function(e2, t) {
  return e2 < t;
};
var se = function(e2, t) {
  return Array.from(" ".repeat(t - e2), function(t2, a) {
    return e2 + a;
  });
};
var he = function(e2) {
  return ue(e2, 0) ? 0 : e2;
};
var fe = function(e2, t, a, i) {
  var n = e2.data, l = e2.formatValue, r = e2.getColor, o = e2.getIndex, d = e2.getTooltipLabel, u = e2.innerPadding, c = u === void 0 ? 0 : u, s = e2.keys, h = e2.xScale, f = e2.yScale, b = e2.margin, v = a ? ce : ue, g = n.map(le), m = [];
  return s.forEach(function(e3, a2) {
    return se(0, h.domain().length).forEach(function(u2) {
      var s2, p, x, y2 = re(n[u2][e3]), S3 = y2[0], k3 = y2[1], w3 = o(n[u2]), L2 = ((s2 = h(w3)) != null ? s2 : 0) + t * a2 + c * a2, C3 = v(p = k3, 0) ? (x = f(p)) != null ? x : 0 : i, V2 = function(e4, t2) {
        var a3;
        return v(e4, 0) ? i - t2 : ((a3 = f(e4)) != null ? a3 : 0) - i;
      }(k3, C3), M2 = { id: e3, value: S3 === null ? S3 : k3, formattedValue: l(k3), hidden: false, index: u2, indexValue: w3, data: g[u2] };
      m.push({ key: e3 + "." + M2.indexValue, index: m.length, data: M2, x: L2, y: C3, absX: b.left + L2, absY: b.top + C3, width: t, height: V2, color: r(M2), label: d(M2) });
    });
  }), m;
};
var be = function(e2, t, a, i) {
  var n = e2.data, l = e2.formatValue, r = e2.getIndex, o = e2.getColor, d = e2.getTooltipLabel, u = e2.keys, c = e2.innerPadding, s = c === void 0 ? 0 : c, h = e2.xScale, f = e2.yScale, b = e2.margin, v = a ? ce : ue, g = n.map(le), m = [];
  return u.forEach(function(e3, a2) {
    return se(0, f.domain().length).forEach(function(u2) {
      var c2, p, x, y2 = re(n[u2][e3]), S3 = y2[0], k3 = y2[1], w3 = r(n[u2]), L2 = v(p = k3, 0) ? i : (x = h(p)) != null ? x : 0, C3 = ((c2 = f(w3)) != null ? c2 : 0) + t * a2 + s * a2, V2 = function(e4, t2) {
        var a3;
        return v(e4, 0) ? ((a3 = h(e4)) != null ? a3 : 0) - i : i - t2;
      }(k3, L2), M2 = { id: e3, value: S3 === null ? S3 : k3, formattedValue: l(k3), hidden: false, index: u2, indexValue: w3, data: g[u2] };
      m.push({ key: e3 + "." + M2.indexValue, index: m.length, data: M2, x: L2, y: C3, absX: b.left + L2, absY: b.top + C3, width: V2, height: t, color: o(M2), label: d(M2) });
    });
  }), m;
};
var ve = function(e2) {
  var t, a, i = e2.layout, n = e2.minValue, l = e2.maxValue, r = e2.reverse, o = e2.width, d = e2.height, u = e2.padding, c = u === void 0 ? 0 : u, s = e2.innerPadding, h = s === void 0 ? 0 : s, f = e2.valueScale, b = e2.indexScale, v = e2.hiddenIds, g = v === void 0 ? [] : v, m = q(e2, de), p = m.keys.filter(function(e3) {
    return !g.includes(e3);
  }), x = ne(m.data, p), y2 = i === "vertical" ? ["y", "x", o] : ["x", "y", d], S3 = y2[0], k3 = y2[1], w3 = y2[2], L2 = ie(x, m.getIndex, c, b, w3, k3), C3 = j3({ max: l, min: n, reverse: r }, f), V2 = C3.min === "auto" ? he : function(e3) {
    return e3;
  }, M2 = x.reduce(function(e3, t2) {
    return [].concat(e3, p.map(function(e4) {
      return t2[e4];
    }));
  }, []).filter(Boolean), W = V2(Math.min.apply(Math, M2)), T = (a = Math.max.apply(Math, M2), isFinite(a) ? a : 0), B2 = cn(C3, { all: M2, min: W, max: T }, S3 === "x" ? o : d, S3), O2 = i === "vertical" ? [L2, B2] : [B2, L2], I2 = O2[0], P2 = O2[1], E2 = (L2.bandwidth() - h * (p.length - 1)) / p.length, H2 = [j3({}, m, { data: x, keys: p, innerPadding: h, xScale: I2, yScale: P2 }), E2, C3.reverse, (t = B2(0)) != null ? t : 0];
  return { xScale: I2, yScale: P2, bars: E2 > 0 ? i === "vertical" ? fe.apply(void 0, H2) : be.apply(void 0, H2) : [] };
};
var ge = ["data", "layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var me = function e(t) {
  var a;
  return t.some(Array.isArray) ? e((a = []).concat.apply(a, t)) : t;
};
var pe = function(e2, t, a) {
  var i = e2.formatValue, n = e2.getColor, l = e2.getIndex, r = e2.getTooltipLabel, o = e2.innerPadding, d = e2.stackedData, u = e2.xScale, c = e2.yScale, s = e2.margin, h = [];
  return d.forEach(function(e3) {
    return u.domain().forEach(function(d2, f) {
      var b, v, g = e3[f], m = (b = u(l(g.data))) != null ? b : 0, p = ((v = function(e4) {
        return c(e4[a ? 0 : 1]);
      }(g)) != null ? v : 0) + 0.5 * o, x = function(e4, t2) {
        var i2;
        return ((i2 = c(e4[a ? 1 : 0])) != null ? i2 : 0) - t2;
      }(g, p) - o, y2 = re(g.data[e3.key]), S3 = y2[0], k3 = y2[1], w3 = { id: e3.key, value: S3 === null ? S3 : k3, formattedValue: i(k3), hidden: false, index: f, indexValue: d2, data: le(g.data) };
      h.push({ key: e3.key + "." + d2, index: h.length, data: w3, x: m, y: p, absX: s.left + m, absY: s.top + p, width: t, height: x, color: n(w3), label: r(w3) });
    });
  }), h;
};
var xe = function(e2, t, a) {
  var i = e2.formatValue, n = e2.getColor, l = e2.getIndex, r = e2.getTooltipLabel, o = e2.innerPadding, d = e2.stackedData, u = e2.xScale, c = e2.yScale, s = e2.margin, h = [];
  return d.forEach(function(e3) {
    return c.domain().forEach(function(d2, f) {
      var b, v, g = e3[f], m = (b = c(l(g.data))) != null ? b : 0, p = ((v = function(e4) {
        return u(e4[a ? 1 : 0]);
      }(g)) != null ? v : 0) + 0.5 * o, x = function(e4, t2) {
        var i2;
        return ((i2 = u(e4[a ? 0 : 1])) != null ? i2 : 0) - t2;
      }(g, p) - o, y2 = re(g.data[e3.key]), S3 = y2[0], k3 = y2[1], w3 = { id: e3.key, value: S3 === null ? S3 : k3, formattedValue: i(k3), hidden: false, index: f, indexValue: d2, data: le(g.data) };
      h.push({ key: e3.key + "." + d2, index: h.length, data: w3, x: p, y: m, absX: s.left + p, absY: s.top + m, width: x, height: t, color: n(w3), label: r(w3) });
    });
  }), h;
};
var ye = function(e2) {
  var t, a = e2.data, i = e2.layout, n = e2.minValue, l = e2.maxValue, r = e2.reverse, o = e2.width, d = e2.height, u = e2.padding, c = u === void 0 ? 0 : u, s = e2.valueScale, h = e2.indexScale, f = e2.hiddenIds, b = f === void 0 ? [] : f, v = q(e2, ge), g = v.keys.filter(function(e3) {
    return !b.includes(e3);
  }), m = stack_default().keys(g).offset(diverging_default)(ne(a, g)), p = i === "vertical" ? ["y", "x", o] : ["x", "y", d], x = p[0], y2 = p[1], S3 = p[2], k3 = ie(a, v.getIndex, c, h, S3, y2), w3 = j3({ max: l, min: n, reverse: r }, s), L2 = (t = me(m), s.type === "log" ? t.filter(function(e3) {
    return e3 !== 0;
  }) : t), C3 = Math.min.apply(Math, L2), V2 = Math.max.apply(Math, L2), M2 = cn(w3, { all: L2, min: C3, max: V2 }, x === "x" ? o : d, x), W = i === "vertical" ? [k3, M2] : [M2, k3], T = W[0], B2 = W[1], O2 = v.innerPadding > 0 ? v.innerPadding : 0, I2 = k3.bandwidth(), P2 = [j3({}, v, { innerPadding: O2, stackedData: m, xScale: T, yScale: B2 }), I2, w3.reverse];
  return { xScale: T, yScale: B2, bars: I2 > 0 ? i === "vertical" ? pe.apply(void 0, P2) : xe.apply(void 0, P2) : [] };
};
var Se = function(e2) {
  var t = e2.bars, a = e2.direction, i = e2.from, n = e2.groupMode, r = e2.layout, o = e2.legendLabel, d = e2.reverse, u = Cn(o != null ? o : i === "indexes" ? "indexValue" : "id");
  return i === "indexes" ? function(e3, t2, a2) {
    var i2 = (0, import_uniqBy.default)(e3.map(function(e4) {
      var t3, i3;
      return { id: (t3 = e4.data.indexValue) != null ? t3 : "", label: a2(e4.data), hidden: e4.data.hidden, color: (i3 = e4.color) != null ? i3 : "#000" };
    }), function(e4) {
      return e4.id;
    });
    return t2 === "horizontal" && i2.reverse(), i2;
  }(t, r, u) : function(e3, t2, a2, i2, n2, l) {
    var r2 = (0, import_uniqBy.default)(e3.map(function(e4) {
      var t3;
      return { id: e4.data.id, label: l(e4.data), hidden: e4.data.hidden, color: (t3 = e4.color) != null ? t3 : "#000" };
    }), function(e4) {
      return e4.id;
    });
    return (t2 === "vertical" && i2 === "stacked" && a2 === "column" && n2 !== true || t2 === "horizontal" && i2 === "stacked" && n2 === true) && r2.reverse(), r2;
  }(t, r, a, n, d, u);
};
var ke = function(e2, t, a) {
  var i = e2.get(t) || 0;
  e2.set(t, i + a);
};
var we = function(e2, t, a) {
  var i = e2.get(t) || 0;
  e2.set(t, i + (a > 0 ? a : 0));
};
var Le = function(e2, t, a) {
  var i = e2.get(t) || 0;
  e2.set(t, Math.max(i, Number(a)));
};
var Ce = function(e2, t) {
  var a = e2.get(t) || 0;
  e2.set(t, a + 1);
};
var Ve = function(e2) {
  var t = e2.indexBy, a = t === void 0 ? ee.indexBy : t, i = e2.keys, l = i === void 0 ? ee.keys : i, d = e2.label, u = d === void 0 ? ee.label : d, c = e2.tooltipLabel, s = c === void 0 ? ee.tooltipLabel : c, h = e2.valueFormat, f = e2.colors, b = f === void 0 ? ee.colors : f, v = e2.colorBy, g = v === void 0 ? ee.colorBy : v, m = e2.borderColor, p = m === void 0 ? ee.borderColor : m, x = e2.labelTextColor, S3 = x === void 0 ? ee.labelTextColor : x, L2 = e2.groupMode, C3 = L2 === void 0 ? ee.groupMode : L2, V2 = e2.layout, M2 = V2 === void 0 ? ee.layout : V2, W = e2.reverse, T = W === void 0 ? ee.reverse : W, B2 = e2.data, O2 = e2.minValue, I2 = O2 === void 0 ? ee.minValue : O2, P2 = e2.maxValue, E2 = P2 === void 0 ? ee.maxValue : P2, H2 = e2.margin, R2 = e2.width, A = e2.height, X = e2.padding, Y = X === void 0 ? ee.padding : X, G = e2.innerPadding, z2 = G === void 0 ? ee.innerPadding : G, N2 = e2.valueScale, q2 = N2 === void 0 ? ee.valueScale : N2, K2 = e2.indexScale, _2 = K2 === void 0 ? ee.indexScale : K2, J3 = e2.initialHiddenIds, Q2 = J3 === void 0 ? ee.initialHiddenIds : J3, U2 = e2.enableLabel, Z2 = U2 === void 0 ? ee.enableLabel : U2, $2 = e2.labelSkipWidth, te2 = $2 === void 0 ? ee.labelSkipWidth : $2, ae2 = e2.labelSkipHeight, ie2 = ae2 === void 0 ? ee.labelSkipHeight : ae2, ne2 = e2.legends, le2 = ne2 === void 0 ? ee.legends : ne2, re2 = e2.legendLabel, oe2 = e2.totalsOffset, de2 = oe2 === void 0 ? ee.totalsOffset : oe2, ue2 = (0, import_react.useState)(Q2 != null ? Q2 : []), ce2 = ue2[0], se2 = ue2[1], he2 = (0, import_react.useCallback)(function(e3) {
    se2(function(t2) {
      return t2.indexOf(e3) > -1 ? t2.filter(function(t3) {
        return t3 !== e3;
      }) : [].concat(t2, [e3]);
    });
  }, []), fe2 = Wn(a), be2 = Wn(u), ge2 = Wn(s), me2 = Ot(h), pe2 = zt(), xe2 = pr(b, g), Ve2 = Xe(p, pe2), Me2 = Xe(S3, pe2), We2 = (C3 === "grouped" ? ve : ye)({ layout: M2, reverse: T, data: B2, getIndex: fe2, keys: l, minValue: I2, maxValue: E2, width: R2, height: A, getColor: xe2, padding: Y, innerPadding: z2, valueScale: q2, indexScale: _2, hiddenIds: ce2, formatValue: me2, getTooltipLabel: ge2, margin: H2 }), Te2 = We2.bars, Be2 = We2.xScale, Oe2 = We2.yScale, Ie2 = (0, import_react.useMemo)(function() {
    return Te2.filter(function(e3) {
      return e3.data.value !== null;
    }).map(function(e3, t2) {
      return j3({}, e3, { index: t2 });
    });
  }, [Te2]), Pe2 = (0, import_react.useCallback)(function(e3) {
    var t2 = e3.width, a2 = e3.height;
    return !!Z2 && (!(te2 > 0 && t2 < te2) && !(ie2 > 0 && a2 < ie2));
  }, [Z2, te2, ie2]), Ee2 = (0, import_react.useMemo)(function() {
    return l.map(function(e3) {
      var t2 = Te2.find(function(t3) {
        return t3.data.id === e3;
      });
      return j3({}, t2, { data: j3({ id: e3 }, t2 == null ? void 0 : t2.data, { hidden: ce2.includes(e3) }) });
    });
  }, [ce2, l, Te2]), He2 = (0, import_react.useMemo)(function() {
    return le2.map(function(e3) {
      return [e3, Se({ bars: e3.dataFrom === "keys" ? Ee2 : Te2, direction: e3.direction, from: e3.dataFrom, groupMode: C3, layout: M2, legendLabel: re2, reverse: T })];
    });
  }, [le2, Ee2, Te2, C3, M2, re2, T]), Re2 = (0, import_react.useMemo)(function() {
    return function(e3, t2, a2, i2, n, l2, r) {
      i2 === void 0 && (i2 = ee.layout), n === void 0 && (n = ee.groupMode);
      var o = [];
      if (e3.length === 0)
        return o;
      var d2 = new Map(), u2 = e3[0].width, c2 = e3[0].height;
      if (n === "stacked") {
        var s2 = new Map();
        e3.forEach(function(e4) {
          var t3 = e4.data, a3 = t3.indexValue, i3 = t3.value;
          ke(d2, a3, Number(i3)), we(s2, a3, Number(i3));
        }), s2.forEach(function(e4, n2) {
          var s3, h3, f3, b2 = d2.get(n2) || 0;
          i2 === "vertical" ? (s3 = t2(n2), h3 = a2(e4), f3 = a2(e4 / 2)) : (s3 = t2(e4), h3 = a2(n2), f3 = t2(e4 / 2)), s3 += i2 === "vertical" ? u2 / 2 : l2, h3 += i2 === "vertical" ? -l2 : c2 / 2, o.push({ key: "total_" + n2, x: s3, y: h3, value: b2, formattedValue: r(b2), animationOffset: f3 });
        });
      } else if (n === "grouped") {
        var h2 = new Map(), f2 = new Map();
        e3.forEach(function(e4) {
          var t3 = e4.data, a3 = t3.indexValue, i3 = t3.value;
          ke(d2, a3, Number(i3)), Le(h2, a3, Number(i3)), Ce(f2, a3);
        }), h2.forEach(function(e4, n2) {
          var s3, h3, b2, v2 = d2.get(n2) || 0, g2 = f2.get(n2);
          i2 === "vertical" ? (s3 = t2(n2), h3 = a2(e4), b2 = a2(e4 / 2)) : (s3 = t2(e4), h3 = a2(n2), b2 = t2(e4 / 2)), s3 += i2 === "vertical" ? g2 * u2 / 2 : l2, h3 += i2 === "vertical" ? -l2 : g2 * c2 / 2, o.push({ key: "total_" + n2, x: s3, y: h3, value: v2, formattedValue: r(v2), animationOffset: b2 });
        });
      }
      return o;
    }(Te2, Be2, Oe2, M2, C3, de2, me2);
  }, [Te2, Be2, Oe2, M2, C3, de2, me2]);
  return { bars: Te2, barsWithValue: Ie2, xScale: Be2, yScale: Oe2, getIndex: fe2, getLabel: be2, getTooltipLabel: ge2, formatValue: me2, getColor: xe2, getBorderColor: Ve2, getLabelColor: Me2, shouldRenderBarLabel: Pe2, hiddenIds: ce2, toggleSerie: he2, legendsWithData: He2, barTotals: Re2 };
};
var Me = function(e2) {
  var t = e2.data, a = e2.springConfig, i = e2.animate, l = e2.layout, r = l === void 0 ? te.layout : l, o = zt();
  return useTransition(t, { keys: function(e3) {
    return e3.key;
  }, from: function(e3) {
    return { x: r === "vertical" ? e3.x : e3.animationOffset, y: r === "vertical" ? e3.animationOffset : e3.y, labelOpacity: 0 };
  }, enter: function(e3) {
    return { x: e3.x, y: e3.y, labelOpacity: 1 };
  }, update: function(e3) {
    return { x: e3.x, y: e3.y, labelOpacity: 1 };
  }, leave: function(e3) {
    return { x: r === "vertical" ? e3.x : e3.animationOffset, y: r === "vertical" ? e3.animationOffset : e3.y, labelOpacity: 0 };
  }, config: a, immediate: !i, initial: i ? void 0 : null })(function(e3, t2) {
    return (0, import_jsx_runtime.jsx)(animated.text, { x: e3.x, y: e3.y, fillOpacity: e3.labelOpacity, style: j3({}, o.labels.text, { pointerEvents: "none", fill: o.text.fill }), fontWeight: "bold", fontSize: o.labels.text.fontSize, fontFamily: o.labels.text.fontFamily, textAnchor: r === "vertical" ? "middle" : "start", alignmentBaseline: r === "vertical" ? "alphabetic" : "middle", children: t2.formattedValue }, t2.key);
  });
};
var We = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var Te = function(a) {
  var i = a.data, n = a.indexBy, l = a.keys, r = a.margin, o = a.width, d = a.height, b = a.groupMode, v = a.layout, g = a.reverse, m = a.minValue, p = a.maxValue, k3 = a.valueScale, w3 = a.indexScale, C3 = a.padding, V2 = a.innerPadding, M2 = a.axisTop, W = a.axisRight, T = a.axisBottom, B2 = T === void 0 ? te.axisBottom : T, O2 = a.axisLeft, P2 = O2 === void 0 ? te.axisLeft : O2, E2 = a.enableGridX, H2 = E2 === void 0 ? te.enableGridX : E2, R2 = a.enableGridY, F = R2 === void 0 ? te.enableGridY : R2, D = a.gridXValues, A = a.gridYValues, X = a.layers, Y = X === void 0 ? te.layers : X, G = a.barComponent, z2 = G === void 0 ? te.barComponent : G, N2 = a.enableLabel, q2 = N2 === void 0 ? te.enableLabel : N2, K2 = a.label, Q2 = a.labelSkipWidth, U2 = Q2 === void 0 ? te.labelSkipWidth : Q2, Z2 = a.labelSkipHeight, $2 = Z2 === void 0 ? te.labelSkipHeight : Z2, ee2 = a.labelTextColor, ae2 = a.labelPosition, ie2 = ae2 === void 0 ? te.labelPosition : ae2, ne2 = a.labelOffset, le2 = ne2 === void 0 ? te.labelOffset : ne2, re2 = a.markers, de2 = re2 === void 0 ? te.markers : re2, ue2 = a.colorBy, ce2 = a.colors, se2 = a.defs, he2 = se2 === void 0 ? te.defs : se2, fe2 = a.fill, be2 = fe2 === void 0 ? te.fill : fe2, ve2 = a.borderRadius, ge2 = ve2 === void 0 ? te.borderRadius : ve2, me2 = a.borderWidth, pe2 = me2 === void 0 ? te.borderWidth : me2, xe2 = a.borderColor, ye2 = a.annotations, Se2 = ye2 === void 0 ? te.annotations : ye2, ke2 = a.legendLabel, we2 = a.tooltipLabel, Le2 = a.valueFormat, Ce2 = a.isInteractive, We2 = Ce2 === void 0 ? te.isInteractive : Ce2, Te2 = a.tooltip, Be2 = Te2 === void 0 ? te.tooltip : Te2, Oe2 = a.onClick, Ie2 = a.onMouseEnter, Pe2 = a.onMouseLeave, Ee2 = a.legends, He2 = a.role, Re2 = He2 === void 0 ? te.role : He2, Fe = a.ariaLabel, De = a.ariaLabelledBy, Ae = a.ariaDescribedBy, Xe2 = a.isFocusable, Ye = Xe2 === void 0 ? te.isFocusable : Xe2, Ge = a.barAriaLabel, ze = a.barAriaLabelledBy, Ne = a.barAriaDescribedBy, je = a.barAriaHidden, qe = a.barAriaDisabled, Ke = a.initialHiddenIds, _e = a.enableTotals, Je = _e === void 0 ? te.enableTotals : _e, Qe = a.totalsOffset, Ue = Qe === void 0 ? te.totalsOffset : Qe, Ze = Ur(), $e = Ze.animate, et = Ze.config, tt = wt(o, d, r), at = tt.outerWidth, it = tt.outerHeight, nt = tt.margin, lt = tt.innerWidth, rt = tt.innerHeight, ot = Ve({ indexBy: n, label: K2, tooltipLabel: we2, valueFormat: Le2, colors: ce2, colorBy: ue2, borderColor: xe2, labelTextColor: ee2, groupMode: b, layout: v, reverse: g, data: i, keys: l, minValue: m, maxValue: p, margin: nt, width: lt, height: rt, padding: C3, innerPadding: V2, valueScale: k3, indexScale: w3, enableLabel: q2, labelSkipWidth: U2, labelSkipHeight: $2, legends: Ee2, legendLabel: ke2, initialHiddenIds: Ke, totalsOffset: Ue }), dt = ot.bars, ut = ot.barsWithValue, ct = ot.xScale, st = ot.yScale, ht = ot.getLabel, ft = ot.getTooltipLabel, bt = ot.getBorderColor, vt = ot.getLabelColor, gt = ot.shouldRenderBarLabel, mt = ot.toggleSerie, pt = ot.legendsWithData, xt = ot.barTotals, yt = ot.getColor, St2 = oe(v, g, ie2, le2), kt = useTransition(ut, { keys: function(e2) {
    return e2.key;
  }, from: function(e2) {
    return j3({ borderColor: bt(e2), color: e2.color, height: 0, labelColor: vt(e2), labelOpacity: 0 }, St2(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + (e2.y + e2.height) + ")", width: e2.width }, v === "vertical" ? {} : { height: e2.height, transform: "translate(" + e2.x + ", " + e2.y + ")", width: 0 });
  }, enter: function(e2) {
    return j3({ borderColor: bt(e2), color: e2.color, height: e2.height, labelColor: vt(e2), labelOpacity: 1 }, St2(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + e2.y + ")", width: e2.width });
  }, update: function(e2) {
    return j3({ borderColor: bt(e2), color: e2.color, height: e2.height, labelColor: vt(e2), labelOpacity: 1 }, St2(e2.width, e2.height), { transform: "translate(" + e2.x + ", " + e2.y + ")", width: e2.width });
  }, leave: function(e2) {
    return j3({ borderColor: bt(e2), color: e2.color, height: 0, labelColor: vt(e2), labelOpacity: 0 }, St2(e2.width, e2.height), { labelY: 0, transform: "translate(" + e2.x + ", " + (e2.y + e2.height) + ")", width: e2.width }, v === "vertical" ? {} : j3({}, St2(e2.width, e2.height), { labelX: 0, height: e2.height, transform: "translate(" + e2.x + ", " + e2.y + ")", width: 0 }));
  }, config: et, immediate: !$e, initial: $e ? void 0 : null }), wt2 = (0, import_react.useMemo)(function() {
    return { borderRadius: ge2, borderWidth: pe2, enableLabel: q2, isInteractive: We2, labelSkipWidth: U2, labelSkipHeight: $2, onClick: Oe2, onMouseEnter: Ie2, onMouseLeave: Pe2, getTooltipLabel: ft, tooltip: Be2, isFocusable: Ye, ariaLabel: Ge, ariaLabelledBy: ze, ariaDescribedBy: Ne, ariaHidden: je, ariaDisabled: qe };
  }, [ge2, pe2, q2, ft, We2, $2, U2, Oe2, Ie2, Pe2, Be2, Ye, Ge, ze, Ne, je, qe]), Lt = In(he2, dt, be2, { dataKey: "data", targetKey: "data.fill" }), Ct = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null, totals: null };
  Y.includes("annotations") && (Ct.annotations = (0, import_jsx_runtime.jsx)(_, { bars: dt, annotations: Se2 }, "annotations")), Y.includes("axes") && (Ct.axes = (0, import_jsx_runtime.jsx)(B, { xScale: ct, yScale: st, width: lt, height: rt, top: M2, right: W, bottom: B2, left: P2 }, "axes")), Y.includes("bars") && (Ct.bars = (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: kt(function(e2, t) {
    return (0, import_react.createElement)(z2, j3({}, wt2, { bar: t, style: e2, shouldRenderLabel: gt(t), label: ht(t.data) }));
  }) }, "bars")), Y.includes("grid") && (Ct.grid = (0, import_jsx_runtime.jsx)(C, { width: lt, height: rt, xScale: H2 ? ct : null, yScale: F ? st : null, xValues: D, yValues: A }, "grid")), Y.includes("legends") && (Ct.legends = (0, import_jsx_runtime.jsx)(J2, { width: lt, height: rt, legends: pt, toggleSerie: mt }, "legends")), Y.includes("markers") && (Ct.markers = (0, import_jsx_runtime.jsx)(Rn, { markers: de2, width: lt, height: rt, xScale: ct, yScale: st }, "markers")), Y.includes("totals") && Je && (Ct.totals = (0, import_jsx_runtime.jsx)(Me, { data: xt, springConfig: et, animate: $e, layout: v }, "totals"));
  var Vt = (0, import_react.useMemo)(function() {
    return j3({}, wt2, { margin: nt, width: o, height: d, innerWidth: lt, innerHeight: rt, bars: dt, legendData: pt, enableLabel: q2, xScale: ct, yScale: st, tooltip: Be2, getTooltipLabel: ft, onClick: Oe2, onMouseEnter: Ie2, onMouseLeave: Pe2, getColor: yt });
  }, [wt2, nt, o, d, lt, rt, dt, pt, q2, ct, st, Be2, ft, Oe2, Ie2, Pe2, yt]);
  return (0, import_jsx_runtime.jsx)(gn, { width: at, height: it, margin: nt, defs: Lt, role: Re2, ariaLabel: Fe, ariaLabelledBy: De, ariaDescribedBy: Ae, isFocusable: Ye, children: Y.map(function(e2, t) {
    var a2;
    return typeof e2 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e2, Vt) }, t) : (a2 = Ct == null ? void 0 : Ct[e2]) != null ? a2 : null;
  }) });
};
var Be = function(e2) {
  var t = e2.isInteractive, a = t === void 0 ? te.isInteractive : t, i = e2.animate, n = i === void 0 ? te.animate : i, l = e2.motionConfig, r = l === void 0 ? te.motionConfig : l, o = e2.theme, u = e2.renderWrapper, c = q(e2, We);
  return (0, import_jsx_runtime.jsx)(St, { animate: n, isInteractive: a, motionConfig: r, renderWrapper: u, theme: o, children: (0, import_jsx_runtime.jsx)(Te, j3({ isInteractive: a }, c)) });
};
var Oe = ["isInteractive", "renderWrapper", "theme"];
var Ie = function(e2, t, a, i) {
  return e2.find(function(e3) {
    return jn(e3.x + t.left, e3.y + t.top, e3.width, e3.height, a, i);
  });
};
var Pe = function(e2) {
  var t = e2.data, l = e2.indexBy, r = e2.keys, d = e2.margin, u = e2.width, s = e2.height, h = e2.groupMode, f = e2.layout, v = e2.reverse, g = e2.minValue, m = e2.maxValue, p = e2.valueScale, x = e2.indexScale, w3 = e2.padding, L2 = e2.innerPadding, C3 = e2.axisTop, T = e2.axisRight, P2 = e2.axisBottom, E2 = P2 === void 0 ? ae.axisBottom : P2, H2 = e2.axisLeft, F = H2 === void 0 ? ae.axisLeft : H2, D = e2.enableGridX, X = D === void 0 ? ae.enableGridX : D, Y = e2.enableGridY, G = Y === void 0 ? ae.enableGridY : Y, z2 = e2.gridXValues, N2 = e2.gridYValues, q2 = e2.labelPosition, K2 = q2 === void 0 ? ae.labelPosition : q2, _2 = e2.labelOffset, J3 = _2 === void 0 ? ae.labelOffset : _2, Q2 = e2.layers, U2 = Q2 === void 0 ? ae.layers : Q2, Z2 = e2.renderBar, $2 = Z2 === void 0 ? function(e3, t2) {
    var a = t2.bar, i = a.color, n = a.height, l2 = a.width, r2 = a.x, o = a.y, d2 = t2.borderColor, u2 = t2.borderRadius, c = t2.borderWidth, s2 = t2.label, h2 = t2.labelColor, f2 = t2.shouldRenderLabel, b = t2.labelX, v2 = t2.labelY, g2 = t2.textAnchor;
    if (e3.fillStyle = i, c > 0 && (e3.strokeStyle = d2, e3.lineWidth = c), e3.beginPath(), u2 > 0) {
      var m2 = Math.min(u2, n);
      e3.moveTo(r2 + m2, o), e3.lineTo(r2 + l2 - m2, o), e3.quadraticCurveTo(r2 + l2, o, r2 + l2, o + m2), e3.lineTo(r2 + l2, o + n - m2), e3.quadraticCurveTo(r2 + l2, o + n, r2 + l2 - m2, o + n), e3.lineTo(r2 + m2, o + n), e3.quadraticCurveTo(r2, o + n, r2, o + n - m2), e3.lineTo(r2, o + m2), e3.quadraticCurveTo(r2, o, r2 + m2, o), e3.closePath();
    } else
      e3.rect(r2, o, l2, n);
    e3.fill(), c > 0 && e3.stroke(), f2 && (e3.textBaseline = "middle", e3.textAlign = g2 === "middle" ? "center" : g2, e3.fillStyle = h2, e3.fillText(s2, r2 + b, o + v2));
  } : Z2, ee2 = e2.enableLabel, te2 = ee2 === void 0 ? ae.enableLabel : ee2, ie2 = e2.label, ne2 = e2.labelSkipWidth, le2 = ne2 === void 0 ? ae.labelSkipWidth : ne2, re2 = e2.labelSkipHeight, de2 = re2 === void 0 ? ae.labelSkipHeight : re2, ue2 = e2.labelTextColor, ce2 = e2.colorBy, se2 = e2.colors, he2 = e2.borderRadius, fe2 = he2 === void 0 ? ae.borderRadius : he2, be2 = e2.borderWidth, ve2 = be2 === void 0 ? ae.borderWidth : be2, ge2 = e2.borderColor, me2 = e2.annotations, pe2 = me2 === void 0 ? ae.annotations : me2, xe2 = e2.legendLabel, ye2 = e2.tooltipLabel, Se2 = e2.valueFormat, ke2 = e2.isInteractive, we2 = ke2 === void 0 ? ae.isInteractive : ke2, Le2 = e2.tooltip, Ce2 = Le2 === void 0 ? ae.tooltip : Le2, Me2 = e2.onClick, We2 = e2.onMouseEnter, Te2 = e2.onMouseLeave, Be2 = e2.legends, Oe2 = e2.pixelRatio, Pe2 = Oe2 === void 0 ? ae.pixelRatio : Oe2, Ee2 = e2.canvasRef, He2 = e2.enableTotals, Re2 = He2 === void 0 ? ae.enableTotals : He2, Fe = e2.totalsOffset, De = Fe === void 0 ? ae.totalsOffset : Fe, Ae = (0, import_react.useRef)(null), Xe2 = zt(), Ye = wt(u, s, d), Ge = Ye.margin, ze = Ye.innerWidth, Ne = Ye.innerHeight, je = Ye.outerWidth, qe = Ye.outerHeight, Ke = Ve({ indexBy: l, label: ie2, tooltipLabel: ye2, valueFormat: Se2, colors: se2, colorBy: ce2, borderColor: ge2, labelTextColor: ue2, groupMode: h, layout: f, reverse: v, data: t, keys: r, minValue: g, maxValue: m, margin: Ge, width: ze, height: Ne, padding: w3, innerPadding: L2, valueScale: p, indexScale: x, enableLabel: te2, labelSkipWidth: le2, labelSkipHeight: de2, legends: Be2, legendLabel: xe2, totalsOffset: De }), _e = Ke.bars, Je = Ke.barsWithValue, Qe = Ke.xScale, Ue = Ke.yScale, Ze = Ke.getLabel, $e = Ke.getTooltipLabel, et = Ke.getBorderColor, tt = Ke.getLabelColor, at = Ke.shouldRenderBarLabel, it = Ke.legendsWithData, nt = Ke.barTotals, lt = Ke.getColor, rt = k(), ot = rt.showTooltipFromEvent, dt = rt.hideTooltip, ut = j2({ annotations: S({ data: _e, annotations: pe2, getPosition: function(e3) {
    return { x: e3.x, y: e3.y };
  }, getDimensions: function(e3) {
    var t2 = e3.width, a = e3.height;
    return { width: t2, height: a, size: Math.max(t2, a) };
  } }) }), ct = (0, import_react.useMemo)(function() {
    return { borderRadius: fe2, borderWidth: ve2, isInteractive: we2, isFocusable: false, labelSkipWidth: le2, labelSkipHeight: de2, margin: Ge, width: u, height: s, innerWidth: ze, innerHeight: Ne, bars: _e, legendData: it, enableLabel: te2, xScale: Qe, yScale: Ue, tooltip: Ce2, getTooltipLabel: $e, onClick: Me2, onMouseEnter: We2, onMouseLeave: Te2, getColor: lt };
  }, [fe2, ve2, we2, le2, de2, Ge, u, s, ze, Ne, _e, it, te2, Qe, Ue, Ce2, $e, Me2, We2, Te2, lt]), st = Ot(Se2), ht = oe(f, v, K2, J3);
  (0, import_react.useEffect)(function() {
    var e3, t2 = (e3 = Ae.current) == null ? void 0 : e3.getContext("2d");
    Ae.current && t2 && (Ae.current.width = je * Pe2, Ae.current.height = qe * Pe2, t2.scale(Pe2, Pe2), t2.fillStyle = Xe2.background, t2.fillRect(0, 0, je, qe), t2.translate(Ge.left, Ge.top), U2.forEach(function(e4) {
      e4 === "grid" ? typeof Xe2.grid.line.strokeWidth == "number" && Xe2.grid.line.strokeWidth > 0 && (t2.lineWidth = Xe2.grid.line.strokeWidth, t2.strokeStyle = Xe2.grid.line.stroke, X && z(t2, { width: ze, height: Ne, scale: Qe, axis: "x", values: z2 }), G && z(t2, { width: ze, height: Ne, scale: Ue, axis: "y", values: N2 })) : e4 === "axes" ? j(t2, { xScale: Qe, yScale: Ue, width: ze, height: Ne, top: C3, right: T, bottom: E2, left: F, theme: Xe2 }) : e4 === "bars" ? Je.forEach(function(e5) {
        $2(t2, j3({ bar: e5, borderColor: et(e5), borderRadius: fe2, borderWidth: ve2, label: Ze(e5.data), labelColor: tt(e5), shouldRenderLabel: at(e5) }, ht(e5.width, e5.height)));
      }) : e4 === "legends" ? it.forEach(function(e5) {
        var a = e5[0], i = e5[1];
        H(t2, j3({}, a, { data: i, containerWidth: ze, containerHeight: Ne, theme: Xe2 }));
      }) : e4 === "annotations" ? J(t2, { annotations: ut, theme: Xe2 }) : e4 === "totals" && Re2 ? function(e5, t3, a, i) {
        i === void 0 && (i = ae.layout), e5.fillStyle = a.text.fill, e5.font = "bold " + a.labels.text.fontSize + "px " + a.labels.text.fontFamily, e5.textBaseline = i === "vertical" ? "alphabetic" : "middle", e5.textAlign = i === "vertical" ? "center" : "start", t3.forEach(function(t4) {
          e5.fillText(t4.formattedValue, t4.x, t4.y);
        });
      }(t2, nt, Xe2, f) : typeof e4 == "function" && e4(t2, ct);
    }), t2.save());
  }, [E2, F, T, C3, Je, fe2, ve2, ut, X, G, et, Ze, tt, z2, N2, h, s, Ne, ze, ct, U2, f, it, Ge.left, Ge.top, qe, je, Pe2, $2, Qe, Ue, v, at, Xe2, u, nt, Re2, st, ht]);
  var ft = (0, import_react.useCallback)(function(e3) {
    if (_e && Ae.current) {
      var t2 = Sn(Ae.current, e3), a = t2[0], i = t2[1], n = Ie(_e, Ge, a, i);
      n !== void 0 ? (ot((0, import_react.createElement)(Ce2, j3({}, n.data, { color: n.color, label: n.label, value: Number(n.data.value) })), e3), e3.type === "mouseenter" && (We2 == null || We2(n.data, e3))) : dt();
    }
  }, [dt, Ge, We2, _e, ot, Ce2]), bt = (0, import_react.useCallback)(function(e3) {
    if (_e && Ae.current) {
      dt();
      var t2 = Sn(Ae.current, e3), a = t2[0], i = t2[1], n = Ie(_e, Ge, a, i);
      n && (Te2 == null || Te2(n.data, e3));
    }
  }, [dt, Ge, Te2, _e]), vt = (0, import_react.useCallback)(function(e3) {
    if (_e && Ae.current) {
      var t2 = Sn(Ae.current, e3), a = t2[0], i = t2[1], n = Ie(_e, Ge, a, i);
      n !== void 0 && (Me2 == null || Me2(j3({}, n.data, { color: n.color }), e3));
    }
  }, [Ge, Me2, _e]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: function(e3) {
    Ae.current = e3, Ee2 && "current" in Ee2 && (Ee2.current = e3);
  }, width: je * Pe2, height: qe * Pe2, style: { width: je, height: qe, cursor: we2 ? "auto" : "normal" }, onMouseEnter: we2 ? ft : void 0, onMouseMove: we2 ? ft : void 0, onMouseLeave: we2 ? bt : void 0, onClick: we2 ? vt : void 0 });
};
var Ee = (0, import_react.forwardRef)(function(e2, t) {
  var a = e2.isInteractive, i = e2.renderWrapper, n = e2.theme, l = q(e2, Oe);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: a, renderWrapper: i, theme: n, animate: false, children: (0, import_jsx_runtime.jsx)(Pe, j3({}, l, { canvasRef: t })) });
});
var He = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t) {
    var a = t.width, i = t.height;
    return (0, import_jsx_runtime.jsx)(Be, j3({ width: a, height: i }, e2));
  } });
};
var Re = (0, import_react.forwardRef)(function(e2, t) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(a) {
    var i = a.width, n = a.height;
    return (0, import_jsx_runtime.jsx)(Ee, j3({ width: i, height: n }, e2, { ref: t }));
  } });
});
export {
  Be as Bar,
  Ee as BarCanvas,
  U as BarItem,
  $ as BarTooltip,
  Me as BarTotals,
  He as ResponsiveBar,
  Re as ResponsiveBarCanvas,
  ae as canvasDefaultProps,
  ee as defaultProps,
  te as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
