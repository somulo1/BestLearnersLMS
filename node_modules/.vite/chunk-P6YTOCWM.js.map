{
  "version": 3,
  "sources": ["../lodash/_baseFilter.js", "../lodash/filter.js", "../@nivo/annotations/node_modules/@react-spring/web/src/index.ts", "../@nivo/annotations/node_modules/@react-spring/web/src/applyAnimatedValues.ts", "../@nivo/annotations/node_modules/@react-spring/web/src/AnimatedStyle.ts", "../@nivo/annotations/node_modules/@react-spring/web/src/primitives.ts", "../@nivo/annotations/src/props.ts", "../@nivo/annotations/src/utils.ts", "../@nivo/annotations/src/compute.ts", "../@nivo/annotations/src/hooks.ts", "../@nivo/annotations/src/AnnotationNote.tsx", "../@nivo/annotations/src/AnnotationLink.tsx", "../@nivo/annotations/src/CircleAnnotationOutline.tsx", "../@nivo/annotations/src/DotAnnotationOutline.tsx", "../@nivo/annotations/src/RectAnnotationOutline.tsx", "../@nivo/annotations/src/Annotation.tsx", "../@nivo/annotations/src/canvas.ts"],
  "sourcesContent": ["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n", "var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n", "import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n", "import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const {\n    className,\n    style,\n    children,\n    scrollTop,\n    scrollLeft,\n    viewBox,\n    ...attributes\n  } = props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (className !== void 0) {\n    instance.className = className\n  }\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute('viewBox', viewBox)\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n", "import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n      ? value === id\n      : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n            ? 'deg'\n            : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(\n    readonly inputs: Inputs,\n    readonly transforms: Transforms\n  ) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n", "export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n", "export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n", "import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n", "import filter from 'lodash/filter'\nimport isNumber from 'lodash/isNumber'\nimport omit from 'lodash/omit'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n", "import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: readonly BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n", "import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n", "import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n", "import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n", "import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n", "import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"],
  "mappings": "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",
  "names": []
}
