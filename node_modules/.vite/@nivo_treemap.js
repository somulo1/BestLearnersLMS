import {
  binary_default,
  dice_default,
  hierarchy,
  sliceDice_default,
  slice_default,
  squarify_default,
  treemap_default
} from "./chunk-RLBK3QIQ.js";
import {
  require_cloneDeep
} from "./chunk-VACFL5DY.js";
import {
  Xe,
  pr
} from "./chunk-LIF42OKE.js";
import {
  require_upperFirst
} from "./chunk-VITNKKAB.js";
import {
  require_omit
} from "./chunk-3T4KNB5M.js";
import "./chunk-NIFAYVBJ.js";
import {
  Ht,
  In,
  It,
  Ot,
  Sn,
  St,
  Ur,
  Wn,
  gn,
  jn,
  k,
  require_jsx_runtime,
  w,
  wt,
  zt
} from "./chunk-CIEVK6OE.js";
import {
  AnimatedObject,
  FluidValue,
  addFluidObserver,
  callFluidObservers,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  hasFluidValue,
  is,
  removeFluidObserver,
  to,
  toArray,
  useTransition
} from "./chunk-UROOLUEL.js";
import "./chunk-JMENM4FH.js";
import {
  require_toString
} from "./chunk-B7PIYN4Z.js";
import "./chunk-V2CXUUTH.js";
import {
  require_react_dom
} from "./chunk-2J4CPGJC.js";
import "./chunk-SEBMSOEZ.js";
import {
  require_react
} from "./chunk-3HGGCXHU.js";
import {
  __commonJS,
  __objRest,
  __toModule
} from "./chunk-AXQKKFRM.js";

// node_modules/lodash/_arrayReduce.js
var require_arrayReduce = __commonJS({
  "node_modules/lodash/_arrayReduce.js"(exports, module) {
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1, length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    module.exports = arrayReduce;
  }
});

// node_modules/lodash/_basePropertyOf.js
var require_basePropertyOf = __commonJS({
  "node_modules/lodash/_basePropertyOf.js"(exports, module) {
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = basePropertyOf;
  }
});

// node_modules/lodash/_deburrLetter.js
var require_deburrLetter = __commonJS({
  "node_modules/lodash/_deburrLetter.js"(exports, module) {
    var basePropertyOf = require_basePropertyOf();
    var deburredLetters = {
      "\xC0": "A",
      "\xC1": "A",
      "\xC2": "A",
      "\xC3": "A",
      "\xC4": "A",
      "\xC5": "A",
      "\xE0": "a",
      "\xE1": "a",
      "\xE2": "a",
      "\xE3": "a",
      "\xE4": "a",
      "\xE5": "a",
      "\xC7": "C",
      "\xE7": "c",
      "\xD0": "D",
      "\xF0": "d",
      "\xC8": "E",
      "\xC9": "E",
      "\xCA": "E",
      "\xCB": "E",
      "\xE8": "e",
      "\xE9": "e",
      "\xEA": "e",
      "\xEB": "e",
      "\xCC": "I",
      "\xCD": "I",
      "\xCE": "I",
      "\xCF": "I",
      "\xEC": "i",
      "\xED": "i",
      "\xEE": "i",
      "\xEF": "i",
      "\xD1": "N",
      "\xF1": "n",
      "\xD2": "O",
      "\xD3": "O",
      "\xD4": "O",
      "\xD5": "O",
      "\xD6": "O",
      "\xD8": "O",
      "\xF2": "o",
      "\xF3": "o",
      "\xF4": "o",
      "\xF5": "o",
      "\xF6": "o",
      "\xF8": "o",
      "\xD9": "U",
      "\xDA": "U",
      "\xDB": "U",
      "\xDC": "U",
      "\xF9": "u",
      "\xFA": "u",
      "\xFB": "u",
      "\xFC": "u",
      "\xDD": "Y",
      "\xFD": "y",
      "\xFF": "y",
      "\xC6": "Ae",
      "\xE6": "ae",
      "\xDE": "Th",
      "\xFE": "th",
      "\xDF": "ss",
      "\u0100": "A",
      "\u0102": "A",
      "\u0104": "A",
      "\u0101": "a",
      "\u0103": "a",
      "\u0105": "a",
      "\u0106": "C",
      "\u0108": "C",
      "\u010A": "C",
      "\u010C": "C",
      "\u0107": "c",
      "\u0109": "c",
      "\u010B": "c",
      "\u010D": "c",
      "\u010E": "D",
      "\u0110": "D",
      "\u010F": "d",
      "\u0111": "d",
      "\u0112": "E",
      "\u0114": "E",
      "\u0116": "E",
      "\u0118": "E",
      "\u011A": "E",
      "\u0113": "e",
      "\u0115": "e",
      "\u0117": "e",
      "\u0119": "e",
      "\u011B": "e",
      "\u011C": "G",
      "\u011E": "G",
      "\u0120": "G",
      "\u0122": "G",
      "\u011D": "g",
      "\u011F": "g",
      "\u0121": "g",
      "\u0123": "g",
      "\u0124": "H",
      "\u0126": "H",
      "\u0125": "h",
      "\u0127": "h",
      "\u0128": "I",
      "\u012A": "I",
      "\u012C": "I",
      "\u012E": "I",
      "\u0130": "I",
      "\u0129": "i",
      "\u012B": "i",
      "\u012D": "i",
      "\u012F": "i",
      "\u0131": "i",
      "\u0134": "J",
      "\u0135": "j",
      "\u0136": "K",
      "\u0137": "k",
      "\u0138": "k",
      "\u0139": "L",
      "\u013B": "L",
      "\u013D": "L",
      "\u013F": "L",
      "\u0141": "L",
      "\u013A": "l",
      "\u013C": "l",
      "\u013E": "l",
      "\u0140": "l",
      "\u0142": "l",
      "\u0143": "N",
      "\u0145": "N",
      "\u0147": "N",
      "\u014A": "N",
      "\u0144": "n",
      "\u0146": "n",
      "\u0148": "n",
      "\u014B": "n",
      "\u014C": "O",
      "\u014E": "O",
      "\u0150": "O",
      "\u014D": "o",
      "\u014F": "o",
      "\u0151": "o",
      "\u0154": "R",
      "\u0156": "R",
      "\u0158": "R",
      "\u0155": "r",
      "\u0157": "r",
      "\u0159": "r",
      "\u015A": "S",
      "\u015C": "S",
      "\u015E": "S",
      "\u0160": "S",
      "\u015B": "s",
      "\u015D": "s",
      "\u015F": "s",
      "\u0161": "s",
      "\u0162": "T",
      "\u0164": "T",
      "\u0166": "T",
      "\u0163": "t",
      "\u0165": "t",
      "\u0167": "t",
      "\u0168": "U",
      "\u016A": "U",
      "\u016C": "U",
      "\u016E": "U",
      "\u0170": "U",
      "\u0172": "U",
      "\u0169": "u",
      "\u016B": "u",
      "\u016D": "u",
      "\u016F": "u",
      "\u0171": "u",
      "\u0173": "u",
      "\u0174": "W",
      "\u0175": "w",
      "\u0176": "Y",
      "\u0177": "y",
      "\u0178": "Y",
      "\u0179": "Z",
      "\u017B": "Z",
      "\u017D": "Z",
      "\u017A": "z",
      "\u017C": "z",
      "\u017E": "z",
      "\u0132": "IJ",
      "\u0133": "ij",
      "\u0152": "Oe",
      "\u0153": "oe",
      "\u0149": "'n",
      "\u017F": "s"
    };
    var deburrLetter = basePropertyOf(deburredLetters);
    module.exports = deburrLetter;
  }
});

// node_modules/lodash/deburr.js
var require_deburr = __commonJS({
  "node_modules/lodash/deburr.js"(exports, module) {
    var deburrLetter = require_deburrLetter();
    var toString = require_toString();
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsCombo = "[" + rsComboRange + "]";
    var reComboMark = RegExp(rsCombo, "g");
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
    }
    module.exports = deburr;
  }
});

// node_modules/lodash/_asciiWords.js
var require_asciiWords = __commonJS({
  "node_modules/lodash/_asciiWords.js"(exports, module) {
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    module.exports = asciiWords;
  }
});

// node_modules/lodash/_hasUnicodeWord.js
var require_hasUnicodeWord = __commonJS({
  "node_modules/lodash/_hasUnicodeWord.js"(exports, module) {
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    module.exports = hasUnicodeWord;
  }
});

// node_modules/lodash/_unicodeWords.js
var require_unicodeWords = __commonJS({
  "node_modules/lodash/_unicodeWords.js"(exports, module) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsDingbatRange = "\\u2700-\\u27bf";
    var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
    var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var rsPunctuationRange = "\\u2000-\\u206f";
    var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]";
    var rsBreak = "[" + rsBreakRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsDigits = "\\d+";
    var rsDingbat = "[" + rsDingbatRange + "]";
    var rsLower = "[" + rsLowerRange + "]";
    var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsUpper = "[" + rsUpperRange + "]";
    var rsZWJ = "\\u200d";
    var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
    var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
    var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
    var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
    var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
      rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
      rsUpper + "+" + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    module.exports = unicodeWords;
  }
});

// node_modules/lodash/words.js
var require_words = __commonJS({
  "node_modules/lodash/words.js"(exports, module) {
    var asciiWords = require_asciiWords();
    var hasUnicodeWord = require_hasUnicodeWord();
    var toString = require_toString();
    var unicodeWords = require_unicodeWords();
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? void 0 : pattern;
      if (pattern === void 0) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }
    module.exports = words;
  }
});

// node_modules/lodash/_createCompounder.js
var require_createCompounder = __commonJS({
  "node_modules/lodash/_createCompounder.js"(exports, module) {
    var arrayReduce = require_arrayReduce();
    var deburr = require_deburr();
    var words = require_words();
    var rsApos = "['\u2019]";
    var reApos = RegExp(rsApos, "g");
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
      };
    }
    module.exports = createCompounder;
  }
});

// node_modules/lodash/startCase.js
var require_startCase = __commonJS({
  "node_modules/lodash/startCase.js"(exports, module) {
    var createCompounder = require_createCompounder();
    var upperFirst = require_upperFirst();
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? " " : "") + upperFirst(word);
    });
    module.exports = startCase;
  }
});

// node_modules/@nivo/treemap/dist/nivo-treemap.es.js
var import_react = __toModule(require_react());
var import_omit = __toModule(require_omit());
var import_cloneDeep = __toModule(require_cloneDeep());
var import_startCase = __toModule(require_startCase());

// node_modules/@nivo/treemap/node_modules/@react-spring/web/dist/react-spring_web.legacy-esm.js
var import_react_dom = __toModule(require_react_dom());
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const _a = props, {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox
  } = _a, attributes = __objRest(_a, [
    "className",
    "style",
    "children",
    "scrollTop",
    "scrollLeft",
    "viewBox"
  ]);
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n2) => "-" + n2.toLowerCase())));
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor(_a) {
    var _b = _a, { x, y: y2, z } = _b, style = __objRest(_b, ["x", "y", "z"]);
    const inputs = [];
    const transforms = [];
    if (x || y2 || z) {
      inputs.push([x || 0, y2 || 0, z || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(key === "rotate3d" ? ([x2, y22, z2, deg]) => [
          `rotate3d(${x2},${y22},${z2},${addUnit(deg, unit)})`,
          isValueIdentity(deg, 0)
        ] : (input) => [
          `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
          isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
        ]);
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  observerAdded(count) {
    if (count == 1)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && addFluidObserver(value, this)));
  }
  observerRemoved(count) {
    if (count == 0)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && removeFluidObserver(value, this)));
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  getComponentProps: (_a) => {
    var _b = _a, { scrollTop, scrollLeft } = _b, props = __objRest(_b, ["scrollTop", "scrollLeft"]);
    return props;
  }
});
var animated = host.animated;

// node_modules/@nivo/treemap/dist/nivo-treemap.es.js
var import_jsx_runtime = __toModule(require_jsx_runtime());
function j() {
  return j = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var o2 = arguments[t2];
      for (var n2 in o2)
        Object.prototype.hasOwnProperty.call(o2, n2) && (e2[n2] = o2[n2]);
    }
    return e2;
  }, j.apply(this, arguments);
}
function D(e2, t2) {
  if (e2 == null)
    return {};
  var o2, n2, i2 = {}, a2 = Object.keys(e2);
  for (n2 = 0; n2 < a2.length; n2++)
    o2 = a2[n2], t2.indexOf(o2) >= 0 || (i2[o2] = e2[o2]);
  return i2;
}
var H = function(e2, t2) {
  return to([e2, t2], function(e3, t3) {
    return "translate(" + e3 + "," + t3 + ")";
  });
};
var V = function(e2, t2) {
  return to([e2, t2], function(e3, t3) {
    return "translate(" + e3 + "px, " + t3 + "px)";
  });
};
var q = function(e2, t2, o2) {
  return to([e2, t2, o2], function(e3, t3, o3) {
    return "translate(" + e3 + "," + t3 + ") rotate(" + o3 + ")";
  });
};
var A = function(e2, t2, o2) {
  return to([e2, t2, o2], function(e3, t3, o3) {
    return "translate(" + e3 + "px," + t3 + "px) rotate(" + o3 + "deg)";
  });
};
var G = function(e2, t2, o2) {
  return to([e2, t2, o2], function(e3, t3, o3) {
    return "translate(" + (e3 - (o3 === 0 ? 0 : 5)) + "px," + (t3 - (o3 === 0 ? 5 : 0)) + "px) rotate(" + o3 + "deg)";
  });
};
var J = (0, import_react.memo)(function(e2) {
  var t2 = e2.node, o2 = e2.animatedProps, n2 = e2.borderWidth, i2 = e2.enableLabel, a2 = e2.enableParentLabel, r2 = e2.labelSkipSize, d = zt(), b = i2 && t2.isLeaf && (r2 === 0 || Math.min(t2.width, t2.height) > r2), u = a2 && t2.isParent;
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: H(o2.x, o2.y), children: [(0, import_jsx_runtime.jsx)(animated.rect, { "data-testid": "node." + t2.id, width: to(o2.width, function(e3) {
    return Math.max(e3, 0);
  }), height: to(o2.height, function(e3) {
    return Math.max(e3, 0);
  }), fill: t2.fill ? t2.fill : o2.color, strokeWidth: n2, stroke: t2.borderColor, fillOpacity: t2.opacity, onMouseEnter: t2.onMouseEnter, onMouseMove: t2.onMouseMove, onMouseLeave: t2.onMouseLeave, onClick: t2.onClick }), b && (0, import_jsx_runtime.jsx)(animated.text, { "data-testid": "label." + t2.id, textAnchor: "middle", dominantBaseline: "central", style: j({}, d.labels.text, { fill: t2.labelTextColor, pointerEvents: "none" }), fillOpacity: o2.labelOpacity, transform: q(o2.labelX, o2.labelY, o2.labelRotation), children: t2.label }), u && (0, import_jsx_runtime.jsx)(animated.text, { "data-testid": "parentLabel." + t2.id, dominantBaseline: "central", style: j({}, d.labels.text, { fill: t2.parentLabelTextColor, pointerEvents: "none" }), fillOpacity: o2.parentLabelOpacity, transform: q(o2.parentLabelX, o2.parentLabelY, o2.parentLabelRotation), children: t2.parentLabel })] });
});
var K = (0, import_react.memo)(function(e2) {
  var t2 = e2.node;
  return (0, import_jsx_runtime.jsx)(w, { id: t2.id, value: t2.formattedValue, enableChip: true, color: t2.color });
});
var N = (0, import_react.memo)(function(e2) {
  var t2 = e2.node, o2 = e2.animatedProps, n2 = e2.borderWidth, i2 = e2.enableLabel, a2 = e2.enableParentLabel, r2 = e2.labelSkipSize, d = zt(), b = i2 && t2.isLeaf && (r2 === 0 || Math.min(t2.width, t2.height) > r2), u = a2 && t2.isParent;
  return (0, import_jsx_runtime.jsxs)(animated.div, { "data-testid": "node." + t2.id, id: t2.path.replace(/[^\w]/gi, "-"), style: { boxSizing: "border-box", position: "absolute", top: 0, left: 0, transform: V(o2.x, o2.y), width: o2.width, height: o2.height, borderWidth: n2, borderStyle: "solid", borderColor: t2.borderColor, overflow: "hidden" }, children: [(0, import_jsx_runtime.jsx)(animated.div, { style: { boxSizing: "border-box", position: "absolute", top: 0, left: 0, opacity: t2.opacity, width: o2.width, height: o2.height, background: o2.color }, onMouseEnter: t2.onMouseEnter, onMouseMove: t2.onMouseMove, onMouseLeave: t2.onMouseLeave, onClick: t2.onClick }), b && (0, import_jsx_runtime.jsx)(animated.span, { "data-testid": "label." + t2.id, style: j({}, d.labels.text, { position: "absolute", display: "flex", top: -5, left: -5, width: 10, height: 10, justifyContent: "center", alignItems: "center", whiteSpace: "nowrap", color: t2.labelTextColor, transformOrigin: "center center", transform: A(o2.labelX, o2.labelY, o2.labelRotation), opacity: o2.labelOpacity, pointerEvents: "none" }), children: t2.label }), u && (0, import_jsx_runtime.jsx)(animated.span, { "data-testid": "parentLabel." + t2.id, style: j({}, d.labels.text, { position: "absolute", display: "flex", justifyContent: "flex-start", alignItems: "center", whiteSpace: "nowrap", width: 10, height: 10, color: t2.parentLabelTextColor, transformOrigin: "top left", transform: G(o2.parentLabelX, o2.parentLabelY, o2.parentLabelRotation), opacity: o2.parentLabelOpacity, pointerEvents: "none" }), children: t2.parentLabel })] });
});
var Q = { layers: ["nodes"], identity: "id", value: "value", tile: "squarify", leavesOnly: false, innerPadding: 0, outerPadding: 0, colors: { scheme: "nivo" }, colorBy: "pathComponents.1", nodeOpacity: 0.33, enableLabel: true, label: "formattedValue", labelSkipSize: 0, labelTextColor: { from: "color", modifiers: [["darker", 1]] }, orientLabel: true, enableParentLabel: true, parentLabel: "id", parentLabelSize: 20, parentLabelPosition: "top", parentLabelPadding: 6, parentLabelTextColor: { from: "color", modifiers: [["darker", 1]] }, borderWidth: 1, borderColor: { from: "color", modifiers: [["darker", 1]] }, isInteractive: true, tooltip: K, role: "img", animate: true, motionConfig: "gentle" };
var U = j({}, Q, { nodeComponent: J, defs: [], fill: [] });
var Z = j({}, Q, { nodeComponent: N });
var $ = j({}, Q, { pixelRatio: typeof window != "undefined" && window.devicePixelRatio || 1 });
var _ = { binary: binary_default, dice: dice_default, slice: slice_default, sliceDice: sliceDice_default, squarify: squarify_default };
var ee = function(e2) {
  var t2 = e2.root, o2 = e2.getValue;
  return (0, import_react.useMemo)(function() {
    return hierarchy(t2).sum(o2);
  }, [t2, o2]);
};
var te = function(e2) {
  var t2 = e2.data, o2 = e2.width, i2 = e2.height, a2 = e2.identity, r2 = a2 === void 0 ? Q.identity : a2, u = e2.value, p = u === void 0 ? Q.value : u, c = e2.valueFormat, s = e2.leavesOnly, v = s === void 0 ? Q.leavesOnly : s, h = e2.tile, f = h === void 0 ? Q.tile : h, L = e2.innerPadding, g = L === void 0 ? Q.innerPadding : L, x = e2.outerPadding, P = x === void 0 ? Q.outerPadding : x, M = e2.label, w2 = M === void 0 ? Q.label : M, S = e2.orientLabel, k2 = S === void 0 ? Q.orientLabel : S, I = e2.enableParentLabel, z = I === void 0 ? Q.enableParentLabel : I, B = e2.parentLabel, R = B === void 0 ? Q.parentLabel : B, E = e2.parentLabelSize, X2 = E === void 0 ? Q.parentLabelSize : E, Y2 = e2.parentLabelPosition, F2 = Y2 === void 0 ? Q.parentLabelPosition : Y2, D2 = e2.parentLabelPadding, H2 = D2 === void 0 ? Q.parentLabelPadding : D2, V2 = e2.colors, q2 = V2 === void 0 ? Q.colors : V2, A2 = e2.colorBy, G2 = A2 === void 0 ? Q.colorBy : A2, J2 = e2.nodeOpacity, K2 = J2 === void 0 ? Q.nodeOpacity : J2, N2 = e2.borderColor, U2 = N2 === void 0 ? Q.borderColor : N2, Z2 = e2.labelTextColor, $2 = Z2 === void 0 ? Q.labelTextColor : Z2, te2 = e2.parentLabelTextColor, oe2 = te2 === void 0 ? Q.parentLabelTextColor : te2, ne2 = Wn(r2), ie2 = Wn(p), ae2 = Ot(c), re2 = Wn(w2), le2 = Wn(R), de2 = function(e3) {
    var t3 = e3.width, o3 = e3.height, i3 = e3.tile, a3 = e3.innerPadding, r3 = e3.outerPadding, l = e3.enableParentLabel, d = e3.parentLabelSize, b = e3.parentLabelPosition, u2 = e3.leavesOnly;
    return (0, import_react.useMemo)(function() {
      var e4 = treemap_default().size([t3, o3]).tile(_[i3]).round(true).paddingInner(a3).paddingOuter(r3);
      if (l && !u2) {
        var n2 = d + 2 * r3;
        e4["padding" + (0, import_startCase.default)(b)](n2);
      }
      return e4;
    }, [t3, o3, i3, a3, r3, l, d, b, u2]);
  }({ width: o2, height: i2, tile: f, innerPadding: g, outerPadding: P, enableParentLabel: z, parentLabelSize: X2, parentLabelPosition: F2, leavesOnly: v }), be2 = ee({ root: t2, getValue: ie2 }), ue2 = (0, import_react.useMemo)(function() {
    var e3 = (0, import_cloneDeep.default)(be2);
    return de2(e3), v ? e3.leaves() : e3.descendants();
  }, [be2, de2, v]), pe2 = (0, import_react.useMemo)(function() {
    return ue2.map(function(e3) {
      var t3 = function(e4, t4) {
        var o4 = e4.ancestors().map(function(e5) {
          return t4(e5.data);
        }).reverse();
        return { path: o4.join("."), pathComponents: o4 };
      }(e3, ne2), o3 = t3.path, n2 = t3.pathComponents, i3 = { id: ne2(e3.data), path: o3, pathComponents: n2, data: (0, import_omit.default)(e3.data, "children"), x: e3.x0, y: e3.y0, width: e3.x1 - e3.x0, height: e3.y1 - e3.y0, value: e3.value, formattedValue: ae2(e3.value), treeDepth: e3.depth, treeHeight: e3.height, isParent: e3.height > 0, isLeaf: e3.height === 0, parentLabelX: 0, parentLabelY: 0, parentLabelRotation: 0 };
      return i3.labelRotation = k2 && i3.height > i3.width ? -90 : 0, F2 === "top" && (i3.parentLabelX = P + H2, i3.parentLabelY = P + X2 / 2), F2 === "right" && (i3.parentLabelX = i3.width - P - X2 / 2, i3.parentLabelY = i3.height - P - H2, i3.parentLabelRotation = -90), F2 === "bottom" && (i3.parentLabelX = P + H2, i3.parentLabelY = i3.height - P - X2 / 2), F2 === "left" && (i3.parentLabelX = P + X2 / 2, i3.parentLabelY = i3.height - P - H2, i3.parentLabelRotation = -90), i3.label = re2(i3), i3.parentLabel = le2(i3), i3;
    });
  }, [ue2, ne2, ae2, re2, k2, le2, X2, F2, H2, P]), ce2 = zt(), se2 = pr(q2, G2), ve2 = Xe(U2, ce2), he2 = Xe($2, ce2), fe2 = Xe(oe2, ce2), Le2 = (0, import_react.useMemo)(function() {
    return pe2.map(function(e3) {
      var t3 = j({}, e3, { color: se2(e3), opacity: K2 });
      return t3.borderColor = ve2(t3), t3.labelTextColor = he2(t3), t3.parentLabelTextColor = fe2(t3), t3;
    });
  }, [pe2, se2, K2, ve2, he2, fe2]);
  return { hierarchy: be2, nodes: Le2, layout: de2 };
};
var oe = function(e2) {
  var t2 = e2.nodes;
  return (0, import_react.useMemo)(function() {
    return { nodes: t2 };
  }, [t2]);
};
var ne = function(e2) {
  return { x: e2.x, y: e2.y, width: e2.width, height: e2.height, color: e2.color, labelX: e2.width / 2, labelY: e2.height / 2, labelRotation: e2.labelRotation, labelOpacity: 1, parentLabelX: e2.parentLabelX, parentLabelY: e2.parentLabelY, parentLabelRotation: e2.parentLabelRotation, parentLabelOpacity: 1 };
};
var ie = function(e2) {
  return { x: e2.x + e2.width / 2, y: e2.y + e2.height / 2, width: 0, height: 0, color: e2.color, labelX: 0, labelY: 0, labelRotation: e2.labelRotation, labelOpacity: 0, parentLabelX: 0, parentLabelY: 0, parentLabelRotation: e2.parentLabelRotation, parentLabelOpacity: 0 };
};
var ae = (0, import_react.memo)(function(e2) {
  var i2 = e2.nodes, a2 = e2.nodeComponent, r2 = e2.borderWidth, l = e2.enableLabel, d = e2.labelSkipSize, b = e2.enableParentLabel, p = function(e3, i3) {
    var a3 = i3.isInteractive, r3 = i3.onMouseEnter, l2 = i3.onMouseMove, d2 = i3.onMouseLeave, b2 = i3.onClick, u = i3.tooltip, p2 = k(), c2 = p2.showTooltipFromEvent, s2 = p2.hideTooltip, v2 = (0, import_react.useCallback)(function(e4, t2) {
      c2((0, import_react.createElement)(u, { node: e4 }), t2, "left");
    }, [c2, u]), h2 = (0, import_react.useCallback)(function(e4, t2) {
      v2(e4, t2), r3 == null || r3(e4, t2);
    }, [r3, v2]), f = (0, import_react.useCallback)(function(e4, t2) {
      v2(e4, t2), l2 == null || l2(e4, t2);
    }, [l2, v2]), L = (0, import_react.useCallback)(function(e4, t2) {
      s2(), d2 == null || d2(e4, t2);
    }, [d2, s2]), g = (0, import_react.useCallback)(function(e4, t2) {
      b2 == null || b2(e4, t2);
    }, [b2]);
    return (0, import_react.useMemo)(function() {
      return e3.map(function(e4) {
        return a3 ? j({}, e4, { onMouseEnter: function(t2) {
          return h2(e4, t2);
        }, onMouseMove: function(t2) {
          return f(e4, t2);
        }, onMouseLeave: function(t2) {
          return L(e4, t2);
        }, onClick: function(t2) {
          return g(e4, t2);
        } }) : e4;
      });
    }, [a3, e3, h2, f, L, g]);
  }(i2, { isInteractive: e2.isInteractive, onMouseEnter: e2.onMouseEnter, onMouseMove: e2.onMouseMove, onMouseLeave: e2.onMouseLeave, onClick: e2.onClick, tooltip: e2.tooltip }), c = Ur(), s = c.animate, v = c.config, h = useTransition(p, { keys: function(e3) {
    return e3.path;
  }, initial: ne, from: ie, enter: ne, update: ne, leave: ie, config: v, immediate: !s });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: h(function(e3, t2) {
    return (0, import_react.createElement)(a2, { key: t2.path, node: t2, animatedProps: e3, borderWidth: r2, enableLabel: l, labelSkipSize: d, enableParentLabel: b });
  }) });
});
var re = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var le = function(e2) {
  var t2 = e2.data, n2 = e2.identity, a2 = n2 === void 0 ? U.identity : n2, r2 = e2.value, l = r2 === void 0 ? U.value : r2, d = e2.valueFormat, b = e2.tile, u = b === void 0 ? U.tile : b, p = e2.nodeComponent, h = p === void 0 ? U.nodeComponent : p, f = e2.innerPadding, L = f === void 0 ? U.innerPadding : f, g = e2.outerPadding, m2 = g === void 0 ? U.outerPadding : g, y2 = e2.leavesOnly, C2 = y2 === void 0 ? U.leavesOnly : y2, x = e2.width, P = e2.height, M = e2.margin, w2 = e2.layers, S = w2 === void 0 ? U.layers : w2, O = e2.colors, k2 = O === void 0 ? U.colors : O, T = e2.colorBy, W = T === void 0 ? U.colorBy : T, I = e2.nodeOpacity, z = I === void 0 ? U.nodeOpacity : I, B = e2.borderWidth, R = B === void 0 ? U.borderWidth : B, E = e2.borderColor, X2 = E === void 0 ? U.borderColor : E, F2 = e2.defs, j2 = F2 === void 0 ? U.defs : F2, D2 = e2.fill, H2 = D2 === void 0 ? U.fill : D2, V2 = e2.enableLabel, q2 = V2 === void 0 ? U.enableLabel : V2, A2 = e2.label, G2 = A2 === void 0 ? U.label : A2, J2 = e2.labelTextColor, K2 = J2 === void 0 ? U.labelTextColor : J2, N2 = e2.orientLabel, Q2 = N2 === void 0 ? U.orientLabel : N2, Z2 = e2.labelSkipSize, $2 = Z2 === void 0 ? U.labelSkipSize : Z2, _2 = e2.enableParentLabel, ee2 = _2 === void 0 ? U.enableParentLabel : _2, ne2 = e2.parentLabel, ie2 = ne2 === void 0 ? U.parentLabel : ne2, re2 = e2.parentLabelSize, le2 = re2 === void 0 ? U.parentLabelSize : re2, de2 = e2.parentLabelPosition, be2 = de2 === void 0 ? U.parentLabelPosition : de2, ue2 = e2.parentLabelPadding, pe2 = ue2 === void 0 ? U.parentLabelPadding : ue2, ce2 = e2.parentLabelTextColor, se2 = ce2 === void 0 ? U.parentLabelTextColor : ce2, ve2 = e2.isInteractive, he2 = ve2 === void 0 ? U.isInteractive : ve2, fe2 = e2.onMouseEnter, Le2 = e2.onMouseMove, ge2 = e2.onMouseLeave, me = e2.onClick, ye = e2.tooltip, Ce = ye === void 0 ? U.tooltip : ye, xe = e2.role, Pe = e2.ariaLabel, Me = e2.ariaLabelledBy, we = e2.ariaDescribedBy, Se = wt(x, P, M), Oe = Se.margin, ke = Se.innerWidth, Te = Se.innerHeight, We = Se.outerWidth, Ie = Se.outerHeight, ze = te({ data: t2, identity: a2, value: l, valueFormat: d, leavesOnly: C2, width: ke, height: Te, tile: u, innerPadding: L, outerPadding: m2, colors: k2, colorBy: W, nodeOpacity: z, borderColor: X2, label: G2, labelTextColor: K2, orientLabel: Q2, enableParentLabel: ee2, parentLabel: ie2, parentLabelSize: le2, parentLabelPosition: be2, parentLabelPadding: pe2, parentLabelTextColor: se2 }).nodes, Be = { nodes: null };
  S.includes("nodes") && (Be.nodes = (0, import_jsx_runtime.jsx)(ae, { nodes: ze, nodeComponent: h, borderWidth: R, enableLabel: q2, labelSkipSize: $2, enableParentLabel: ee2, isInteractive: he2, onMouseEnter: fe2, onMouseMove: Le2, onMouseLeave: ge2, onClick: me, tooltip: Ce }, "nodes"));
  var Re = oe({ nodes: ze }), Ee = In(j2, ze, H2);
  return (0, import_jsx_runtime.jsx)(gn, { width: We, height: Ie, margin: Oe, defs: Ee, role: xe, ariaLabel: Pe, ariaLabelledBy: Me, ariaDescribedBy: we, children: S.map(function(e3, t3) {
    var n3;
    return typeof e3 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e3, Re) }, t3) : (n3 = Be == null ? void 0 : Be[e3]) != null ? n3 : null;
  }) });
};
var de = function(e2) {
  var t2 = e2.isInteractive, o2 = t2 === void 0 ? U.isInteractive : t2, n2 = e2.animate, i2 = n2 === void 0 ? U.animate : n2, a2 = e2.motionConfig, r2 = a2 === void 0 ? U.motionConfig : a2, l = e2.theme, d = e2.renderWrapper, b = D(e2, re);
  return (0, import_jsx_runtime.jsx)(St, { animate: i2, isInteractive: o2, motionConfig: r2, renderWrapper: d, theme: l, children: (0, import_jsx_runtime.jsx)(le, j({ isInteractive: o2 }, b)) });
};
var be = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t2) {
    var o2 = t2.width, n2 = t2.height;
    return (0, import_jsx_runtime.jsx)(de, j({ width: o2, height: n2 }, e2));
  } });
};
var ue = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var pe = function(e2) {
  var t2 = e2.data, n2 = e2.identity, a2 = n2 === void 0 ? Z.identity : n2, r2 = e2.value, l = r2 === void 0 ? Z.value : r2, d = e2.tile, b = d === void 0 ? Z.tile : d, u = e2.nodeComponent, p = u === void 0 ? Z.nodeComponent : u, s = e2.valueFormat, v = e2.innerPadding, h = v === void 0 ? Z.innerPadding : v, f = e2.outerPadding, L = f === void 0 ? Z.outerPadding : f, g = e2.leavesOnly, m2 = g === void 0 ? Z.leavesOnly : g, y2 = e2.width, C2 = e2.height, x = e2.margin, P = e2.layers, M = P === void 0 ? U.layers : P, w2 = e2.colors, S = w2 === void 0 ? Z.colors : w2, O = e2.colorBy, k2 = O === void 0 ? Z.colorBy : O, T = e2.nodeOpacity, W = T === void 0 ? Z.nodeOpacity : T, I = e2.borderWidth, z = I === void 0 ? Z.borderWidth : I, B = e2.borderColor, R = B === void 0 ? Z.borderColor : B, E = e2.enableLabel, X2 = E === void 0 ? Z.enableLabel : E, F2 = e2.label, j2 = F2 === void 0 ? Z.label : F2, D2 = e2.labelTextColor, H2 = D2 === void 0 ? Z.labelTextColor : D2, V2 = e2.orientLabel, q2 = V2 === void 0 ? Z.orientLabel : V2, A2 = e2.labelSkipSize, G2 = A2 === void 0 ? Z.labelSkipSize : A2, J2 = e2.enableParentLabel, K2 = J2 === void 0 ? Z.enableParentLabel : J2, N2 = e2.parentLabel, Q2 = N2 === void 0 ? Z.parentLabel : N2, $2 = e2.parentLabelSize, _2 = $2 === void 0 ? Z.parentLabelSize : $2, ee2 = e2.parentLabelPosition, ne2 = ee2 === void 0 ? Z.parentLabelPosition : ee2, ie2 = e2.parentLabelPadding, re2 = ie2 === void 0 ? Z.parentLabelPadding : ie2, le2 = e2.parentLabelTextColor, de2 = le2 === void 0 ? Z.parentLabelTextColor : le2, be2 = e2.isInteractive, ue2 = be2 === void 0 ? Z.isInteractive : be2, pe2 = e2.onMouseEnter, ce2 = e2.onMouseMove, se2 = e2.onMouseLeave, ve2 = e2.onClick, he2 = e2.tooltip, fe2 = he2 === void 0 ? Z.tooltip : he2, Le2 = e2.role, ge2 = e2.ariaLabel, me = e2.ariaLabelledBy, ye = e2.ariaDescribedBy, Ce = wt(y2, C2, x), xe = Ce.margin, Pe = Ce.innerWidth, Me = Ce.innerHeight, we = Ce.outerWidth, Se = Ce.outerHeight, Oe = te({ data: t2, identity: a2, value: l, valueFormat: s, leavesOnly: m2, width: Pe, height: Me, tile: b, innerPadding: h, outerPadding: L, colors: S, colorBy: k2, nodeOpacity: W, borderColor: R, label: j2, labelTextColor: H2, orientLabel: q2, enableParentLabel: K2, parentLabel: Q2, parentLabelSize: _2, parentLabelPosition: ne2, parentLabelPadding: re2, parentLabelTextColor: de2 }).nodes, ke = { nodes: null };
  M.includes("nodes") && (ke.nodes = (0, import_jsx_runtime.jsx)(ae, { nodes: Oe, nodeComponent: p, borderWidth: z, enableLabel: X2, labelSkipSize: G2, enableParentLabel: K2, isInteractive: ue2, onMouseEnter: pe2, onMouseMove: ce2, onMouseLeave: se2, onClick: ve2, tooltip: fe2 }, "nodes"));
  var Te = oe({ nodes: Oe });
  return (0, import_jsx_runtime.jsx)("div", { role: Le2, "aria-label": ge2, "aria-labelledby": me, "aria-describedby": ye, style: { position: "relative", width: we, height: Se }, children: (0, import_jsx_runtime.jsx)("div", { style: { position: "absolute", top: xe.top, left: xe.left }, children: M.map(function(e3, t3) {
    var n3;
    return typeof e3 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e3, Te) }, t3) : (n3 = ke == null ? void 0 : ke[e3]) != null ? n3 : null;
  }) }) });
};
var ce = function(e2) {
  var t2 = e2.isInteractive, o2 = t2 === void 0 ? Z.isInteractive : t2, n2 = e2.animate, i2 = n2 === void 0 ? Z.animate : n2, a2 = e2.motionConfig, r2 = a2 === void 0 ? Z.motionConfig : a2, l = e2.theme, d = e2.renderWrapper, b = D(e2, ue);
  return (0, import_jsx_runtime.jsx)(St, { animate: i2, isInteractive: o2, motionConfig: r2, renderWrapper: d, theme: l, children: (0, import_jsx_runtime.jsx)(pe, j({ isInteractive: o2 }, b)) });
};
var se = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t2) {
    var o2 = t2.width, n2 = t2.height;
    return (0, import_jsx_runtime.jsx)(ce, j({ width: o2, height: n2 }, e2));
  } });
};
var ve = ["theme", "isInteractive", "animate", "motionConfig", "renderWrapper"];
var he = function(e2, t2, o2, n2) {
  return e2.find(function(e3) {
    return jn(e3.x + t2.left, e3.y + t2.top, e3.width, e3.height, o2, n2);
  });
};
var fe = function(e2) {
  var n2 = e2.data, i2 = e2.identity, d = i2 === void 0 ? $.identity : i2, b = e2.value, u = b === void 0 ? $.identity : b, p = e2.tile, s = p === void 0 ? $.tile : p, v = e2.valueFormat, h = e2.innerPadding, g = h === void 0 ? $.innerPadding : h, m2 = e2.outerPadding, y2 = m2 === void 0 ? $.outerPadding : m2, C2 = e2.leavesOnly, x = C2 === void 0 ? $.leavesOnly : C2, P = e2.width, M = e2.height, w2 = e2.margin, S = e2.colors, O = S === void 0 ? $.colors : S, k2 = e2.colorBy, T = k2 === void 0 ? $.colorBy : k2, W = e2.nodeOpacity, I = W === void 0 ? $.nodeOpacity : W, B = e2.borderWidth, R = B === void 0 ? $.borderWidth : B, E = e2.borderColor, X2 = E === void 0 ? $.borderColor : E, F2 = e2.enableLabel, j2 = F2 === void 0 ? $.enableLabel : F2, D2 = e2.label, H2 = D2 === void 0 ? $.label : D2, V2 = e2.labelTextColor, q2 = V2 === void 0 ? $.labelTextColor : V2, A2 = e2.orientLabel, G2 = A2 === void 0 ? $.orientLabel : A2, J2 = e2.labelSkipSize, K2 = J2 === void 0 ? $.labelSkipSize : J2, N2 = e2.isInteractive, Q2 = N2 === void 0 ? $.isInteractive : N2, U2 = e2.onMouseMove, Z2 = e2.onClick, _2 = e2.tooltip, ee2 = _2 === void 0 ? $.tooltip : _2, oe2 = e2.pixelRatio, ne2 = oe2 === void 0 ? $.pixelRatio : oe2, ie2 = e2.role, ae2 = e2.ariaLabel, re2 = e2.ariaLabelledBy, le2 = e2.ariaDescribedBy, de2 = (0, import_react.useRef)(null), be2 = wt(P, M, w2), ue2 = be2.margin, pe2 = be2.innerWidth, ce2 = be2.innerHeight, se2 = be2.outerWidth, ve2 = be2.outerHeight, fe2 = te({ data: n2, identity: d, value: u, valueFormat: v, leavesOnly: x, width: pe2, height: ce2, tile: s, innerPadding: g, outerPadding: y2, colors: O, colorBy: T, nodeOpacity: I, borderColor: X2, label: H2, labelTextColor: q2, orientLabel: G2, enableParentLabel: false }).nodes, Le2 = zt();
  (0, import_react.useEffect)(function() {
    if (de2.current !== null) {
      var e3 = de2.current.getContext("2d");
      e3 !== null && (de2.current.width = se2 * ne2, de2.current.height = ve2 * ne2, e3.scale(ne2, ne2), e3.fillStyle = Le2.background, e3.fillRect(0, 0, se2, ve2), e3.translate(ue2.left, ue2.top), fe2.forEach(function(t2) {
        e3.fillStyle = t2.color, e3.fillRect(t2.x, t2.y, t2.width, t2.height), R > 0 && (e3.strokeStyle = t2.borderColor, e3.lineWidth = R, e3.strokeRect(t2.x, t2.y, t2.width, t2.height));
      }), j2 && (e3.textAlign = "center", e3.textBaseline = "middle", e3.font = Le2.labels.text.fontSize + "px " + Le2.labels.text.fontFamily, fe2.forEach(function(t2) {
        if (t2.isLeaf && (K2 === 0 || Math.min(t2.width, t2.height) > K2)) {
          var o2 = G2 && t2.height > t2.width;
          e3.save(), e3.translate(t2.x + t2.width / 2, t2.y + t2.height / 2), e3.rotate(Ht(o2 ? -90 : 0)), e3.fillStyle = t2.labelTextColor, e3.fillText("" + t2.label, 0, 0), e3.restore();
        }
      })));
    }
  }, [de2, fe2, se2, ve2, pe2, ce2, ue2, R, j2, G2, K2, Le2, ne2]);
  var ge2 = k(), me = ge2.showTooltipFromEvent, ye = ge2.hideTooltip, Ce = (0, import_react.useCallback)(function(e3) {
    if (de2.current !== null) {
      var t2 = Sn(de2.current, e3), n3 = t2[0], i3 = t2[1], a2 = he(fe2, ue2, n3, i3);
      a2 !== void 0 ? (me((0, import_react.createElement)(ee2, { node: a2 }), e3, "left"), U2 == null || U2(a2, e3)) : ye();
    }
  }, [de2, fe2, ue2, me, ye, ee2, U2]), xe = (0, import_react.useCallback)(function() {
    ye();
  }, [ye]), Pe = (0, import_react.useCallback)(function(e3) {
    if (de2.current !== null) {
      var t2 = Sn(de2.current, e3), o2 = t2[0], n3 = t2[1], i3 = he(fe2, ue2, o2, n3);
      i3 !== void 0 && (Z2 == null || Z2(i3, e3));
    }
  }, [de2, fe2, ue2, Z2]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: de2, width: se2 * ne2, height: ve2 * ne2, style: { width: se2, height: ve2 }, onMouseEnter: Q2 ? Ce : void 0, onMouseMove: Q2 ? Ce : void 0, onMouseLeave: Q2 ? xe : void 0, onClick: Q2 ? Pe : void 0, role: ie2, "aria-label": ae2, "aria-labelledby": re2, "aria-describedby": le2 });
};
var Le = function(e2) {
  var t2 = e2.theme, o2 = e2.isInteractive, n2 = o2 === void 0 ? $.isInteractive : o2, i2 = e2.animate, a2 = i2 === void 0 ? $.animate : i2, r2 = e2.motionConfig, l = r2 === void 0 ? $.motionConfig : r2, d = e2.renderWrapper, b = D(e2, ve);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: n2, animate: a2, motionConfig: l, theme: t2, renderWrapper: d, children: (0, import_jsx_runtime.jsx)(fe, j({ isInteractive: n2 }, b)) });
};
var ge = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(t2) {
    var o2 = t2.width, n2 = t2.height;
    return (0, import_jsx_runtime.jsx)(Le, j({ width: o2, height: n2 }, e2));
  } });
};
export {
  be as ResponsiveTreeMap,
  ge as ResponsiveTreeMapCanvas,
  se as ResponsiveTreeMapHtml,
  de as TreeMap,
  Le as TreeMapCanvas,
  ce as TreeMapHtml,
  $ as canvasDefaultProps,
  Q as commonDefaultProps,
  Z as htmlDefaultProps,
  A as htmlLabelTransform,
  V as htmlNodeTransform,
  G as htmlParentLabelTransform,
  U as svgDefaultProps,
  q as svgLabelTransform,
  H as svgNodeTransform,
  _ as tileByType
};
//# sourceMappingURL=@nivo_treemap.js.map
