{
  "version": 3,
  "sources": ["../date-fns/locale/af/_lib/formatDistance.js", "../date-fns/locale/af/_lib/formatLong.js", "../date-fns/locale/af/_lib/formatRelative.js", "../date-fns/locale/af/_lib/localize.js", "../date-fns/locale/af/_lib/match.js", "../date-fns/locale/af.js", "../date-fns/locale/ar/_lib/formatDistance.js", "../date-fns/locale/ar/_lib/formatLong.js", "../date-fns/locale/ar/_lib/formatRelative.js", "../date-fns/locale/ar/_lib/localize.js", "../date-fns/locale/ar/_lib/match.js", "../date-fns/locale/ar.js", "../date-fns/locale/ar-DZ/_lib/formatDistance.js", "../date-fns/locale/ar-DZ/_lib/formatLong.js", "../date-fns/locale/ar-DZ/_lib/formatRelative.js", "../date-fns/locale/ar-DZ/_lib/localize.js", "../date-fns/locale/ar-DZ/_lib/match.js", "../date-fns/locale/ar-DZ.js", "../date-fns/locale/ar-EG/_lib/formatDistance.js", "../date-fns/locale/ar-EG/_lib/formatLong.js", "../date-fns/locale/ar-EG/_lib/formatRelative.js", "../date-fns/locale/ar-EG/_lib/localize.js", "../date-fns/locale/ar-EG/_lib/match.js", "../date-fns/locale/ar-EG.js", "../date-fns/locale/ar-MA/_lib/formatDistance.js", "../date-fns/locale/ar-MA/_lib/formatLong.js", "../date-fns/locale/ar-MA/_lib/formatRelative.js", "../date-fns/locale/ar-MA/_lib/localize.js", "../date-fns/locale/ar-MA/_lib/match.js", "../date-fns/locale/ar-MA.js", "../date-fns/locale/ar-SA/_lib/formatDistance.js", "../date-fns/locale/ar-SA/_lib/formatLong.js", "../date-fns/locale/ar-SA/_lib/formatRelative.js", "../date-fns/locale/ar-SA/_lib/localize.js", "../date-fns/locale/ar-SA/_lib/match.js", "../date-fns/locale/ar-SA.js", "../date-fns/locale/ar-TN/_lib/formatDistance.js", "../date-fns/locale/ar-TN/_lib/formatLong.js", "../date-fns/locale/ar-TN/_lib/formatRelative.js", "../date-fns/locale/ar-TN/_lib/localize.js", "../date-fns/locale/ar-TN/_lib/match.js", "../date-fns/locale/ar-TN.js", "../date-fns/locale/az/_lib/formatDistance.js", "../date-fns/locale/az/_lib/formatLong.js", "../date-fns/locale/az/_lib/formatRelative.js", "../date-fns/locale/az/_lib/localize.js", "../date-fns/locale/az/_lib/match.js", "../date-fns/locale/az.js", "../date-fns/locale/be/_lib/formatDistance.js", "../date-fns/locale/be/_lib/formatLong.js", "../date-fns/locale/be/_lib/formatRelative.js", "../date-fns/locale/be/_lib/localize.js", "../date-fns/locale/be/_lib/match.js", "../date-fns/locale/be.js", "../date-fns/locale/be-tarask/_lib/formatDistance.js", "../date-fns/locale/be-tarask/_lib/formatLong.js", "../date-fns/locale/be-tarask/_lib/formatRelative.js", "../date-fns/locale/be-tarask/_lib/localize.js", "../date-fns/locale/be-tarask/_lib/match.js", "../date-fns/locale/be-tarask.js", "../date-fns/locale/bg/_lib/formatDistance.js", "../date-fns/locale/bg/_lib/formatLong.js", "../date-fns/locale/bg/_lib/formatRelative.js", "../date-fns/locale/bg/_lib/localize.js", "../date-fns/locale/bg/_lib/match.js", "../date-fns/locale/bg.js", "../date-fns/locale/bn/_lib/localize.js", "../date-fns/locale/bn/_lib/formatDistance.js", "../date-fns/locale/bn/_lib/formatLong.js", "../date-fns/locale/bn/_lib/formatRelative.js", "../date-fns/locale/bn/_lib/match.js", "../date-fns/locale/bn.js", "../date-fns/locale/bs/_lib/formatDistance.js", "../date-fns/locale/bs/_lib/formatLong.js", "../date-fns/locale/bs/_lib/formatRelative.js", "../date-fns/locale/bs/_lib/localize.js", "../date-fns/locale/bs/_lib/match.js", "../date-fns/locale/bs.js", "../date-fns/locale/ca/_lib/formatDistance.js", "../date-fns/locale/ca/_lib/formatLong.js", "../date-fns/locale/ca/_lib/formatRelative.js", "../date-fns/locale/ca/_lib/localize.js", "../date-fns/locale/ca/_lib/match.js", "../date-fns/locale/ca.js", "../date-fns/locale/ckb/_lib/formatDistance.js", "../date-fns/locale/ckb/_lib/formatLong.js", "../date-fns/locale/ckb/_lib/formatRelative.js", "../date-fns/locale/ckb/_lib/localize.js", "../date-fns/locale/ckb/_lib/match.js", "../date-fns/locale/ckb.js", "../date-fns/locale/cs/_lib/formatDistance.js", "../date-fns/locale/cs/_lib/formatLong.js", "../date-fns/locale/cs/_lib/formatRelative.js", "../date-fns/locale/cs/_lib/localize.js", "../date-fns/locale/cs/_lib/match.js", "../date-fns/locale/cs.js", "../date-fns/locale/cy/_lib/formatDistance.js", "../date-fns/locale/cy/_lib/formatLong.js", "../date-fns/locale/cy/_lib/formatRelative.js", "../date-fns/locale/cy/_lib/localize.js", "../date-fns/locale/cy/_lib/match.js", "../date-fns/locale/cy.js", "../date-fns/locale/da/_lib/formatDistance.js", "../date-fns/locale/da/_lib/formatLong.js", "../date-fns/locale/da/_lib/formatRelative.js", "../date-fns/locale/da/_lib/localize.js", "../date-fns/locale/da/_lib/match.js", "../date-fns/locale/da.js", "../date-fns/locale/de/_lib/formatDistance.js", "../date-fns/locale/de/_lib/formatLong.js", "../date-fns/locale/de/_lib/formatRelative.js", "../date-fns/locale/de/_lib/localize.js", "../date-fns/locale/de/_lib/match.js", "../date-fns/locale/de.js", "../date-fns/locale/de-AT/_lib/localize.js", "../date-fns/locale/de-AT.js", "../date-fns/locale/el/_lib/formatDistance.js", "../date-fns/locale/el/_lib/formatLong.js", "../date-fns/locale/el/_lib/formatRelative.js", "../date-fns/locale/el/_lib/localize.js", "../date-fns/locale/el/_lib/match.js", "../date-fns/locale/el.js", "../date-fns/locale/en-AU/_lib/formatLong.js", "../date-fns/locale/en-AU.js", "../date-fns/locale/en-CA/_lib/formatDistance.js", "../date-fns/locale/en-CA/_lib/formatLong.js", "../date-fns/locale/en-CA.js", "../date-fns/locale/en-GB/_lib/formatLong.js", "../date-fns/locale/en-GB.js", "../date-fns/locale/en-IE.js", "../date-fns/locale/en-IN/_lib/formatLong.js", "../date-fns/locale/en-IN.js", "../date-fns/locale/en-NZ/_lib/formatLong.js", "../date-fns/locale/en-NZ.js", "../date-fns/locale/en-ZA/_lib/formatLong.js", "../date-fns/locale/en-ZA.js", "../date-fns/locale/eo/_lib/formatDistance.js", "../date-fns/locale/eo/_lib/formatLong.js", "../date-fns/locale/eo/_lib/formatRelative.js", "../date-fns/locale/eo/_lib/localize.js", "../date-fns/locale/eo/_lib/match.js", "../date-fns/locale/eo.js", "../date-fns/locale/es/_lib/formatDistance.js", "../date-fns/locale/es/_lib/formatLong.js", "../date-fns/locale/es/_lib/formatRelative.js", "../date-fns/locale/es/_lib/localize.js", "../date-fns/locale/es/_lib/match.js", "../date-fns/locale/es.js", "../date-fns/locale/et/_lib/formatDistance.js", "../date-fns/locale/et/_lib/formatLong.js", "../date-fns/locale/et/_lib/formatRelative.js", "../date-fns/locale/et/_lib/localize.js", "../date-fns/locale/et/_lib/match.js", "../date-fns/locale/et.js", "../date-fns/locale/eu/_lib/formatDistance.js", "../date-fns/locale/eu/_lib/formatLong.js", "../date-fns/locale/eu/_lib/formatRelative.js", "../date-fns/locale/eu/_lib/localize.js", "../date-fns/locale/eu/_lib/match.js", "../date-fns/locale/eu.js", "../date-fns/locale/fa-IR/_lib/formatDistance.js", "../date-fns/locale/fa-IR/_lib/formatLong.js", "../date-fns/locale/fa-IR/_lib/formatRelative.js", "../date-fns/locale/fa-IR/_lib/localize.js", "../date-fns/locale/fa-IR/_lib/match.js", "../date-fns/locale/fa-IR.js", "../date-fns/locale/fi/_lib/formatDistance.js", "../date-fns/locale/fi/_lib/formatLong.js", "../date-fns/locale/fi/_lib/formatRelative.js", "../date-fns/locale/fi/_lib/localize.js", "../date-fns/locale/fi/_lib/match.js", "../date-fns/locale/fi.js", "../date-fns/locale/fr/_lib/formatDistance.js", "../date-fns/locale/fr/_lib/formatLong.js", "../date-fns/locale/fr/_lib/formatRelative.js", "../date-fns/locale/fr/_lib/localize.js", "../date-fns/locale/fr/_lib/match.js", "../date-fns/locale/fr.js", "../date-fns/locale/fr-CA/_lib/formatLong.js", "../date-fns/locale/fr-CA.js", "../date-fns/locale/fr-CH/_lib/formatLong.js", "../date-fns/locale/fr-CH/_lib/formatRelative.js", "../date-fns/locale/fr-CH.js", "../date-fns/locale/fy/_lib/formatDistance.js", "../date-fns/locale/fy/_lib/formatLong.js", "../date-fns/locale/fy/_lib/formatRelative.js", "../date-fns/locale/fy/_lib/localize.js", "../date-fns/locale/fy/_lib/match.js", "../date-fns/locale/fy.js", "../date-fns/locale/gd/_lib/formatDistance.js", "../date-fns/locale/gd/_lib/formatLong.js", "../date-fns/locale/gd/_lib/formatRelative.js", "../date-fns/locale/gd/_lib/localize.js", "../date-fns/locale/gd/_lib/match.js", "../date-fns/locale/gd.js", "../date-fns/locale/gl/_lib/formatDistance.js", "../date-fns/locale/gl/_lib/formatLong.js", "../date-fns/locale/gl/_lib/formatRelative.js", "../date-fns/locale/gl/_lib/localize.js", "../date-fns/locale/gl/_lib/match.js", "../date-fns/locale/gl.js", "../date-fns/locale/gu/_lib/formatDistance.js", "../date-fns/locale/gu/_lib/formatLong.js", "../date-fns/locale/gu/_lib/formatRelative.js", "../date-fns/locale/gu/_lib/localize.js", "../date-fns/locale/gu/_lib/match.js", "../date-fns/locale/gu.js", "../date-fns/locale/he/_lib/formatDistance.js", "../date-fns/locale/he/_lib/formatLong.js", "../date-fns/locale/he/_lib/formatRelative.js", "../date-fns/locale/he/_lib/localize.js", "../date-fns/locale/he/_lib/match.js", "../date-fns/locale/he.js", "../date-fns/locale/hi/_lib/localize.js", "../date-fns/locale/hi/_lib/formatDistance.js", "../date-fns/locale/hi/_lib/formatLong.js", "../date-fns/locale/hi/_lib/formatRelative.js", "../date-fns/locale/hi/_lib/match.js", "../date-fns/locale/hi.js", "../date-fns/locale/hr/_lib/formatDistance.js", "../date-fns/locale/hr/_lib/formatLong.js", "../date-fns/locale/hr/_lib/formatRelative.js", "../date-fns/locale/hr/_lib/localize.js", "../date-fns/locale/hr/_lib/match.js", "../date-fns/locale/hr.js", "../date-fns/locale/ht/_lib/formatDistance.js", "../date-fns/locale/ht/_lib/formatLong.js", "../date-fns/locale/ht/_lib/formatRelative.js", "../date-fns/locale/ht/_lib/localize.js", "../date-fns/locale/ht/_lib/match.js", "../date-fns/locale/ht.js", "../date-fns/locale/hu/_lib/formatDistance.js", "../date-fns/locale/hu/_lib/formatLong.js", "../date-fns/locale/hu/_lib/formatRelative.js", "../date-fns/locale/hu/_lib/localize.js", "../date-fns/locale/hu/_lib/match.js", "../date-fns/locale/hu.js", "../date-fns/locale/hy/_lib/formatDistance.js", "../date-fns/locale/hy/_lib/formatLong.js", "../date-fns/locale/hy/_lib/formatRelative.js", "../date-fns/locale/hy/_lib/localize.js", "../date-fns/locale/hy/_lib/match.js", "../date-fns/locale/hy.js", "../date-fns/locale/id/_lib/formatDistance.js", "../date-fns/locale/id/_lib/formatLong.js", "../date-fns/locale/id/_lib/formatRelative.js", "../date-fns/locale/id/_lib/localize.js", "../date-fns/locale/id/_lib/match.js", "../date-fns/locale/id.js", "../date-fns/locale/is/_lib/formatDistance.js", "../date-fns/locale/is/_lib/formatLong.js", "../date-fns/locale/is/_lib/formatRelative.js", "../date-fns/locale/is/_lib/localize.js", "../date-fns/locale/is/_lib/match.js", "../date-fns/locale/is.js", "../date-fns/locale/it/_lib/formatDistance.js", "../date-fns/locale/it/_lib/formatLong.js", "../date-fns/locale/it/_lib/formatRelative.js", "../date-fns/locale/it/_lib/localize.js", "../date-fns/locale/it/_lib/match.js", "../date-fns/locale/it.js", "../date-fns/locale/it-CH/_lib/formatLong.js", "../date-fns/locale/it-CH.js", "../date-fns/locale/ja/_lib/formatDistance.js", "../date-fns/locale/ja/_lib/formatLong.js", "../date-fns/locale/ja/_lib/formatRelative.js", "../date-fns/locale/ja/_lib/localize.js", "../date-fns/locale/ja/_lib/match.js", "../date-fns/locale/ja.js", "../date-fns/locale/ja-Hira/_lib/formatDistance.js", "../date-fns/locale/ja-Hira/_lib/formatLong.js", "../date-fns/locale/ja-Hira/_lib/formatRelative.js", "../date-fns/locale/ja-Hira/_lib/localize.js", "../date-fns/locale/ja-Hira/_lib/match.js", "../date-fns/locale/ja-Hira.js", "../date-fns/locale/ka/_lib/formatDistance.js", "../date-fns/locale/ka/_lib/formatLong.js", "../date-fns/locale/ka/_lib/formatRelative.js", "../date-fns/locale/ka/_lib/localize.js", "../date-fns/locale/ka/_lib/match.js", "../date-fns/locale/ka.js", "../date-fns/locale/kk/_lib/formatDistance.js", "../date-fns/locale/kk/_lib/formatLong.js", "../date-fns/locale/kk/_lib/formatRelative.js", "../date-fns/locale/kk/_lib/localize.js", "../date-fns/locale/kk/_lib/match.js", "../date-fns/locale/kk.js", "../date-fns/locale/km/_lib/formatDistance.js", "../date-fns/locale/km/_lib/formatLong.js", "../date-fns/locale/km/_lib/formatRelative.js", "../date-fns/locale/km/_lib/localize.js", "../date-fns/locale/km/_lib/match.js", "../date-fns/locale/km.js", "../date-fns/locale/kn/_lib/formatDistance.js", "../date-fns/locale/kn/_lib/formatLong.js", "../date-fns/locale/kn/_lib/formatRelative.js", "../date-fns/locale/kn/_lib/localize.js", "../date-fns/locale/kn/_lib/match.js", "../date-fns/locale/kn.js", "../date-fns/locale/ko/_lib/formatDistance.js", "../date-fns/locale/ko/_lib/formatLong.js", "../date-fns/locale/ko/_lib/formatRelative.js", "../date-fns/locale/ko/_lib/localize.js", "../date-fns/locale/ko/_lib/match.js", "../date-fns/locale/ko.js", "../date-fns/locale/lb/_lib/formatDistance.js", "../date-fns/locale/lb/_lib/formatLong.js", "../date-fns/locale/lb/_lib/formatRelative.js", "../date-fns/locale/lb/_lib/localize.js", "../date-fns/locale/lb/_lib/match.js", "../date-fns/locale/lb.js", "../date-fns/locale/lt/_lib/formatDistance.js", "../date-fns/locale/lt/_lib/formatLong.js", "../date-fns/locale/lt/_lib/formatRelative.js", "../date-fns/locale/lt/_lib/localize.js", "../date-fns/locale/lt/_lib/match.js", "../date-fns/locale/lt.js", "../date-fns/locale/lv/_lib/formatDistance.js", "../date-fns/locale/lv/_lib/formatLong.js", "../date-fns/locale/lv/_lib/formatRelative.js", "../date-fns/locale/lv/_lib/localize.js", "../date-fns/locale/lv/_lib/match.js", "../date-fns/locale/lv.js", "../date-fns/locale/mk/_lib/formatDistance.js", "../date-fns/locale/mk/_lib/formatLong.js", "../date-fns/locale/mk/_lib/formatRelative.js", "../date-fns/locale/mk/_lib/localize.js", "../date-fns/locale/mk/_lib/match.js", "../date-fns/locale/mk.js", "../date-fns/locale/mn/_lib/formatDistance.js", "../date-fns/locale/mn/_lib/formatLong.js", "../date-fns/locale/mn/_lib/formatRelative.js", "../date-fns/locale/mn/_lib/localize.js", "../date-fns/locale/mn/_lib/match.js", "../date-fns/locale/mn.js", "../date-fns/locale/ms/_lib/formatDistance.js", "../date-fns/locale/ms/_lib/formatLong.js", "../date-fns/locale/ms/_lib/formatRelative.js", "../date-fns/locale/ms/_lib/localize.js", "../date-fns/locale/ms/_lib/match.js", "../date-fns/locale/ms.js", "../date-fns/locale/mt/_lib/formatDistance.js", "../date-fns/locale/mt/_lib/formatLong.js", "../date-fns/locale/mt/_lib/formatRelative.js", "../date-fns/locale/mt/_lib/localize.js", "../date-fns/locale/mt/_lib/match.js", "../date-fns/locale/mt.js", "../date-fns/locale/nb/_lib/formatDistance.js", "../date-fns/locale/nb/_lib/formatLong.js", "../date-fns/locale/nb/_lib/formatRelative.js", "../date-fns/locale/nb/_lib/localize.js", "../date-fns/locale/nb/_lib/match.js", "../date-fns/locale/nb.js", "../date-fns/locale/nl/_lib/formatDistance.js", "../date-fns/locale/nl/_lib/formatLong.js", "../date-fns/locale/nl/_lib/formatRelative.js", "../date-fns/locale/nl/_lib/localize.js", "../date-fns/locale/nl/_lib/match.js", "../date-fns/locale/nl.js", "../date-fns/locale/nl-BE/_lib/formatDistance.js", "../date-fns/locale/nl-BE/_lib/formatLong.js", "../date-fns/locale/nl-BE/_lib/formatRelative.js", "../date-fns/locale/nl-BE/_lib/localize.js", "../date-fns/locale/nl-BE/_lib/match.js", "../date-fns/locale/nl-BE.js", "../date-fns/locale/nn/_lib/formatDistance.js", "../date-fns/locale/nn/_lib/formatLong.js", "../date-fns/locale/nn/_lib/formatRelative.js", "../date-fns/locale/nn/_lib/localize.js", "../date-fns/locale/nn/_lib/match.js", "../date-fns/locale/nn.js", "../date-fns/locale/oc/_lib/formatDistance.js", "../date-fns/locale/oc/_lib/formatLong.js", "../date-fns/locale/oc/_lib/formatRelative.js", "../date-fns/locale/oc/_lib/localize.js", "../date-fns/locale/oc/_lib/match.js", "../date-fns/locale/oc.js", "../date-fns/locale/pl/_lib/formatDistance.js", "../date-fns/locale/pl/_lib/formatLong.js", "../date-fns/locale/pl/_lib/formatRelative.js", "../date-fns/locale/pl/_lib/localize.js", "../date-fns/locale/pl/_lib/match.js", "../date-fns/locale/pl.js", "../date-fns/locale/pt/_lib/formatDistance.js", "../date-fns/locale/pt/_lib/formatLong.js", "../date-fns/locale/pt/_lib/formatRelative.js", "../date-fns/locale/pt/_lib/localize.js", "../date-fns/locale/pt/_lib/match.js", "../date-fns/locale/pt.js", "../date-fns/locale/pt-BR/_lib/formatDistance.js", "../date-fns/locale/pt-BR/_lib/formatLong.js", "../date-fns/locale/pt-BR/_lib/formatRelative.js", "../date-fns/locale/pt-BR/_lib/localize.js", "../date-fns/locale/pt-BR/_lib/match.js", "../date-fns/locale/pt-BR.js", "../date-fns/locale/ro/_lib/formatDistance.js", "../date-fns/locale/ro/_lib/formatLong.js", "../date-fns/locale/ro/_lib/formatRelative.js", "../date-fns/locale/ro/_lib/localize.js", "../date-fns/locale/ro/_lib/match.js", "../date-fns/locale/ro.js", "../date-fns/locale/ru/_lib/formatDistance.js", "../date-fns/locale/ru/_lib/formatLong.js", "../date-fns/locale/ru/_lib/formatRelative.js", "../date-fns/locale/ru/_lib/localize.js", "../date-fns/locale/ru/_lib/match.js", "../date-fns/locale/ru.js", "../date-fns/locale/se/_lib/formatDistance.js", "../date-fns/locale/se/_lib/formatLong.js", "../date-fns/locale/se/_lib/formatRelative.js", "../date-fns/locale/se/_lib/localize.js", "../date-fns/locale/se/_lib/match.js", "../date-fns/locale/se.js", "../date-fns/locale/sk/_lib/formatDistance.js", "../date-fns/locale/sk/_lib/formatLong.js", "../date-fns/locale/sk/_lib/formatRelative.js", "../date-fns/locale/sk/_lib/localize.js", "../date-fns/locale/sk/_lib/match.js", "../date-fns/locale/sk.js", "../date-fns/locale/sl/_lib/formatDistance.js", "../date-fns/locale/sl/_lib/formatLong.js", "../date-fns/locale/sl/_lib/formatRelative.js", "../date-fns/locale/sl/_lib/localize.js", "../date-fns/locale/sl/_lib/match.js", "../date-fns/locale/sl.js", "../date-fns/locale/sq/_lib/formatDistance.js", "../date-fns/locale/sq/_lib/formatLong.js", "../date-fns/locale/sq/_lib/formatRelative.js", "../date-fns/locale/sq/_lib/localize.js", "../date-fns/locale/sq/_lib/match.js", "../date-fns/locale/sq.js", "../date-fns/locale/sr/_lib/formatDistance.js", "../date-fns/locale/sr/_lib/formatLong.js", "../date-fns/locale/sr/_lib/formatRelative.js", "../date-fns/locale/sr/_lib/localize.js", "../date-fns/locale/sr/_lib/match.js", "../date-fns/locale/sr.js", "../date-fns/locale/sr-Latn/_lib/formatDistance.js", "../date-fns/locale/sr-Latn/_lib/formatLong.js", "../date-fns/locale/sr-Latn/_lib/formatRelative.js", "../date-fns/locale/sr-Latn/_lib/localize.js", "../date-fns/locale/sr-Latn/_lib/match.js", "../date-fns/locale/sr-Latn.js", "../date-fns/locale/sv/_lib/formatDistance.js", "../date-fns/locale/sv/_lib/formatLong.js", "../date-fns/locale/sv/_lib/formatRelative.js", "../date-fns/locale/sv/_lib/localize.js", "../date-fns/locale/sv/_lib/match.js", "../date-fns/locale/sv.js", "../date-fns/locale/ta/_lib/formatDistance.js", "../date-fns/locale/ta/_lib/formatLong.js", "../date-fns/locale/ta/_lib/formatRelative.js", "../date-fns/locale/ta/_lib/localize.js", "../date-fns/locale/ta/_lib/match.js", "../date-fns/locale/ta.js", "../date-fns/locale/te/_lib/formatDistance.js", "../date-fns/locale/te/_lib/formatLong.js", "../date-fns/locale/te/_lib/formatRelative.js", "../date-fns/locale/te/_lib/localize.js", "../date-fns/locale/te/_lib/match.js", "../date-fns/locale/te.js", "../date-fns/locale/th/_lib/formatDistance.js", "../date-fns/locale/th/_lib/formatLong.js", "../date-fns/locale/th/_lib/formatRelative.js", "../date-fns/locale/th/_lib/localize.js", "../date-fns/locale/th/_lib/match.js", "../date-fns/locale/th.js", "../date-fns/locale/tr/_lib/formatDistance.js", "../date-fns/locale/tr/_lib/formatLong.js", "../date-fns/locale/tr/_lib/formatRelative.js", "../date-fns/locale/tr/_lib/localize.js", "../date-fns/locale/tr/_lib/match.js", "../date-fns/locale/tr.js", "../date-fns/locale/ug/_lib/formatDistance.js", "../date-fns/locale/ug/_lib/formatLong.js", "../date-fns/locale/ug/_lib/formatRelative.js", "../date-fns/locale/ug/_lib/localize.js", "../date-fns/locale/ug/_lib/match.js", "../date-fns/locale/ug.js", "../date-fns/locale/uk/_lib/formatDistance.js", "../date-fns/locale/uk/_lib/formatLong.js", "../date-fns/locale/uk/_lib/formatRelative.js", "../date-fns/locale/uk/_lib/localize.js", "../date-fns/locale/uk/_lib/match.js", "../date-fns/locale/uk.js", "../date-fns/locale/uz/_lib/formatDistance.js", "../date-fns/locale/uz/_lib/formatLong.js", "../date-fns/locale/uz/_lib/formatRelative.js", "../date-fns/locale/uz/_lib/localize.js", "../date-fns/locale/uz/_lib/match.js", "../date-fns/locale/uz.js", "../date-fns/locale/uz-Cyrl/_lib/formatDistance.js", "../date-fns/locale/uz-Cyrl/_lib/formatLong.js", "../date-fns/locale/uz-Cyrl/_lib/formatRelative.js", "../date-fns/locale/uz-Cyrl/_lib/localize.js", "../date-fns/locale/uz-Cyrl/_lib/match.js", "../date-fns/locale/uz-Cyrl.js", "../date-fns/locale/vi/_lib/formatDistance.js", "../date-fns/locale/vi/_lib/formatLong.js", "../date-fns/locale/vi/_lib/formatRelative.js", "../date-fns/locale/vi/_lib/localize.js", "../date-fns/locale/vi/_lib/match.js", "../date-fns/locale/vi.js", "../date-fns/locale/zh-CN/_lib/formatDistance.js", "../date-fns/locale/zh-CN/_lib/formatLong.js", "../date-fns/locale/zh-CN/_lib/formatRelative.js", "../date-fns/locale/zh-CN/_lib/localize.js", "../date-fns/locale/zh-CN/_lib/match.js", "../date-fns/locale/zh-CN.js", "../date-fns/locale/zh-HK/_lib/formatDistance.js", "../date-fns/locale/zh-HK/_lib/formatLong.js", "../date-fns/locale/zh-HK/_lib/formatRelative.js", "../date-fns/locale/zh-HK/_lib/localize.js", "../date-fns/locale/zh-HK/_lib/match.js", "../date-fns/locale/zh-HK.js", "../date-fns/locale/zh-TW/_lib/formatDistance.js", "../date-fns/locale/zh-TW/_lib/formatLong.js", "../date-fns/locale/zh-TW/_lib/formatRelative.js", "../date-fns/locale/zh-TW/_lib/localize.js", "../date-fns/locale/zh-TW/_lib/match.js", "../date-fns/locale/zh-TW.js"],
  "sourcesContent": ["const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"minder as 'n sekonde\",\n    other: \"minder as {{count}} sekondes\",\n  },\n\n  xSeconds: {\n    one: \"1 sekonde\",\n    other: \"{{count}} sekondes\",\n  },\n\n  halfAMinute: \"'n halwe minuut\",\n\n  lessThanXMinutes: {\n    one: \"minder as 'n minuut\",\n    other: \"minder as {{count}} minute\",\n  },\n\n  xMinutes: {\n    one: \"'n minuut\",\n    other: \"{{count}} minute\",\n  },\n\n  aboutXHours: {\n    one: \"ongeveer 1 uur\",\n    other: \"ongeveer {{count}} ure\",\n  },\n\n  xHours: {\n    one: \"1 uur\",\n    other: \"{{count}} ure\",\n  },\n\n  xDays: {\n    one: \"1 dag\",\n    other: \"{{count}} dae\",\n  },\n\n  aboutXWeeks: {\n    one: \"ongeveer 1 week\",\n    other: \"ongeveer {{count}} weke\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weke\",\n  },\n\n  aboutXMonths: {\n    one: \"ongeveer 1 maand\",\n    other: \"ongeveer {{count}} maande\",\n  },\n\n  xMonths: {\n    one: \"1 maand\",\n    other: \"{{count}} maande\",\n  },\n\n  aboutXYears: {\n    one: \"ongeveer 1 jaar\",\n    other: \"ongeveer {{count}} jaar\",\n  },\n\n  xYears: {\n    one: \"1 jaar\",\n    other: \"{{count}} jaar\",\n  },\n\n  overXYears: {\n    one: \"meer as 1 jaar\",\n    other: \"meer as {{count}} jaar\",\n  },\n\n  almostXYears: {\n    one: \"byna 1 jaar\",\n    other: \"byna {{count}} jaar\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"oor \" + result;\n    } else {\n      return result + \" gelede\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"yyyy/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'om' {{time}}\",\n  long: \"{{date}} 'om' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'verlede' eeee 'om' p\",\n  yesterday: \"'gister om' p\",\n  today: \"'vandag om' p\",\n  tomorrow: \"'m\u00F4re om' p\",\n  nextWeek: \"eeee 'om' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"vC\", \"nC\"],\n  abbreviated: [\"vC\", \"nC\"],\n  wide: [\"voor Christus\", \"na Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1ste kwartaal\", \"2de kwartaal\", \"3de kwartaal\", \"4de kwartaal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mrt\",\n    \"Apr\",\n    \"Mei\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Des\",\n  ],\n\n  wide: [\n    \"Januarie\",\n    \"Februarie\",\n    \"Maart\",\n    \"April\",\n    \"Mei\",\n    \"Junie\",\n    \"Julie\",\n    \"Augustus\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"D\", \"W\", \"D\", \"V\", \"S\"],\n  short: [\"So\", \"Ma\", \"Di\", \"Wo\", \"Do\", \"Vr\", \"Sa\"],\n  abbreviated: [\"Son\", \"Maa\", \"Din\", \"Woe\", \"Don\", \"Vry\", \"Sat\"],\n  wide: [\n    \"Sondag\",\n    \"Maandag\",\n    \"Dinsdag\",\n    \"Woensdag\",\n    \"Donderdag\",\n    \"Vrydag\",\n    \"Saterdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"middaguur\",\n    morning: \"oggend\",\n    afternoon: \"middag\",\n    evening: \"laat middag\",\n    night: \"aand\",\n  },\n  abbreviated: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"middaguur\",\n    morning: \"oggend\",\n    afternoon: \"middag\",\n    evening: \"laat middag\",\n    night: \"aand\",\n  },\n  wide: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"middaguur\",\n    morning: \"oggend\",\n    afternoon: \"middag\",\n    evening: \"laat middag\",\n    night: \"aand\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"uur die middag\",\n    morning: \"uur die oggend\",\n    afternoon: \"uur die middag\",\n    evening: \"uur die aand\",\n    night: \"uur die aand\",\n  },\n  abbreviated: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"uur die middag\",\n    morning: \"uur die oggend\",\n    afternoon: \"uur die middag\",\n    evening: \"uur die aand\",\n    night: \"uur die aand\",\n  },\n  wide: {\n    am: \"vm\",\n    pm: \"nm\",\n    midnight: \"middernag\",\n    noon: \"uur die middag\",\n    morning: \"uur die oggend\",\n    afternoon: \"uur die middag\",\n    evening: \"uur die aand\",\n    night: \"uur die aand\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n  const rem100 = number % 100;\n  if (rem100 < 20) {\n    switch (rem100) {\n      case 1:\n      case 8:\n        return number + \"ste\";\n      default:\n        return number + \"de\";\n    }\n  }\n  return number + \"ste\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(ste|de)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([vn]\\.? ?C\\.?)/,\n  abbreviated: /^([vn]\\. ?C\\.?)/,\n  wide: /^((voor|na) Christus)/,\n};\nconst parseEraPatterns = {\n  any: [/^v/, /^n/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K[1234]/i,\n  wide: /^[1234](st|d)e kwartaal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\\.?/i,\n  wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^J/i,\n    /^F/i,\n    /^M/i,\n    /^A/i,\n    /^M/i,\n    /^J/i,\n    /^J/i,\n    /^A/i,\n    /^S/i,\n    /^O/i,\n    /^N/i,\n    /^D/i,\n  ],\n\n  any: [\n    /^Jan/i,\n    /^Feb/i,\n    /^Mrt/i,\n    /^Apr/i,\n    /^Mei/i,\n    /^Jun/i,\n    /^Jul/i,\n    /^Aug/i,\n    /^Sep/i,\n    /^Okt/i,\n    /^Nov/i,\n    /^Dec/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smdwv]/i,\n  short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,\n  abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,\n  wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i],\n  any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^vm/i,\n    pm: /^nm/i,\n    midnight: /^middernag/i,\n    noon: /^middaguur/i,\n    morning: /oggend/i,\n    afternoon: /middag/i,\n    evening: /laat middag/i,\n    night: /aand/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./af/_lib/formatDistance.js\";\nimport { formatLong } from \"./af/_lib/formatLong.js\";\nimport { formatRelative } from \"./af/_lib/formatRelative.js\";\nimport { localize } from \"./af/_lib/localize.js\";\nimport { match } from \"./af/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Afrikaans locale.\n * @language Afrikaans\n * @iso-639-2 afr\n * @author Marnus Weststrate [@marnusw](https://github.com/marnusw)\n */\nexport const af = {\n  code: \"af\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default af;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062B\u0627\u0646\u064A\u062A\u0627\u0646\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635\u0641 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u0627\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u0627\u0646\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u064A\u0648\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u064A\u0648\u0645\u0627\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\u0627 \u062A\u0642\u0631\u064A\u0628\u0627\",\n  },\n\n  xWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u0627\u0646\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\u0627\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0634\u0647\u0631\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    other: \"{{count}} \u0634\u0647\u0631\u0627 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F\",\n    two: \"\u0634\u0647\u0631\u0627\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\",\n    other: \"{{count}} \u0634\u0647\u0631\u0627\",\n  },\n\n  aboutXYears: {\n    one: \"\u0633\u0646\u0629 \u0648\u0627\u062D\u062F\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0633\u0646\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\",\n    threeToTen: \"{{count}} \u0633\u0646\u0648\u0627\u062A \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0633\u0646\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xYears: {\n    one: \"\u0633\u0646\u0629 \u0648\u0627\u062D\u062F\",\n    two: \"\u0633\u0646\u062A\u0627\u0646\",\n    threeToTen: \"{{count}} \u0633\u0646\u0648\u0627\u062A\",\n    other: \"{{count}} \u0633\u0646\u0629\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u0629\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0648\u0627\u062A\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0629\",\n  },\n\n  almostXYears: {\n    one: \"\u0645\u0627 \u064A\u0642\u0627\u0631\u0628 \u0633\u0646\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0645\u0627 \u064A\u0642\u0627\u0631\u0628 \u0633\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0645\u0627 \u064A\u0642\u0627\u0631\u0628 {{count}} \u0633\u0646\u0648\u0627\u062A\",\n    other: \"\u0645\u0627 \u064A\u0642\u0627\u0631\u0628 {{count}} \u0633\u0646\u0629\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const usageGroup = formatDistanceLocale[token];\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else if (count === 2) {\n    result = usageGroup.two;\n  } else if (count <= 10) {\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u062E\u0644\u0627\u0644 \" + result;\n    } else {\n      return \"\u0645\u0646\u0630 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE\u060C do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss\",\n  long: \"HH:mm:ss\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' {{time}}\",\n  long: \"{{date}} '\u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee '\u0627\u0644\u0645\u0627\u0636\u064A \u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  yesterday: \"'\u0627\u0644\u0623\u0645\u0633 \u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  today: \"'\u0627\u0644\u064A\u0648\u0645 \u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  tomorrow: \"'\u063A\u062F\u0627 \u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  nextWeek: \"eeee '\u0627\u0644\u0642\u0627\u062F\u0645 \u0639\u0646\u062F \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token) => formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u064A\", \"\u0641\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u064A\", \"\u064A\", \"\u0623\", \"\u0633\", \"\u0623\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u064A\u0646\u0627\u064A\u0631\",\n    \"\u0641\u0628\u0631\u0627\u064A\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u064A\u0648\",\n    \"\u064A\u0648\u0644\u064A\u0648\",\n    \"\u0623\u063A\u0633\u0637\u0633\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n\n  wide: [\n    \"\u064A\u0646\u0627\u064A\u0631\",\n    \"\u0641\u0628\u0631\u0627\u064A\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u064A\u0648\",\n    \"\u064A\u0648\u0644\u064A\u0648\",\n    \"\u0623\u063A\u0633\u0637\u0633\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0627\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0638\u0647\u0631\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (num) => String(num);\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /[\u0642\u0628]/,\n  abbreviated: /[\u0642\u0628]\\.\u0645\\./,\n  wide: /(\u0642\u0628\u0644|\u0628\u0639\u062F) \u0627\u0644\u0645\u064A\u0644\u0627\u062F/,\n};\nconst parseEraPatterns = {\n  any: [/\u0642\u0628\u0644/, /\u0628\u0639\u062F/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /\u0631[1234]/,\n  wide: /\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062B\u0627\u0646\u064A|\u0627\u0644\u062B\u0627\u0644\u062B|\u0627\u0644\u0631\u0627\u0628\u0639)/,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u0623\u064A\u0641\u0645\u0633\u0646\u062F]/,\n  abbreviated:\n    /^(\u064A\u0646\u0627\u064A\u0631|\u0641\u0628\u0631\u0627\u064A\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064A\u0644|\u0645\u0627\u064A\u0648|\u064A\u0648\u0646\u064A\u0648|\u064A\u0648\u0644\u064A\u0648|\u0623\u063A\u0633\u0637\u0633|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/,\n  wide: /^(\u064A\u0646\u0627\u064A\u0631|\u0641\u0628\u0631\u0627\u064A\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064A\u0644|\u0645\u0627\u064A\u0648|\u064A\u0648\u0646\u064A\u0648|\u064A\u0648\u0644\u064A\u0648|\u0623\u063A\u0633\u0637\u0633|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u064A/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0623/i,\n    /^\u0645/i,\n    /^\u064A/i,\n    /^\u064A/i,\n    /^\u0623/i,\n    /^\u0633/i,\n    /^\u0623/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u064A\u0646\u0627\u064A\u0631/i,\n    /^\u0641\u0628\u0631\u0627\u064A\u0631/i,\n    /^\u0645\u0627\u0631\u0633/i,\n    /^\u0623\u0628\u0631\u064A\u0644/i,\n    /^\u0645\u0627\u064A\u0648/i,\n    /^\u064A\u0648\u0646\u064A\u0648/i,\n    /^\u064A\u0648\u0644\u064A\u0648/i,\n    /^\u0623\u063A\u0633\u0637\u0633/i,\n    /^\u0633\u0628\u062A\u0645\u0628\u0631/i,\n    /^\u0623\u0643\u062A\u0648\u0628\u0631/i,\n    /^\u0646\u0648\u0641\u0645\u0628\u0631/i,\n    /^\u062F\u064A\u0633\u0645\u0628\u0631/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062D\u0646\u062B\u0631\u062E\u062C\u0633]/i,\n  short: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  abbreviated: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0627\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/i, /^\u0646/i, /^\u062B/i, /^\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n  wide: [\n    /^\u0627\u0644\u0623\u062D\u062F/i,\n    /^\u0627\u0644\u0627\u062B\u0646\u064A\u0646/i,\n    /^\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621/i,\n    /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i,\n    /^\u0627\u0644\u062E\u0645\u064A\u0633/i,\n    /^\u0627\u0644\u062C\u0645\u0639\u0629/i,\n    /^\u0627\u0644\u0633\u0628\u062A/i,\n  ],\n\n  any: [/^\u0623\u062D/i, /^\u0627\u062B/i, /^\u062B/i, /^\u0623\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0635|\u0645|\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644|\u0627\u0644\u0638\u0647\u0631|\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631|\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D|\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064A \u0627\u0644\u0644\u064A\u0644)/,\n  any: /^(\u0635|\u0645|\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644|\u0627\u0644\u0638\u0647\u0631|\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631|\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D|\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064A \u0627\u0644\u0644\u064A\u0644)/,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0635/,\n    pm: /^\u0645/,\n    midnight: /\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644/,\n    noon: /\u0627\u0644\u0638\u0647\u0631/,\n    afternoon: /\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631/,\n    morning: /\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D/,\n    evening: /\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621/,\n    night: /\u0641\u064A \u0627\u0644\u0644\u064A\u0644/,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar/_lib/formatRelative.js\";\nimport { localize } from \"./ar/_lib/localize.js\";\nimport { match } from \"./ar/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Modern Standard Arabic - Al-fussha).\n * @language Modern Standard Arabic\n * @iso-639-2 ara\n * @author Abdallah Hassan [@AbdallahAHO](https://github.com/AbdallahAHO)\n * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)\n */\nexport const ar = {\n  code: \"ar\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 6 /* Saturday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ar;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635\u0641 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u064A\u0648\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u064A\u0648\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0634\u0647\u0631\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F\",\n    two: \"\u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\",\n    other: \"{{count}} \u0634\u0647\u0631\",\n  },\n\n  aboutXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"{{count}} \u0639\u0627\u0645\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645\",\n  },\n\n  almostXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n\n  const usageGroup = formatDistanceLocale[token];\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else if (count === 2) {\n    result = usageGroup.two;\n  } else if (count <= 10) {\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0641\u064A \u062E\u0644\u0627\u0644 \" + result;\n    } else {\n      return \"\u0645\u0646\u0630 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  long: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0623\u062E\u0631' eeee '\u0639\u0646\u062F' p\",\n  yesterday: \"'\u0623\u0645\u0633 \u0639\u0646\u062F' p\",\n  today: \"'\u0627\u0644\u064A\u0648\u0645 \u0639\u0646\u062F' p\",\n  tomorrow: \"'\u063A\u062F\u0627\u064B \u0639\u0646\u062F' p\",\n  nextWeek: \"eeee '\u0639\u0646\u062F' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) => {\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u062C\", \"\u0641\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u062C\", \"\u062C\", \"\u0623\", \"\u0633\", \"\u0623\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u062C\u0627\u0646\u0640\",\n    \"\u0641\u064A\u0641\u0640\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0641\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0640\",\n    \"\u062C\u0648\u0627\u0646\u0640\",\n    \"\u062C\u0648\u064A\u0640\",\n    \"\u0623\u0648\u062A\",\n    \"\u0633\u0628\u062A\u0640\",\n    \"\u0623\u0643\u062A\u0640\",\n    \"\u0646\u0648\u0641\u0640\",\n    \"\u062F\u064A\u0633\u0640\",\n  ],\n\n  wide: [\n    \"\u062C\u0627\u0646\u0641\u064A\",\n    \"\u0641\u064A\u0641\u0631\u064A\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0641\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u062C\u0648\u0627\u0646\",\n    \"\u062C\u0648\u064A\u0644\u064A\u0629\",\n    \"\u0623\u0648\u062A\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u0640\", \"\u062B\u0644\u0627\", \"\u0623\u0631\u0628\u0640\", \"\u062E\u0645\u064A\u0640\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0627\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0642|\u0628)/i,\n  abbreviated: /^(\u0642\\.?\\s?\u0645\\.?|\u0642\\.?\\s?\u0645\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\n  wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062F/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0631[1234]/i,\n  wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u062C\u0641\u0645\u0623\u0633\u0646\u062F]/i,\n  abbreviated: /^(\u062C\u0627\u0646|\u0641\u064A\u0641|\u0645\u0627\u0631|\u0623\u0641\u0631|\u0645\u0627\u064A|\u062C\u0648\u0627|\u062C\u0648\u064A|\u0623\u0648\u062A|\u0633\u0628\u062A|\u0623\u0643\u062A|\u0646\u0648\u0641|\u062F\u064A\u0633)/i,\n  wide: /^(\u062C\u0627\u0646\u0641\u064A|\u0641\u064A\u0641\u0631\u064A|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064A\u0644|\u0645\u0627\u064A|\u062C\u0648\u0627\u0646|\u062C\u0648\u064A\u0644\u064A\u0629|\u0623\u0648\u062A|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u062C/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0623/i,\n    /^\u0645/i,\n    /^\u062C/i,\n    /^\u062C/i,\n    /^\u0623/i,\n    /^\u0633/i,\n    /^\u0623/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u062C\u0627\u0646/i,\n    /^\u0641\u064A\u0641/i,\n    /^\u0645\u0627\u0631/i,\n    /^\u0623\u0641\u0631/i,\n    /^\u0645\u0627\u064A/i,\n    /^\u062C\u0648\u0627/i,\n    /^\u062C\u0648\u064A/i,\n    /^\u0623\u0648\u062A/i,\n    /^\u0633\u0628\u062A/i,\n    /^\u0623\u0643\u062A/i,\n    /^\u0646\u0648\u0641/i,\n    /^\u062F\u064A\u0633/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062D\u0646\u062B\u0631\u062E\u062C\u0633]/i,\n  short: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  abbreviated: /^(\u0623\u062D\u062F|\u0627\u062B\u0646|\u062B\u0644\u0627|\u0623\u0631\u0628|\u062E\u0645\u064A|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0627\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/i, /^\u0646/i, /^\u062B/i, /^\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n  wide: [\n    /^\u0627\u0644\u0623\u062D\u062F/i,\n    /^\u0627\u0644\u0627\u062B\u0646\u064A\u0646/i,\n    /^\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621/i,\n    /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i,\n    /^\u0627\u0644\u062E\u0645\u064A\u0633/i,\n    /^\u0627\u0644\u062C\u0645\u0639\u0629/i,\n    /^\u0627\u0644\u0633\u0628\u062A/i,\n  ],\n\n  any: [/^\u0623\u062D/i, /^\u0627\u062B/i, /^\u062B/i, /^\u0623\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => Number(index) + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar-DZ/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar-DZ/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar-DZ/_lib/formatRelative.js\";\nimport { localize } from \"./ar-DZ/_lib/localize.js\";\nimport { match } from \"./ar-DZ/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Algerian Arabic).\n * @language Algerian Arabic\n * @iso-639-2 ara\n * @author Badreddine Boumaza [@badre429](https://github.com/badre429)\n * @author Ahmed ElShahat [@elshahat](https://github.com/elshahat)\n */\nexport const arDZ = {\n  code: \"ar-DZ\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default arDZ;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629\",\n    two: \"\u062B\u0627\u0646\u064A\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u064A\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u064A\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u062D\u0648\u0627\u0644\u064A \u0633\u0627\u0639\u0629\",\n    two: \"\u062D\u0648\u0627\u0644\u064A \u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u064A\u0648\u0645\",\n    two: \"\u064A\u0648\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u062D\u0648\u0627\u0644\u064A \u0623\u0633\u0628\u0648\u0639\",\n    two: \"\u062D\u0648\u0627\u0644\u064A \u0623\u0633\u0628\u0648\u0639\u064A\u0646\",\n    threeToTen: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0623\u0633\u0628\u0648\u0639\",\n  },\n\n  xWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\",\n  },\n\n  aboutXMonths: {\n    one: \"\u062D\u0648\u0627\u0644\u064A \u0634\u0647\u0631\",\n    two: \"\u062D\u0648\u0627\u0644\u064A \u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0623\u0634\u0647\u0631\",\n    other: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0634\u0647\u0631\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631\",\n    two: \"\u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\",\n    other: \"{{count}} \u0634\u0647\u0631\",\n  },\n\n  aboutXYears: {\n    one: \"\u062D\u0648\u0627\u0644\u064A \u0633\u0646\u0629\",\n    two: \"\u062D\u0648\u0627\u0644\u064A \u0633\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0633\u0646\u064A\u0646\",\n    other: \"\u062D\u0648\u0627\u0644\u064A {{count}} \u0633\u0646\u0629\",\n  },\n\n  xYears: {\n    one: \"\u0639\u0627\u0645\",\n    two: \"\u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"{{count}} \u0639\u0627\u0645\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u0629\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0633\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0633\u0646\u064A\u0646\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0629\",\n  },\n\n  almostXYears: {\n    one: \"\u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u064B\u0627\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u064B\u0627\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u064B\u0627\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u064B\u0627\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2) {\n    result = tokenValue.two;\n  } else if (count <= 10) {\n    result = tokenValue.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return `\u0641\u064A \u062E\u0644\u0627\u0644 ${result}`;\n    } else {\n      return `\u0645\u0646\u0630 ${result}`;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE\u060C do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"dd/MMM/y\",\n  short: \"d/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0627\u0644\u0633\u0627\u0639\u0629' {{time}}\",\n  long: \"{{date}} '\u0627\u0644\u0633\u0627\u0639\u0629' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee '\u0627\u0644\u0644\u064A \u062C\u0627\u064A \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  yesterday: \"'\u0625\u0645\u0628\u0627\u0631\u062D \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  today: \"'\u0627\u0644\u0646\u0647\u0627\u0631\u062F\u0629 \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  tomorrow: \"'\u0628\u0643\u0631\u0629 \u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  nextWeek: \"eeee '\u0627\u0644\u0633\u0627\u0639\u0629' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645\", \"\u0628.\u0645\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u064A\", \"\u0641\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u064A\", \"\u064A\", \"\u0623\", \"\u0633\", \"\u0623\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u064A\u0646\u0627\",\n    \"\u0641\u0628\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u0640\",\n    \"\u064A\u0648\u0644\u0640\",\n    \"\u0623\u063A\u0633\u0640\",\n    \"\u0633\u0628\u062A\u0640\",\n    \"\u0623\u0643\u062A\u0640\",\n    \"\u0646\u0648\u0641\u0640\",\n    \"\u062F\u064A\u0633\u0640\",\n  ],\n\n  wide: [\n    \"\u064A\u0646\u0627\u064A\u0631\",\n    \"\u0641\u0628\u0631\u0627\u064A\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u064A\u0648\",\n    \"\u064A\u0648\u0644\u064A\u0648\",\n    \"\u0623\u063A\u0633\u0637\u0633\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0627\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\u0627\u064B\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\u0627\u064B\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\u0627\u064B\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0638\u0647\u0631\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)/;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0642|\u0628)/g,\n  abbreviated: /^(\u0642.\u0645|\u0628.\u0645)/g,\n  wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F)/g,\n};\nconst parseEraPatterns = {\n  any: [/^\u0642/g, /^\u0628/g],\n};\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/,\n  abbreviated: /^\u0631[1234]/,\n  wide: /^\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062B\u0627\u0646\u064A|\u0627\u0644\u062B\u0627\u0644\u062B|\u0627\u0644\u0631\u0627\u0628\u0639)/,\n};\nconst parseQuarterPatterns = {\n  wide: [/\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639/],\n\n  any: [/1/, /2/, /3/, /4/],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u064A|\u0641|\u0645|\u0623|\u0633|\u0646|\u062F)/,\n  abbreviated: /^(\u064A\u0646\u0627|\u0641\u0628\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064A\u0644|\u0645\u0627\u064A\u0648|\u064A\u0648\u0646\u0640|\u064A\u0648\u0644\u0640|\u0623\u063A\u0633\u0640|\u0633\u0628\u062A\u0640|\u0623\u0643\u062A\u0640|\u0646\u0648\u0641\u0640|\u062F\u064A\u0633\u0640)/,\n  wide: /^(\u064A\u0646\u0627\u064A\u0631|\u0641\u0628\u0631\u0627\u064A\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064A\u0644|\u0645\u0627\u064A\u0648|\u064A\u0648\u0646\u064A\u0648|\u064A\u0648\u0644\u064A\u0648|\u0623\u063A\u0633\u0637\u0633|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u064A/,\n    /^\u0641/,\n    /^\u0645/,\n    /^\u0623/,\n    /^\u0645/,\n    /^\u064A/,\n    /^\u064A/,\n    /^\u0623/,\n    /^\u0633/,\n    /^\u0623/,\n    /^\u0646/,\n    /^\u062F/,\n  ],\n\n  any: [\n    /^\u064A\u0646\u0627/,\n    /^\u0641\u0628\u0631/,\n    /^\u0645\u0627\u0631\u0633/,\n    /^\u0623\u0628\u0631\u064A\u0644/,\n    /^\u0645\u0627\u064A\u0648/,\n    /^\u064A\u0648\u0646/,\n    /^\u064A\u0648\u0644/,\n    /^\u0623\u063A\u0633/,\n    /^\u0633\u0628\u062A/,\n    /^\u0623\u0643\u062A/,\n    /^\u0646\u0648\u0641/,\n    /^\u062F\u064A\u0633/,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u062D|\u0646|\u062B|\u0631|\u062E|\u062C|\u0633)/,\n  short: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/,\n  abbreviated: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0627\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/, /^\u0646/, /^\u062B/, /^\u0631/, /^\u062E/, /^\u062C/, /^\u0633/],\n  any: [/\u0623\u062D\u062F/, /\u0627\u062B\u0646\u064A\u0646/, /\u062B\u0644\u0627\u062B\u0627\u0621/, /\u0623\u0631\u0628\u0639\u0627\u0621/, /\u062E\u0645\u064A\u0633/, /\u062C\u0645\u0639\u0629/, /\u0633\u0628\u062A/],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0635|\u0645|\u0646|\u0638|\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D|\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631|\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064A \u0627\u0644\u0644\u064A\u0644)/,\n  abbreviated: /^(\u0635|\u0645|\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644|\u0638\u0647\u0631\u0627\u064B|\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D|\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631|\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064A \u0627\u0644\u0644\u064A\u0644)/,\n  wide: /^(\u0635|\u0645|\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644|\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D|\u0638\u0647\u0631\u0627\u064B|\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631|\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064A \u0627\u0644\u0644\u064A\u0644)/,\n  any: /^(\u0635|\u0645|\u0635\u0628\u0627\u062D|\u0638\u0647\u0631|\u0645\u0633\u0627\u0621|\u0644\u064A\u0644)/,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0635/,\n    pm: /^\u0645/,\n    midnight: /^\u0646/,\n    noon: /^\u0638/,\n    morning: /^\u0635/,\n    afternoon: /^\u0628\u0639\u062F/,\n    evening: /^\u0645/,\n    night: /^\u0644/,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar-EG/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar-EG/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar-EG/_lib/formatRelative.js\";\nimport { localize } from \"./ar-EG/_lib/localize.js\";\nimport { match } from \"./ar-EG/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Egypt).\n * @language Arabic\n * @iso-639-2 ara\n * @author AbdAllah AbdElFattah [@AbdAllahAbdElFattah13](https://github.com/AbdAllahAbdElFattah13)\n */\nexport const arEG = {\n  code: \"ar-EG\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default arEG;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635\u0641 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u064A\u0648\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u064A\u0648\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0634\u0647\u0631\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F\",\n    two: \"\u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\",\n    other: \"{{count}} \u0634\u0647\u0631\",\n  },\n\n  aboutXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"{{count}} \u0639\u0627\u0645\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645\",\n  },\n\n  almostXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n\n  const usageGroup = formatDistanceLocale[token];\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else if (count === 2) {\n    result = usageGroup.two;\n  } else if (count <= 10) {\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0641\u064A \u062E\u0644\u0627\u0644 \" + result;\n    } else {\n      return \"\u0645\u0646\u0630 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  long: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0623\u062E\u0631' eeee '\u0639\u0646\u062F' p\",\n  yesterday: \"'\u0623\u0645\u0633 \u0639\u0646\u062F' p\",\n  today: \"'\u0627\u0644\u064A\u0648\u0645 \u0639\u0646\u062F' p\",\n  tomorrow: \"'\u063A\u062F\u0627\u064B \u0639\u0646\u062F' p\",\n  nextWeek: \"eeee '\u0639\u0646\u062F' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) => {\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u064A\", \"\u0641\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u064A\", \"\u064A\", \"\u063A\", \"\u0634\", \"\u0623\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u064A\u0646\u0627\",\n    \"\u0641\u0628\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u064A\u0648\u0646\u0640\",\n    \"\u064A\u0648\u0644\u0640\",\n    \"\u063A\u0634\u062A\",\n    \"\u0634\u062A\u0646\u0640\",\n    \"\u0623\u0643\u062A\u0640\",\n    \"\u0646\u0648\u0646\u0640\",\n    \"\u062F\u062C\u0646\u0640\",\n  ],\n\n  wide: [\n    \"\u064A\u0646\u0627\u064A\u0631\",\n    \"\u0641\u0628\u0631\u0627\u064A\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u064A\u0648\u0646\u064A\u0648\",\n    \"\u064A\u0648\u0644\u064A\u0648\u0632\",\n    \"\u063A\u0634\u062A\",\n    \"\u0634\u062A\u0646\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0646\u0628\u0631\",\n    \"\u062F\u062C\u0646\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u0640\", \"\u062B\u0644\u0627\", \"\u0623\u0631\u0628\u0640\", \"\u062E\u0645\u064A\u0640\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0625\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0642|\u0628)/i,\n  abbreviated: /^(\u0642\\.?\\s?\u0645\\.?|\u0642\\.?\\s?\u0645\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\n  wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062F/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0631[1234]/i,\n  wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u064A\u0641\u0645\u0623\u0645\u0633\u0646\u062F]/i,\n  abbreviated: /^(\u064A\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064A|\u064A\u0648\u0646|\u064A\u0648\u0644|\u063A\u0634|\u0634\u062A|\u0623\u0643|\u0646|\u062F)/i,\n  wide: /^(\u064A\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064A|\u064A\u0648\u0646|\u064A\u0648\u0644|\u063A\u0634|\u0634\u062A|\u0623\u0643|\u0646|\u062F)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u064A/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0623/i,\n    /^\u0645/i,\n    /^\u064A/i,\n    /^\u064A/i,\n    /^\u063A/i,\n    /^\u0634/i,\n    /^\u0623/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u064A\u0646/i,\n    /^\u0641\u0628/i,\n    /^\u0645\u0627\u0631/i,\n    /^\u0623\u0628/i,\n    /^\u0645\u0627\u064A/i,\n    /^\u064A\u0648\u0646/i,\n    /^\u064A\u0648\u0644/i,\n    /^\u063A\u0634\u062A/i,\n    /^\u0634/i,\n    /^\u0623\u0643/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062D\u0646\u062B\u0631\u062E\u062C\u0633]/i,\n  short: /^(\u0623\u062D\u062F|\u0625\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  abbreviated: /^(\u0623\u062D\u062F|\u0625\u062B\u0646|\u062B\u0644\u0627|\u0623\u0631\u0628|\u062E\u0645\u064A|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0625\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/i, /^\u0646/i, /^\u062B/i, /^\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n  wide: [\n    /^\u0627\u0644\u0623\u062D\u062F/i,\n    /^\u0627\u0644\u0625\u062B\u0646\u064A\u0646/i,\n    /^\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621/i,\n    /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i,\n    /^\u0627\u0644\u062E\u0645\u064A\u0633/i,\n    /^\u0627\u0644\u062C\u0645\u0639\u0629/i,\n    /^\u0627\u0644\u0633\u0628\u062A/i,\n  ],\n\n  any: [/^\u0623\u062D/i, /^\u0625\u062B/i, /^\u062B/i, /^\u0623\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => Number(index) + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar-MA/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar-MA/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar-MA/_lib/formatRelative.js\";\nimport { localize } from \"./ar-MA/_lib/localize.js\";\nimport { match } from \"./ar-MA/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Moroccan Arabic).\n * @language Moroccan Arabic\n * @iso-639-2 ara\n * @author Achraf Rrami [@rramiachraf](https://github.com/rramiachraf)\n */\nexport const arMA = {\n  code: \"ar-MA\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    // Monday is 1\n    weekStartsOn: 1,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default arMA;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062B\u0627\u0646\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635\u0641 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u0626\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u0648\u0627\u062D\u062F\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u0633\u0627\u0639\u0627\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u064A\u0648\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u064A\u0648\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xWeeks: {\n    one: \"\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062D\u062F\",\n    two: \"\u0623\u0633\u0628\u0648\u0639\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0633\u0627\u0628\u064A\u0639\",\n    other: \"{{count}} \u0623\u0633\u0628\u0648\u0639\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0634\u0647\u0631\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631 \u0648\u0627\u062D\u062F\",\n    two: \"\u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\",\n    other: \"{{count}} \u0634\u0647\u0631\",\n  },\n\n  aboutXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n\n  xYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F\",\n    two: \"\u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"{{count}} \u0639\u0627\u0645\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645\",\n  },\n\n  almostXYears: {\n    one: \"\u0639\u0627\u0645 \u0648\u0627\u062D\u062F \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\u0627\u064B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2) {\n    result = tokenValue.two;\n  } else if (count <= 10) {\n    result = tokenValue.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0641\u064A \u062E\u0644\u0627\u0644 \" + result;\n    } else {\n      return \"\u0645\u0646\u0630 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  long: \"{{date}} '\u0639\u0646\u062F' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0623\u062E\u0631' eeee '\u0639\u0646\u062F' p\",\n  yesterday: \"'\u0623\u0645\u0633 \u0639\u0646\u062F' p\",\n  today: \"'\u0627\u0644\u064A\u0648\u0645 \u0639\u0646\u062F' p\",\n  tomorrow: \"'\u063A\u062F\u0627\u064B \u0639\u0646\u062F' p\",\n  nextWeek: \"eeee '\u0639\u0646\u062F' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u064A\", \"\u0641\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u064A\", \"\u064A\", \"\u0623\", \"\u0633\", \"\u0623\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u064A\u0646\u0627\",\n    \"\u0641\u0628\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u0640\",\n    \"\u064A\u0648\u0644\u0640\",\n    \"\u0623\u063A\u0633\u0640\",\n    \"\u0633\u0628\u062A\u0640\",\n    \"\u0623\u0643\u062A\u0640\",\n    \"\u0646\u0648\u0641\u0640\",\n    \"\u062F\u064A\u0633\u0640\",\n  ],\n\n  wide: [\n    \"\u064A\u0646\u0627\u064A\u0631\",\n    \"\u0641\u0628\u0631\u0627\u064A\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0628\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\u0648\",\n    \"\u064A\u0648\u0646\u064A\u0648\",\n    \"\u064A\u0648\u0644\u064A\u0648\",\n    \"\u0623\u063A\u0633\u0637\u0633\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u0640\", \"\u062B\u0644\u0627\", \"\u0623\u0631\u0628\u0640\", \"\u062E\u0645\u064A\u0640\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0627\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0645\u0633\u0627\u0621\u0627\u064B\",\n    night: \"\u0644\u064A\u0644\u0627\u064B\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0645\",\n    midnight: \"\u0646\u0635\u0641 \u0627\u0644\u0644\u064A\u0644\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u0627\u062D\u0627\u064B\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0638\u0640\u0647\u0631\",\n    evening: \"\u0641\u064A \u0627\u0644\u0645\u0633\u0627\u0621\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0642|\u0628)/i,\n  abbreviated: /^(\u0642\\.?\\s?\u0645\\.?|\u0642\\.?\\s?\u0645\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\n  wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F|\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062F/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0631[1234]/i,\n  wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u064A\u0641\u0645\u0623\u0645\u0633\u0646\u062F]/i,\n  abbreviated: /^(\u064A\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064A|\u064A\u0648\u0646|\u064A\u0648\u0644|\u0623\u063A|\u0633|\u0623\u0643|\u0646|\u062F)/i,\n  wide: /^(\u064A\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064A|\u064A\u0648\u0646|\u064A\u0648\u0644|\u0623\u063A|\u0633|\u0623\u0643|\u0646|\u062F)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u064A/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0623/i,\n    /^\u0645/i,\n    /^\u064A/i,\n    /^\u064A/i,\n    /^\u0623/i,\n    /^\u0633/i,\n    /^\u0623/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u064A\u0646/i,\n    /^\u0641/i,\n    /^\u0645\u0627\u0631/i,\n    /^\u0623\u0628/i,\n    /^\u0645\u0627\u064A/i,\n    /^\u064A\u0648\u0646/i,\n    /^\u064A\u0648\u0644/i,\n    /^\u0623\u063A/i,\n    /^\u0633/i,\n    /^\u0623\u0643/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062D\u0646\u062B\u0631\u062E\u062C\u0633]/i,\n  short: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  abbreviated: /^(\u0623\u062D\u062F|\u0627\u062B\u0646|\u062B\u0644\u0627|\u0623\u0631\u0628|\u062E\u0645\u064A|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0627\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/i, /^\u0646/i, /^\u062B/i, /^\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n  wide: [\n    /^\u0627\u0644\u0623\u062D\u062F/i,\n    /^\u0627\u0644\u0627\u062B\u0646\u064A\u0646/i,\n    /^\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621/i,\n    /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i,\n    /^\u0627\u0644\u062E\u0645\u064A\u0633/i,\n    /^\u0627\u0644\u062C\u0645\u0639\u0629/i,\n    /^\u0627\u0644\u0633\u0628\u062A/i,\n  ],\n\n  any: [/^\u0623\u062D/i, /^\u0627\u062B/i, /^\u062B/i, /^\u0623\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar-SA/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar-SA/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar-SA/_lib/formatRelative.js\";\nimport { localize } from \"./ar-SA/_lib/localize.js\";\nimport { match } from \"./ar-SA/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Sauid Arabic).\n * @language Arabic\n * @iso-639-2 ara\n * @author Dhaifallah Alwadani [@dalwadani](https://github.com/dalwadani)\n */\nexport const arSA = {\n  code: \"ar-SA\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default arSA;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062B\u0627\u0646\u064A\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u0632\u0648\u0632 \u062B\u0648\u0627\u0646\u064A\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  xSeconds: {\n    one: \"\u062B\u0627\u0646\u064A\u0629\",\n    two: \"\u0632\u0648\u0632 \u062B\u0648\u0627\u0646\u064A\",\n    threeToTen: \"{{count}} \u062B\u0648\u0627\u0646\u064A\",\n    other: \"{{count}} \u062B\u0627\u0646\u064A\u0629\",\n  },\n\n  halfAMinute: \"\u0646\u0635 \u062F\u0642\u064A\u0642\u0629\",\n\n  lessThanXMinutes: {\n    one: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u0623\u0642\u0644 \u0645\u0646 \u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u0627\u064A\u0642\",\n    other: \"\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  xMinutes: {\n    one: \"\u062F\u0642\u064A\u0642\u0629\",\n    two: \"\u062F\u0642\u064A\u0642\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062F\u0642\u0627\u064A\u0642\",\n    other: \"{{count}} \u062F\u0642\u064A\u0642\u0629\",\n  },\n\n  aboutXHours: {\n    one: \"\u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\",\n    threeToTen: \"{{count}} \u0633\u0648\u0627\u064A\u0639 \u062A\u0642\u0631\u064A\u0628\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\",\n  },\n\n  xHours: {\n    one: \"\u0633\u0627\u0639\u0629\",\n    two: \"\u0633\u0627\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u0633\u0648\u0627\u064A\u0639\",\n    other: \"{{count}} \u0633\u0627\u0639\u0629\",\n  },\n\n  xDays: {\n    one: \"\u0646\u0647\u0627\u0631\",\n    two: \"\u0646\u0647\u0627\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u064A\u0627\u0645\",\n    other: \"{{count}} \u064A\u0648\u0645\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u062C\u0645\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\",\n    two: \"\u062C\u0645\u0639\u062A\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\",\n    threeToTen: \"{{count}} \u062C\u0645\u0627\u0639 \u062A\u0642\u0631\u064A\u0628\",\n    other: \"{{count}} \u062C\u0645\u0639\u0629 \u062A\u0642\u0631\u064A\u0628\",\n  },\n\n  xWeeks: {\n    one: \"\u062C\u0645\u0639\u0629\",\n    two: \"\u062C\u0645\u0639\u062A\u064A\u0646\",\n    threeToTen: \"{{count}} \u062C\u0645\u0627\u0639\",\n    other: \"{{count}} \u062C\u0645\u0639\u0629\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\",\n    two: \"\u0634\u0647\u0631\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\u0629 \u062A\u0642\u0631\u064A\u0628\",\n    other: \"{{count}} \u0634\u0647\u0631 \u062A\u0642\u0631\u064A\u0628\",\n  },\n\n  xMonths: {\n    one: \"\u0634\u0647\u0631\",\n    two: \"\u0634\u0647\u0631\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0634\u0647\u0631\u0629\",\n    other: \"{{count}} \u0634\u0647\u0631\",\n  },\n\n  aboutXYears: {\n    one: \"\u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n  },\n\n  xYears: {\n    one: \"\u0639\u0627\u0645\",\n    two: \"\u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"{{count}} \u0639\u0627\u0645\",\n  },\n\n  overXYears: {\n    one: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\",\n    two: \"\u0623\u0643\u062B\u0631 \u0645\u0646 \u0639\u0627\u0645\u064A\u0646\",\n    threeToTen: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645\",\n    other: \"\u0623\u0643\u062B\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645\",\n  },\n\n  almostXYears: {\n    one: \"\u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n    two: \"\u0639\u0627\u0645\u064A\u0646 \u062A\u0642\u0631\u064A\u0628\",\n    threeToTen: \"{{count}} \u0623\u0639\u0648\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n    other: \"{{count}} \u0639\u0627\u0645 \u062A\u0642\u0631\u064A\u0628\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const usageGroup = formatDistanceLocale[token];\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else if (count === 2) {\n    result = usageGroup.two;\n  } else if (count <= 10) {\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0641\u064A \" + result;\n    } else {\n      return \"\u0639\u0646\u062F\u0648 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE\u060C do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss\",\n  long: \"HH:mm:ss\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0645\u0639' {{time}}\",\n  long: \"{{date}} '\u0645\u0639' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee '\u0625\u0644\u064A \u0641\u0627\u062A \u0645\u0639' p\",\n  yesterday: \"'\u0627\u0644\u0628\u0627\u0631\u062D \u0645\u0639' p\",\n  today: \"'\u0627\u0644\u064A\u0648\u0645 \u0645\u0639' p\",\n  tomorrow: \"'\u063A\u062F\u0648\u0629 \u0645\u0639' p\",\n  nextWeek: \"eeee '\u0627\u0644\u062C\u0645\u0639\u0629 \u0627\u0644\u062C\u0627\u064A\u0629 \u0645\u0639' p '\u0646\u0647\u0627\u0631'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token) => formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0644\u0645\u064A\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0644\u0645\u064A\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06311\", \"\u06312\", \"\u06313\", \"\u06314\"],\n  wide: [\"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0646\u064A\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062B\u0627\u0644\u062B\", \"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u062F\", \"\u0646\", \"\u0623\", \"\u0633\", \"\u0623\", \"\u062C\", \"\u062C\", \"\u0645\", \"\u0623\", \"\u0645\", \"\u0641\", \"\u062C\"],\n  abbreviated: [\n    \"\u062C\u0627\u0646\u0641\u064A\",\n    \"\u0641\u064A\u0641\u0631\u064A\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0641\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u062C\u0648\u0627\u0646\",\n    \"\u062C\u0648\u064A\u0644\u064A\u0629\",\n    \"\u0623\u0648\u062A\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n\n  wide: [\n    \"\u062C\u0627\u0646\u0641\u064A\",\n    \"\u0641\u064A\u0641\u0631\u064A\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0623\u0641\u0631\u064A\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u062C\u0648\u0627\u0646\",\n    \"\u062C\u0648\u064A\u0644\u064A\u0629\",\n    \"\u0623\u0648\u062A\",\n    \"\u0633\u0628\u062A\u0645\u0628\u0631\",\n    \"\u0623\u0643\u062A\u0648\u0628\u0631\",\n    \"\u0646\u0648\u0641\u0645\u0628\u0631\",\n    \"\u062F\u064A\u0633\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u062D\", \"\u0646\", \"\u062B\", \"\u0631\", \"\u062E\", \"\u062C\", \"\u0633\"],\n  short: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n  abbreviated: [\"\u0623\u062D\u062F\", \"\u0627\u062B\u0646\u064A\u0646\", \"\u062B\u0644\u0627\u062B\u0627\u0621\", \"\u0623\u0631\u0628\u0639\u0627\u0621\", \"\u062E\u0645\u064A\u0633\", \"\u062C\u0645\u0639\u0629\", \"\u0633\u0628\u062A\"],\n\n  wide: [\n    \"\u0627\u0644\u0623\u062D\u062F\",\n    \"\u0627\u0644\u0627\u062B\u0646\u064A\u0646\",\n    \"\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621\",\n    \"\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621\",\n    \"\u0627\u0644\u062E\u0645\u064A\u0633\",\n    \"\u0627\u0644\u062C\u0645\u0639\u0629\",\n    \"\u0627\u0644\u0633\u0628\u062A\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0641\u064A \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0641\u064A \u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  abbreviated: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0641\u064A \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0641\u064A \u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n  wide: {\n    am: \"\u0635\",\n    pm: \"\u0639\",\n    morning: \"\u0641\u064A \u0627\u0644\u0635\u0628\u0627\u062D\",\n    noon: \"\u0641\u064A \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    afternoon: \"\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629\",\n    evening: \"\u0641\u064A \u0627\u0644\u0639\u0634\u064A\u0629\",\n    night: \"\u0641\u064A \u0627\u0644\u0644\u064A\u0644\",\n    midnight: \"\u0646\u0635 \u0627\u0644\u0644\u064A\u0644\",\n  },\n};\n\nconst ordinalNumber = (num) => String(num);\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /[\u0642\u0628]/,\n  abbreviated: /[\u0642\u0628]\\.\u0645\\./,\n  wide: /(\u0642\u0628\u0644|\u0628\u0639\u062F) \u0627\u0644\u0645\u064A\u0644\u0627\u062F/,\n};\nconst parseEraPatterns = {\n  any: [/\u0642\u0628\u0644/, /\u0628\u0639\u062F/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /\u0631[1234]/,\n  wide: /\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062B\u0627\u0646\u064A|\u0627\u0644\u062B\u0627\u0644\u062B|\u0627\u0644\u0631\u0627\u0628\u0639)/,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u062C\u0641\u0645\u0623\u0633\u0646\u062F]/,\n  abbreviated:\n    /^(\u062C\u0627\u0646\u0641\u064A|\u0641\u064A\u0641\u0631\u064A|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064A\u0644|\u0645\u0627\u064A|\u062C\u0648\u0627\u0646|\u062C\u0648\u064A\u0644\u064A\u0629|\u0623\u0648\u062A|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/,\n  wide: /^(\u062C\u0627\u0646\u0641\u064A|\u0641\u064A\u0641\u0631\u064A|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064A\u0644|\u0645\u0627\u064A|\u062C\u0648\u0627\u0646|\u062C\u0648\u064A\u0644\u064A\u0629|\u0623\u0648\u062A|\u0633\u0628\u062A\u0645\u0628\u0631|\u0623\u0643\u062A\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062F\u064A\u0633\u0645\u0628\u0631)/,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u062C/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0623/i,\n    /^\u0645/i,\n    /^\u062C/i,\n    /^\u062C/i,\n    /^\u0623/i,\n    /^\u0633/i,\n    /^\u0623/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u062C\u0627\u0646\u0641\u064A/i,\n    /^\u0641\u064A\u0641\u0631\u064A/i,\n    /^\u0645\u0627\u0631\u0633/i,\n    /^\u0623\u0641\u0631\u064A\u0644/i,\n    /^\u0645\u0627\u064A/i,\n    /^\u062C\u0648\u0627\u0646/i,\n    /^\u062C\u0648\u064A\u0644\u064A\u0629/i,\n    /^\u0623\u0648\u062A/i,\n    /^\u0633\u0628\u062A\u0645\u0628\u0631/i,\n    /^\u0623\u0643\u062A\u0648\u0628\u0631/i,\n    /^\u0646\u0648\u0641\u0645\u0628\u0631/i,\n    /^\u062F\u064A\u0633\u0645\u0628\u0631/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062D\u0646\u062B\u0631\u062E\u062C\u0633]/i,\n  short: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  abbreviated: /^(\u0623\u062D\u062F|\u0627\u062B\u0646\u064A\u0646|\u062B\u0644\u0627\u062B\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062E\u0645\u064A\u0633|\u062C\u0645\u0639\u0629|\u0633\u0628\u062A)/i,\n  wide: /^(\u0627\u0644\u0623\u062D\u062F|\u0627\u0644\u0627\u062B\u0646\u064A\u0646|\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062E\u0645\u064A\u0633|\u0627\u0644\u062C\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062A)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u062D/i, /^\u0646/i, /^\u062B/i, /^\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n  wide: [\n    /^\u0627\u0644\u0623\u062D\u062F/i,\n    /^\u0627\u0644\u0627\u062B\u0646\u064A\u0646/i,\n    /^\u0627\u0644\u062B\u0644\u0627\u062B\u0627\u0621/i,\n    /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i,\n    /^\u0627\u0644\u062E\u0645\u064A\u0633/i,\n    /^\u0627\u0644\u062C\u0645\u0639\u0629/i,\n    /^\u0627\u0644\u0633\u0628\u062A/i,\n  ],\n\n  any: [/^\u0623\u062D/i, /^\u0627\u062B/i, /^\u062B/i, /^\u0623\u0631/i, /^\u062E/i, /^\u062C/i, /^\u0633/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0635|\u0639|\u0646 \u0644|\u0644|(\u0641\u064A|\u0645\u0639) (\u0635\u0628\u0627\u062D|\u0642\u0627\u064A\u0644\u0629|\u0639\u0634\u064A\u0629|\u0644\u064A\u0644))/,\n  any: /^([\u0635\u0639]|\u0646\u0635 \u0627\u0644\u0644\u064A\u0644|\u0642\u0627\u064A\u0644\u0629|(\u0641\u064A|\u0645\u0639) (\u0635\u0628\u0627\u062D|\u0642\u0627\u064A\u0644\u0629|\u0639\u0634\u064A\u0629|\u0644\u064A\u0644))/,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0635/,\n    pm: /^\u0639/,\n    midnight: /\u0646\u0635 \u0627\u0644\u0644\u064A\u0644/,\n    noon: /\u0642\u0627\u064A\u0644\u0629/,\n    afternoon: /\u0628\u0639\u062F \u0627\u0644\u0642\u0627\u064A\u0644\u0629/,\n    morning: /\u0635\u0628\u0627\u062D/,\n    evening: /\u0639\u0634\u064A\u0629/,\n    night: /\u0644\u064A\u0644/,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ar-TN/_lib/formatDistance.js\";\nimport { formatLong } from \"./ar-TN/_lib/formatLong.js\";\nimport { formatRelative } from \"./ar-TN/_lib/formatRelative.js\";\nimport { localize } from \"./ar-TN/_lib/localize.js\";\nimport { match } from \"./ar-TN/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Tunisian Arabic).\n * @language Arabic\n * @iso-639-2 ara\n * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)\n */\nexport const arTN = {\n  code: \"ar-TN\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default arTN;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"bir saniy\u0259d\u0259n az\",\n    other: \"{{count}} bir saniy\u0259d\u0259n az\",\n  },\n\n  xSeconds: {\n    one: \"1 saniy\u0259\",\n    other: \"{{count}} saniy\u0259\",\n  },\n\n  halfAMinute: \"yar\u0131m d\u0259qiq\u0259\",\n\n  lessThanXMinutes: {\n    one: \"bir d\u0259qiq\u0259d\u0259n az\",\n    other: \"{{count}} bir d\u0259qiq\u0259d\u0259n az\",\n  },\n\n  xMinutes: {\n    one: \"bir d\u0259qiq\u0259\",\n    other: \"{{count}} d\u0259qiq\u0259\",\n  },\n\n  aboutXHours: {\n    one: \"t\u0259xmin\u0259n 1 saat\",\n    other: \"t\u0259xmin\u0259n {{count}} saat\",\n  },\n\n  xHours: {\n    one: \"1 saat\",\n    other: \"{{count}} saat\",\n  },\n\n  xDays: {\n    one: \"1 g\u00FCn\",\n    other: \"{{count}} g\u00FCn\",\n  },\n\n  aboutXWeeks: {\n    one: \"t\u0259xmin\u0259n 1 h\u0259ft\u0259\",\n    other: \"t\u0259xmin\u0259n {{count}} h\u0259ft\u0259\",\n  },\n\n  xWeeks: {\n    one: \"1 h\u0259ft\u0259\",\n    other: \"{{count}} h\u0259ft\u0259\",\n  },\n\n  aboutXMonths: {\n    one: \"t\u0259xmin\u0259n 1 ay\",\n    other: \"t\u0259xmin\u0259n {{count}} ay\",\n  },\n\n  xMonths: {\n    one: \"1 ay\",\n    other: \"{{count}} ay\",\n  },\n\n  aboutXYears: {\n    one: \"t\u0259xmin\u0259n 1 il\",\n    other: \"t\u0259xmin\u0259n {{count}} il\",\n  },\n\n  xYears: {\n    one: \"1 il\",\n    other: \"{{count}} il\",\n  },\n\n  overXYears: {\n    one: \"1 ild\u0259n \u00E7ox\",\n    other: \"{{count}} ild\u0259n \u00E7ox\",\n  },\n\n  almostXYears: {\n    one: \"dem\u0259k olar ki 1 il\",\n    other: \"dem\u0259k olar ki {{count}} il\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" sonra\";\n    } else {\n      return result + \" \u0259vv\u0259l\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y 'il'\",\n  long: \"do MMMM y 'il'\",\n  medium: \"d MMM y 'il'\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}} - 'd\u0259'\",\n  long: \"{{date}} {{time}} - 'd\u0259'\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'sonuncu' eeee p -'d\u0259'\",\n  yesterday: \"'d\u00FCn\u0259n' p -'d\u0259'\",\n  today: \"'bug\u00FCn' p -'d\u0259'\",\n  tomorrow: \"'sabah' p -'d\u0259'\",\n  nextWeek: \"eeee p -'d\u0259'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"e.\u0259\", \"b.e\"],\n  abbreviated: [\"e.\u0259\", \"b.e\"],\n  wide: [\"eram\u0131zdan \u0259vv\u0259l\", \"bizim era\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1ci kvartal\", \"2ci kvartal\", \"3c\u00FC kvartal\", \"4c\u00FC kvartal\"],\n};\nconst monthValues = {\n  narrow: [\"Y\", \"F\", \"M\", \"A\", \"M\", \"\u0130\", \"\u0130\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Yan\",\n    \"Fev\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"\u0130yun\",\n    \"\u0130yul\",\n    \"Avq\",\n    \"Sen\",\n    \"Okt\",\n    \"Noy\",\n    \"Dek\",\n  ],\n\n  wide: [\n    \"Yanvar\",\n    \"Fevral\",\n    \"Mart\",\n    \"Aprel\",\n    \"May\",\n    \"\u0130yun\",\n    \"\u0130yul\",\n    \"Avqust\",\n    \"Sentyabr\",\n    \"Oktyabr\",\n    \"Noyabr\",\n    \"Dekabr\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"B.\", \"B.e\", \"\u00C7.a\", \"\u00C7.\", \"C.a\", \"C.\", \"\u015E.\"],\n  short: [\"B.\", \"B.e\", \"\u00C7.a\", \"\u00C7.\", \"C.a\", \"C.\", \"\u015E.\"],\n  abbreviated: [\"Baz\", \"Baz.e\", \"\u00C7\u0259r.a\", \"\u00C7\u0259r\", \"C\u00FCm.a\", \"C\u00FCm\", \"\u015E\u0259\"],\n  wide: [\n    \"Bazar\",\n    \"Bazar ert\u0259si\",\n    \"\u00C7\u0259r\u015F\u0259nb\u0259 ax\u015Fam\u0131\",\n    \"\u00C7\u0259r\u015F\u0259nb\u0259\",\n    \"C\u00FCm\u0259 ax\u015Fam\u0131\",\n    \"C\u00FCm\u0259\",\n    \"\u015E\u0259nb\u0259\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gec\u0259yar\u0131\",\n    noon: \"g\u00FCn\",\n    morning: \"s\u0259h\u0259r\",\n    afternoon: \"g\u00FCnd\u00FCz\",\n    evening: \"ax\u015Fam\",\n    night: \"gec\u0259\",\n  },\n};\n\nconst suffixes = {\n  1: \"-inci\",\n  5: \"-inci\",\n  8: \"-inci\",\n  70: \"-inci\",\n  80: \"-inci\",\n  2: \"-nci\",\n  7: \"-nci\",\n  20: \"-nci\",\n  50: \"-nci\",\n  3: \"-\u00FCnc\u00FC\",\n  4: \"-\u00FCnc\u00FC\",\n  100: \"-\u00FCnc\u00FC\",\n  6: \"-nc\u0131\",\n  9: \"-uncu\",\n  10: \"-uncu\",\n  30: \"-uncu\",\n  60: \"-\u0131nc\u0131\",\n  90: \"-\u0131nc\u0131\",\n};\n\nconst getSuffix = (number) => {\n  if (number === 0) {\n    // special case for zero\n    return number + \"-\u0131nc\u0131\";\n  }\n\n  const a = number % 10;\n  const b = (number % 100) - a;\n  const c = number >= 100 ? 100 : null;\n\n  if (suffixes[a]) {\n    return suffixes[a];\n  } else if (suffixes[b]) {\n    return suffixes[b];\n  } else if (c !== null) {\n    return suffixes[c];\n  }\n  return \"\";\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  const suffix = getSuffix(number);\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(ci|inci|nci|uncu|\u00FCnc\u00FC|nc\u0131))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)$/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)$/i,\n  wide: /^(bizim eradan \u0259vv\u0259l|bizim era)$/i,\n};\nconst parseEraPatterns = {\n  any: [/^b$/i, /^(a|c)$/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]$/i,\n  abbreviated: /^K[1234]$/i,\n  wide: /^[1234](ci)? kvartal$/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[(?-i)yfmaisond]$/i,\n  abbreviated: /^(Yan|Fev|Mar|Apr|May|\u0130yun|\u0130yul|Avq|Sen|Okt|Noy|Dek)$/i,\n  wide: /^(Yanvar|Fevral|Mart|Aprel|May|\u0130yun|\u0130yul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^[(?-i)y]$/i,\n    /^[(?-i)f]$/i,\n    /^[(?-i)m]$/i,\n    /^[(?-i)a]$/i,\n    /^[(?-i)m]$/i,\n    /^[(?-i)i]$/i,\n    /^[(?-i)i]$/i,\n    /^[(?-i)a]$/i,\n    /^[(?-i)s]$/i,\n    /^[(?-i)o]$/i,\n    /^[(?-i)n]$/i,\n    /^[(?-i)d]$/i,\n  ],\n\n  abbreviated: [\n    /^Yan$/i,\n    /^Fev$/i,\n    /^Mar$/i,\n    /^Apr$/i,\n    /^May$/i,\n    /^\u0130yun$/i,\n    /^\u0130yul$/i,\n    /^Avg$/i,\n    /^Sen$/i,\n    /^Okt$/i,\n    /^Noy$/i,\n    /^Dek$/i,\n  ],\n\n  wide: [\n    /^Yanvar$/i,\n    /^Fevral$/i,\n    /^Mart$/i,\n    /^Aprel$/i,\n    /^May$/i,\n    /^\u0130yun$/i,\n    /^\u0130yul$/i,\n    /^Avgust$/i,\n    /^Sentyabr$/i,\n    /^Oktyabr$/i,\n    /^Noyabr$/i,\n    /^Dekabr$/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(B\\.|B\\.e|\u00C7\\.a|\u00C7\\.|C\\.a|C\\.|\u015E\\.)$/i,\n  short: /^(B\\.|B\\.e|\u00C7\\.a|\u00C7\\.|C\\.a|C\\.|\u015E\\.)$/i,\n  abbreviated: /^(Baz\\.e|\u00C7\u0259r|\u00C7\u0259r\\.a|C\u00FCm|C\u00FCm\\.a|\u015E\u0259)$/i,\n  wide: /^(Bazar|Bazar ert\u0259si|\u00C7\u0259r\u015F\u0259nb\u0259 ax\u015Fam\u0131|\u00C7\u0259r\u015F\u0259nb\u0259|C\u00FCm\u0259 ax\u015Fam\u0131|C\u00FCm\u0259|\u015E\u0259nb\u0259)$/i,\n};\nconst parseDayPatterns = {\n  narrow: [\n    /^B\\.$/i,\n    /^B\\.e$/i,\n    /^\u00C7\\.a$/i,\n    /^\u00C7\\.$/i,\n    /^C\\.a$/i,\n    /^C\\.$/i,\n    /^\u015E\\.$/i,\n  ],\n\n  abbreviated: [\n    /^Baz$/i,\n    /^Baz\\.e$/i,\n    /^\u00C7\u0259r\\.a$/i,\n    /^\u00C7\u0259r$/i,\n    /^C\u00FCm\\.a$/i,\n    /^C\u00FCm$/i,\n    /^\u015E\u0259$/i,\n  ],\n\n  wide: [\n    /^Bazar$/i,\n    /^Bazar ert\u0259si$/i,\n    /^\u00C7\u0259r\u015F\u0259nb\u0259 ax\u015Fam\u0131$/i,\n    /^\u00C7\u0259r\u015F\u0259nb\u0259$/i,\n    /^C\u00FCm\u0259 ax\u015Fam\u0131$/i,\n    /^C\u00FCm\u0259$/i,\n    /^\u015E\u0259nb\u0259$/i,\n  ],\n\n  any: [\n    /^B\\.$/i,\n    /^B\\.e$/i,\n    /^\u00C7\\.a$/i,\n    /^\u00C7\\.$/i,\n    /^C\\.a$/i,\n    /^C\\.$/i,\n    /^\u015E\\.$/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|gec\u0259yar\u0131|g\u00FCn|s\u0259h\u0259r|g\u00FCnd\u00FCz|ax\u015Fam|gec\u0259)$/i,\n  any: /^(am|pm|a\\.m\\.|p\\.m\\.|AM|PM|gec\u0259yar\u0131|g\u00FCn|s\u0259h\u0259r|g\u00FCnd\u00FCz|ax\u015Fam|gec\u0259)$/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a$/i,\n    pm: /^p$/i,\n    midnight: /^gec\u0259yar\u0131$/i,\n    noon: /^g\u00FCn$/i,\n    morning: /s\u0259h\u0259r$/i,\n    afternoon: /g\u00FCnd\u00FCz$/i,\n    evening: /ax\u015Fam$/i,\n    night: /gec\u0259$/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"narrow\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./az/_lib/formatDistance.js\";\nimport { formatLong } from \"./az/_lib/formatLong.js\";\nimport { formatRelative } from \"./az/_lib/formatRelative.js\";\nimport { localize } from \"./az/_lib/localize.js\";\nimport { match } from \"./az/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Azerbaijani locale.\n * @language Azerbaijani\n * @iso-639-2 aze\n */\n\nexport const az = {\n  code: \"az\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default az;\n", "function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"\u043F\u0440\u0430\u0437 \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" \u0442\u0430\u043C\u0443\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst halfAMinute = (_, options) => {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u043F\u0440\u0430\u0437 \u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B\";\n    } else {\n      return \"\u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B \u0442\u0430\u043C\u0443\";\n    }\n  }\n\n  return \"\u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B\";\n};\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448 \u0437\u0430 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  halfAMinute: halfAMinute,\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448 \u0437\u0430 \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0430\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0430\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0434\u043D\u0456\",\n      pluralGenitive: \"{{count}} \u0434\u0437\u0451\u043D\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u0456\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u043D\u0456\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0442\u044B\u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0442\u044B\u0434\u043D\u0456\",\n      pluralGenitive: \"{{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u044B\",\n      pluralGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u043E\u0434\u0430\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u043E\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y '\u0433.'\",\n  long: \"d MMMM y '\u0433.'\",\n  medium: \"d MMM y '\u0433.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\nimport { toDate } from \"../../../toDate.js\";\n\nconst accusativeWeekdays = [\n  \"\u043D\u044F\u0434\u0437\u0435\u043B\u044E\",\n  \"\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B\u0430\u043A\",\n  \"\u0430\u045E\u0442\u043E\u0440\u0430\u043A\",\n  \"\u0441\u0435\u0440\u0430\u0434\u0443\",\n  \"\u0447\u0430\u0446\u0432\u0435\u0440\",\n  \"\u043F\u044F\u0442\u043D\u0456\u0446\u0443\",\n  \"\u0441\u0443\u0431\u043E\u0442\u0443\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043C\u0456\u043D\u0443\u043B\u0443\u044E \" + weekday + \" \u0430' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043C\u0456\u043D\u0443\u043B\u044B \" + weekday + \" \u0430' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\u0443 \" + weekday + \" \u0430' p\";\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0443\u044E \" + weekday + \" \u0430' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u044B \" + weekday + \" \u0430' p\";\n  }\n}\n\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nconst formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'\u0443\u0447\u043E\u0440\u0430 \u0430' p\",\n  today: \"'\u0441\u0451\u043D\u043D\u044F \u0430' p\",\n  tomorrow: \"'\u0437\u0430\u045E\u0442\u0440\u0430 \u0430' p\",\n  nextWeek: nextWeekFormat,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0434\u0430 \u043D.\u044D.\", \"\u043D.\u044D.\"],\n  abbreviated: [\"\u0434\u0430 \u043D. \u044D.\", \"\u043D. \u044D.\"],\n  wide: [\"\u0434\u0430 \u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B\", \"\u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u044B \u043A\u0432.\", \"2-\u0456 \u043A\u0432.\", \"3-\u0456 \u043A\u0432.\", \"4-\u044B \u043A\u0432.\"],\n  wide: [\"1-\u044B \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2-\u0456 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3-\u0456 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4-\u044B \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u0421\", \"\u041B\", \"\u0421\", \"\u041A\", \"\u041C\", \"\u0427\", \"\u041B\", \"\u0416\", \"\u0412\", \"\u041A\", \"\u041B\", \"\u0421\"],\n  abbreviated: [\n    \"\u0441\u0442\u0443\u0434\u0437.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0441\u0430\u043A.\",\n    \"\u043A\u0440\u0430\u0441.\",\n    \"\u043C\u0430\u0439\",\n    \"\u0447\u044D\u0440\u0432.\",\n    \"\u043B\u0456\u043F.\",\n    \"\u0436\u043D.\",\n    \"\u0432\u0435\u0440.\",\n    \"\u043A\u0430\u0441\u0442\u0440.\",\n    \"\u043B\u0456\u0441\u0442.\",\n    \"\u0441\u043D\u0435\u0436.\",\n  ],\n\n  wide: [\n    \"\u0441\u0442\u0443\u0434\u0437\u0435\u043D\u044C\",\n    \"\u043B\u044E\u0442\u044B\",\n    \"\u0441\u0430\u043A\u0430\u0432\u0456\u043A\",\n    \"\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\",\n    \"\u043C\u0430\u0439\",\n    \"\u0447\u044D\u0440\u0432\u0435\u043D\u044C\",\n    \"\u043B\u0456\u043F\u0435\u043D\u044C\",\n    \"\u0436\u043D\u0456\u0432\u0435\u043D\u044C\",\n    \"\u0432\u0435\u0440\u0430\u0441\u0435\u043D\u044C\",\n    \"\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\",\n    \"\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\",\n    \"\u0441\u043D\u0435\u0436\u0430\u043D\u044C\",\n  ],\n};\nconst formattingMonthValues = {\n  narrow: [\"\u0421\", \"\u041B\", \"\u0421\", \"\u041A\", \"\u041C\", \"\u0427\", \"\u041B\", \"\u0416\", \"\u0412\", \"\u041A\", \"\u041B\", \"\u0421\"],\n  abbreviated: [\n    \"\u0441\u0442\u0443\u0434\u0437.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0441\u0430\u043A.\",\n    \"\u043A\u0440\u0430\u0441.\",\n    \"\u043C\u0430\u044F\",\n    \"\u0447\u044D\u0440\u0432.\",\n    \"\u043B\u0456\u043F.\",\n    \"\u0436\u043D.\",\n    \"\u0432\u0435\u0440.\",\n    \"\u043A\u0430\u0441\u0442\u0440.\",\n    \"\u043B\u0456\u0441\u0442.\",\n    \"\u0441\u043D\u0435\u0436.\",\n  ],\n\n  wide: [\n    \"\u0441\u0442\u0443\u0434\u0437\u0435\u043D\u044F\",\n    \"\u043B\u044E\u0442\u0430\u0433\u0430\",\n    \"\u0441\u0430\u043A\u0430\u0432\u0456\u043A\u0430\",\n    \"\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\u0430\",\n    \"\u043C\u0430\u044F\",\n    \"\u0447\u044D\u0440\u0432\u0435\u043D\u044F\",\n    \"\u043B\u0456\u043F\u0435\u043D\u044F\",\n    \"\u0436\u043D\u0456\u045E\u043D\u044F\",\n    \"\u0432\u0435\u0440\u0430\u0441\u043D\u044F\",\n    \"\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\u0430\",\n    \"\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\u0430\",\n    \"\u0441\u043D\u0435\u0436\u043D\u044F\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0410\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0434\", \"\u043F\u043D\", \"\u0430\u045E\", \"\u0441\u0440\", \"\u0447\u0446\", \"\u043F\u0442\", \"\u0441\u0431\"],\n  abbreviated: [\"\u043D\u044F\u0434\u0437\", \"\u043F\u0430\u043D\", \"\u0430\u045E\u0442\", \"\u0441\u0435\u0440\", \"\u0447\u0430\u0446\", \"\u043F\u044F\u0442\", \"\u0441\u0443\u0431\"],\n  wide: [\n    \"\u043D\u044F\u0434\u0437\u0435\u043B\u044F\",\n    \"\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B\u0430\u043A\",\n    \"\u0430\u045E\u0442\u043E\u0440\u0430\u043A\",\n    \"\u0441\u0435\u0440\u0430\u0434\u0430\",\n    \"\u0447\u0430\u0446\u0432\u0435\u0440\",\n    \"\u043F\u044F\u0442\u043D\u0456\u0446\u0430\",\n    \"\u0441\u0443\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D\u0430\u0447\",\n    noon: \"\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u0456\u0446\u0430\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447\u0430\u0440\",\n    night: \"\u043D\u043E\u0447\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D\u0430\u0447\",\n    noon: \"\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u0456\u0446\u044B\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447\u0430\u0440\u0430\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const unit = String(options?.unit);\n  const number = Number(dirtyNumber);\n  let suffix;\n\n  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)\n   *  For date-month combinations should be used `d` formatter.\n   *  Correct:   `d MMMM` (4 \u0432\u0435\u0440\u0430\u0441\u043D\u044F)\n   *  Incorrect: `do MMMM` (4-\u0433\u0430 \u0432\u0435\u0440\u0430\u0441\u043D\u044F)\n   *\n   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).\n   *  So for phrase \"5th day of month\" (`do \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`)\n   *  library will produce:            `5-\u0433\u0430 \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`\n   *  but correct spelling should be:  `5-\u044B \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`\n   *\n   *  So I guess there should be a stand-alone and a formatting version of \"day of month\" formatters\n   */\n  if (unit === \"date\") {\n    suffix = \"-\u0433\u0430\";\n  } else if (unit === \"hour\" || unit === \"minute\" || unit === \"second\") {\n    suffix = \"-\u044F\";\n  } else {\n    suffix =\n      (number % 10 === 2 || number % 10 === 3) &&\n      number % 100 !== 12 &&\n      number % 100 !== 13\n        ? \"-\u0456\"\n        : \"-\u044B\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern =\n  /^(\\d+)(-?(\u0435|\u044F|\u0433\u0430|\u0456|\u044B|\u0430\u0435|\u0430\u044F|\u044F\u044F|\u0448\u044B|\u0433\u0456|\u0446\u0456|\u0442\u044B|\u043C\u044B))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u0434\u0430 )?\u043D\\.?\\s?\u044D\\.?)/i,\n  abbreviated: /^((\u0434\u0430 )?\u043D\\.?\\s?\u044D\\.?)/i,\n  wide: /^(\u0434\u0430 \u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0430 \u044D\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0434/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u044B\u0456]?)? \u043A\u0432.?/i,\n  wide: /^[1234](-?[\u044B\u0456]?)? \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u0441\u043B\u043A\u043C\u0447\u0436\u0432]/i,\n  abbreviated:\n    /^(\u0441\u0442\u0443\u0434\u0437|\u043B\u044E\u0442|\u0441\u0430\u043A|\u043A\u0440\u0430\u0441|\u043C\u0430[\u0439\u044F]|\u0447\u044D\u0440\u0432|\u043B\u0456\u043F|\u0436\u043D|\u0432\u0435\u0440|\u043A\u0430\u0441\u0442\u0440|\u043B\u0456\u0441\u0442|\u0441\u043D\u0435\u0436)\\.?/i,\n  wide: /^(\u0441\u0442\u0443\u0434\u0437\u0435\u043D[\u044C\u044F]|\u043B\u044E\u0442(\u044B|\u0430\u0433\u0430)|\u0441\u0430\u043A\u0430\u0432\u0456\u043A\u0430?|\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\u0430?|\u043C\u0430[\u0439\u044F]|\u0447\u044D\u0440\u0432\u0435\u043D[\u044C\u044F]|\u043B\u0456\u043F\u0435\u043D[\u044C\u044F]|\u0436\u043D\u0456(\u0432\u0435\u043D\u044C|\u045E\u043D\u044F)|\u0432\u0435\u0440\u0430\u0441(\u0435\u043D\u044C|\u043D\u044F)|\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\u0430?|\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\u0430?|\u0441\u043D\u0435\u0436(\u0430\u043D\u044C|\u043D\u044F))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0441/i,\n    /^\u043B/i,\n    /^\u0441/i,\n    /^\u043A/i,\n    /^\u043C/i,\n    /^\u0447/i,\n    /^\u043B/i,\n    /^\u0436/i,\n    /^\u0432/i,\n    /^\u043A/i,\n    /^\u043B/i,\n    /^\u0441/i,\n  ],\n\n  any: [\n    /^\u0441\u0442/i,\n    /^\u043B\u044E/i,\n    /^\u0441\u0430/i,\n    /^\u043A\u0440/i,\n    /^\u043C\u0430/i,\n    /^\u0447/i,\n    /^\u043B\u0456\u043F/i,\n    /^\u0436/i,\n    /^\u0432/i,\n    /^\u043A\u0430/i,\n    /^\u043B\u0456\u0441/i,\n    /^\u0441\u043D/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u043F\u0430\u0441\u0447]/i,\n  short: /^(\u043D\u0434|\u043D\u044F|\u043F\u043D|\u043F\u0430|\u0430\u045E|\u0430\u0442|\u0441\u0440|\u0441\u0435|\u0447\u0446|\u0447\u0430|\u043F\u0442|\u043F\u044F|\u0441\u0431|\u0441\u0443)\\.?/i,\n  abbreviated: /^(\u043D\u044F\u0434\u0437?|\u043D\u0434\u0437|\u043F\u043D\u0434|\u043F\u0430\u043D|\u0430\u045E\u0442|\u0441\u0440\u0434|\u0441\u0435\u0440|\u0447\u0446\u0432|\u0447\u0430\u0446|\u043F\u0442\u043D|\u043F\u044F\u0442|\u0441\u0443\u0431).?/i,\n  wide: /^(\u043D\u044F\u0434\u0437\u0435\u043B[\u044F\u0456]|\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B(\u0430\u043A|\u043A\u0430)|\u0430\u045E\u0442\u043E\u0440(\u0430\u043A|\u043A\u0430)|\u0441\u0435\u0440\u0430\u0434[\u0430\u044B]|\u0447\u0430\u0446\u0432(\u0435\u0440|\u044F\u0440\u0433\u0430)|\u043F\u044F\u0442\u043D\u0456\u0446[\u0430\u044B]|\u0441\u0443\u0431\u043E\u0442[\u0430\u044B])/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u043F/i, /^\u0430/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u043D/i, /^\u043F[\u0430\u043D]/i, /^\u0430/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043F[\u044F\u0442]/i, /^\u0441[\u0443\u0431]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\\.?|\u043F\u043E\u045E\u0434\\.?|\u0440\u0430\u043D\\.?|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447\u044B?)/i,\n  abbreviated: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\\.?|\u043F\u043E\u045E\u0434\\.?|\u0440\u0430\u043D\\.?|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447\u044B?)/i,\n  wide: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\u0430\u0447|\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C|\u0440\u0430\u043D\u0456\u0446[\u0430\u044B]|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\u0430\u0440\u0430?|\u043D\u043E\u0447\u044B?)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0434\u043F/i,\n    pm: /^\u043F\u043F/i,\n    midnight: /^\u043F\u043E\u045E\u043D/i,\n    noon: /^\u043F\u043E\u045E\u0434/i,\n    morning: /^\u0440/i,\n    afternoon: /^\u0434[\u0437\u043D]/i,\n    evening: /^\u0432/i,\n    night: /^\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./be/_lib/formatDistance.js\";\nimport { formatLong } from \"./be/_lib/formatLong.js\";\nimport { formatRelative } from \"./be/_lib/formatRelative.js\";\nimport { localize } from \"./be/_lib/localize.js\";\nimport { match } from \"./be/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Belarusian locale.\n * @language Belarusian\n * @iso-639-2 bel\n * @author Kiryl Anokhin [@alyrik](https://github.com/alyrik)\n * @author Martin Wind [@arvigeus](https://github.com/mawi12345)\n */\nexport const be = {\n  code: \"be\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default be;\n", "function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"\u043F\u0440\u0430\u0437 \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" \u0442\u0430\u043C\u0443\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst halfAMinute = (_, options) => {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u043F\u0440\u0430\u0437 \u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B\";\n    } else {\n      return \"\u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B \u0442\u0430\u043C\u0443\";\n    }\n  }\n\n  return \"\u043F\u0430\u045E\u0445\u0432\u0456\u043B\u0456\u043D\u044B\";\n};\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448 \u0437\u0430 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  halfAMinute: halfAMinute,\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448 \u0437\u0430 \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0430\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0456\u043B\u0456\u043D \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043B\u0456\u043D\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0430\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443 \u0442\u0430\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B \u0442\u0430\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u0437\u0456\u043D \u0442\u0430\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\u044B\",\n      pluralGenitive: \"\u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043D\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0434\u043D\u0456\",\n      pluralGenitive: \"{{count}} \u0434\u0437\u0451\u043D\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u0456\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u043D\u0456\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0442\u044B\u0434\u0437\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0442\u044B\u0434\u043D\u0456\",\n      pluralGenitive: \"{{count}} \u0442\u044B\u0434\u043D\u044F\u045E\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u044B\",\n      pluralGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u0430\u045E\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u043E\u0434\u0430\",\n      singularGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u043E\u045E\",\n      pluralGenitive: \"\u043A\u0430\u043B\u044F {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u043F\u0440\u044B\u0431\u043B\u0456\u0437\u043D\u0430 \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"{{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"{{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448, \u0447\u044B\u043C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0430\u043C\u0430\u043B\u044C {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n    future: {\n      singularNominative: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044B\",\n      pluralGenitive: \"\u0430\u043C\u0430\u043B\u044C \u043F\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043E\u045E\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y '\u0433.'\",\n  long: \"d MMMM y '\u0433.'\",\n  medium: \"d MMM y '\u0433.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\nimport { toDate } from \"../../../toDate.js\";\n\nconst accusativeWeekdays = [\n  \"\u043D\u044F\u0434\u0437\u0435\u043B\u044E\",\n  \"\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B\u0430\u043A\",\n  \"\u0430\u045E\u0442\u043E\u0440\u0430\u043A\",\n  \"\u0441\u0435\u0440\u0430\u0434\u0443\",\n  \"\u0447\u0430\u0446\u044C\u0432\u0435\u0440\",\n  \"\u043F\u044F\u0442\u043D\u0456\u0446\u0443\",\n  \"\u0441\u0443\u0431\u043E\u0442\u0443\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043C\u0456\u043D\u0443\u043B\u0443\u044E \" + weekday + \" \u0430' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043C\u0456\u043D\u0443\u043B\u044B \" + weekday + \" \u0430' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\u0443 \" + weekday + \" \u0430' p\";\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0443\u044E \" + weekday + \" \u0430' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u044B \" + weekday + \" \u0430' p\";\n  }\n}\n\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nconst formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'\u0443\u0447\u043E\u0440\u0430 \u0430' p\",\n  today: \"'\u0441\u0451\u043D\u044C\u043D\u044F \u0430' p\",\n  tomorrow: \"'\u0437\u0430\u045E\u0442\u0440\u0430 \u0430' p\",\n  nextWeek: nextWeekFormat,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0434\u0430 \u043D.\u044D.\", \"\u043D.\u044D.\"],\n  abbreviated: [\"\u0434\u0430 \u043D. \u044D.\", \"\u043D. \u044D.\"],\n  wide: [\"\u0434\u0430 \u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B\", \"\u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u044B \u043A\u0432.\", \"2-\u0456 \u043A\u0432.\", \"3-\u0456 \u043A\u0432.\", \"4-\u044B \u043A\u0432.\"],\n  wide: [\"1-\u044B \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2-\u0456 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3-\u0456 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4-\u044B \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u0421\", \"\u041B\", \"\u0421\", \"\u041A\", \"\u0422\", \"\u0427\", \"\u041B\", \"\u0416\", \"\u0412\", \"\u041A\", \"\u041B\", \"\u0421\"],\n  abbreviated: [\n    \"\u0441\u0442\u0443\u0434\u0437.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0441\u0430\u043A.\",\n    \"\u043A\u0440\u0430\u0441.\",\n    \"\u0442\u0440\u0430\u0432.\",\n    \"\u0447\u044D\u0440\u0432.\",\n    \"\u043B\u0456\u043F.\",\n    \"\u0436\u043D.\",\n    \"\u0432\u0435\u0440.\",\n    \"\u043A\u0430\u0441\u0442\u0440.\",\n    \"\u043B\u0456\u0441\u0442.\",\n    \"\u0441\u044C\u043D\u0435\u0436.\",\n  ],\n\n  wide: [\n    \"\u0441\u0442\u0443\u0434\u0437\u0435\u043D\u044C\",\n    \"\u043B\u044E\u0442\u044B\",\n    \"\u0441\u0430\u043A\u0430\u0432\u0456\u043A\",\n    \"\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\",\n    \"\u0442\u0440\u0430\u0432\u0435\u043D\u044C\",\n    \"\u0447\u044D\u0440\u0432\u0435\u043D\u044C\",\n    \"\u043B\u0456\u043F\u0435\u043D\u044C\",\n    \"\u0436\u043D\u0456\u0432\u0435\u043D\u044C\",\n    \"\u0432\u0435\u0440\u0430\u0441\u0435\u043D\u044C\",\n    \"\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\",\n    \"\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\",\n    \"\u0441\u044C\u043D\u0435\u0436\u0430\u043D\u044C\",\n  ],\n};\nconst formattingMonthValues = {\n  narrow: [\"\u0421\", \"\u041B\", \"\u0421\", \"\u041A\", \"\u0422\", \"\u0427\", \"\u041B\", \"\u0416\", \"\u0412\", \"\u041A\", \"\u041B\", \"\u0421\"],\n  abbreviated: [\n    \"\u0441\u0442\u0443\u0434\u0437.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0441\u0430\u043A.\",\n    \"\u043A\u0440\u0430\u0441.\",\n    \"\u0442\u0440\u0430\u0432.\",\n    \"\u0447\u044D\u0440\u0432.\",\n    \"\u043B\u0456\u043F.\",\n    \"\u0436\u043D.\",\n    \"\u0432\u0435\u0440.\",\n    \"\u043A\u0430\u0441\u0442\u0440.\",\n    \"\u043B\u0456\u0441\u0442.\",\n    \"\u0441\u044C\u043D\u0435\u0436.\",\n  ],\n\n  wide: [\n    \"\u0441\u0442\u0443\u0434\u0437\u0435\u043D\u044F\",\n    \"\u043B\u044E\u0442\u0430\u0433\u0430\",\n    \"\u0441\u0430\u043A\u0430\u0432\u0456\u043A\u0430\",\n    \"\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\u0430\",\n    \"\u0442\u0440\u0430\u045E\u043D\u044F\",\n    \"\u0447\u044D\u0440\u0432\u0435\u043D\u044F\",\n    \"\u043B\u0456\u043F\u0435\u043D\u044F\",\n    \"\u0436\u043D\u0456\u045E\u043D\u044F\",\n    \"\u0432\u0435\u0440\u0430\u0441\u043D\u044F\",\n    \"\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\u0430\",\n    \"\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\u0430\",\n    \"\u0441\u044C\u043D\u0435\u0436\u043D\u044F\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0410\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0434\", \"\u043F\u043D\", \"\u0430\u045E\", \"\u0441\u0440\", \"\u0447\u0446\", \"\u043F\u0442\", \"\u0441\u0431\"],\n  abbreviated: [\"\u043D\u044F\u0434\u0437\", \"\u043F\u0430\u043D\", \"\u0430\u045E\u0442\", \"\u0441\u0435\u0440\", \"\u0447\u0430\u0446\u044C\", \"\u043F\u044F\u0442\", \"\u0441\u0443\u0431\"],\n  wide: [\n    \"\u043D\u044F\u0434\u0437\u0435\u043B\u044F\",\n    \"\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B\u0430\u043A\",\n    \"\u0430\u045E\u0442\u043E\u0440\u0430\u043A\",\n    \"\u0441\u0435\u0440\u0430\u0434\u0430\",\n    \"\u0447\u0430\u0446\u044C\u0432\u0435\u0440\",\n    \"\u043F\u044F\u0442\u043D\u0456\u0446\u0430\",\n    \"\u0441\u0443\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D\u0430\u0447\",\n    noon: \"\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u0456\u0446\u0430\",\n    afternoon: \"\u0434\u0437\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447\u0430\u0440\",\n    night: \"\u043D\u043E\u0447\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D.\",\n    noon: \"\u043F\u043E\u045E\u0434.\",\n    morning: \"\u0440\u0430\u043D.\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u045E\u043D\u0430\u0447\",\n    noon: \"\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u0456\u0446\u044B\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447\u0430\u0440\u0430\",\n    night: \"\u043D\u043E\u0447\u044B\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const unit = String(options?.unit);\n  const number = Number(dirtyNumber);\n  let suffix;\n\n  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)\n   *  For date-month combinations should be used `d` formatter.\n   *  Correct:   `d MMMM` (4 \u0432\u0435\u0440\u0430\u0441\u043D\u044F)\n   *  Incorrect: `do MMMM` (4-\u0433\u0430 \u0432\u0435\u0440\u0430\u0441\u043D\u044F)\n   *\n   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).\n   *  So for phrase \"5th day of month\" (`do \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`)\n   *  library will produce:            `5-\u0433\u0430 \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`\n   *  but correct spelling should be:  `5-\u044B \u0434\u0437\u0435\u043D\u044C \u043C\u0435\u0441\u044F\u0446\u0430`\n   *\n   *  So I guess there should be a stand-alone and a formatting version of \"day of month\" formatters\n   */\n  if (unit === \"date\") {\n    suffix = \"-\u0433\u0430\";\n  } else if (unit === \"hour\" || unit === \"minute\" || unit === \"second\") {\n    suffix = \"-\u044F\";\n  } else {\n    suffix =\n      (number % 10 === 2 || number % 10 === 3) &&\n      number % 100 !== 12 &&\n      number % 100 !== 13\n        ? \"-\u0456\"\n        : \"-\u044B\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern =\n  /^(\\d+)(-?(\u0435|\u044F|\u0433\u0430|\u0456|\u044B|\u0430\u0435|\u0430\u044F|\u044F\u044F|\u0448\u044B|\u0433\u0456|\u0446\u0456|\u0442\u044B|\u043C\u044B))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u0434\u0430 )?\u043D\\.?\\s?\u044D\\.?)/i,\n  abbreviated: /^((\u0434\u0430 )?\u043D\\.?\\s?\u044D\\.?)/i,\n  wide: /^(\u0434\u0430 \u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0430\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0430 \u044D\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0434/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u044B\u0456]?)? \u043A\u0432.?/i,\n  wide: /^[1234](-?[\u044B\u0456]?)? \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u0441\u043B\u043A\u043C\u0447\u0436\u0432]/i,\n  abbreviated:\n    /^(\u0441\u0442\u0443\u0434\u0437|\u043B\u044E\u0442|\u0441\u0430\u043A|\u043A\u0440\u0430\u0441|\u0442\u0440(\u0430\u0432)?|\u0447\u044D\u0440\u0432|\u043B\u0456\u043F|\u0436\u043D|\u0432\u0435\u0440|\u043A\u0430\u0441\u0442\u0440|\u043B\u0456\u0441\u0442|\u0441\u044C\u043D\u0435\u0436)\\.?/i,\n  wide: /^(\u0441\u0442\u0443\u0434\u0437\u0435\u043D[\u044C\u044F]|\u043B\u044E\u0442(\u044B|\u0430\u0433\u0430)|\u0441\u0430\u043A\u0430\u0432\u0456\u043A\u0430?|\u043A\u0440\u0430\u0441\u0430\u0432\u0456\u043A\u0430?|\u0442\u0440\u0430(\u0432\u0435\u043D\u044C|\u045E\u043D\u044F)|\u0447\u044D\u0440\u0432\u0435\u043D[\u044C\u044F]|\u043B\u0456\u043F\u0435\u043D[\u044C\u044F]|\u0436\u043D\u0456(\u0432\u0435\u043D\u044C|\u045E\u043D\u044F)|\u0432\u0435\u0440\u0430\u0441(\u0435\u043D\u044C|\u043D\u044F)|\u043A\u0430\u0441\u0442\u0440\u044B\u0447\u043D\u0456\u043A\u0430?|\u043B\u0456\u0441\u0442\u0430\u043F\u0430\u0434\u0430?|\u0441\u044C\u043D\u0435\u0436(\u0430\u043D\u044C|\u043D\u044F))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0441/i,\n    /^\u043B/i,\n    /^\u0441/i,\n    /^\u043A/i,\n    /^\u0442/i,\n    /^\u0447/i,\n    /^\u043B/i,\n    /^\u0436/i,\n    /^\u0432/i,\n    /^\u043A/i,\n    /^\u043B/i,\n    /^\u0441/i,\n  ],\n\n  any: [\n    /^\u0441\u0442/i,\n    /^\u043B\u044E/i,\n    /^\u0441\u0430/i,\n    /^\u043A\u0440/i,\n    /^\u0442\u0440/i,\n    /^\u0447/i,\n    /^\u043B\u0456\u043F/i,\n    /^\u0436/i,\n    /^\u0432/i,\n    /^\u043A\u0430/i,\n    /^\u043B\u0456\u0441/i,\n    /^\u0441\u043D/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u043F\u0430\u0441\u0447]/i,\n  short: /^(\u043D\u0434|\u043D\u044F|\u043F\u043D|\u043F\u0430|\u0430\u045E|\u0430\u0442|\u0441\u0440|\u0441\u0435|\u0447\u0446|\u0447\u0430|\u043F\u0442|\u043F\u044F|\u0441\u0431|\u0441\u0443)\\.?/i,\n  abbreviated: /^(\u043D\u044F\u0434\u0437?|\u043D\u0434\u0437|\u043F\u043D\u0434|\u043F\u0430\u043D|\u0430\u045E\u0442|\u0441\u0440\u0434|\u0441\u0435\u0440|\u0447\u0446\u044C\u0432|\u0447\u0430\u0446\u044C|\u043F\u0442\u043D|\u043F\u044F\u0442|\u0441\u0443\u0431).?/i,\n  wide: /^(\u043D\u044F\u0434\u0437\u0435\u043B[\u044F\u0456]|\u043F\u0430\u043D\u044F\u0434\u0437\u0435\u043B(\u0430\u043A|\u043A\u0430)|\u0430\u045E\u0442\u043E\u0440(\u0430\u043A|\u043A\u0430)|\u0441\u0435\u0440\u0430\u0434[\u0430\u044B]|\u0447\u0430\u0446\u044C\u0432(\u0435\u0440|\u044F\u0440\u0433\u0430)|\u043F\u044F\u0442\u043D\u0456\u0446[\u0430\u044B]|\u0441\u0443\u0431\u043E\u0442[\u0430\u044B])/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u043F/i, /^\u0430/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u043D/i, /^\u043F[\u0430\u043D]/i, /^\u0430/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043F[\u044F\u0442]/i, /^\u0441[\u0443\u0431]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\\.?|\u043F\u043E\u045E\u0434\\.?|\u0440\u0430\u043D\\.?|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447\u044B?)/i,\n  abbreviated: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\\.?|\u043F\u043E\u045E\u0434\\.?|\u0440\u0430\u043D\\.?|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447\u044B?)/i,\n  wide: /^([\u0434\u043F]\u043F|\u043F\u043E\u045E\u043D\u0430\u0447|\u043F\u043E\u045E\u0434\u0437\u0435\u043D\u044C|\u0440\u0430\u043D\u0456\u0446[\u0430\u044B]|\u0434\u0437\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\u0430\u0440\u0430?|\u043D\u043E\u0447\u044B?)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0434\u043F/i,\n    pm: /^\u043F\u043F/i,\n    midnight: /^\u043F\u043E\u045E\u043D/i,\n    noon: /^\u043F\u043E\u045E\u0434/i,\n    morning: /^\u0440/i,\n    afternoon: /^\u0434[\u0437\u043D]/i,\n    evening: /^\u0432/i,\n    night: /^\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./be-tarask/_lib/formatDistance.js\";\nimport { formatLong } from \"./be-tarask/_lib/formatLong.js\";\nimport { formatRelative } from \"./be-tarask/_lib/formatRelative.js\";\nimport { localize } from \"./be-tarask/_lib/localize.js\";\nimport { match } from \"./be-tarask/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Belarusian Classic locale.\n * @language Belarusian Classic\n * @iso-639-2 bel\n * @author Ryhor Nopears [@nopears](https://github.com/nopears)\n */\nexport const beTarask = {\n  code: \"be-tarask\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default beTarask;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n    other: \"\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n    other: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  halfAMinute: \"\u043F\u043E\u043B\u043E\u0432\u0438\u043D \u043C\u0438\u043D\u0443\u0442\u0430\",\n\n  lessThanXMinutes: {\n    one: \"\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 \u043C\u0438\u043D\u0443\u0442\u0430\",\n    other: \"\u043F\u043E-\u043C\u0430\u043B\u043A\u043E \u043E\u0442 {{count}} \u043C\u0438\u043D\u0443\u0442\u0438\",\n  },\n\n  xMinutes: {\n    one: \"1 \u043C\u0438\u043D\u0443\u0442\u0430\",\n    other: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0438\",\n  },\n\n  aboutXHours: {\n    one: \"\u043E\u043A\u043E\u043B\u043E \u0447\u0430\u0441\",\n    other: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u0430\",\n  },\n\n  xHours: {\n    one: \"1 \u0447\u0430\u0441\",\n    other: \"{{count}} \u0447\u0430\u0441\u0430\",\n  },\n\n  xDays: {\n    one: \"1 \u0434\u0435\u043D\",\n    other: \"{{count}} \u0434\u043D\u0438\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u043E\u043A\u043E\u043B\u043E \u0441\u0435\u0434\u043C\u0438\u0446\u0430\",\n    other: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0441\u0435\u0434\u043C\u0438\u0446\u0438\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0441\u0435\u0434\u043C\u0438\u0446\u0430\",\n    other: \"{{count}} \u0441\u0435\u0434\u043C\u0438\u0446\u0438\",\n  },\n\n  aboutXMonths: {\n    one: \"\u043E\u043A\u043E\u043B\u043E \u043C\u0435\u0441\u0435\u0446\",\n    other: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u0435\u0446\u0430\",\n  },\n\n  xMonths: {\n    one: \"1 \u043C\u0435\u0441\u0435\u0446\",\n    other: \"{{count}} \u043C\u0435\u0441\u0435\u0446\u0430\",\n  },\n\n  aboutXYears: {\n    one: \"\u043E\u043A\u043E\u043B\u043E \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  xYears: {\n    one: \"1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  overXYears: {\n    one: \"\u043D\u0430\u0434 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u043D\u0430\u0434 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  almostXYears: {\n    one: \"\u043F\u043E\u0447\u0442\u0438 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u043F\u043E\u0447\u0442\u0438 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0441\u043B\u0435\u0434 \" + result;\n    } else {\n      return \"\u043F\u0440\u0435\u0434\u0438 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, dd MMMM yyyy\",\n  long: \"dd MMMM yyyy\",\n  medium: \"dd MMM yyyy\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\nimport { toDate } from \"../../../toDate.js\";\n\n// Adapted from the `ru` translation\n\nconst weekdays = [\n  \"\u043D\u0435\u0434\u0435\u043B\u044F\",\n  \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A\",\n  \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n  \"\u0441\u0440\u044F\u0434\u0430\",\n  \"\u0447\u0435\u0442\u0432\u044A\u0440\u0442\u044A\u043A\",\n  \"\u043F\u0435\u0442\u044A\u043A\",\n  \"\u0441\u044A\u0431\u043E\u0442\u0430\",\n];\n\nfunction lastWeek(day) {\n  const weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'\u043C\u0438\u043D\u0430\u043B\u0430\u0442\u0430 \" + weekday + \" \u0432' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'\u043C\u0438\u043D\u0430\u043B\u0438\u044F \" + weekday + \" \u0432' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = weekdays[day];\n\n  if (day === 2 /* Tue */) {\n    return \"'\u0432\u044A\u0432 \" + weekday + \" \u0432' p\";\n  } else {\n    return \"'\u0432 \" + weekday + \" \u0432' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'\u0441\u043B\u0435\u0434\u0432\u0430\u0449\u0430\u0442\u0430 \" + weekday + \" \u0432' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'\u0441\u043B\u0435\u0434\u0432\u0430\u0449\u0438\u044F \" + weekday + \" \u0432' p\";\n  }\n}\n\nconst lastWeekFormatToken = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nconst nextWeekFormatToken = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nconst formatRelativeLocale = {\n  lastWeek: lastWeekFormatToken,\n  yesterday: \"'\u0432\u0447\u0435\u0440\u0430 \u0432' p\",\n  today: \"'\u0434\u043D\u0435\u0441 \u0432' p\",\n  tomorrow: \"'\u0443\u0442\u0440\u0435 \u0432' p\",\n  nextWeek: nextWeekFormatToken,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u043F\u0440.\u043D.\u0435.\", \"\u043D.\u0435.\"],\n  abbreviated: [\"\u043F\u0440\u0435\u0434\u0438 \u043D. \u0435.\", \"\u043D. \u0435.\"],\n  wide: [\"\u043F\u0440\u0435\u0434\u0438 \u043D\u043E\u0432\u0430\u0442\u0430 \u0435\u0440\u0430\", \"\u043D\u043E\u0432\u0430\u0442\u0430 \u0435\u0440\u0430\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0432\u043E \u0442\u0440\u0438\u043C\u0435\u0441.\", \"2-\u0440\u043E \u0442\u0440\u0438\u043C\u0435\u0441.\", \"3-\u0442\u043E \u0442\u0440\u0438\u043C\u0435\u0441.\", \"4-\u0442\u043E \u0442\u0440\u0438\u043C\u0435\u0441.\"],\n\n  wide: [\n    \"1-\u0432\u043E \u0442\u0440\u0438\u043C\u0435\u0441\u0435\u0447\u0438\u0435\",\n    \"2-\u0440\u043E \u0442\u0440\u0438\u043C\u0435\u0441\u0435\u0447\u0438\u0435\",\n    \"3-\u0442\u043E \u0442\u0440\u0438\u043C\u0435\u0441\u0435\u0447\u0438\u0435\",\n    \"4-\u0442\u043E \u0442\u0440\u0438\u043C\u0435\u0441\u0435\u0447\u0438\u0435\",\n  ],\n};\n\nconst monthValues = {\n  abbreviated: [\n    \"\u044F\u043D\u0443\",\n    \"\u0444\u0435\u0432\",\n    \"\u043C\u0430\u0440\",\n    \"\u0430\u043F\u0440\",\n    \"\u043C\u0430\u0439\",\n    \"\u044E\u043D\u0438\",\n    \"\u044E\u043B\u0438\",\n    \"\u0430\u0432\u0433\",\n    \"\u0441\u0435\u043F\",\n    \"\u043E\u043A\u0442\",\n    \"\u043D\u043E\u0435\",\n    \"\u0434\u0435\u043A\",\n  ],\n\n  wide: [\n    \"\u044F\u043D\u0443\u0430\u0440\u0438\",\n    \"\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0438\u043B\",\n    \"\u043C\u0430\u0439\",\n    \"\u044E\u043D\u0438\",\n    \"\u044E\u043B\u0438\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438\",\n    \"\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438\",\n    \"\u043D\u043E\u0435\u043C\u0432\u0440\u0438\",\n    \"\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0412\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0434\", \"\u043F\u043D\", \"\u0432\u0442\", \"\u0441\u0440\", \"\u0447\u0442\", \"\u043F\u0442\", \"\u0441\u0431\"],\n  abbreviated: [\"\u043D\u0435\u0434\", \"\u043F\u043E\u043D\", \"\u0432\u0442\u043E\", \"\u0441\u0440\u044F\", \"\u0447\u0435\u0442\", \"\u043F\u0435\u0442\", \"\u0441\u044A\u0431\"],\n  wide: [\n    \"\u043D\u0435\u0434\u0435\u043B\u044F\",\n    \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A\",\n    \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n    \"\u0441\u0440\u044F\u0434\u0430\",\n    \"\u0447\u0435\u0442\u0432\u044A\u0440\u0442\u044A\u043A\",\n    \"\u043F\u0435\u0442\u044A\u043A\",\n    \"\u0441\u044A\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  wide: {\n    am: \"\u043F\u0440\u0435\u0434\u0438 \u043E\u0431\u044F\u0434\",\n    pm: \"\u0441\u043B\u0435\u0434 \u043E\u0431\u044F\u0434\",\n    midnight: \"\u0432 \u043F\u043E\u043B\u0443\u043D\u043E\u0449\",\n    noon: \"\u043D\u0430 \u043E\u0431\u044F\u0434\",\n    morning: \"\u0441\u0443\u0442\u0440\u0438\u043D\u0442\u0430\",\n    afternoon: \"\u0441\u043B\u0435\u0434\u043E\u0431\u0435\u0434\",\n    evening: \"\u0432\u0435\u0447\u0435\u0440\u0442\u0430\",\n    night: \"\u043F\u0440\u0435\u0437 \u043D\u043E\u0449\u0442\u0430\",\n  },\n};\n\nfunction isFeminine(unit) {\n  return (\n    unit === \"year\" || unit === \"week\" || unit === \"minute\" || unit === \"second\"\n  );\n}\n\nfunction isNeuter(unit) {\n  return unit === \"quarter\";\n}\n\nfunction numberWithSuffix(number, unit, masculine, feminine, neuter) {\n  const suffix = isNeuter(unit)\n    ? neuter\n    : isFeminine(unit)\n      ? feminine\n      : masculine;\n  return number + \"-\" + suffix;\n}\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  if (number === 0) {\n    return numberWithSuffix(0, unit, \"\u0435\u0432\", \"\u0435\u0432\u0430\", \"\u0435\u0432\u043E\");\n  } else if (number % 1000 === 0) {\n    return numberWithSuffix(number, unit, \"\u0435\u043D\", \"\u043D\u0430\", \"\u043D\u043E\");\n  } else if (number % 100 === 0) {\n    return numberWithSuffix(number, unit, \"\u0442\u0435\u043D\", \"\u0442\u043D\u0430\", \"\u0442\u043D\u043E\");\n  }\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return numberWithSuffix(number, unit, \"\u0432\u0438\", \"\u0432\u0430\", \"\u0432\u043E\");\n      case 2:\n        return numberWithSuffix(number, unit, \"\u0440\u0438\", \"\u0440\u0430\", \"\u0440\u043E\");\n      case 7:\n      case 8:\n        return numberWithSuffix(number, unit, \"\u043C\u0438\", \"\u043C\u0430\", \"\u043C\u043E\");\n    }\n  }\n\n  return numberWithSuffix(number, unit, \"\u0442\u0438\", \"\u0442\u0430\", \"\u0442\u043E\");\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern =\n  /^(\\d+)(-?[\u0432\u0440\u043C\u0442][\u0430\u0438]|-?\u0442?(\u0435\u043D|\u043D\u0430)|-?(\u0435\u0432|\u0435\u0432\u0430))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u043F\u0440)?\u043D\\.?\\s?\u0435\\.?)/i,\n  abbreviated: /^((\u043F\u0440)?\u043D\\.?\\s?\u0435\\.?)/i,\n  wide: /^(\u043F\u0440\u0435\u0434\u0438 \u043D\u043E\u0432\u0430\u0442\u0430 \u0435\u0440\u0430|\u043D\u043E\u0432\u0430\u0442\u0430 \u0435\u0440\u0430|\u043D\u043E\u0432\u0430 \u0435\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u043F/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u0432\u0440\u0442]?o?)? \u0442\u0440\u0438\u043C\u0435\u0441.?/i,\n  wide: /^[1234](-?[\u0432\u0440\u0442]?\u043E?)? \u0442\u0440\u0438\u043C\u0435\u0441\u0435\u0447\u0438\u0435/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u043F\u0432\u0441\u0447]/i,\n  short: /^(\u043D\u0434|\u043F\u043D|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u043F\u0442|\u0441\u0431)/i,\n  abbreviated: /^(\u043D\u0435\u0434|\u043F\u043E\u043D|\u0432\u0442\u043E|\u0441\u0440\u044F|\u0447\u0435\u0442|\u043F\u0435\u0442|\u0441\u044A\u0431)/i,\n  wide: /^(\u043D\u0435\u0434\u0435\u043B\u044F|\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A|\u0432\u0442\u043E\u0440\u043D\u0438\u043A|\u0441\u0440\u044F\u0434\u0430|\u0447\u0435\u0442\u0432\u044A\u0440\u0442\u044A\u043A|\u043F\u0435\u0442\u044A\u043A|\u0441\u044A\u0431\u043E\u0442\u0430)/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u043F/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u043D[\u0435\u0434]/i, /^\u043F[\u043E\u043D]/i, /^\u0432\u0442/i, /^\u0441\u0440/i, /^\u0447[\u0435\u0442]/i, /^\u043F[\u0435\u0442]/i, /^\u0441[\u044A\u0431]/i],\n};\n\nconst matchMonthPatterns = {\n  abbreviated: /^(\u044F\u043D\u0443|\u0444\u0435\u0432|\u043C\u0430\u0440|\u0430\u043F\u0440|\u043C\u0430\u0439|\u044E\u043D\u0438|\u044E\u043B\u0438|\u0430\u0432\u0433|\u0441\u0435\u043F|\u043E\u043A\u0442|\u043D\u043E\u0435|\u0434\u0435\u043A)/i,\n  wide: /^(\u044F\u043D\u0443\u0430\u0440\u0438|\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438|\u043C\u0430\u0440\u0442|\u0430\u043F\u0440\u0438\u043B|\u043C\u0430\u0439|\u044E\u043D\u0438|\u044E\u043B\u0438|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438|\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438|\u043D\u043E\u0435\u043C\u0432\u0440\u0438|\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438)/i,\n};\n\nconst parseMonthPatterns = {\n  any: [\n    /^\u044F/i,\n    /^\u0444/i,\n    /^\u043C\u0430\u0440/i,\n    /^\u0430\u043F/i,\n    /^\u043C\u0430\u0439/i,\n    /^\u044E\u043D/i,\n    /^\u044E\u043B/i,\n    /^\u0430\u0432/i,\n    /^\u0441\u0435/i,\n    /^\u043E\u043A\u0442/i,\n    /^\u043D\u043E/i,\n    /^\u0434\u0435/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u043F\u0440\u0435\u0434\u0438 \u043E|\u0441\u043B\u0435\u0434 \u043E|\u0432 \u043F\u043E|\u043D\u0430 \u043E|\u043F\u0440\u0435\u0437|\u0432\u0435\u0447|\u0441\u0443\u0442|\u0441\u043B\u0435\u0434\u043E)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u043F\u0440\u0435\u0434\u0438 \u043E/i,\n    pm: /^\u0441\u043B\u0435\u0434 \u043E/i,\n    midnight: /^\u0432 \u043F\u043E\u043B/i,\n    noon: /^\u043D\u0430 \u043E\u0431/i,\n    morning: /^\u0441\u0443\u0442/i,\n    afternoon: /^\u0441\u043B\u0435\u0434\u043E/i,\n    evening: /^\u0432\u0435\u0447/i,\n    night: /^\u043F\u0440\u0435\u0437 \u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./bg/_lib/formatDistance.js\";\nimport { formatLong } from \"./bg/_lib/formatLong.js\";\nimport { formatRelative } from \"./bg/_lib/formatRelative.js\";\nimport { localize } from \"./bg/_lib/localize.js\";\nimport { match } from \"./bg/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Bulgarian locale.\n * @language Bulgarian\n * @iso-639-2 bul\n * @author Nikolay Stoynov [@arvigeus](https://github.com/arvigeus)\n * @author Tsvetan Ovedenski [@fintara](https://github.com/fintara)\n */\nexport const bg = {\n  code: \"bg\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default bg;\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst numberValues = {\n  locale: {\n    1: \"\u09E7\",\n    2: \"\u09E8\",\n    3: \"\u09E9\",\n    4: \"\u09EA\",\n    5: \"\u09EB\",\n    6: \"\u09EC\",\n    7: \"\u09ED\",\n    8: \"\u09EE\",\n    9: \"\u09EF\",\n    0: \"\u09E6\",\n  },\n  number: {\n    \"\u09E7\": \"1\",\n    \"\u09E8\": \"2\",\n    \"\u09E9\": \"3\",\n    \"\u09EA\": \"4\",\n    \"\u09EB\": \"5\",\n    \"\u09EC\": \"6\",\n    \"\u09ED\": \"7\",\n    \"\u09EE\": \"8\",\n    \"\u09EF\": \"9\",\n    \"\u09E6\": \"0\",\n  },\n};\n\nconst eraValues = {\n  narrow: [\"\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u0983\", \"\u0996\u09CD\u09B0\u09BF\u0983\"],\n  abbreviated: [\"\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u09B0\u09CD\u09AC\", \"\u0996\u09CD\u09B0\u09BF\u0983\"],\n  wide: [\"\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09AA\u09C2\u09B0\u09CD\u09AC\", \"\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09BE\u09AC\u09CD\u09A6\"],\n};\n\nconst quarterValues = {\n  narrow: [\"\u09E7\", \"\u09E8\", \"\u09E9\", \"\u09EA\"],\n  abbreviated: [\"\u09E7\u09A4\u09CD\u09B0\u09C8\", \"\u09E8\u09A4\u09CD\u09B0\u09C8\", \"\u09E9\u09A4\u09CD\u09B0\u09C8\", \"\u09EA\u09A4\u09CD\u09B0\u09C8\"],\n  wide: [\"\u09E7\u09AE \u09A4\u09CD\u09B0\u09C8\u09AE\u09BE\u09B8\u09BF\u0995\", \"\u09E8\u09DF \u09A4\u09CD\u09B0\u09C8\u09AE\u09BE\u09B8\u09BF\u0995\", \"\u09E9\u09DF \u09A4\u09CD\u09B0\u09C8\u09AE\u09BE\u09B8\u09BF\u0995\", \"\u09EA\u09B0\u09CD\u09A5 \u09A4\u09CD\u09B0\u09C8\u09AE\u09BE\u09B8\u09BF\u0995\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u099C\u09BE\u09A8\u09C1\",\n    \"\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\",\n    \"\u09AE\u09BE\u09B0\u09CD\u099A\",\n    \"\u098F\u09AA\u09CD\u09B0\u09BF\u09B2\",\n    \"\u09AE\u09C7\",\n    \"\u099C\u09C1\u09A8\",\n    \"\u099C\u09C1\u09B2\u09BE\u0987\",\n    \"\u0986\u0997\u09B8\u09CD\u099F\",\n    \"\u09B8\u09C7\u09AA\u09CD\u099F\",\n    \"\u0985\u0995\u09CD\u099F\u09CB\",\n    \"\u09A8\u09AD\u09C7\",\n    \"\u09A1\u09BF\u09B8\u09C7\",\n  ],\n\n  abbreviated: [\n    \"\u099C\u09BE\u09A8\u09C1\",\n    \"\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\",\n    \"\u09AE\u09BE\u09B0\u09CD\u099A\",\n    \"\u098F\u09AA\u09CD\u09B0\u09BF\u09B2\",\n    \"\u09AE\u09C7\",\n    \"\u099C\u09C1\u09A8\",\n    \"\u099C\u09C1\u09B2\u09BE\u0987\",\n    \"\u0986\u0997\u09B8\u09CD\u099F\",\n    \"\u09B8\u09C7\u09AA\u09CD\u099F\",\n    \"\u0985\u0995\u09CD\u099F\u09CB\",\n    \"\u09A8\u09AD\u09C7\",\n    \"\u09A1\u09BF\u09B8\u09C7\",\n  ],\n\n  wide: [\n    \"\u099C\u09BE\u09A8\u09C1\u09DF\u09BE\u09B0\u09BF\",\n    \"\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\u09DF\u09BE\u09B0\u09BF\",\n    \"\u09AE\u09BE\u09B0\u09CD\u099A\",\n    \"\u098F\u09AA\u09CD\u09B0\u09BF\u09B2\",\n    \"\u09AE\u09C7\",\n    \"\u099C\u09C1\u09A8\",\n    \"\u099C\u09C1\u09B2\u09BE\u0987\",\n    \"\u0986\u0997\u09B8\u09CD\u099F\",\n    \"\u09B8\u09C7\u09AA\u09CD\u099F\u09C7\u09AE\u09CD\u09AC\u09B0\",\n    \"\u0985\u0995\u09CD\u099F\u09CB\u09AC\u09B0\",\n    \"\u09A8\u09AD\u09C7\u09AE\u09CD\u09AC\u09B0\",\n    \"\u09A1\u09BF\u09B8\u09C7\u09AE\u09CD\u09AC\u09B0\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u09B0\", \"\u09B8\u09CB\", \"\u09AE\", \"\u09AC\u09C1\", \"\u09AC\u09C3\", \"\u09B6\u09C1\", \"\u09B6\"],\n  short: [\"\u09B0\u09AC\u09BF\", \"\u09B8\u09CB\u09AE\", \"\u09AE\u0999\u09CD\u0997\u09B2\", \"\u09AC\u09C1\u09A7\", \"\u09AC\u09C3\u09B9\", \"\u09B6\u09C1\u0995\u09CD\u09B0\", \"\u09B6\u09A8\u09BF\"],\n  abbreviated: [\"\u09B0\u09AC\u09BF\", \"\u09B8\u09CB\u09AE\", \"\u09AE\u0999\u09CD\u0997\u09B2\", \"\u09AC\u09C1\u09A7\", \"\u09AC\u09C3\u09B9\", \"\u09B6\u09C1\u0995\u09CD\u09B0\", \"\u09B6\u09A8\u09BF\"],\n  wide: [\n    \"\u09B0\u09AC\u09BF\u09AC\u09BE\u09B0\",\n    \"\u09B8\u09CB\u09AE\u09AC\u09BE\u09B0\",\n    \"\u09AE\u0999\u09CD\u0997\u09B2\u09AC\u09BE\u09B0\",\n    \"\u09AC\u09C1\u09A7\u09AC\u09BE\u09B0\",\n    \"\u09AC\u09C3\u09B9\u09B8\u09CD\u09AA\u09A4\u09BF\u09AC\u09BE\u09B0 \",\n    \"\u09B6\u09C1\u0995\u09CD\u09B0\u09AC\u09BE\u09B0\",\n    \"\u09B6\u09A8\u09BF\u09AC\u09BE\u09B0\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u09AA\u09C2\",\n    pm: \"\u0985\u09AA\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n  abbreviated: {\n    am: \"\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8\",\n    pm: \"\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n  wide: {\n    am: \"\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8\",\n    pm: \"\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u09AA\u09C2\",\n    pm: \"\u0985\u09AA\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n  abbreviated: {\n    am: \"\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8\",\n    pm: \"\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n  wide: {\n    am: \"\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8\",\n    pm: \"\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8\",\n    midnight: \"\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4\",\n    noon: \"\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8\",\n    morning: \"\u09B8\u0995\u09BE\u09B2\",\n    afternoon: \"\u09AC\u09BF\u0995\u09BE\u09B2\",\n    evening: \"\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE\",\n    night: \"\u09B0\u09BE\u09A4\",\n  },\n};\n\nfunction dateOrdinalNumber(number, localeNumber) {\n  if (number > 18 && number <= 31) {\n    return localeNumber + \"\u09B6\u09C7\";\n  } else {\n    switch (number) {\n      case 1:\n        return localeNumber + \"\u09B2\u09BE\";\n      case 2:\n      case 3:\n        return localeNumber + \"\u09B0\u09BE\";\n      case 4:\n        return localeNumber + \"\u09A0\u09BE\";\n      default:\n        return localeNumber + \"\u0987\";\n    }\n  }\n}\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const localeNumber = numberToLocale(number);\n  const unit = options?.unit;\n\n  if (unit === \"date\") {\n    return dateOrdinalNumber(number, localeNumber);\n  }\n  if (number > 10 || number === 0) return localeNumber + \"\u09A4\u09AE\";\n\n  const rem10 = number % 10;\n  switch (rem10) {\n    case 2:\n    case 3:\n      return localeNumber + \"\u09DF\";\n    case 4:\n      return localeNumber + \"\u09B0\u09CD\u09A5\";\n    case 6:\n      return localeNumber + \"\u09B7\u09CD\u09A0\";\n    default:\n      return localeNumber + \"\u09AE\";\n  }\n};\n\n// function localeToNumber(locale: string): number {\n//   const enNumber = locale.toString().replace(/[\u09E7\u09E8\u09E9\u09EA\u09EB\u09EC\u09ED\u09EE\u09EF\u09E6]/g, function (match) {\n//     return numberValues.number[match as keyof typeof numberValues.number]\n//   })\n//   return Number(enNumber)\n// }\n\nexport function numberToLocale(enNumber) {\n  return enNumber.toString().replace(/\\d/g, function (match) {\n    return numberValues.locale[match];\n  });\n}\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { numberToLocale } from \"./localize.js\";\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\",\n  },\n\n  xSeconds: {\n    one: \"\u09E7 \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\",\n    other: \"{{count}} \u09B8\u09C7\u0995\u09C7\u09A8\u09CD\u09A1\",\n  },\n\n  halfAMinute: \"\u0986\u09A7 \u09AE\u09BF\u09A8\u09BF\u099F\",\n\n  lessThanXMinutes: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09AE\u09BF\u09A8\u09BF\u099F\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09AE\u09BF\u09A8\u09BF\u099F\",\n  },\n\n  xMinutes: {\n    one: \"\u09E7 \u09AE\u09BF\u09A8\u09BF\u099F\",\n    other: \"{{count}} \u09AE\u09BF\u09A8\u09BF\u099F\",\n  },\n\n  aboutXHours: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u0998\u09A8\u09CD\u099F\u09BE\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u0998\u09A8\u09CD\u099F\u09BE\",\n  },\n\n  xHours: {\n    one: \"\u09E7 \u0998\u09A8\u09CD\u099F\u09BE\",\n    other: \"{{count}} \u0998\u09A8\u09CD\u099F\u09BE\",\n  },\n\n  xDays: {\n    one: \"\u09E7 \u09A6\u09BF\u09A8\",\n    other: \"{{count}} \u09A6\u09BF\u09A8\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09B8\u09AA\u09CD\u09A4\u09BE\u09B9\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09B8\u09AA\u09CD\u09A4\u09BE\u09B9\",\n  },\n\n  xWeeks: {\n    one: \"\u09E7 \u09B8\u09AA\u09CD\u09A4\u09BE\u09B9\",\n    other: \"{{count}} \u09B8\u09AA\u09CD\u09A4\u09BE\u09B9\",\n  },\n\n  aboutXMonths: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09AE\u09BE\u09B8\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09AE\u09BE\u09B8\",\n  },\n\n  xMonths: {\n    one: \"\u09E7 \u09AE\u09BE\u09B8\",\n    other: \"{{count}} \u09AE\u09BE\u09B8\",\n  },\n\n  aboutXYears: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09AC\u099B\u09B0\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09AC\u099B\u09B0\",\n  },\n\n  xYears: {\n    one: \"\u09E7 \u09AC\u099B\u09B0\",\n    other: \"{{count}} \u09AC\u099B\u09B0\",\n  },\n\n  overXYears: {\n    one: \"\u09E7 \u09AC\u099B\u09B0\u09C7\u09B0 \u09AC\u09C7\u09B6\u09BF\",\n    other: \"{{count}} \u09AC\u099B\u09B0\u09C7\u09B0 \u09AC\u09C7\u09B6\u09BF\",\n  },\n\n  almostXYears: {\n    one: \"\u09AA\u09CD\u09B0\u09BE\u09DF \u09E7 \u09AC\u099B\u09B0\",\n    other: \"\u09AA\u09CD\u09B0\u09BE\u09DF {{count}} \u09AC\u099B\u09B0\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", numberToLocale(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" \u098F\u09B0 \u09AE\u09A7\u09CD\u09AF\u09C7\";\n    } else {\n      return result + \" \u0986\u0997\u09C7\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}} '\u09B8\u09AE\u09DF'\",\n  long: \"{{date}} {{time}} '\u09B8\u09AE\u09DF'\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0997\u09A4' eeee '\u09B8\u09AE\u09DF' p\",\n  yesterday: \"'\u0997\u09A4\u0995\u09BE\u09B2' '\u09B8\u09AE\u09DF' p\",\n  today: \"'\u0986\u099C' '\u09B8\u09AE\u09DF' p\",\n  tomorrow: \"'\u0986\u0997\u09BE\u09AE\u09C0\u0995\u09BE\u09B2' '\u09B8\u09AE\u09DF' p\",\n  nextWeek: \"eeee '\u09B8\u09AE\u09DF' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u09AE|\u09DF|\u09B0\u09CD\u09A5|\u09B7\u09CD\u09A0|\u09B6\u09C7|\u0987|\u09A4\u09AE)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u0983|\u0996\u09CD\u09B0\u09BF\u0983)/i,\n  abbreviated: /^(\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u09B0\u09CD\u09AC|\u0996\u09CD\u09B0\u09BF\u0983)/i,\n  wide: /^(\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09AA\u09C2\u09B0\u09CD\u09AC|\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09BE\u09AC\u09CD\u09A6)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/^\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u0983/i, /^\u0996\u09CD\u09B0\u09BF\u0983/i],\n  abbreviated: [/^\u0996\u09CD\u09B0\u09BF\u0983\u09AA\u09C2\u09B0\u09CD\u09AC/i, /^\u0996\u09CD\u09B0\u09BF\u0983/i],\n  wide: [/^\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09AA\u09C2\u09B0\u09CD\u09AC/i, /^\u0996\u09CD\u09B0\u09BF\u09B8\u09CD\u099F\u09BE\u09AC\u09CD\u09A6/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[\u09E7\u09E8\u09E9\u09EA]/i,\n  abbreviated: /^[\u09E7\u09E8\u09E9\u09EA]\u09A4\u09CD\u09B0\u09C8/i,\n  wide: /^[\u09E7\u09E8\u09E9\u09EA](\u09AE|\u09DF|\u09B0\u09CD\u09A5)? \u09A4\u09CD\u09B0\u09C8\u09AE\u09BE\u09B8\u09BF\u0995/i,\n};\nconst parseQuarterPatterns = {\n  any: [/\u09E7/i, /\u09E8/i, /\u09E9/i, /\u09EA/i],\n};\n\nconst matchMonthPatterns = {\n  narrow:\n    /^(\u099C\u09BE\u09A8\u09C1|\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1|\u09AE\u09BE\u09B0\u09CD\u099A|\u098F\u09AA\u09CD\u09B0\u09BF\u09B2|\u09AE\u09C7|\u099C\u09C1\u09A8|\u099C\u09C1\u09B2\u09BE\u0987|\u0986\u0997\u09B8\u09CD\u099F|\u09B8\u09C7\u09AA\u09CD\u099F|\u0985\u0995\u09CD\u099F\u09CB|\u09A8\u09AD\u09C7|\u09A1\u09BF\u09B8\u09C7)/i,\n  abbreviated:\n    /^(\u099C\u09BE\u09A8\u09C1|\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1|\u09AE\u09BE\u09B0\u09CD\u099A|\u098F\u09AA\u09CD\u09B0\u09BF\u09B2|\u09AE\u09C7|\u099C\u09C1\u09A8|\u099C\u09C1\u09B2\u09BE\u0987|\u0986\u0997\u09B8\u09CD\u099F|\u09B8\u09C7\u09AA\u09CD\u099F|\u0985\u0995\u09CD\u099F\u09CB|\u09A8\u09AD\u09C7|\u09A1\u09BF\u09B8\u09C7)/i,\n  wide: /^(\u099C\u09BE\u09A8\u09C1\u09DF\u09BE\u09B0\u09BF|\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1\u09DF\u09BE\u09B0\u09BF|\u09AE\u09BE\u09B0\u09CD\u099A|\u098F\u09AA\u09CD\u09B0\u09BF\u09B2|\u09AE\u09C7|\u099C\u09C1\u09A8|\u099C\u09C1\u09B2\u09BE\u0987|\u0986\u0997\u09B8\u09CD\u099F|\u09B8\u09C7\u09AA\u09CD\u099F\u09C7\u09AE\u09CD\u09AC\u09B0|\u0985\u0995\u09CD\u099F\u09CB\u09AC\u09B0|\u09A8\u09AD\u09C7\u09AE\u09CD\u09AC\u09B0|\u09A1\u09BF\u09B8\u09C7\u09AE\u09CD\u09AC\u09B0)/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^\u099C\u09BE\u09A8\u09C1/i,\n    /^\u09AB\u09C7\u09AC\u09CD\u09B0\u09C1/i,\n    /^\u09AE\u09BE\u09B0\u09CD\u099A/i,\n    /^\u098F\u09AA\u09CD\u09B0\u09BF\u09B2/i,\n    /^\u09AE\u09C7/i,\n    /^\u099C\u09C1\u09A8/i,\n    /^\u099C\u09C1\u09B2\u09BE\u0987/i,\n    /^\u0986\u0997\u09B8\u09CD\u099F/i,\n    /^\u09B8\u09C7\u09AA\u09CD\u099F/i,\n    /^\u0985\u0995\u09CD\u099F\u09CB/i,\n    /^\u09A8\u09AD\u09C7/i,\n    /^\u09A1\u09BF\u09B8\u09C7/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u09B0|\u09B8\u09CB|\u09AE|\u09AC\u09C1|\u09AC\u09C3|\u09B6\u09C1|\u09B6)+/i,\n  short: /^(\u09B0\u09AC\u09BF|\u09B8\u09CB\u09AE|\u09AE\u0999\u09CD\u0997\u09B2|\u09AC\u09C1\u09A7|\u09AC\u09C3\u09B9|\u09B6\u09C1\u0995\u09CD\u09B0|\u09B6\u09A8\u09BF)+/i,\n  abbreviated: /^(\u09B0\u09AC\u09BF|\u09B8\u09CB\u09AE|\u09AE\u0999\u09CD\u0997\u09B2|\u09AC\u09C1\u09A7|\u09AC\u09C3\u09B9|\u09B6\u09C1\u0995\u09CD\u09B0|\u09B6\u09A8\u09BF)+/i,\n  wide: /^(\u09B0\u09AC\u09BF\u09AC\u09BE\u09B0|\u09B8\u09CB\u09AE\u09AC\u09BE\u09B0|\u09AE\u0999\u09CD\u0997\u09B2\u09AC\u09BE\u09B0|\u09AC\u09C1\u09A7\u09AC\u09BE\u09B0|\u09AC\u09C3\u09B9\u09B8\u09CD\u09AA\u09A4\u09BF\u09AC\u09BE\u09B0 |\u09B6\u09C1\u0995\u09CD\u09B0\u09AC\u09BE\u09B0|\u09B6\u09A8\u09BF\u09AC\u09BE\u09B0)+/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u09B0/i, /^\u09B8\u09CB/i, /^\u09AE/i, /^\u09AC\u09C1/i, /^\u09AC\u09C3/i, /^\u09B6\u09C1/i, /^\u09B6/i],\n  short: [/^\u09B0\u09AC\u09BF/i, /^\u09B8\u09CB\u09AE/i, /^\u09AE\u0999\u09CD\u0997\u09B2/i, /^\u09AC\u09C1\u09A7/i, /^\u09AC\u09C3\u09B9/i, /^\u09B6\u09C1\u0995\u09CD\u09B0/i, /^\u09B6\u09A8\u09BF/i],\n\n  abbreviated: [\n    /^\u09B0\u09AC\u09BF/i,\n    /^\u09B8\u09CB\u09AE/i,\n    /^\u09AE\u0999\u09CD\u0997\u09B2/i,\n    /^\u09AC\u09C1\u09A7/i,\n    /^\u09AC\u09C3\u09B9/i,\n    /^\u09B6\u09C1\u0995\u09CD\u09B0/i,\n    /^\u09B6\u09A8\u09BF/i,\n  ],\n\n  wide: [\n    /^\u09B0\u09AC\u09BF\u09AC\u09BE\u09B0/i,\n    /^\u09B8\u09CB\u09AE\u09AC\u09BE\u09B0/i,\n    /^\u09AE\u0999\u09CD\u0997\u09B2\u09AC\u09BE\u09B0/i,\n    /^\u09AC\u09C1\u09A7\u09AC\u09BE\u09B0/i,\n    /^\u09AC\u09C3\u09B9\u09B8\u09CD\u09AA\u09A4\u09BF\u09AC\u09BE\u09B0 /i,\n    /^\u09B6\u09C1\u0995\u09CD\u09B0\u09AC\u09BE\u09B0/i,\n    /^\u09B6\u09A8\u09BF\u09AC\u09BE\u09B0/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u09AA\u09C2|\u0985\u09AA|\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4|\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8|\u09B8\u0995\u09BE\u09B2|\u09AC\u09BF\u0995\u09BE\u09B2|\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE|\u09B0\u09BE\u09A4)/i,\n  abbreviated: /^(\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8|\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8|\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4|\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8|\u09B8\u0995\u09BE\u09B2|\u09AC\u09BF\u0995\u09BE\u09B2|\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE|\u09B0\u09BE\u09A4)/i,\n  wide: /^(\u09AA\u09C2\u09B0\u09CD\u09AC\u09BE\u09B9\u09CD\u09A8|\u0985\u09AA\u09B0\u09BE\u09B9\u09CD\u09A8|\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4|\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8|\u09B8\u0995\u09BE\u09B2|\u09AC\u09BF\u0995\u09BE\u09B2|\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE|\u09B0\u09BE\u09A4)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u09AA\u09C2/i,\n    pm: /^\u0985\u09AA/i,\n    midnight: /^\u09AE\u09A7\u09CD\u09AF\u09B0\u09BE\u09A4/i,\n    noon: /^\u09AE\u09A7\u09CD\u09AF\u09BE\u09B9\u09CD\u09A8/i,\n    morning: /\u09B8\u0995\u09BE\u09B2/i,\n    afternoon: /\u09AC\u09BF\u0995\u09BE\u09B2/i,\n    evening: /\u09B8\u09A8\u09CD\u09A7\u09CD\u09AF\u09BE/i,\n    night: /\u09B0\u09BE\u09A4/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./bn/_lib/formatDistance.js\";\nimport { formatLong } from \"./bn/_lib/formatLong.js\";\nimport { formatRelative } from \"./bn/_lib/formatRelative.js\";\nimport { localize } from \"./bn/_lib/localize.js\";\nimport { match } from \"./bn/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Bengali locale.\n * @language Bengali\n * @iso-639-2 ben\n * @author Touhidur Rahman [@touhidrahman](https://github.com/touhidrahman)\n * @author Farhad Yasir [@nutboltu](https://github.com/nutboltu)\n */\nexport const bn = {\n  code: \"bn\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default bn;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      standalone: \"manje od 1 sekunde\",\n      withPrepositionAgo: \"manje od 1 sekunde\",\n      withPrepositionIn: \"manje od 1 sekundu\",\n    },\n    dual: \"manje od {{count}} sekunde\",\n    other: \"manje od {{count}} sekundi\",\n  },\n\n  xSeconds: {\n    one: {\n      standalone: \"1 sekunda\",\n      withPrepositionAgo: \"1 sekunde\",\n      withPrepositionIn: \"1 sekundu\",\n    },\n    dual: \"{{count}} sekunde\",\n    other: \"{{count}} sekundi\",\n  },\n\n  halfAMinute: \"pola minute\",\n\n  lessThanXMinutes: {\n    one: {\n      standalone: \"manje od 1 minute\",\n      withPrepositionAgo: \"manje od 1 minute\",\n      withPrepositionIn: \"manje od 1 minutu\",\n    },\n    dual: \"manje od {{count}} minute\",\n    other: \"manje od {{count}} minuta\",\n  },\n\n  xMinutes: {\n    one: {\n      standalone: \"1 minuta\",\n      withPrepositionAgo: \"1 minute\",\n      withPrepositionIn: \"1 minutu\",\n    },\n    dual: \"{{count}} minute\",\n    other: \"{{count}} minuta\",\n  },\n\n  aboutXHours: {\n    one: {\n      standalone: \"oko 1 sat\",\n      withPrepositionAgo: \"oko 1 sat\",\n      withPrepositionIn: \"oko 1 sat\",\n    },\n    dual: \"oko {{count}} sata\",\n    other: \"oko {{count}} sati\",\n  },\n\n  xHours: {\n    one: {\n      standalone: \"1 sat\",\n      withPrepositionAgo: \"1 sat\",\n      withPrepositionIn: \"1 sat\",\n    },\n    dual: \"{{count}} sata\",\n    other: \"{{count}} sati\",\n  },\n\n  xDays: {\n    one: {\n      standalone: \"1 dan\",\n      withPrepositionAgo: \"1 dan\",\n      withPrepositionIn: \"1 dan\",\n    },\n    dual: \"{{count}} dana\",\n    other: \"{{count}} dana\",\n  },\n\n  aboutXWeeks: {\n    one: {\n      standalone: \"oko 1 sedmicu\",\n      withPrepositionAgo: \"oko 1 sedmicu\",\n      withPrepositionIn: \"oko 1 sedmicu\",\n    },\n    dual: \"oko {{count}} sedmice\",\n    other: \"oko {{count}} sedmice\",\n  },\n\n  xWeeks: {\n    one: {\n      standalone: \"1 sedmicu\",\n      withPrepositionAgo: \"1 sedmicu\",\n      withPrepositionIn: \"1 sedmicu\",\n    },\n    dual: \"{{count}} sedmice\",\n    other: \"{{count}} sedmice\",\n  },\n\n  aboutXMonths: {\n    one: {\n      standalone: \"oko 1 mjesec\",\n      withPrepositionAgo: \"oko 1 mjesec\",\n      withPrepositionIn: \"oko 1 mjesec\",\n    },\n    dual: \"oko {{count}} mjeseca\",\n    other: \"oko {{count}} mjeseci\",\n  },\n\n  xMonths: {\n    one: {\n      standalone: \"1 mjesec\",\n      withPrepositionAgo: \"1 mjesec\",\n      withPrepositionIn: \"1 mjesec\",\n    },\n    dual: \"{{count}} mjeseca\",\n    other: \"{{count}} mjeseci\",\n  },\n\n  aboutXYears: {\n    one: {\n      standalone: \"oko 1 godinu\",\n      withPrepositionAgo: \"oko 1 godinu\",\n      withPrepositionIn: \"oko 1 godinu\",\n    },\n    dual: \"oko {{count}} godine\",\n    other: \"oko {{count}} godina\",\n  },\n\n  xYears: {\n    one: {\n      standalone: \"1 godina\",\n      withPrepositionAgo: \"1 godine\",\n      withPrepositionIn: \"1 godinu\",\n    },\n    dual: \"{{count}} godine\",\n    other: \"{{count}} godina\",\n  },\n\n  overXYears: {\n    one: {\n      standalone: \"preko 1 godinu\",\n      withPrepositionAgo: \"preko 1 godinu\",\n      withPrepositionIn: \"preko 1 godinu\",\n    },\n    dual: \"preko {{count}} godine\",\n    other: \"preko {{count}} godina\",\n  },\n\n  almostXYears: {\n    one: {\n      standalone: \"gotovo 1 godinu\",\n      withPrepositionAgo: \"gotovo 1 godinu\",\n      withPrepositionIn: \"gotovo 1 godinu\",\n    },\n    dual: \"gotovo {{count}} godine\",\n    other: \"gotovo {{count}} godina\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        result = tokenValue.one.withPrepositionIn;\n      } else {\n        result = tokenValue.one.withPrepositionAgo;\n      }\n    } else {\n      result = tokenValue.one.standalone;\n    }\n  } else if (\n    count % 10 > 1 &&\n    count % 10 < 5 && // if last digit is between 2 and 4\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\n  ) {\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"za \" + result;\n    } else {\n      return \"prije \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM yyyy.\",\n  long: \"d. MMMM yyyy.\",\n  medium: \"d. MMM yy.\",\n  short: \"dd. MM. yy.\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss (zzzz)\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'u' {{time}}\",\n  long: \"{{date}} 'u' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'pro\u0161le nedjelje u' p\";\n      case 3:\n        return \"'pro\u0161le srijede u' p\";\n      case 6:\n        return \"'pro\u0161le subote u' p\";\n      default:\n        return \"'pro\u0161li' EEEE 'u' p\";\n    }\n  },\n  yesterday: \"'ju\u010De u' p\",\n  today: \"'danas u' p\",\n  tomorrow: \"'sutra u' p\",\n  nextWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'sljede\u0107e nedjelje u' p\";\n      case 3:\n        return \"'sljede\u0107u srijedu u' p\";\n      case 6:\n        return \"'sljede\u0107u subotu u' p\";\n      default:\n        return \"'sljede\u0107i' EEEE 'u' p\";\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"pr.n.e.\", \"AD\"],\n  abbreviated: [\"pr. Hr.\", \"po. Hr.\"],\n  wide: [\"Prije Hrista\", \"Poslije Hrista\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avg\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mart\",\n    \"april\",\n    \"maj\",\n    \"juni\",\n    \"juli\",\n    \"avgust\",\n    \"septembar\",\n    \"oktobar\",\n    \"novembar\",\n    \"decembar\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avg\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mart\",\n    \"april\",\n    \"maj\",\n    \"juni\",\n    \"juli\",\n    \"avgust\",\n    \"septembar\",\n    \"oktobar\",\n    \"novembar\",\n    \"decembar\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"\u010C\", \"P\", \"S\"],\n  short: [\"ned\", \"pon\", \"uto\", \"sre\", \"\u010Det\", \"pet\", \"sub\"],\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sre\", \"\u010Det\", \"pet\", \"sub\"],\n  wide: [\n    \"nedjelja\",\n    \"ponedjeljak\",\n    \"utorak\",\n    \"srijeda\",\n    \"\u010Detvrtak\",\n    \"petak\",\n    \"subota\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"poslije podne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"poslije podne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return String(number) + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\n  abbreviated: /^(pr\\.\\s?Hr\\.|po\\.\\s?Hr\\.)/i,\n  wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^pr/i, /^(po|nova)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\n  wide: /^[1234]\\. kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(10|11|12|[123456789])\\./i,\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,\n  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^1/i,\n    /^2/i,\n    /^3/i,\n    /^4/i,\n    /^5/i,\n    /^6/i,\n    /^7/i,\n    /^8/i,\n    /^9/i,\n    /^10/i,\n    /^11/i,\n    /^12/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^avg/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npus\u010Dc]/i,\n  short: /^(ned|pon|uto|sre|(\u010Det|cet)|pet|sub)/i,\n  abbreviated: /^(ned|pon|uto|sre|(\u010Det|cet)|pet|sub)/i,\n  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(\u010Detvrtak|cetvrtak)|petak|subota)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|ponoc|pono\u0107|(po)?podne|uvece|uve\u010De|no\u0107u|poslije podne|ujutru)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^pono/i,\n    noon: /^pod/i,\n    morning: /jutro/i,\n    afternoon: /(poslije\\s|po)+podne/i,\n    evening: /(uvece|uve\u010De)/i,\n    night: /(nocu|no\u0107u)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./bs/_lib/formatDistance.js\";\nimport { formatLong } from \"./bs/_lib/formatLong.js\";\nimport { formatRelative } from \"./bs/_lib/formatRelative.js\";\nimport { localize } from \"./bs/_lib/localize.js\";\nimport { match } from \"./bs/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Bosnian locale.\n * @language Bosnian\n * @iso-639-2 bos\n * @author Branislav Lazi\u0107 [@branislavlazic](https://github.com/branislavlazic)\n */\nexport const bs = {\n  code: \"bs\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default bs;\n", "/**\n * Davant de les xifres que es diuen amb vocal inicial, 1 i 11, s'apostrofen els articles el i la i la preposici\u00F3 de igual que si estiguessin escrits amb lletres.\n *    l'1 de juliol ('l'u')\n *    l'11 de novembre ('l'onze')\n *    l'11a cl\u00E0usula del contracte ('l'onzena')\n *    la contractaci\u00F3 d'11 jugadors ('d'onze')\n *    l'aval d'11.000 socis ('d'onze mil')\n *\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=apostrofaci%25F3+davant+xifres&action=Principal&method=detall_completa&numPagina=1&idHit=11236&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=11236&titol=apostrofaci%F3%20davant%20de%20xifres%20%2F%20apostrofaci%F3%20davant%20de%201%20i%2011&numeroResultat=1&clickLink=detall&tipusCerca=cerca.normes\n */\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menys d'un segon\",\n    eleven: \"menys d'onze segons\",\n    other: \"menys de {{count}} segons\",\n  },\n\n  xSeconds: {\n    one: \"1 segon\",\n    other: \"{{count}} segons\",\n  },\n\n  halfAMinute: \"mig minut\",\n\n  lessThanXMinutes: {\n    one: \"menys d'un minut\",\n    eleven: \"menys d'onze minuts\",\n    other: \"menys de {{count}} minuts\",\n  },\n\n  xMinutes: {\n    one: \"1 minut\",\n    other: \"{{count}} minuts\",\n  },\n\n  aboutXHours: {\n    one: \"aproximadament una hora\",\n    other: \"aproximadament {{count}} hores\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} hores\",\n  },\n\n  xDays: {\n    one: \"1 dia\",\n    other: \"{{count}} dies\",\n  },\n\n  aboutXWeeks: {\n    one: \"aproximadament una setmana\",\n    other: \"aproximadament {{count}} setmanes\",\n  },\n\n  xWeeks: {\n    one: \"1 setmana\",\n    other: \"{{count}} setmanes\",\n  },\n\n  aboutXMonths: {\n    one: \"aproximadament un mes\",\n    other: \"aproximadament {{count}} mesos\",\n  },\n\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} mesos\",\n  },\n\n  aboutXYears: {\n    one: \"aproximadament un any\",\n    other: \"aproximadament {{count}} anys\",\n  },\n\n  xYears: {\n    one: \"1 any\",\n    other: \"{{count}} anys\",\n  },\n\n  overXYears: {\n    one: \"m\u00E9s d'un any\",\n    eleven: \"m\u00E9s d'onze anys\",\n    other: \"m\u00E9s de {{count}} anys\",\n  },\n\n  almostXYears: {\n    one: \"gaireb\u00E9 un any\",\n    other: \"gaireb\u00E9 {{count}} anys\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 11 && tokenValue.eleven) {\n    result = tokenValue.eleven;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"fa \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM y\",\n  long: \"d 'de' MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'a les' {{time}}\",\n  long: \"{{date}} 'a les' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'el' eeee 'passat a la' LT\",\n  yesterday: \"'ahir a la' p\",\n  today: \"'avui a la' p\",\n  tomorrow: \"'dem\u00E0 a la' p\",\n  nextWeek: \"eeee 'a la' p\",\n  other: \"P\",\n};\n\nconst formatRelativeLocalePlural = {\n  lastWeek: \"'el' eeee 'passat a les' p\",\n  yesterday: \"'ahir a les' p\",\n  today: \"'avui a les' p\",\n  tomorrow: \"'dem\u00E0 a les' p\",\n  nextWeek: \"eeee 'a les' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  if (date.getHours() !== 1) {\n    return formatRelativeLocalePlural[token];\n  }\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n/**\n * General information\n * Reference: https://aplicacions.llengua.gencat.cat\n * Reference: https://www.uoc.edu/portal/ca/servei-linguistic/convencions/abreviacions/simbols/simbols-habituals.html\n */\n\n/**\n * Abans de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abans+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6876&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6876&titol=abans%20de%20Crist%20(abreviatura)%20/%20abans%20de%20Crist%20(sigla)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes\n * Desprest de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=despr%E9s+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6879&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6879&titol=despr%E9s%20de%20Crist%20(sigla)%20/%20despr%E9s%20de%20Crist%20(abreviatura)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes\n */\nconst eraValues = {\n  narrow: [\"aC\", \"dC\"],\n  abbreviated: [\"a. de C.\", \"d. de C.\"],\n  wide: [\"abans de Crist\", \"despr\u00E9s de Crist\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1r trimestre\", \"2n trimestre\", \"3r trimestre\", \"4t trimestre\"],\n};\n\n/**\n * Dins d'un text conv\u00E9 fer servir la forma sencera dels mesos, ja que sempre \u00E9s m\u00E9s clar el mot sencer que l'abreviatura, encara que aquesta sigui for\u00E7a coneguda.\n * Cal reservar, doncs, les abreviatures per a les llistes o classificacions, els gr\u00E0fics, les taules o quadres estad\u00EDstics, els textos publicitaris, etc.\n *\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviacions+mesos&action=Principal&method=detall_completa&numPagina=1&idHit=8402&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8402&titol=abreviatures%20dels%20mesos%20de%20l%27any&numeroResultat=5&clickLink=detall&tipusCerca=cerca.fitxes\n */\nconst monthValues = {\n  narrow: [\n    \"GN\",\n    \"FB\",\n    \"M\u00C7\",\n    \"AB\",\n    \"MG\",\n    \"JN\",\n    \"JL\",\n    \"AG\",\n    \"ST\",\n    \"OC\",\n    \"NV\",\n    \"DS\",\n  ],\n\n  /**\n   * Les abreviatures dels mesos de l'any es formen seguint una de les normes generals de formaci\u00F3 d'abreviatures.\n   * S'escriu la primera s\u00EDl\u00B7laba i les consonants de la s\u00EDl\u00B7laba seg\u00FCent anteriors a la primera vocal.\n   * Els mesos de mar\u00E7, maig i juny no s'abreugen perqu\u00E8 s\u00F3n paraules d'una sola s\u00EDl\u00B7laba.\n   */\n  abbreviated: [\n    \"gen.\",\n    \"febr.\",\n    \"mar\u00E7\",\n    \"abr.\",\n    \"maig\",\n    \"juny\",\n    \"jul.\",\n    \"ag.\",\n    \"set.\",\n    \"oct.\",\n    \"nov.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"gener\",\n    \"febrer\",\n    \"mar\u00E7\",\n    \"abril\",\n    \"maig\",\n    \"juny\",\n    \"juliol\",\n    \"agost\",\n    \"setembre\",\n    \"octubre\",\n    \"novembre\",\n    \"desembre\",\n  ],\n};\n\n/**\n * Les abreviatures dels dies de la setmana comencen totes amb la lletra d.\n * Tot seguit porten la consonant seg\u00FCent a la i, excepte en el cas de dimarts, dimecres i diumenge, en qu\u00E8 aquesta consonant \u00E9s la m i, per tant, hi podria haver confusi\u00F3.\n * Per evitar-ho, s'ha substitu\u00EFt la m per una t (en el cas de dimarts), una c (en el cas de dimecres) i una g (en el cas de diumenge), respectivament.\n *\n * Seguint la norma general d'\u00FAs de les abreviatures, les dels dies de la setmana sempre porten punt final.\n * Igualment, van amb la primera lletra en maj\u00FAscula quan la paraula sencera tamb\u00E9 hi aniria.\n * En canvi, van amb la primera lletra en min\u00FAscula quan la inicial de la paraula sencera tamb\u00E9 hi aniria.\n *\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviatures+dies&action=Principal&method=detall_completa&numPagina=1&idHit=8387&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8387&titol=abreviatures%20dels%20dies%20de%20la%20setmana&numeroResultat=1&clickLink=detall&tipusCerca=cerca.tot\n */\nconst dayValues = {\n  narrow: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\n  short: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\n  abbreviated: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\n  wide: [\n    \"diumenge\",\n    \"dilluns\",\n    \"dimarts\",\n    \"dimecres\",\n    \"dijous\",\n    \"divendres\",\n    \"dissabte\",\n  ],\n};\n\n/**\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?action=Principal&method=detall&input_cercar=parts+del+dia&numPagina=1&database=FITXES_PUB&idFont=12801&idHit=12801&tipusFont=Fitxes+de+l%27Optimot&numeroResultat=1&databases_avansada=&categories_avansada=&clickLink=detall&titol=Nom+de+les+parts+del+dia&tematica=&tipusCerca=cerca.fitxes\n */\nconst dayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"mitjanit\",\n    noon: \"migdia\",\n    morning: \"mat\u00ED\",\n    afternoon: \"tarda\",\n    evening: \"vespre\",\n    night: \"nit\",\n  },\n  abbreviated: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"mitjanit\",\n    noon: \"migdia\",\n    morning: \"mat\u00ED\",\n    afternoon: \"tarda\",\n    evening: \"vespre\",\n    night: \"nit\",\n  },\n  wide: {\n    am: \"ante meridiem\",\n    pm: \"post meridiem\",\n    midnight: \"mitjanit\",\n    noon: \"migdia\",\n    morning: \"mat\u00ED\",\n    afternoon: \"tarda\",\n    evening: \"vespre\",\n    night: \"nit\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"de la mitjanit\",\n    noon: \"del migdia\",\n    morning: \"del mat\u00ED\",\n    afternoon: \"de la tarda\",\n    evening: \"del vespre\",\n    night: \"de la nit\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"de la mitjanit\",\n    noon: \"del migdia\",\n    morning: \"del mat\u00ED\",\n    afternoon: \"de la tarda\",\n    evening: \"del vespre\",\n    night: \"de la nit\",\n  },\n  wide: {\n    am: \"ante meridiem\",\n    pm: \"post meridiem\",\n    midnight: \"de la mitjanit\",\n    noon: \"del migdia\",\n    morning: \"del mat\u00ED\",\n    afternoon: \"de la tarda\",\n    evening: \"del vespre\",\n    night: \"de la nit\",\n  },\n};\n\n/**\n * Quan van en singular, els nombres ordinals es representen, en forma d\u2019abreviatura, amb la xifra seguida de l\u2019\u00FAltima lletra del mot desplegat.\n * \u00C9s optatiu posar punt despr\u00E9s de la lletra.\n *\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/pdf/abrevia.pdf#page=18\n */\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"r\";\n      case 2:\n        return number + \"n\";\n      case 3:\n        return number + \"r\";\n      case 4:\n        return number + \"t\";\n    }\n  }\n  return number + \"\u00E8\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00E8|r|n|r|t)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(aC|dC)/i,\n  abbreviated: /^(a. de C.|d. de C.)/i,\n  wide: /^(abans de Crist|despr[e\u00E9]s de Crist)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/^aC/i, /^dC/i],\n  abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],\n  wide: [/^(abans de Crist)/i, /^(despr[e\u00E9]s de Crist)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](\u00E8|r|n|r|t)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(GN|FB|M\u00C7|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,\n  abbreviated:\n    /^(gen.|febr.|mar\u00E7|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,\n  wide: /^(gener|febrer|mar\u00E7|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^GN/i,\n    /^FB/i,\n    /^M\u00C7/i,\n    /^AB/i,\n    /^MG/i,\n    /^JN/i,\n    /^JL/i,\n    /^AG/i,\n    /^ST/i,\n    /^OC/i,\n    /^NV/i,\n    /^DS/i,\n  ],\n\n  abbreviated: [\n    /^gen./i,\n    /^febr./i,\n    /^mar\u00E7/i,\n    /^abr./i,\n    /^maig/i,\n    /^juny/i,\n    /^jul./i,\n    /^ag./i,\n    /^set./i,\n    /^oct./i,\n    /^nov./i,\n    /^des./i,\n  ],\n\n  wide: [\n    /^gener/i,\n    /^febrer/i,\n    /^mar\u00E7/i,\n    /^abril/i,\n    /^maig/i,\n    /^juny/i,\n    /^juliol/i,\n    /^agost/i,\n    /^setembre/i,\n    /^octubre/i,\n    /^novembre/i,\n    /^desembre/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\n  short: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\n  abbreviated: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\n  wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],\n\n  abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],\n\n  wide: [\n    /^diumenge/i,\n    /^dilluns/i,\n    /^dimarts/i,\n    /^dimecres/i,\n    /^dijous/i,\n    /^divendres/i,\n    /^disssabte/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(del|de la) (mat\u00ED|tarda|vespre|nit))/i,\n  abbreviated:\n    /^([ap]\\.?\\s?m\\.?|mitjanit|migdia|(del|de la) (mat\u00ED|tarda|vespre|nit))/i,\n  wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (mat\u00ED|tarda|vespre|nit))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mitjanit/i,\n    noon: /^migdia/i,\n    morning: /mat\u00ED/i,\n    afternoon: /tarda/i,\n    evening: /vespre/i,\n    night: /nit/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ca/_lib/formatDistance.js\";\nimport { formatLong } from \"./ca/_lib/formatLong.js\";\nimport { formatRelative } from \"./ca/_lib/formatRelative.js\";\nimport { localize } from \"./ca/_lib/localize.js\";\nimport { match } from \"./ca/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Catalan locale.\n * @language Catalan\n * @iso-639-2 cat\n * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)\n * @author Alex Vizcaino [@avizcaino](https://github.com/avizcaino)\n */\nexport const ca = {\n  code: \"ca\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ca;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u06A9\u06D5\u0645\u062A\u0631 \u0644\u06D5 \u06CC\u06D5\u06A9 \u0686\u0631\u06A9\u06D5\",\n    other: \"\u06A9\u06D5\u0645\u062A\u0631 \u0644\u06D5 {{count}} \u0686\u0631\u06A9\u06D5\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0686\u0631\u06A9\u06D5\",\n    other: \"{{count}} \u0686\u0631\u06A9\u06D5\",\n  },\n\n  halfAMinute: \"\u0646\u06CC\u0648 \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631\",\n\n  lessThanXMinutes: {\n    one: \"\u06A9\u06D5\u0645\u062A\u0631 \u0644\u06D5 \u06CC\u06D5\u06A9 \u062E\u0648\u0644\u06D5\u06A9\",\n    other: \"\u06A9\u06D5\u0645\u062A\u0631 \u0644\u06D5 {{count}} \u062E\u0648\u0644\u06D5\u06A9\",\n  },\n\n  xMinutes: {\n    one: \"1 \u062E\u0648\u0644\u06D5\u06A9\",\n    other: \"{{count}} \u062E\u0648\u0644\u06D5\u06A9\",\n  },\n\n  aboutXHours: {\n    one: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC 1 \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631\",\n    other: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC {{count}} \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631\",\n  },\n\n  xHours: {\n    one: \"1 \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631\",\n    other: \"{{count}} \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631\",\n  },\n\n  xDays: {\n    one: \"1 \u0695\u06C6\u0698\",\n    other: \"{{count}} \u0698\u06C6\u0698\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC 1 \u0647\u06D5\u0641\u062A\u06D5\",\n    other: \"\u062F\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC {{count}} \u0647\u06D5\u0641\u062A\u06D5\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0647\u06D5\u0641\u062A\u06D5\",\n    other: \"{{count}} \u0647\u06D5\u0641\u062A\u06D5\",\n  },\n\n  aboutXMonths: {\n    one: \"\u062F\u0627\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC 1 \u0645\u0627\u0646\u06AF\",\n    other: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC {{count}} \u0645\u0627\u0646\u06AF\",\n  },\n\n  xMonths: {\n    one: \"1 \u0645\u0627\u0646\u06AF\",\n    other: \"{{count}} \u0645\u0627\u0646\u06AF\",\n  },\n\n  aboutXYears: {\n    one: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC  1 \u0633\u0627\u06B5\",\n    other: \"\u062F\u06D5\u0648\u0631\u0648\u0628\u06D5\u0631\u06CC {{count}} \u0633\u0627\u06B5\",\n  },\n\n  xYears: {\n    one: \"1 \u0633\u0627\u06B5\",\n    other: \"{{count}} \u0633\u0627\u06B5\",\n  },\n\n  overXYears: {\n    one: \"\u0632\u06CC\u0627\u062A\u0631 \u0644\u06D5 \u0633\u0627\u06B5\u06CE\u06A9\",\n    other: \"\u0632\u06CC\u0627\u062A\u0631 \u0644\u06D5 {{count}} \u0633\u0627\u06B5\",\n  },\n\n  almostXYears: {\n    one: \"\u0628\u06D5\u0646\u0632\u06CC\u06A9\u06D5\u06CC\u06CC \u0633\u0627\u06B5\u06CE\u06A9  \",\n    other: \"\u0628\u06D5\u0646\u0632\u06CC\u06A9\u06D5\u06CC\u06CC {{count}} \u0633\u0627\u06B5\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0644\u06D5 \u0645\u0627\u0648\u06D5\u06CC \" + result + \"\u062F\u0627\";\n    } else {\n      return result + \"\u067E\u06CE\u0634 \u0626\u06CE\u0633\u062A\u0627\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' {{time}}\",\n  long: \"{{date}} '\u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0647\u06D5\u0641\u062A\u06D5\u06CC \u0695\u0627\u0628\u0631\u062F\u0648\u0648' eeee '\u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' p\",\n  yesterday: \"'\u062F\u0648\u06CE\u0646\u06CE \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' p\",\n  today: \"'\u0626\u06D5\u0645\u0695\u06C6 \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' p\",\n  tomorrow: \"'\u0628\u06D5\u06CC\u0627\u0646\u06CC \u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' p\",\n  nextWeek: \"eeee '\u06A9\u0627\u062A\u0698\u0645\u06CE\u0631' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u067E\", \"\u062F\"],\n  abbreviated: [\"\u067E-\u0632\", \"\u062F-\u0632\"],\n  wide: [\"\u067E\u06CE\u0634 \u0632\u0627\u06CC\u0646\", \"\u062F\u0648\u0627\u06CC \u0632\u0627\u06CC\u0646\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u06861\u0645\", \"\u06862\u0645\", \"\u06863\u0645\", \"\u06864\u0645\"],\n  wide: [\"\u0686\u0627\u0631\u06D5\u06AF\u06CC \u06CC\u06D5\u06A9\u06D5\u0645\", \"\u0686\u0627\u0631\u06D5\u06AF\u06CC \u062F\u0648\u0648\u06D5\u0645\", \"\u0686\u0627\u0631\u06D5\u06AF\u06CC \u0633\u06CE\u06CC\u06D5\u0645\", \"\u0686\u0627\u0631\u06D5\u06AF\u06CC \u0686\u0648\u0627\u0631\u06D5\u0645\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\n    \"\u06A9-\u062F\",\n    \"\u0634\",\n    \"\u0626\u0627\",\n    \"\u0646\",\n    \"\u0645\",\n    \"\u062D\",\n    \"\u062A\",\n    \"\u0626\u0627\",\n    \"\u0626\u06D5\",\n    \"\u062A\u0634-\u06CC\",\n    \"\u062A\u0634-\u062F\",\n    \"\u06A9-\u06CC\",\n  ],\n\n  abbreviated: [\n    \"\u06A9\u0627\u0646-\u062F\u0648\u0648\",\n    \"\u0634\u0648\u0628\",\n    \"\u0626\u0627\u062F\",\n    \"\u0646\u06CC\u0633\",\n    \"\u0645\u0627\u06CC\u0633\",\n    \"\u062D\u0648\u0632\",\n    \"\u062A\u06D5\u0645\",\n    \"\u0626\u0627\u0628\",\n    \"\u0626\u06D5\u0644\",\n    \"\u062A\u0634-\u06CC\u06D5\u06A9\",\n    \"\u062A\u0634-\u062F\u0648\u0648\",\n    \"\u06A9\u0627\u0646-\u06CC\u06D5\u06A9\",\n  ],\n\n  wide: [\n    \"\u06A9\u0627\u0646\u0648\u0648\u0646\u06CC \u062F\u0648\u0648\u06D5\u0645\",\n    \"\u0634\u0648\u0628\u0627\u062A\",\n    \"\u0626\u0627\u062F\u0627\u0631\",\n    \"\u0646\u06CC\u0633\u0627\u0646\",\n    \"\u0645\u0627\u06CC\u0633\",\n    \"\u062D\u0648\u0632\u06D5\u06CC\u0631\u0627\u0646\",\n    \"\u062A\u06D5\u0645\u0645\u0648\u0632\",\n    \"\u0626\u0627\u0628\",\n    \"\u0626\u06D5\u06CC\u0644\u0648\u0644\",\n    \"\u062A\u0634\u0631\u06CC\u0646\u06CC \u06CC\u06D5\u06A9\u06D5\u0645\",\n    \"\u062A\u0634\u0631\u06CC\u0646\u06CC \u062F\u0648\u0648\u06D5\u0645\",\n    \"\u06A9\u0627\u0646\u0648\u0648\u0646\u06CC \u06CC\u06D5\u06A9\u06D5\u0645\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u06CC-\u0634\", \"\u062F-\u0634\", \"\u0633-\u0634\", \"\u0686-\u0634\", \"\u067E-\u0634\", \"\u0647\u06D5\", \"\u0634\"],\n  short: [\"\u06CC\u06D5-\u0634\u06D5\", \"\u062F\u0648\u0648-\u0634\u06D5\", \"\u0633\u06CE-\u0634\u06D5\", \"\u0686\u0648-\u0634\u06D5\", \"\u067E\u06CE-\u0634\u06D5\", \"\u0647\u06D5\u06CC\", \"\u0634\u06D5\"],\n  abbreviated: [\n    \"\u06CC\u06D5\u06A9-\u0634\u06D5\u0645\",\n    \"\u062F\u0648\u0648-\u0634\u06D5\u0645\",\n    \"\u0633\u06CE-\u0634\u06D5\u0645\",\n    \"\u0686\u0648\u0627\u0631-\u0634\u06D5\u0645\",\n    \"\u067E\u06CE\u0646\u062C-\u0634\u06D5\u0645\",\n    \"\u0647\u06D5\u06CC\u0646\u06CC\",\n    \"\u0634\u06D5\u0645\u06D5\",\n  ],\n\n  wide: [\n    \"\u06CC\u06D5\u06A9 \u0634\u06D5\u0645\u06D5\",\n    \"\u062F\u0648\u0648 \u0634\u06D5\u0645\u06D5\",\n    \"\u0633\u06CE \u0634\u06D5\u0645\u06D5\",\n    \"\u0686\u0648\u0627\u0631 \u0634\u06D5\u0645\u06D5\",\n    \"\u067E\u06CE\u0646\u062C \u0634\u06D5\u0645\u06D5\",\n    \"\u0647\u06D5\u06CC\u0646\u06CC\",\n    \"\u0634\u06D5\u0645\u06D5\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u067E\",\n    pm: \"\u062F\",\n    midnight: \"\u0646-\u0634\",\n    noon: \"\u0646\",\n    morning: \"\u0628\u06D5\u06CC\u0627\u0646\u06CC\",\n    afternoon: \"\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    evening: \"\u0626\u06CE\u0648\u0627\u0631\u06D5\",\n    night: \"\u0634\u06D5\u0648\",\n  },\n  abbreviated: {\n    am: \"\u067E-\u0646\",\n    pm: \"\u062F-\u0646\",\n    midnight: \"\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648\",\n    noon: \"\u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    morning: \"\u0628\u06D5\u06CC\u0627\u0646\u06CC\",\n    afternoon: \"\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    evening: \"\u0626\u06CE\u0648\u0627\u0631\u06D5\",\n    night: \"\u0634\u06D5\u0648\",\n  },\n  wide: {\n    am: \"\u067E\u06CE\u0634 \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    pm: \"\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    midnight: \"\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648\",\n    noon: \"\u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    morning: \"\u0628\u06D5\u06CC\u0627\u0646\u06CC\",\n    afternoon: \"\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    evening: \"\u0626\u06CE\u0648\u0627\u0631\u06D5\",\n    night: \"\u0634\u06D5\u0648\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u067E\",\n    pm: \"\u062F\",\n    midnight: \"\u0646-\u0634\",\n    noon: \"\u0646\",\n    morning: \"\u0644\u06D5 \u0628\u06D5\u06CC\u0627\u0646\u06CC\u062F\u0627\",\n    afternoon: \"\u0644\u06D5 \u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\u062F\u0627\",\n    evening: \"\u0644\u06D5 \u0626\u06CE\u0648\u0627\u0631\u06D5\u062F\u0627\",\n    night: \"\u0644\u06D5 \u0634\u06D5\u0648\u062F\u0627\",\n  },\n  abbreviated: {\n    am: \"\u067E-\u0646\",\n    pm: \"\u062F-\u0646\",\n    midnight: \"\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648\",\n    noon: \"\u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    morning: \"\u0644\u06D5 \u0628\u06D5\u06CC\u0627\u0646\u06CC\u062F\u0627\",\n    afternoon: \"\u0644\u06D5 \u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\u062F\u0627\",\n    evening: \"\u0644\u06D5 \u0626\u06CE\u0648\u0627\u0631\u06D5\u062F\u0627\",\n    night: \"\u0644\u06D5 \u0634\u06D5\u0648\u062F\u0627\",\n  },\n  wide: {\n    am: \"\u067E\u06CE\u0634 \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    pm: \"\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    midnight: \"\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648\",\n    noon: \"\u0646\u06CC\u0648\u06D5\u0695\u06C6\",\n    morning: \"\u0644\u06D5 \u0628\u06D5\u06CC\u0627\u0646\u06CC\u062F\u0627\",\n    afternoon: \"\u0644\u06D5 \u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6\u062F\u0627\",\n    evening: \"\u0644\u06D5 \u0626\u06CE\u0648\u0627\u0631\u06D5\u062F\u0627\",\n    night: \"\u0644\u06D5 \u0634\u06D5\u0648\u062F\u0627\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u067E|\u062F)/i,\n  abbreviated: /^(\u067E-\u0632|\u062F.\u0632)/i,\n  wide: /^(\u067E\u06CE\u0634 \u0632\u0627\u06CC\u0646| \u062F\u0648\u0627\u06CC \u0632\u0627\u06CC\u0646)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u062F/g, /^\u067E/g],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0645[1234]\u0686/i,\n  wide: /^(\u06CC\u06D5\u06A9\u06D5\u0645|\u062F\u0648\u0648\u06D5\u0645|\u0633\u06CE\u06CC\u06D5\u0645| \u0686\u0648\u0627\u0631\u06D5\u0645) (\u0686\u0627\u0631\u06D5\u06AF\u06CC)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  wide: [/\u0686\u0627\u0631\u06D5\u06AF\u06CC \u06CC\u06D5\u06A9\u06D5\u0645/, /\u0686\u0627\u0631\u06D5\u06AF\u06CC \u062F\u0648\u0648\u06D5\u0645/, /\u0686\u0627\u0631\u06D5\u06AF\u06CC \u0633\u064A\u06CC\u06D5\u0645/, /\u0686\u0627\u0631\u06D5\u06AF\u06CC \u0686\u0648\u0627\u0631\u06D5\u0645/],\n\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u06A9-\u062F|\u0634|\u0626\u0627|\u0646|\u0645|\u062D|\u062A|\u0626\u06D5|\u062A\u0634-\u06CC|\u062A\u0634-\u062F|\u06A9-\u06CC)/i,\n  abbreviated:\n    /^(\u06A9\u0627\u0646-\u062F\u0648\u0648|\u0634\u0648\u0628|\u0626\u0627\u062F|\u0646\u06CC\u0633|\u0645\u0627\u06CC\u0633|\u062D\u0648\u0632|\u062A\u06D5\u0645|\u0626\u0627\u0628|\u0626\u06D5\u0644|\u062A\u0634-\u06CC\u06D5\u06A9|\u062A\u0634-\u062F\u0648\u0648|\u06A9\u0627\u0646-\u06CC\u06D5\u06A9)/i,\n  wide: /^(\u06A9\u0627\u0646\u0648\u0648\u0646\u06CC \u062F\u0648\u0648\u06D5\u0645|\u0634\u0648\u0628\u0627\u062A|\u0626\u0627\u062F\u0627\u0631|\u0646\u06CC\u0633\u0627\u0646|\u0645\u0627\u06CC\u0633|\u062D\u0648\u0632\u06D5\u06CC\u0631\u0627\u0646|\u062A\u06D5\u0645\u0645\u0648\u0632|\u0626\u0627\u0628|\u0626\u06D5\u06CC\u0644\u0648\u0644|\u062A\u0634\u0631\u06CC\u0646\u06CC \u06CC\u06D5\u06A9\u06D5\u0645|\u062A\u0634\u0631\u06CC\u0646\u06CC \u062F\u0648\u0648\u06D5\u0645|\u06A9\u0627\u0646\u0648\u0648\u0646\u06CC \u06CC\u06D5\u06A9\u06D5\u0645)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u06A9-\u062F/i,\n    /^\u0634/i,\n    /^\u0626\u0627/i,\n    /^\u0646/i,\n    /^\u0645/i,\n    /^\u062D/i,\n    /^\u062A/i,\n    /^\u0626\u0627/i,\n    /^\u0626\u06D5/i,\n    /^\u062A\u0634-\u06CC/i,\n    /^\u062A\u0634-\u062F/i,\n    /^\u06A9-\u06CC/i,\n  ],\n\n  any: [\n    /^\u06A9\u0627\u0646-\u062F\u0648\u0648/i,\n    /^\u0634\u0648\u0628/i,\n    /^\u0626\u0627\u062F/i,\n    /^\u0646\u06CC\u0633/i,\n    /^\u0645\u0627\u06CC\u0633/i,\n    /^\u062D\u0648\u0632/i,\n    /^\u062A\u06D5\u0645/i,\n    /^\u0626\u0627\u0628/i,\n    /^\u0626\u06D5\u0644/i,\n    /^\u062A\u0634-\u06CC\u06D5\u06A9/i,\n    /^\u062A\u0634-\u062F\u0648\u0648/i,\n    /^|\u06A9\u0627\u0646-\u06CC\u06D5\u06A9/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0634|\u06CC|\u062F|\u0633|\u0686|\u067E|\u0647\u06D5)/i,\n  short: /^(\u06CC\u06D5-\u0634\u06D5|\u062F\u0648\u0648-\u0634\u06D5|\u0633\u06CE-\u0634\u06D5|\u0686\u0648-\u0634\u06D5|\u067E\u06CE-\u0634\u06D5|\u0647\u06D5|\u0634\u06D5)/i,\n  abbreviated: /^(\u06CC\u06D5\u06A9-\u0634\u06D5\u0645|\u062F\u0648\u0648-\u0634\u06D5\u0645|\u0633\u06CE-\u0634\u06D5\u0645|\u0686\u0648\u0627\u0631-\u0634\u06D5\u0645|\u067E\u06CE\u0646\u062E-\u0634\u06D5\u0645|\u0647\u06D5\u06CC\u0646\u06CC|\u0634\u06D5\u0645\u06D5)/i,\n  wide: /^(\u06CC\u06D5\u06A9 \u0634\u06D5\u0645\u06D5|\u062F\u0648\u0648 \u0634\u06D5\u0645\u06D5|\u0633\u06CE \u0634\u06D5\u0645\u06D5|\u0686\u0648\u0627\u0631 \u0634\u06D5\u0645\u06D5|\u067E\u06CE\u0646\u062C \u0634\u06D5\u0645\u06D5|\u0647\u06D5\u06CC\u0646\u06CC|\u0634\u06D5\u0645\u06D5)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u067E|\u062F|\u0646-\u0634|\u0646| (\u0628\u06D5\u06CC\u0627\u0646\u06CC|\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0626\u06CE\u0648\u0627\u0631\u06D5|\u0634\u06D5\u0648))/i,\n  abbreviated: /^(\u067E-\u0646|\u062F-\u0646|\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648|\u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0628\u06D5\u06CC\u0627\u0646\u06CC|\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0626\u06CE\u0648\u0627\u0631\u06D5|\u0634\u06D5\u0648)/,\n  wide: /^(\u067E\u06CE\u0634 \u0646\u06CC\u0648\u06D5\u0695\u06C6|\u062F\u0648\u0627\u06CC \u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0646\u06CC\u0648\u06D5 \u0634\u06D5\u0648|\u0644\u06D5\u0628\u06D5\u06CC\u0627\u0646\u06CC\u062F\u0627|\u0644\u06D5\u062F\u0648\u0627\u06CC\u0646\u06CC\u0648\u06D5\u0695\u06C6\u062F\u0627|\u0644\u06D5 \u0626\u06CE\u0648\u0627\u0631\u06D5\u062F\u0627|\u0644\u06D5 \u0634\u06D5\u0648\u062F\u0627)/,\n  any: /^(\u067E|\u062F|\u0628\u06D5\u06CC\u0627\u0646\u06CC|\u0646\u06CC\u0648\u06D5\u0695\u06C6|\u0626\u06CE\u0648\u0627\u0631\u06D5|\u0634\u06D5\u0648)/,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u062F/i,\n    pm: /^\u067E/i,\n    midnight: /^\u0646-\u0634/i,\n    noon: /^\u0646/i,\n    morning: /\u0628\u06D5\u06CC\u0627\u0646\u06CC/i,\n    afternoon: /\u062F\u0648\u0627\u06CC\u0646\u06CC\u0648\u06D5\u0695\u06C6/i,\n    evening: /\u0626\u06CE\u0648\u0627\u0631\u06D5/i,\n    night: /\u0634\u06D5\u0648/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ckb/_lib/formatDistance.js\";\nimport { formatLong } from \"./ckb/_lib/formatLong.js\";\nimport { formatRelative } from \"./ckb/_lib/formatRelative.js\";\nimport { localize } from \"./ckb/_lib/localize.js\";\nimport { match } from \"./ckb/_lib/match.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary Central Kurdish locale.\n * @language Central Kurdish\n * @iso-639-2 kur\n * @author Revan Sarbast [@Revan99]{@link https://github.com/Revan99}\n */\nexport const ckb = {\n  code: \"ckb\",\n  formatDistance,\n  formatLong,\n  formatRelative,\n  localize,\n  match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ckb;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      regular: \"m\u00E9n\u011B ne\u017E 1 sekunda\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E 1 sekundou\",\n      future: \"za m\u00E9n\u011B ne\u017E 1 sekundu\",\n    },\n    few: {\n      regular: \"m\u00E9n\u011B ne\u017E {{count}} sekundy\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E {{count}} sekundami\",\n      future: \"za m\u00E9n\u011B ne\u017E {{count}} sekundy\",\n    },\n    many: {\n      regular: \"m\u00E9n\u011B ne\u017E {{count}} sekund\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E {{count}} sekundami\",\n      future: \"za m\u00E9n\u011B ne\u017E {{count}} sekund\",\n    },\n  },\n\n  xSeconds: {\n    one: {\n      regular: \"1 sekunda\",\n      past: \"p\u0159ed 1 sekundou\",\n      future: \"za 1 sekundu\",\n    },\n    few: {\n      regular: \"{{count}} sekundy\",\n      past: \"p\u0159ed {{count}} sekundami\",\n      future: \"za {{count}} sekundy\",\n    },\n    many: {\n      regular: \"{{count}} sekund\",\n      past: \"p\u0159ed {{count}} sekundami\",\n      future: \"za {{count}} sekund\",\n    },\n  },\n\n  halfAMinute: {\n    type: \"other\",\n    other: {\n      regular: \"p\u016Fl minuty\",\n      past: \"p\u0159ed p\u016Fl minutou\",\n      future: \"za p\u016Fl minuty\",\n    },\n  },\n\n  lessThanXMinutes: {\n    one: {\n      regular: \"m\u00E9n\u011B ne\u017E 1 minuta\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E 1 minutou\",\n      future: \"za m\u00E9n\u011B ne\u017E 1 minutu\",\n    },\n    few: {\n      regular: \"m\u00E9n\u011B ne\u017E {{count}} minuty\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E {{count}} minutami\",\n      future: \"za m\u00E9n\u011B ne\u017E {{count}} minuty\",\n    },\n    many: {\n      regular: \"m\u00E9n\u011B ne\u017E {{count}} minut\",\n      past: \"p\u0159ed m\u00E9n\u011B ne\u017E {{count}} minutami\",\n      future: \"za m\u00E9n\u011B ne\u017E {{count}} minut\",\n    },\n  },\n\n  xMinutes: {\n    one: {\n      regular: \"1 minuta\",\n      past: \"p\u0159ed 1 minutou\",\n      future: \"za 1 minutu\",\n    },\n    few: {\n      regular: \"{{count}} minuty\",\n      past: \"p\u0159ed {{count}} minutami\",\n      future: \"za {{count}} minuty\",\n    },\n    many: {\n      regular: \"{{count}} minut\",\n      past: \"p\u0159ed {{count}} minutami\",\n      future: \"za {{count}} minut\",\n    },\n  },\n\n  aboutXHours: {\n    one: {\n      regular: \"p\u0159ibli\u017En\u011B 1 hodina\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed 1 hodinou\",\n      future: \"p\u0159ibli\u017En\u011B za 1 hodinu\",\n    },\n    few: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} hodiny\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} hodinami\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} hodiny\",\n    },\n    many: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} hodin\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} hodinami\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} hodin\",\n    },\n  },\n\n  xHours: {\n    one: {\n      regular: \"1 hodina\",\n      past: \"p\u0159ed 1 hodinou\",\n      future: \"za 1 hodinu\",\n    },\n    few: {\n      regular: \"{{count}} hodiny\",\n      past: \"p\u0159ed {{count}} hodinami\",\n      future: \"za {{count}} hodiny\",\n    },\n    many: {\n      regular: \"{{count}} hodin\",\n      past: \"p\u0159ed {{count}} hodinami\",\n      future: \"za {{count}} hodin\",\n    },\n  },\n\n  xDays: {\n    one: {\n      regular: \"1 den\",\n      past: \"p\u0159ed 1 dnem\",\n      future: \"za 1 den\",\n    },\n    few: {\n      regular: \"{{count}} dny\",\n      past: \"p\u0159ed {{count}} dny\",\n      future: \"za {{count}} dny\",\n    },\n    many: {\n      regular: \"{{count}} dn\u00ED\",\n      past: \"p\u0159ed {{count}} dny\",\n      future: \"za {{count}} dn\u00ED\",\n    },\n  },\n\n  aboutXWeeks: {\n    one: {\n      regular: \"p\u0159ibli\u017En\u011B 1 t\u00FDden\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed 1 t\u00FDdnem\",\n      future: \"p\u0159ibli\u017En\u011B za 1 t\u00FDden\",\n    },\n\n    few: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} t\u00FDdny\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} t\u00FDdny\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} t\u00FDdny\",\n    },\n\n    many: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} t\u00FDdn\u016F\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} t\u00FDdny\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} t\u00FDdn\u016F\",\n    },\n  },\n\n  xWeeks: {\n    one: {\n      regular: \"1 t\u00FDden\",\n      past: \"p\u0159ed 1 t\u00FDdnem\",\n      future: \"za 1 t\u00FDden\",\n    },\n\n    few: {\n      regular: \"{{count}} t\u00FDdny\",\n      past: \"p\u0159ed {{count}} t\u00FDdny\",\n      future: \"za {{count}} t\u00FDdny\",\n    },\n\n    many: {\n      regular: \"{{count}} t\u00FDdn\u016F\",\n      past: \"p\u0159ed {{count}} t\u00FDdny\",\n      future: \"za {{count}} t\u00FDdn\u016F\",\n    },\n  },\n\n  aboutXMonths: {\n    one: {\n      regular: \"p\u0159ibli\u017En\u011B 1 m\u011Bs\u00EDc\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed 1 m\u011Bs\u00EDcem\",\n      future: \"p\u0159ibli\u017En\u011B za 1 m\u011Bs\u00EDc\",\n    },\n\n    few: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} m\u011Bs\u00EDce\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} m\u011Bs\u00EDci\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} m\u011Bs\u00EDce\",\n    },\n\n    many: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} m\u011Bs\u00EDc\u016F\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} m\u011Bs\u00EDci\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} m\u011Bs\u00EDc\u016F\",\n    },\n  },\n\n  xMonths: {\n    one: {\n      regular: \"1 m\u011Bs\u00EDc\",\n      past: \"p\u0159ed 1 m\u011Bs\u00EDcem\",\n      future: \"za 1 m\u011Bs\u00EDc\",\n    },\n\n    few: {\n      regular: \"{{count}} m\u011Bs\u00EDce\",\n      past: \"p\u0159ed {{count}} m\u011Bs\u00EDci\",\n      future: \"za {{count}} m\u011Bs\u00EDce\",\n    },\n\n    many: {\n      regular: \"{{count}} m\u011Bs\u00EDc\u016F\",\n      past: \"p\u0159ed {{count}} m\u011Bs\u00EDci\",\n      future: \"za {{count}} m\u011Bs\u00EDc\u016F\",\n    },\n  },\n\n  aboutXYears: {\n    one: {\n      regular: \"p\u0159ibli\u017En\u011B 1 rok\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed 1 rokem\",\n      future: \"p\u0159ibli\u017En\u011B za 1 rok\",\n    },\n    few: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} roky\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} roky\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} roky\",\n    },\n    many: {\n      regular: \"p\u0159ibli\u017En\u011B {{count}} rok\u016F\",\n      past: \"p\u0159ibli\u017En\u011B p\u0159ed {{count}} roky\",\n      future: \"p\u0159ibli\u017En\u011B za {{count}} rok\u016F\",\n    },\n  },\n\n  xYears: {\n    one: {\n      regular: \"1 rok\",\n      past: \"p\u0159ed 1 rokem\",\n      future: \"za 1 rok\",\n    },\n    few: {\n      regular: \"{{count}} roky\",\n      past: \"p\u0159ed {{count}} roky\",\n      future: \"za {{count}} roky\",\n    },\n    many: {\n      regular: \"{{count}} rok\u016F\",\n      past: \"p\u0159ed {{count}} roky\",\n      future: \"za {{count}} rok\u016F\",\n    },\n  },\n\n  overXYears: {\n    one: {\n      regular: \"v\u00EDce ne\u017E 1 rok\",\n      past: \"p\u0159ed v\u00EDce ne\u017E 1 rokem\",\n      future: \"za v\u00EDce ne\u017E 1 rok\",\n    },\n    few: {\n      regular: \"v\u00EDce ne\u017E {{count}} roky\",\n      past: \"p\u0159ed v\u00EDce ne\u017E {{count}} roky\",\n      future: \"za v\u00EDce ne\u017E {{count}} roky\",\n    },\n    many: {\n      regular: \"v\u00EDce ne\u017E {{count}} rok\u016F\",\n      past: \"p\u0159ed v\u00EDce ne\u017E {{count}} roky\",\n      future: \"za v\u00EDce ne\u017E {{count}} rok\u016F\",\n    },\n  },\n\n  almostXYears: {\n    one: {\n      regular: \"skoro 1 rok\",\n      past: \"skoro p\u0159ed 1 rokem\",\n      future: \"skoro za 1 rok\",\n    },\n    few: {\n      regular: \"skoro {{count}} roky\",\n      past: \"skoro p\u0159ed {{count}} roky\",\n      future: \"skoro za {{count}} roky\",\n    },\n    many: {\n      regular: \"skoro {{count}} rok\u016F\",\n      past: \"skoro p\u0159ed {{count}} roky\",\n      future: \"skoro za {{count}} rok\u016F\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let pluralResult;\n\n  const tokenValue = formatDistanceLocale[token];\n\n  // cs pluralization\n  if (tokenValue.type === \"other\") {\n    pluralResult = tokenValue.other;\n  } else if (count === 1) {\n    pluralResult = tokenValue.one;\n  } else if (count > 1 && count < 5) {\n    pluralResult = tokenValue.few;\n  } else {\n    pluralResult = tokenValue.many;\n  }\n\n  // times\n  const suffixExist = options?.addSuffix === true;\n  const comparison = options?.comparison;\n\n  let timeResult;\n  if (suffixExist && comparison === -1) {\n    timeResult = pluralResult.past;\n  } else if (suffixExist && comparison === 1) {\n    timeResult = pluralResult.future;\n  } else {\n    timeResult = pluralResult.regular;\n  }\n\n  return timeResult.replace(\"{{count}}\", String(count));\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM yyyy\",\n  long: \"d. MMMM yyyy\",\n  medium: \"d. M. yyyy\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'v' {{time}}\",\n  long: \"{{date}} 'v' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const accusativeWeekdays = [\n  \"ned\u011Bli\",\n  \"pond\u011Bl\u00ED\",\n  \"\u00FAter\u00FD\",\n  \"st\u0159edu\",\n  \"\u010Dtvrtek\",\n  \"p\u00E1tek\",\n  \"sobotu\",\n];\n\nconst formatRelativeLocale = {\n  lastWeek: \"'posledn\u00ED' eeee 've' p\",\n  yesterday: \"'v\u010Dera v' p\",\n  today: \"'dnes v' p\",\n  tomorrow: \"'z\u00EDtra v' p\",\n  nextWeek: (date) => {\n    const day = date.getDay();\n    return \"'v \" + accusativeWeekdays[day] + \" o' p\";\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"p\u0159. n. l.\", \"n. l.\"],\n  abbreviated: [\"p\u0159. n. l.\", \"n. l.\"],\n  wide: [\"p\u0159ed na\u0161\u00EDm letopo\u010Dtem\", \"na\u0161eho letopo\u010Dtu\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1. \u010Dtvrtlet\u00ED\", \"2. \u010Dtvrtlet\u00ED\", \"3. \u010Dtvrtlet\u00ED\", \"4. \u010Dtvrtlet\u00ED\"],\n\n  wide: [\"1. \u010Dtvrtlet\u00ED\", \"2. \u010Dtvrtlet\u00ED\", \"3. \u010Dtvrtlet\u00ED\", \"4. \u010Dtvrtlet\u00ED\"],\n};\n\nconst monthValues = {\n  narrow: [\"L\", \"\u00DA\", \"B\", \"D\", \"K\", \"\u010C\", \"\u010C\", \"S\", \"Z\", \"\u0158\", \"L\", \"P\"],\n  abbreviated: [\n    \"led\",\n    \"\u00FAno\",\n    \"b\u0159e\",\n    \"dub\",\n    \"kv\u011B\",\n    \"\u010Dvn\",\n    \"\u010Dvc\",\n    \"srp\",\n    \"z\u00E1\u0159\",\n    \"\u0159\u00EDj\",\n    \"lis\",\n    \"pro\",\n  ],\n\n  wide: [\n    \"leden\",\n    \"\u00FAnor\",\n    \"b\u0159ezen\",\n    \"duben\",\n    \"kv\u011Bten\",\n    \"\u010Derven\",\n    \"\u010Dervenec\",\n    \"srpen\",\n    \"z\u00E1\u0159\u00ED\",\n    \"\u0159\u00EDjen\",\n    \"listopad\",\n    \"prosinec\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"L\", \"\u00DA\", \"B\", \"D\", \"K\", \"\u010C\", \"\u010C\", \"S\", \"Z\", \"\u0158\", \"L\", \"P\"],\n  abbreviated: [\n    \"led\",\n    \"\u00FAno\",\n    \"b\u0159e\",\n    \"dub\",\n    \"kv\u011B\",\n    \"\u010Dvn\",\n    \"\u010Dvc\",\n    \"srp\",\n    \"z\u00E1\u0159\",\n    \"\u0159\u00EDj\",\n    \"lis\",\n    \"pro\",\n  ],\n\n  wide: [\n    \"ledna\",\n    \"\u00FAnora\",\n    \"b\u0159ezna\",\n    \"dubna\",\n    \"kv\u011Btna\",\n    \"\u010Dervna\",\n    \"\u010Dervence\",\n    \"srpna\",\n    \"z\u00E1\u0159\u00ED\",\n    \"\u0159\u00EDjna\",\n    \"listopadu\",\n    \"prosince\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"ne\", \"po\", \"\u00FAt\", \"st\", \"\u010Dt\", \"p\u00E1\", \"so\"],\n  short: [\"ne\", \"po\", \"\u00FAt\", \"st\", \"\u010Dt\", \"p\u00E1\", \"so\"],\n  abbreviated: [\"ned\", \"pon\", \"\u00FAte\", \"st\u0159\", \"\u010Dtv\", \"p\u00E1t\", \"sob\"],\n  wide: [\"ned\u011Ble\", \"pond\u011Bl\u00ED\", \"\u00FAter\u00FD\", \"st\u0159eda\", \"\u010Dtvrtek\", \"p\u00E1tek\", \"sobota\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"dop.\",\n    pm: \"odp.\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n  abbreviated: {\n    am: \"dop.\",\n    pm: \"odp.\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n  wide: {\n    am: \"dopoledne\",\n    pm: \"odpoledne\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"dop.\",\n    pm: \"odp.\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n  abbreviated: {\n    am: \"dop.\",\n    pm: \"odp.\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n  wide: {\n    am: \"dopoledne\",\n    pm: \"odpoledne\",\n    midnight: \"p\u016Flnoc\",\n    noon: \"poledne\",\n    morning: \"r\u00E1no\",\n    afternoon: \"odpoledne\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(p[\u0159r](\\.|ed) Kr\\.|p[\u0159r](\\.|ed) n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\n  abbreviated: /^(p[\u0159r](\\.|ed) Kr\\.|p[\u0159r](\\.|ed) n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\n  wide: /^(p[\u0159r](\\.|ed) Kristem|p[\u0159r](\\.|ed) na[\u0161s][\u00EDi]m letopo[\u010Dc]tem|po Kristu|na[\u0161s]eho letopo[\u010Dc]tu)/i,\n};\n\nconst parseEraPatterns = {\n  any: [/^p[\u0159r]/i, /^(po|n)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\. [\u010Dc]tvrtlet[\u00EDi]/i,\n  wide: /^[1234]\\. [\u010Dc]tvrtlet[\u00EDi]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[l\u00FAubdk\u010Dcsz\u0159rlp]/i,\n  abbreviated:\n    /^(led|[\u00FAu]no|b[\u0159r]e|dub|kv[\u011Be]|[\u010Dc]vn|[\u010Dc]vc|srp|z[\u00E1a][\u0159r]|[\u0159r][\u00EDi]j|lis|pro)/i,\n  wide: /^(leden|ledna|[\u00FAu]nora?|b[\u0159r]ezen|b[\u0159r]ezna|duben|dubna|kv[\u011Be]ten|kv[\u011Be]tna|[\u010Dc]erven(ec|ce)?|[\u010Dc]ervna|srpen|srpna|z[\u00E1a][\u0159r][\u00EDi]|[\u0159r][\u00EDi]jen|[\u0159r][\u00EDi]jna|listopad(a|u)?|prosinec|prosince)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^l/i,\n    /^[\u00FAu]/i,\n    /^b/i,\n    /^d/i,\n    /^k/i,\n    /^[\u010Dc]/i,\n    /^[\u010Dc]/i,\n    /^s/i,\n    /^z/i,\n    /^[\u0159r]/i,\n    /^l/i,\n    /^p/i,\n  ],\n\n  any: [\n    /^led/i,\n    /^[\u00FAu]n/i,\n    /^b[\u0159r]e/i,\n    /^dub/i,\n    /^kv[\u011Be]/i,\n    /^[\u010Dc]vn|[\u010Dc]erven(?!\\w)|[\u010Dc]ervna/i,\n    /^[\u010Dc]vc|[\u010Dc]erven(ec|ce)/i,\n    /^srp/i,\n    /^z[\u00E1a][\u0159r]/i,\n    /^[\u0159r][\u00EDi]j/i,\n    /^lis/i,\n    /^pro/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npu\u00FAs\u010Dps]/i,\n  short: /^(ne|po|[\u00FAu]t|st|[\u010Dc]t|p[\u00E1a]|so)/i,\n  abbreviated: /^(ned|pon|[\u00FAu]te|st[r\u0159]|[\u010Dc]tv|p[\u00E1a]t|sob)/i,\n  wide: /^(ned[\u011Be]le|pond[\u011Be]l[\u00EDi]|[\u00FAu]ter[\u00FDy]|st[\u0159r]eda|[\u010Dc]tvrtek|p[\u00E1a]tek|sobota)/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^n/i, /^p/i, /^[\u00FAu]/i, /^s/i, /^[\u010Dc]/i, /^p/i, /^s/i],\n  any: [/^ne/i, /^po/i, /^[\u00FAu]t/i, /^st/i, /^[\u010Dc]t/i, /^p[\u00E1a]/i, /^so/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^dopoledne|dop\\.?|odpoledne|odp\\.?|p[\u016Fu]lnoc|poledne|r[\u00E1a]no|odpoledne|ve[\u010Dc]er|(v )?noci?/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^dop/i,\n    pm: /^odp/i,\n    midnight: /^p[\u016Fu]lnoc/i,\n    noon: /^poledne/i,\n    morning: /r[\u00E1a]no/i,\n    afternoon: /odpoledne/i,\n    evening: /ve[\u010Dc]er/i,\n    night: /noc/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./cs/_lib/formatDistance.js\";\nimport { formatLong } from \"./cs/_lib/formatLong.js\";\nimport { formatRelative } from \"./cs/_lib/formatRelative.js\";\nimport { localize } from \"./cs/_lib/localize.js\";\nimport { match } from \"./cs/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Czech locale.\n * @language Czech\n * @iso-639-2 ces\n * @author David Rus [@davidrus](https://github.com/davidrus)\n * @author Pavel Hr\u00E1ch [@SilenY](https://github.com/SilenY)\n * @author Jozef B\u00EDro\u0161 [@JozefBiros](https://github.com/JozefBiros)\n */\nexport const cs = {\n  code: \"cs\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default cs;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"llai na eiliad\",\n    other: \"llai na {{count}} eiliad\",\n  },\n\n  xSeconds: {\n    one: \"1 eiliad\",\n    other: \"{{count}} eiliad\",\n  },\n\n  halfAMinute: \"hanner munud\",\n\n  lessThanXMinutes: {\n    one: \"llai na munud\",\n    two: \"llai na 2 funud\",\n    other: \"llai na {{count}} munud\",\n  },\n\n  xMinutes: {\n    one: \"1 munud\",\n    two: \"2 funud\",\n    other: \"{{count}} munud\",\n  },\n\n  aboutXHours: {\n    one: \"tua 1 awr\",\n    other: \"tua {{count}} awr\",\n  },\n\n  xHours: {\n    one: \"1 awr\",\n    other: \"{{count}} awr\",\n  },\n\n  xDays: {\n    one: \"1 diwrnod\",\n    two: \"2 ddiwrnod\",\n    other: \"{{count}} diwrnod\",\n  },\n\n  aboutXWeeks: {\n    one: \"tua 1 wythnos\",\n    two: \"tua pythefnos\",\n    other: \"tua {{count}} wythnos\",\n  },\n\n  xWeeks: {\n    one: \"1 wythnos\",\n    two: \"pythefnos\",\n    other: \"{{count}} wythnos\",\n  },\n\n  aboutXMonths: {\n    one: \"tua 1 mis\",\n    two: \"tua 2 fis\",\n    other: \"tua {{count}} mis\",\n  },\n\n  xMonths: {\n    one: \"1 mis\",\n    two: \"2 fis\",\n    other: \"{{count}} mis\",\n  },\n\n  aboutXYears: {\n    one: \"tua 1 flwyddyn\",\n    two: \"tua 2 flynedd\",\n    other: \"tua {{count}} mlynedd\",\n  },\n\n  xYears: {\n    one: \"1 flwyddyn\",\n    two: \"2 flynedd\",\n    other: \"{{count}} mlynedd\",\n  },\n\n  overXYears: {\n    one: \"dros 1 flwyddyn\",\n    two: \"dros 2 flynedd\",\n    other: \"dros {{count}} mlynedd\",\n  },\n\n  almostXYears: {\n    one: \"bron 1 flwyddyn\",\n    two: \"bron 2 flynedd\",\n    other: \"bron {{count}} mlynedd\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2 && !!tokenValue.two) {\n    result = tokenValue.two;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"mewn \" + result;\n    } else {\n      return result + \" yn \u00F4l\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'am' {{time}}\",\n  long: \"{{date}} 'am' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'diwethaf am' p\",\n  yesterday: \"'ddoe am' p\",\n  today: \"'heddiw am' p\",\n  tomorrow: \"'yfory am' p\",\n  nextWeek: \"eeee 'am' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"C\", \"O\"],\n  abbreviated: [\"CC\", \"OC\"],\n  wide: [\"Cyn Crist\", \"Ar \u00F4l Crist\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Ch1\", \"Ch2\", \"Ch3\", \"Ch4\"],\n  wide: [\"Chwarter 1af\", \"2ail chwarter\", \"3ydd chwarter\", \"4ydd chwarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"I\", \"Ch\", \"Ma\", \"E\", \"Mi\", \"Me\", \"G\", \"A\", \"Md\", \"H\", \"T\", \"Rh\"],\n\n  abbreviated: [\n    \"Ion\",\n    \"Chwe\",\n    \"Maw\",\n    \"Ebr\",\n    \"Mai\",\n    \"Meh\",\n    \"Gor\",\n    \"Aws\",\n    \"Med\",\n    \"Hyd\",\n    \"Tach\",\n    \"Rhag\",\n  ],\n\n  wide: [\n    \"Ionawr\",\n    \"Chwefror\",\n    \"Mawrth\",\n    \"Ebrill\",\n    \"Mai\",\n    \"Mehefin\",\n    \"Gorffennaf\",\n    \"Awst\",\n    \"Medi\",\n    \"Hydref\",\n    \"Tachwedd\",\n    \"Rhagfyr\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"Ll\", \"M\", \"M\", \"I\", \"G\", \"S\"],\n  short: [\"Su\", \"Ll\", \"Ma\", \"Me\", \"Ia\", \"Gw\", \"Sa\"],\n  abbreviated: [\"Sul\", \"Llun\", \"Maw\", \"Mer\", \"Iau\", \"Gwe\", \"Sad\"],\n  wide: [\n    \"dydd Sul\",\n    \"dydd Llun\",\n    \"dydd Mawrth\",\n    \"dydd Mercher\",\n    \"dydd Iau\",\n    \"dydd Gwener\",\n    \"dydd Sadwrn\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"b\",\n    pm: \"h\",\n    midnight: \"hn\",\n    noon: \"hd\",\n    morning: \"bore\",\n    afternoon: \"prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"nos\",\n  },\n  abbreviated: {\n    am: \"yb\",\n    pm: \"yh\",\n    midnight: \"hanner nos\",\n    noon: \"hanner dydd\",\n    morning: \"bore\",\n    afternoon: \"prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"nos\",\n  },\n  wide: {\n    am: \"y.b.\",\n    pm: \"y.h.\",\n    midnight: \"hanner nos\",\n    noon: \"hanner dydd\",\n    morning: \"bore\",\n    afternoon: \"prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"nos\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"b\",\n    pm: \"h\",\n    midnight: \"hn\",\n    noon: \"hd\",\n    morning: \"yn y bore\",\n    afternoon: \"yn y prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"yn y nos\",\n  },\n  abbreviated: {\n    am: \"yb\",\n    pm: \"yh\",\n    midnight: \"hanner nos\",\n    noon: \"hanner dydd\",\n    morning: \"yn y bore\",\n    afternoon: \"yn y prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"yn y nos\",\n  },\n  wide: {\n    am: \"y.b.\",\n    pm: \"y.h.\",\n    midnight: \"hanner nos\",\n    noon: \"hanner dydd\",\n    morning: \"yn y bore\",\n    afternoon: \"yn y prynhawn\",\n    evening: \"gyda'r nos\",\n    night: \"yn y nos\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  if (number < 20) {\n    switch (number) {\n      case 0:\n        return number + \"fed\";\n      case 1:\n        return number + \"af\";\n      case 2:\n        return number + \"ail\";\n      case 3:\n      case 4:\n        return number + \"ydd\";\n      case 5:\n      case 6:\n        return number + \"ed\";\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 12:\n      case 15:\n      case 18:\n        return number + \"fed\";\n      case 11:\n      case 13:\n      case 14:\n      case 16:\n      case 17:\n      case 19:\n        return number + \"eg\";\n    }\n  } else if ((number >= 50 && number <= 60) || number === 80 || number >= 100) {\n    return number + \"fed\";\n  }\n  return number + \"ain\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(af|ail|ydd|ed|fed|eg|ain)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(c|o)/i,\n  abbreviated: /^(c\\.?\\s?c\\.?|o\\.?\\s?c\\.?)/i,\n  wide: /^(cyn christ|ar \u00F4l crist|ar ol crist)/i,\n};\nconst parseEraPatterns = {\n  wide: [/^c/i, /^(ar \u00F4l crist|ar ol crist)/i],\n  any: [/^c/i, /^o/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^ch[1234]/i,\n  wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,\n  abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,\n  wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^i/i,\n    /^ch/i,\n    /^m/i,\n    /^e/i,\n    /^m/i,\n    /^m/i,\n    /^g/i,\n    /^a/i,\n    /^m/i,\n    /^h/i,\n    /^t/i,\n    /^rh/i,\n  ],\n\n  any: [\n    /^io/i,\n    /^ch/i,\n    /^maw/i,\n    /^e/i,\n    /^mai/i,\n    /^meh/i,\n    /^g/i,\n    /^a/i,\n    /^med/i,\n    /^h/i,\n    /^t/i,\n    /^rh/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(s|ll|m|i|g)/i,\n  short: /^(su|ll|ma|me|ia|gw|sa)/i,\n  abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,\n  wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i],\n  wide: [\n    /^dydd su/i,\n    /^dydd ll/i,\n    /^dydd ma/i,\n    /^dydd me/i,\n    /^dydd i/i,\n    /^dydd g/i,\n    /^dydd sa/i,\n  ],\n\n  any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,\n  any: /^(y\\.?\\s?[bh]\\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^b|(y\\.?\\s?b\\.?)/i,\n    pm: /^h|(y\\.?\\s?h\\.?)|(yr hwyr)/i,\n    midnight: /^hn|hanner nos/i,\n    noon: /^hd|hanner dydd/i,\n    morning: /bore/i,\n    afternoon: /prynhawn/i,\n    evening: /^gyda'r nos$/i,\n    night: /blah/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./cy/_lib/formatDistance.js\";\nimport { formatLong } from \"./cy/_lib/formatLong.js\";\nimport { formatRelative } from \"./cy/_lib/formatRelative.js\";\nimport { localize } from \"./cy/_lib/localize.js\";\nimport { match } from \"./cy/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Welsh locale.\n * @language Welsh\n * @iso-639-2 cym\n * @author Elwyn Malethan [@elmomalmo](https://github.com/elmomalmo)\n */\nexport const cy = {\n  code: \"cy\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default cy;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mindre end \u00E9t sekund\",\n    other: \"mindre end {{count}} sekunder\",\n  },\n\n  xSeconds: {\n    one: \"1 sekund\",\n    other: \"{{count}} sekunder\",\n  },\n\n  halfAMinute: \"\u00E9t halvt minut\",\n\n  lessThanXMinutes: {\n    one: \"mindre end \u00E9t minut\",\n    other: \"mindre end {{count}} minutter\",\n  },\n\n  xMinutes: {\n    one: \"1 minut\",\n    other: \"{{count}} minutter\",\n  },\n\n  aboutXHours: {\n    one: \"cirka 1 time\",\n    other: \"cirka {{count}} timer\",\n  },\n\n  xHours: {\n    one: \"1 time\",\n    other: \"{{count}} timer\",\n  },\n\n  xDays: {\n    one: \"1 dag\",\n    other: \"{{count}} dage\",\n  },\n\n  aboutXWeeks: {\n    one: \"cirka 1 uge\",\n    other: \"cirka {{count}} uger\",\n  },\n\n  xWeeks: {\n    one: \"1 uge\",\n    other: \"{{count}} uger\",\n  },\n\n  aboutXMonths: {\n    one: \"cirka 1 m\u00E5ned\",\n    other: \"cirka {{count}} m\u00E5neder\",\n  },\n\n  xMonths: {\n    one: \"1 m\u00E5ned\",\n    other: \"{{count}} m\u00E5neder\",\n  },\n\n  aboutXYears: {\n    one: \"cirka 1 \u00E5r\",\n    other: \"cirka {{count}} \u00E5r\",\n  },\n\n  xYears: {\n    one: \"1 \u00E5r\",\n    other: \"{{count}} \u00E5r\",\n  },\n\n  overXYears: {\n    one: \"over 1 \u00E5r\",\n    other: \"over {{count}} \u00E5r\",\n  },\n\n  almostXYears: {\n    one: \"n\u00E6sten 1 \u00E5r\",\n    other: \"n\u00E6sten {{count}} \u00E5r\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"om \" + result;\n    } else {\n      return result + \" siden\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE 'den' d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kl'. {{time}}\",\n  long: \"{{date}} 'kl'. {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'sidste' eeee 'kl.' p\",\n  yesterday: \"'i g\u00E5r kl.' p\",\n  today: \"'i dag kl.' p\",\n  tomorrow: \"'i morgen kl.' p\",\n  nextWeek: \"'p\u00E5' eeee 'kl.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"fvt\", \"vt\"],\n  abbreviated: [\"f.v.t.\", \"v.t.\"],\n  wide: [\"f\u00F8r vesterlandsk tidsregning\", \"vesterlandsk tidsregning\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1. kvt.\", \"2. kvt.\", \"3. kvt.\", \"4. kvt.\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mar.\",\n    \"apr.\",\n    \"maj\",\n    \"jun.\",\n    \"jul.\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"marts\",\n    \"april\",\n    \"maj\",\n    \"juni\",\n    \"juli\",\n    \"august\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"december\",\n  ],\n};\n\n// Note that 'Days - abbreviated - Formatting' has periods at the end.\n// https://www.unicode.org/cldr/charts/32/summary/da.html#1760\n// This makes grammatical sense in danish, as most abbreviations have periods.\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\n  short: [\"s\u00F8\", \"ma\", \"ti\", \"on\", \"to\", \"fr\", \"l\u00F8\"],\n  abbreviated: [\"s\u00F8n.\", \"man.\", \"tir.\", \"ons.\", \"tor.\", \"fre.\", \"l\u00F8r.\"],\n\n  wide: [\n    \"s\u00F8ndag\",\n    \"mandag\",\n    \"tirsdag\",\n    \"onsdag\",\n    \"torsdag\",\n    \"fredag\",\n    \"l\u00F8rdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"morgen\",\n    afternoon: \"eftermiddag\",\n    evening: \"aften\",\n    night: \"nat\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"morgen\",\n    afternoon: \"eftermiddag\",\n    evening: \"aften\",\n    night: \"nat\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"morgen\",\n    afternoon: \"eftermiddag\",\n    evening: \"aften\",\n    night: \"nat\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"om morgenen\",\n    afternoon: \"om eftermiddagen\",\n    evening: \"om aftenen\",\n    night: \"om natten\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"om morgenen\",\n    afternoon: \"om eftermiddagen\",\n    evening: \"om aftenen\",\n    night: \"om natten\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnat\",\n    noon: \"middag\",\n    morning: \"om morgenen\",\n    afternoon: \"om eftermiddagen\",\n    evening: \"om aftenen\",\n    night: \"om natten\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(fKr|fvt|eKr|vt)/i,\n  abbreviated: /^(f\\.Kr\\.?|f\\.v\\.t\\.?|e\\.Kr\\.?|v\\.t\\.)/i,\n  wide: /^(f.Kr.|f\u00F8r vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i,\n};\nconst parseEraPatterns = {\n  any: [/^f/i, /^(v|e)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]. kvt\\./i,\n  wide: /^[1234]\\.? kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\n  wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtofl]/i,\n  short: /^(s\u00F8n.|man.|tir.|ons.|tor.|fre.|l\u00F8r.)/i,\n  abbreviated: /^(s\u00F8n|man|tir|ons|tor|fre|l\u00F8r)/i,\n  wide: /^(s\u00F8ndag|mandag|tirsdag|onsdag|torsdag|fredag|l\u00F8rdag)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i],\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /midnat/i,\n    noon: /middag/i,\n    morning: /morgen/i,\n    afternoon: /eftermiddag/i,\n    evening: /aften/i,\n    night: /nat/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./da/_lib/formatDistance.js\";\nimport { formatLong } from \"./da/_lib/formatLong.js\";\nimport { formatRelative } from \"./da/_lib/formatRelative.js\";\nimport { localize } from \"./da/_lib/localize.js\";\nimport { match } from \"./da/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Danish locale.\n * @language Danish\n * @iso-639-2 dan\n * @author Mathias W\u00F8bbe [@MathiasKandelborg](https://github.com/MathiasKandelborg)\n * @author Anders B. Hansen [@Andersbiha](https://github.com/Andersbiha)\n * @author [@kgram](https://github.com/kgram)\n * @author [@stefanbugge](https://github.com/stefanbugge)\n */\nexport const da = {\n  code: \"da\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default da;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: \"weniger als 1 Sekunde\",\n      other: \"weniger als {{count}} Sekunden\",\n    },\n    withPreposition: {\n      one: \"weniger als 1 Sekunde\",\n      other: \"weniger als {{count}} Sekunden\",\n    },\n  },\n\n  xSeconds: {\n    standalone: {\n      one: \"1 Sekunde\",\n      other: \"{{count}} Sekunden\",\n    },\n    withPreposition: {\n      one: \"1 Sekunde\",\n      other: \"{{count}} Sekunden\",\n    },\n  },\n\n  halfAMinute: {\n    standalone: \"eine halbe Minute\",\n    withPreposition: \"einer halben Minute\",\n  },\n\n  lessThanXMinutes: {\n    standalone: {\n      one: \"weniger als 1 Minute\",\n      other: \"weniger als {{count}} Minuten\",\n    },\n    withPreposition: {\n      one: \"weniger als 1 Minute\",\n      other: \"weniger als {{count}} Minuten\",\n    },\n  },\n\n  xMinutes: {\n    standalone: {\n      one: \"1 Minute\",\n      other: \"{{count}} Minuten\",\n    },\n    withPreposition: {\n      one: \"1 Minute\",\n      other: \"{{count}} Minuten\",\n    },\n  },\n\n  aboutXHours: {\n    standalone: {\n      one: \"etwa 1 Stunde\",\n      other: \"etwa {{count}} Stunden\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Stunde\",\n      other: \"etwa {{count}} Stunden\",\n    },\n  },\n\n  xHours: {\n    standalone: {\n      one: \"1 Stunde\",\n      other: \"{{count}} Stunden\",\n    },\n    withPreposition: {\n      one: \"1 Stunde\",\n      other: \"{{count}} Stunden\",\n    },\n  },\n\n  xDays: {\n    standalone: {\n      one: \"1 Tag\",\n      other: \"{{count}} Tage\",\n    },\n    withPreposition: {\n      one: \"1 Tag\",\n      other: \"{{count}} Tagen\",\n    },\n  },\n\n  aboutXWeeks: {\n    standalone: {\n      one: \"etwa 1 Woche\",\n      other: \"etwa {{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Woche\",\n      other: \"etwa {{count}} Wochen\",\n    },\n  },\n\n  xWeeks: {\n    standalone: {\n      one: \"1 Woche\",\n      other: \"{{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"1 Woche\",\n      other: \"{{count}} Wochen\",\n    },\n  },\n\n  aboutXMonths: {\n    standalone: {\n      one: \"etwa 1 Monat\",\n      other: \"etwa {{count}} Monate\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Monat\",\n      other: \"etwa {{count}} Monaten\",\n    },\n  },\n\n  xMonths: {\n    standalone: {\n      one: \"1 Monat\",\n      other: \"{{count}} Monate\",\n    },\n    withPreposition: {\n      one: \"1 Monat\",\n      other: \"{{count}} Monaten\",\n    },\n  },\n\n  aboutXYears: {\n    standalone: {\n      one: \"etwa 1 Jahr\",\n      other: \"etwa {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Jahr\",\n      other: \"etwa {{count}} Jahren\",\n    },\n  },\n\n  xYears: {\n    standalone: {\n      one: \"1 Jahr\",\n      other: \"{{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"1 Jahr\",\n      other: \"{{count}} Jahren\",\n    },\n  },\n\n  overXYears: {\n    standalone: {\n      one: \"mehr als 1 Jahr\",\n      other: \"mehr als {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"mehr als 1 Jahr\",\n      other: \"mehr als {{count}} Jahren\",\n    },\n  },\n\n  almostXYears: {\n    standalone: {\n      one: \"fast 1 Jahr\",\n      other: \"fast {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"fast 1 Jahr\",\n      other: \"fast {{count}} Jahren\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = options?.addSuffix\n    ? formatDistanceLocale[token].withPreposition\n    : formatDistanceLocale[token].standalone;\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return \"vor \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\nconst dateFormats = {\n  full: \"EEEE, do MMMM y\", // Montag, 7. Januar 2018\n  long: \"do MMMM y\", // 7. Januar 2018\n  medium: \"do MMM y\", // 7. Jan. 2018\n  short: \"dd.MM.y\", // 07.01.2018\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'um' {{time}}\",\n  long: \"{{date}} 'um' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'letzten' eeee 'um' p\",\n  yesterday: \"'gestern um' p\",\n  today: \"'heute um' p\",\n  tomorrow: \"'morgen um' p\",\n  nextWeek: \"eeee 'um' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"vor Christus\", \"nach Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\n};\n\n// Note: in German, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"M\u00E4r\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dez\",\n  ],\n\n  wide: [\n    \"Januar\",\n    \"Februar\",\n    \"M\u00E4rz\",\n    \"April\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"August\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Dezember\",\n  ],\n};\n\n// https://st.unicode.org/cldr-apps/v#/de/Gregorian/\nconst formattingMonthValues = {\n  narrow: monthValues.narrow,\n  abbreviated: [\n    \"Jan.\",\n    \"Feb.\",\n    \"M\u00E4rz\",\n    \"Apr.\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"Aug.\",\n    \"Sep.\",\n    \"Okt.\",\n    \"Nov.\",\n    \"Dez.\",\n  ],\n\n  wide: monthValues.wide,\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\n  short: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n  abbreviated: [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"],\n  wide: [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/de.html#1881\nconst dayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachm.\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachm.\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    formattingValues: formattingMonthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i,\n};\nconst parseEraPatterns = {\n  any: [/^v/i, /^n/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? Quartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(j[a\u00E4]n|feb|m\u00E4r[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\\.?/i,\n  wide: /^(januar|februar|m\u00E4rz|april|mai|juni|juli|august|september|oktober|november|dezember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^j[a\u00E4]/i,\n    /^f/i,\n    /^m\u00E4r/i,\n    /^ap/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smdmf]/i,\n  short: /^(so|mo|di|mi|do|fr|sa)/i,\n  abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\\.?/i,\n  wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i,\n};\nconst parseDayPatterns = {\n  any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(vm\\.?|nm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  abbreviated:\n    /^(vorm\\.?|nachm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^v/i,\n    pm: /^n/i,\n    midnight: /^Mitte/i,\n    noon: /^Mitta/i,\n    morning: /morgens/i,\n    afternoon: /nachmittags/i, // will never be matched. Afternoon is matched by `pm`\n    evening: /abends/i,\n    night: /nachts/i, // will never be matched. Night is matched by `pm`\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./de/_lib/formatDistance.js\";\nimport { formatLong } from \"./de/_lib/formatLong.js\";\nimport { formatRelative } from \"./de/_lib/formatRelative.js\";\nimport { localize } from \"./de/_lib/localize.js\";\nimport { match } from \"./de/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary German locale.\n * @language German\n * @iso-639-2 deu\n * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)\n * @author Asia [@asia-t](https://github.com/asia-t)\n * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)\n * @author RomanErnst [@pex](https://github.com/pex)\n * @author Philipp Keck [@Philipp91](https://github.com/Philipp91)\n */\nexport const de = {\n  code: \"de\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default de;\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"vor Christus\", \"nach Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\n};\n\n// Note: in German, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"J\u00E4n\",\n    \"Feb\",\n    \"M\u00E4r\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dez\",\n  ],\n\n  wide: [\n    \"J\u00E4nner\",\n    \"Februar\",\n    \"M\u00E4rz\",\n    \"April\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"August\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Dezember\",\n  ],\n};\n\n// https://st.unicode.org/cldr-apps/v#/de_AT/Gregorian/\nconst formattingMonthValues = {\n  narrow: monthValues.narrow,\n  abbreviated: [\n    \"J\u00E4n.\",\n    \"Feb.\",\n    \"M\u00E4rz\",\n    \"Apr.\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"Aug.\",\n    \"Sep.\",\n    \"Okt.\",\n    \"Nov.\",\n    \"Dez.\",\n  ],\n\n  wide: monthValues.wide,\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\n  short: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n  abbreviated: [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"],\n  wide: [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/de.html#1881\nconst dayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachm.\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachm.\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    formattingValues: formattingMonthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { formatDistance } from \"./de/_lib/formatDistance.js\";\nimport { formatLong } from \"./de/_lib/formatLong.js\";\nimport { formatRelative } from \"./de/_lib/formatRelative.js\";\nimport { match } from \"./de/_lib/match.js\";\n\n// difference to 'de' locale\nimport { localize } from \"./de-AT/_lib/localize.js\";\n\n/**\n * @category Locales\n * @summary German locale (Austria).\n * @language German\n * @iso-639-2 deu\n * @author Christoph Tobias Stenglein [@cstenglein](https://github.com/cstenglein)\n */\nexport const deAT = {\n  code: \"de-AT\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default deAT;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF\",\n    other: \"\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC {{count}} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1\",\n  },\n\n  xSeconds: {\n    one: \"1 \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03BF\",\n    other: \"{{count}} \u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03CC\u03BB\u03B5\u03C0\u03C4\u03B1\",\n  },\n\n  halfAMinute: \"\u03BC\u03B9\u03C3\u03CC \u03BB\u03B5\u03C0\u03C4\u03CC\",\n\n  lessThanXMinutes: {\n    one: \"\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC \u03AD\u03BD\u03B1 \u03BB\u03B5\u03C0\u03C4\u03CC\",\n    other: \"\u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C0\u03CC {{count}} \u03BB\u03B5\u03C0\u03C4\u03AC\",\n  },\n\n  xMinutes: {\n    one: \"1 \u03BB\u03B5\u03C0\u03C4\u03CC\",\n    other: \"{{count}} \u03BB\u03B5\u03C0\u03C4\u03AC\",\n  },\n\n  aboutXHours: {\n    one: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 1 \u03CE\u03C1\u03B1\",\n    other: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 {{count}} \u03CE\u03C1\u03B5\u03C2\",\n  },\n\n  xHours: {\n    one: \"1 \u03CE\u03C1\u03B1\",\n    other: \"{{count}} \u03CE\u03C1\u03B5\u03C2\",\n  },\n\n  xDays: {\n    one: \"1 \u03B7\u03BC\u03AD\u03C1\u03B1\",\n    other: \"{{count}} \u03B7\u03BC\u03AD\u03C1\u03B5\u03C2\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 1 \u03B5\u03B2\u03B4\u03BF\u03BC\u03AC\u03B4\u03B1\",\n    other: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 {{count}} \u03B5\u03B2\u03B4\u03BF\u03BC\u03AC\u03B4\u03B5\u03C2\",\n  },\n\n  xWeeks: {\n    one: \"1 \u03B5\u03B2\u03B4\u03BF\u03BC\u03AC\u03B4\u03B1\",\n    other: \"{{count}} \u03B5\u03B2\u03B4\u03BF\u03BC\u03AC\u03B4\u03B5\u03C2\",\n  },\n\n  aboutXMonths: {\n    one: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 1 \u03BC\u03AE\u03BD\u03B1\u03C2\",\n    other: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 {{count}} \u03BC\u03AE\u03BD\u03B5\u03C2\",\n  },\n\n  xMonths: {\n    one: \"1 \u03BC\u03AE\u03BD\u03B1\u03C2\",\n    other: \"{{count}} \u03BC\u03AE\u03BD\u03B5\u03C2\",\n  },\n\n  aboutXYears: {\n    one: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 1 \u03C7\u03C1\u03CC\u03BD\u03BF\",\n    other: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 {{count}} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1\",\n  },\n\n  xYears: {\n    one: \"1 \u03C7\u03C1\u03CC\u03BD\u03BF\",\n    other: \"{{count}} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1\",\n  },\n\n  overXYears: {\n    one: \"\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC 1 \u03C7\u03C1\u03CC\u03BD\u03BF\",\n    other: \"\u03C0\u03AC\u03BD\u03C9 \u03B1\u03C0\u03CC {{count}} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1\",\n  },\n\n  almostXYears: {\n    one: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 1 \u03C7\u03C1\u03CC\u03BD\u03BF\",\n    other: \"\u03C0\u03B5\u03C1\u03AF\u03C0\u03BF\u03C5 {{count}} \u03C7\u03C1\u03CC\u03BD\u03B9\u03B1\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u03C3\u03B5 \" + result;\n    } else {\n      return result + \" \u03C0\u03C1\u03B9\u03BD\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"d/M/yy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} - {{time}}\",\n  long: \"{{date}} - {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    switch (date.getDay()) {\n      case 6: //\u03A3\u03AC\u03B2\u03B2\u03B1\u03C4\u03BF\n        return \"'\u03C4\u03BF \u03C0\u03C1\u03BF\u03B7\u03B3\u03BF\u03CD\u03BC\u03B5\u03BD\u03BF' eeee '\u03C3\u03C4\u03B9\u03C2' p\";\n      default:\n        return \"'\u03C4\u03B7\u03BD \u03C0\u03C1\u03BF\u03B7\u03B3\u03BF\u03CD\u03BC\u03B5\u03BD\u03B7' eeee '\u03C3\u03C4\u03B9\u03C2' p\";\n    }\n  },\n  yesterday: \"'\u03C7\u03B8\u03B5\u03C2 \u03C3\u03C4\u03B9\u03C2' p\",\n  today: \"'\u03C3\u03AE\u03BC\u03B5\u03C1\u03B1 \u03C3\u03C4\u03B9\u03C2' p\",\n  tomorrow: \"'\u03B1\u03CD\u03C1\u03B9\u03BF \u03C3\u03C4\u03B9\u03C2' p\",\n  nextWeek: \"eeee '\u03C3\u03C4\u03B9\u03C2' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") return format(date);\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u03C0\u03A7\", \"\u03BC\u03A7\"],\n  abbreviated: [\"\u03C0.\u03A7.\", \"\u03BC.\u03A7.\"],\n  wide: [\"\u03C0\u03C1\u03BF \u03A7\u03C1\u03B9\u03C3\u03C4\u03BF\u03CD\", \"\u03BC\u03B5\u03C4\u03AC \u03A7\u03C1\u03B9\u03C3\u03C4\u03CC\u03BD\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u03A41\", \"\u03A42\", \"\u03A43\", \"\u03A44\"],\n  wide: [\"1\u03BF \u03C4\u03C1\u03AF\u03BC\u03B7\u03BD\u03BF\", \"2\u03BF \u03C4\u03C1\u03AF\u03BC\u03B7\u03BD\u03BF\", \"3\u03BF \u03C4\u03C1\u03AF\u03BC\u03B7\u03BD\u03BF\", \"4\u03BF \u03C4\u03C1\u03AF\u03BC\u03B7\u03BD\u03BF\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u0399\", \"\u03A6\", \"\u039C\", \"\u0391\", \"\u039C\", \"\u0399\", \"\u0399\", \"\u0391\", \"\u03A3\", \"\u039F\", \"\u039D\", \"\u0394\"],\n  abbreviated: [\n    \"\u0399\u03B1\u03BD\",\n    \"\u03A6\u03B5\u03B2\",\n    \"\u039C\u03AC\u03C1\",\n    \"\u0391\u03C0\u03C1\",\n    \"\u039C\u03AC\u03B9\",\n    \"\u0399\u03BF\u03CD\u03BD\",\n    \"\u0399\u03BF\u03CD\u03BB\",\n    \"\u0391\u03CD\u03B3\",\n    \"\u03A3\u03B5\u03C0\",\n    \"\u039F\u03BA\u03C4\",\n    \"\u039D\u03BF\u03AD\",\n    \"\u0394\u03B5\u03BA\",\n  ],\n\n  wide: [\n    \"\u0399\u03B1\u03BD\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2\",\n    \"\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03AC\u03C1\u03B9\u03BF\u03C2\",\n    \"\u039C\u03AC\u03C1\u03C4\u03B9\u03BF\u03C2\",\n    \"\u0391\u03C0\u03C1\u03AF\u03BB\u03B9\u03BF\u03C2\",\n    \"\u039C\u03AC\u03B9\u03BF\u03C2\",\n    \"\u0399\u03BF\u03CD\u03BD\u03B9\u03BF\u03C2\",\n    \"\u0399\u03BF\u03CD\u03BB\u03B9\u03BF\u03C2\",\n    \"\u0391\u03CD\u03B3\u03BF\u03C5\u03C3\u03C4\u03BF\u03C2\",\n    \"\u03A3\u03B5\u03C0\u03C4\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2\",\n    \"\u039F\u03BA\u03C4\u03CE\u03B2\u03C1\u03B9\u03BF\u03C2\",\n    \"\u039D\u03BF\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2\",\n    \"\u0394\u03B5\u03BA\u03AD\u03BC\u03B2\u03C1\u03B9\u03BF\u03C2\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"\u0399\", \"\u03A6\", \"\u039C\", \"\u0391\", \"\u039C\", \"\u0399\", \"\u0399\", \"\u0391\", \"\u03A3\", \"\u039F\", \"\u039D\", \"\u0394\"],\n  abbreviated: [\n    \"\u0399\u03B1\u03BD\",\n    \"\u03A6\u03B5\u03B2\",\n    \"\u039C\u03B1\u03C1\",\n    \"\u0391\u03C0\u03C1\",\n    \"\u039C\u03B1\u0390\",\n    \"\u0399\u03BF\u03C5\u03BD\",\n    \"\u0399\u03BF\u03C5\u03BB\",\n    \"\u0391\u03C5\u03B3\",\n    \"\u03A3\u03B5\u03C0\",\n    \"\u039F\u03BA\u03C4\",\n    \"\u039D\u03BF\u03B5\",\n    \"\u0394\u03B5\u03BA\",\n  ],\n\n  wide: [\n    \"\u0399\u03B1\u03BD\u03BF\u03C5\u03B1\u03C1\u03AF\u03BF\u03C5\",\n    \"\u03A6\u03B5\u03B2\u03C1\u03BF\u03C5\u03B1\u03C1\u03AF\u03BF\u03C5\",\n    \"\u039C\u03B1\u03C1\u03C4\u03AF\u03BF\u03C5\",\n    \"\u0391\u03C0\u03C1\u03B9\u03BB\u03AF\u03BF\u03C5\",\n    \"\u039C\u03B1\u0390\u03BF\u03C5\",\n    \"\u0399\u03BF\u03C5\u03BD\u03AF\u03BF\u03C5\",\n    \"\u0399\u03BF\u03C5\u03BB\u03AF\u03BF\u03C5\",\n    \"\u0391\u03C5\u03B3\u03BF\u03CD\u03C3\u03C4\u03BF\u03C5\",\n    \"\u03A3\u03B5\u03C0\u03C4\u03B5\u03BC\u03B2\u03C1\u03AF\u03BF\u03C5\",\n    \"\u039F\u03BA\u03C4\u03C9\u03B2\u03C1\u03AF\u03BF\u03C5\",\n    \"\u039D\u03BF\u03B5\u03BC\u03B2\u03C1\u03AF\u03BF\u03C5\",\n    \"\u0394\u03B5\u03BA\u03B5\u03BC\u03B2\u03C1\u03AF\u03BF\u03C5\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u039A\", \"\u0394\", \"T\", \"\u03A4\", \"\u03A0\", \"\u03A0\", \"\u03A3\"],\n  short: [\"\u039A\u03C5\", \"\u0394\u03B5\", \"\u03A4\u03C1\", \"\u03A4\u03B5\", \"\u03A0\u03AD\", \"\u03A0\u03B1\", \"\u03A3\u03AC\"],\n  abbreviated: [\"\u039A\u03C5\u03C1\", \"\u0394\u03B5\u03C5\", \"\u03A4\u03C1\u03AF\", \"\u03A4\u03B5\u03C4\", \"\u03A0\u03AD\u03BC\", \"\u03A0\u03B1\u03C1\", \"\u03A3\u03AC\u03B2\"],\n  wide: [\n    \"\u039A\u03C5\u03C1\u03B9\u03B1\u03BA\u03AE\",\n    \"\u0394\u03B5\u03C5\u03C4\u03AD\u03C1\u03B1\",\n    \"\u03A4\u03C1\u03AF\u03C4\u03B7\",\n    \"\u03A4\u03B5\u03C4\u03AC\u03C1\u03C4\u03B7\",\n    \"\u03A0\u03AD\u03BC\u03C0\u03C4\u03B7\",\n    \"\u03A0\u03B1\u03C1\u03B1\u03C3\u03BA\u03B5\u03C5\u03AE\",\n    \"\u03A3\u03AC\u03B2\u03B2\u03B1\u03C4\u03BF\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u03C0\u03BC\",\n    pm: \"\u03BC\u03BC\",\n    midnight: \"\u03BC\u03B5\u03C3\u03AC\u03BD\u03C5\u03C7\u03C4\u03B1\",\n    noon: \"\u03BC\u03B5\u03C3\u03B7\u03BC\u03AD\u03C1\u03B9\",\n    morning: \"\u03C0\u03C1\u03C9\u03AF\",\n    afternoon: \"\u03B1\u03C0\u03CC\u03B3\u03B5\u03C5\u03BC\u03B1\",\n    evening: \"\u03B2\u03C1\u03AC\u03B4\u03C5\",\n    night: \"\u03BD\u03CD\u03C7\u03C4\u03B1\",\n  },\n  abbreviated: {\n    am: \"\u03C0.\u03BC.\",\n    pm: \"\u03BC.\u03BC.\",\n    midnight: \"\u03BC\u03B5\u03C3\u03AC\u03BD\u03C5\u03C7\u03C4\u03B1\",\n    noon: \"\u03BC\u03B5\u03C3\u03B7\u03BC\u03AD\u03C1\u03B9\",\n    morning: \"\u03C0\u03C1\u03C9\u03AF\",\n    afternoon: \"\u03B1\u03C0\u03CC\u03B3\u03B5\u03C5\u03BC\u03B1\",\n    evening: \"\u03B2\u03C1\u03AC\u03B4\u03C5\",\n    night: \"\u03BD\u03CD\u03C7\u03C4\u03B1\",\n  },\n  wide: {\n    am: \"\u03C0.\u03BC.\",\n    pm: \"\u03BC.\u03BC.\",\n    midnight: \"\u03BC\u03B5\u03C3\u03AC\u03BD\u03C5\u03C7\u03C4\u03B1\",\n    noon: \"\u03BC\u03B5\u03C3\u03B7\u03BC\u03AD\u03C1\u03B9\",\n    morning: \"\u03C0\u03C1\u03C9\u03AF\",\n    afternoon: \"\u03B1\u03C0\u03CC\u03B3\u03B5\u03C5\u03BC\u03B1\",\n    evening: \"\u03B2\u03C1\u03AC\u03B4\u03C5\",\n    night: \"\u03BD\u03CD\u03C7\u03C4\u03B1\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n  let suffix;\n\n  if (unit === \"year\" || unit === \"month\") {\n    suffix = \"\u03BF\u03C2\";\n  } else if (\n    unit === \"week\" ||\n    unit === \"dayOfYear\" ||\n    unit === \"day\" ||\n    unit === \"hour\" ||\n    unit === \"date\"\n  ) {\n    suffix = \"\u03B7\";\n  } else {\n    suffix = \"\u03BF\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u03BF\u03C2|\u03B7|\u03BF)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u03C0\u03A7|\u03BC\u03A7)/i,\n  abbreviated: /^(\u03C0\\.?\\s?\u03C7\\.?|\u03C0\\.?\\s?\u03BA\\.?\\s?\u03C7\\.?|\u03BC\\.?\\s?\u03C7\\.?|\u03BA\\.?\\s?\u03C7\\.?)/i,\n  wide: /^(\u03C0\u03C1\u03BF \u03A7\u03C1\u03B9\u03C3\u03C4\u03BF(\u03CD|\u03C5)|\u03C0\u03C1\u03B9\u03BD \u03B1\u03C0(\u03CC|\u03BF) \u03C4\u03B7\u03BD \u039A\u03BF\u03B9\u03BD(\u03AE|\u03B7) \u03A7\u03C1\u03BF\u03BD\u03BF\u03BB\u03BF\u03B3(\u03AF|\u03B9)\u03B1|\u03BC\u03B5\u03C4(\u03AC|\u03B1) \u03A7\u03C1\u03B9\u03C3\u03C4(\u03CC|\u03BF)\u03BD|\u039A\u03BF\u03B9\u03BD(\u03AE|\u03B7) \u03A7\u03C1\u03BF\u03BD\u03BF\u03BB\u03BF\u03B3(\u03AF|\u03B9)\u03B1)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u03C0/i, /^(\u03BC|\u03BA)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u03C4[1234]/i,\n  wide: /^[1234]\u03BF? \u03C4\u03C1(\u03AF|\u03B9)\u03BC\u03B7\u03BD\u03BF/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u03B9\u03C6\u03BC\u03B1\u03BC\u03B9\u03B9\u03B1\u03C3\u03BF\u03BD\u03B4]/i,\n  abbreviated:\n    /^(\u03B9\u03B1\u03BD|\u03C6\u03B5\u03B2|\u03BC[\u03AC\u03B1]\u03C1|\u03B1\u03C0\u03C1|\u03BC[\u03AC\u03B1][\u03B9\u0390]|\u03B9\u03BF[\u03CD\u03C5]\u03BD|\u03B9\u03BF[\u03CD\u03C5]\u03BB|\u03B1[\u03CD\u03C5]\u03B3|\u03C3\u03B5\u03C0|\u03BF\u03BA\u03C4|\u03BD\u03BF[\u03AD\u03B5]|\u03B4\u03B5\u03BA)/i,\n  wide: /^(\u03BC[\u03AC\u03B1][\u03B9\u0390]|\u03B1[\u03CD\u03C5]\u03B3\u03BF[\u03C5\u03CD]\u03C3\u03C4)(\u03BF\u03C2|\u03BF\u03C5)|(\u03B9\u03B1\u03BD\u03BF\u03C5[\u03AC\u03B1]\u03C1|\u03C6\u03B5\u03B2\u03C1\u03BF\u03C5[\u03AC\u03B1]\u03C1|\u03BC[\u03AC\u03B1]\u03C1\u03C4|\u03B1\u03C0\u03C1[\u03AF\u03B9]\u03BB|\u03B9\u03BF[\u03CD\u03C5]\u03BD|\u03B9\u03BF[\u03CD\u03C5]\u03BB|\u03C3\u03B5\u03C0\u03C4[\u03AD\u03B5]\u03BC\u03B2\u03C1|\u03BF\u03BA\u03C4[\u03CE\u03C9]\u03B2\u03C1|\u03BD\u03BF[\u03AD\u03B5]\u03BC\u03B2\u03C1|\u03B4\u03B5\u03BA[\u03AD\u03B5]\u03BC\u03B2\u03C1)(\u03B9\u03BF\u03C2|\u03AF\u03BF\u03C5)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u03B9/i,\n    /^\u03C6/i,\n    /^\u03BC/i,\n    /^\u03B1/i,\n    /^\u03BC/i,\n    /^\u03B9/i,\n    /^\u03B9/i,\n    /^\u03B1/i,\n    /^\u03C3/i,\n    /^\u03BF/i,\n    /^\u03BD/i,\n    /^\u03B4/i,\n  ],\n\n  any: [\n    /^\u03B9\u03B1/i,\n    /^\u03C6/i,\n    /^\u03BC[\u03AC\u03B1]\u03C1/i,\n    /^\u03B1\u03C0/i,\n    /^\u03BC[\u03AC\u03B1][\u03B9\u0390]/i,\n    /^\u03B9\u03BF[\u03CD\u03C5]\u03BD/i,\n    /^\u03B9\u03BF[\u03CD\u03C5]\u03BB/i,\n    /^\u03B1[\u03CD\u03C5]/i,\n    /^\u03C3/i,\n    /^\u03BF/i,\n    /^\u03BD/i,\n    /^\u03B4/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u03BA\u03B4\u03C4\u03C0\u03C3]/i,\n  short: /^(\u03BA\u03C5|\u03B4\u03B5|\u03C4\u03C1|\u03C4\u03B5|\u03C0[\u03B5\u03AD]|\u03C0[\u03B1\u03AC]|\u03C3[\u03B1\u03AC])/i,\n  abbreviated: /^(\u03BA\u03C5\u03C1|\u03B4\u03B5\u03C5|\u03C4\u03C1\u03B9|\u03C4\u03B5\u03C4|\u03C0\u03B5\u03BC|\u03C0\u03B1\u03C1|\u03C3\u03B1\u03B2)/i,\n  wide: /^(\u03BA\u03C5\u03C1\u03B9\u03B1\u03BA(\u03AE|\u03B7)|\u03B4\u03B5\u03C5\u03C4(\u03AD|\u03B5)\u03C1\u03B1|\u03C4\u03C1(\u03AF|\u03B9)\u03C4\u03B7|\u03C4\u03B5\u03C4(\u03AC|\u03B1)\u03C1\u03C4\u03B7|\u03C0(\u03AD|\u03B5)\u03BC\u03C0\u03C4\u03B7|\u03C0\u03B1\u03C1\u03B1\u03C3\u03BA\u03B5\u03C5(\u03AE|\u03B7)|\u03C3(\u03AC|\u03B1)\u03B2\u03B2\u03B1\u03C4\u03BF)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u03BA/i, /^\u03B4/i, /^\u03C4/i, /^\u03C4/i, /^\u03C0/i, /^\u03C0/i, /^\u03C3/i],\n  any: [/^\u03BA/i, /^\u03B4/i, /^\u03C4\u03C1/i, /^\u03C4\u03B5/i, /^\u03C0[\u03B5\u03AD]/i, /^\u03C0[\u03B1\u03AC]/i, /^\u03C3/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(\u03C0\u03BC|\u03BC\u03BC|\u03BC\u03B5\u03C3(\u03AC|\u03B1)\u03BD\u03C5\u03C7\u03C4\u03B1|\u03BC\u03B5\u03C3\u03B7\u03BC(\u03AD|\u03B5)\u03C1\u03B9|\u03C0\u03C1\u03C9(\u03AF|\u03B9)|\u03B1\u03C0(\u03CC|\u03BF)\u03B3\u03B5\u03C5\u03BC\u03B1|\u03B2\u03C1(\u03AC|\u03B1)\u03B4\u03C5|\u03BD(\u03CD|\u03C5)\u03C7\u03C4\u03B1)/i,\n  any: /^([\u03C0\u03BC]\\.?\\s?\u03BC\\.?|\u03BC\u03B5\u03C3(\u03AC|\u03B1)\u03BD\u03C5\u03C7\u03C4\u03B1|\u03BC\u03B5\u03C3\u03B7\u03BC(\u03AD|\u03B5)\u03C1\u03B9|\u03C0\u03C1\u03C9(\u03AF|\u03B9)|\u03B1\u03C0(\u03CC|\u03BF)\u03B3\u03B5\u03C5\u03BC\u03B1|\u03B2\u03C1(\u03AC|\u03B1)\u03B4\u03C5|\u03BD(\u03CD|\u03C5)\u03C7\u03C4\u03B1)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u03C0\u03BC|\u03C0\\.\\s?\u03BC\\./i,\n    pm: /^\u03BC\u03BC|\u03BC\\.\\s?\u03BC\\./i,\n    midnight: /^\u03BC\u03B5\u03C3\u03AC\u03BD/i,\n    noon: /^\u03BC\u03B5\u03C3\u03B7\u03BC(\u03AD|\u03B5)/i,\n    morning: /\u03C0\u03C1\u03C9(\u03AF|\u03B9)/i,\n    afternoon: /\u03B1\u03C0(\u03CC|\u03BF)\u03B3\u03B5\u03C5\u03BC\u03B1/i,\n    evening: /\u03B2\u03C1(\u03AC|\u03B1)\u03B4\u03C5/i,\n    night: /\u03BD(\u03CD|\u03C5)\u03C7\u03C4\u03B1/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./el/_lib/formatDistance.js\";\nimport { formatLong } from \"./el/_lib/formatLong.js\";\nimport { formatRelative } from \"./el/_lib/formatRelative.js\";\nimport { localize } from \"./el/_lib/localize.js\";\nimport { match } from \"./el/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Greek locale.\n * @language Greek\n * @iso-639-2 ell\n * @author Fanis Katsimpas [@fanixk](https://github.com/fanixk)\n * @author Theodoros Orfanidis [@teoulas](https://github.com/teoulas)\n */\nexport const el = {\n  code: \"el\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default el;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-AU/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (Australia).\n * @language English\n * @iso-639-2 eng\n * @author Julien Malige [@JulienMalige](https://github.com/JulienMalige)\n */\nexport const enAU = {\n  code: \"en-AU\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enAU;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"a second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"a minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about an hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"an hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"a day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about a week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"a week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about a month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"a month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about a year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"a year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over a year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost a year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, yyyy\",\n  long: \"MMMM do, yyyy\",\n  medium: \"MMM d, yyyy\",\n  short: \"yyyy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatDistance } from \"./en-CA/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-CA/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (Canada).\n * @language English\n * @iso-639-2 eng\n * @author Mark Owsiak [@markowsiak](https://github.com/markowsiak)\n * @author Marco Imperatore [@mimperatore](https://github.com/mimperatore)\n */\nexport const enCA = {\n  code: \"en-CA\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enCA;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-GB/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author Alex [@glintik](https://github.com/glintik)\n */\nexport const enGB = {\n  code: \"en-GB\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enGB;\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-GB/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (Ireland).\n * @language English\n * @iso-639-2 eng\n * @author Tetiana [@tan75](https://github.com/tan75)\n */\nexport const enIE = {\n  code: \"en-IE\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enIE;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM, yyyy\",\n  medium: \"d MMM, yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-IN/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (India).\n * @language English\n * @iso-639-2 eng\n * @author Galeel Bhasha Satthar [@gbhasha](https://github.com/gbhasha)\n */\nexport const enIN = {\n  code: \"en-IN\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1, // Monday is the first day of the week.\n    firstWeekContainsDate: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n\n// Fallback for modularized imports:\nexport default enIN;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-NZ/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (New Zealand).\n * @language English\n * @iso-639-2 eng\n * @author Murray Lucas [@muntact](https://github.com/muntact)\n */\nexport const enNZ = {\n  code: \"en-NZ\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enNZ;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, dd MMMM yyyy\",\n  long: \"dd MMMM yyyy\",\n  medium: \"dd MMM yyyy\",\n  short: \"yyyy/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\nimport { formatLong } from \"./en-ZA/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary English locale (South Africa).\n * @language English\n * @iso-639-2 eng\n * @author Shaila Kavrakova [@shaykav](https://github.com/shaykav)\n */\nexport const enZA = {\n  code: \"en-ZA\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0, // Sunday is the first day of the week.\n    firstWeekContainsDate: 1, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n\n// Fallback for modularized imports:\nexport default enZA;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"malpli ol sekundo\",\n    other: \"malpli ol {{count}} sekundoj\",\n  },\n\n  xSeconds: {\n    one: \"1 sekundo\",\n    other: \"{{count}} sekundoj\",\n  },\n\n  halfAMinute: \"duonminuto\",\n\n  lessThanXMinutes: {\n    one: \"malpli ol minuto\",\n    other: \"malpli ol {{count}} minutoj\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutoj\",\n  },\n\n  aboutXHours: {\n    one: \"proksimume 1 horo\",\n    other: \"proksimume {{count}} horoj\",\n  },\n\n  xHours: {\n    one: \"1 horo\",\n    other: \"{{count}} horoj\",\n  },\n\n  xDays: {\n    one: \"1 tago\",\n    other: \"{{count}} tagoj\",\n  },\n\n  aboutXMonths: {\n    one: \"proksimume 1 monato\",\n    other: \"proksimume {{count}} monatoj\",\n  },\n\n  xWeeks: {\n    one: \"1 semajno\",\n    other: \"{{count}} semajnoj\",\n  },\n\n  aboutXWeeks: {\n    one: \"proksimume 1 semajno\",\n    other: \"proksimume {{count}} semajnoj\",\n  },\n\n  xMonths: {\n    one: \"1 monato\",\n    other: \"{{count}} monatoj\",\n  },\n\n  aboutXYears: {\n    one: \"proksimume 1 jaro\",\n    other: \"proksimume {{count}} jaroj\",\n  },\n\n  xYears: {\n    one: \"1 jaro\",\n    other: \"{{count}} jaroj\",\n  },\n\n  overXYears: {\n    one: \"pli ol 1 jaro\",\n    other: \"pli ol {{count}} jaroj\",\n  },\n\n  almostXYears: {\n    one: \"preska\u016D 1 jaro\",\n    other: \"preska\u016D {{count}} jaroj\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options?.comparison && options.comparison > 0) {\n      return \"post \" + result;\n    } else {\n      return \"anta\u016D \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do 'de' MMMM y\",\n  long: \"y-MMMM-dd\",\n  medium: \"y-MMM-dd\",\n  short: \"yyyy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"Ho 'horo kaj' m:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'pasinta' eeee 'je' p\",\n  yesterday: \"'hiera\u016D je' p\",\n  today: \"'hodia\u016D je' p\",\n  tomorrow: \"'morga\u016D je' p\",\n  nextWeek: \"eeee 'je' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"aK\", \"pK\"],\n  abbreviated: [\"a.K.E.\", \"p.K.E.\"],\n  wide: [\"anta\u016D Komuna Erao\", \"Komuna Erao\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\n    \"1-a kvaronjaro\",\n    \"2-a kvaronjaro\",\n    \"3-a kvaronjaro\",\n    \"4-a kvaronjaro\",\n  ],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"a\u016Dg\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"januaro\",\n    \"februaro\",\n    \"marto\",\n    \"aprilo\",\n    \"majo\",\n    \"junio\",\n    \"julio\",\n    \"a\u016Dgusto\",\n    \"septembro\",\n    \"oktobro\",\n    \"novembro\",\n    \"decembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"\u0134\", \"V\", \"S\"],\n  short: [\"di\", \"lu\", \"ma\", \"me\", \"\u0135a\", \"ve\", \"sa\"],\n  abbreviated: [\"dim\", \"lun\", \"mar\", \"mer\", \"\u0135a\u016D\", \"ven\", \"sab\"],\n  wide: [\n    \"diman\u0109o\",\n    \"lundo\",\n    \"mardo\",\n    \"merkredo\",\n    \"\u0135a\u016Ddo\",\n    \"vendredo\",\n    \"sabato\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"noktomezo\",\n    noon: \"tagmezo\",\n    morning: \"matene\",\n    afternoon: \"posttagmeze\",\n    evening: \"vespere\",\n    night: \"nokte\",\n  },\n  abbreviated: {\n    am: \"a.t.m.\",\n    pm: \"p.t.m.\",\n    midnight: \"noktomezo\",\n    noon: \"tagmezo\",\n    morning: \"matene\",\n    afternoon: \"posttagmeze\",\n    evening: \"vespere\",\n    night: \"nokte\",\n  },\n  wide: {\n    am: \"anta\u016Dtagmeze\",\n    pm: \"posttagmeze\",\n    midnight: \"noktomezo\",\n    noon: \"tagmezo\",\n    morning: \"matene\",\n    afternoon: \"posttagmeze\",\n    evening: \"vespere\",\n    night: \"nokte\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n  return number + \"-a\";\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    },\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?a)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([ap]k)/i,\n  abbreviated: /^([ap]\\.?\\s?k\\.?\\s?e\\.?)/i,\n  wide: /^((anta\u01D4 |post )?komuna erao)/i,\n};\nconst parseEraPatterns = {\n  any: [/^a/i, /^[kp]/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^k[1234]/i,\n  wide: /^[1234](-?a)? kvaronjaro/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(\u016D|ux|uh|u)g|sep|okt|nov|dec)/i,\n  wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(\u016D|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^a(u|\u016D)/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlm\u0135jvs]/i,\n  short: /^(di|lu|ma|me|(\u0135|jx|jh|j)a|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|(\u0135|jx|jh|j)a(\u016D|ux|uh|u)|ven|sab)/i,\n  wide: /^(diman(\u0109|cx|ch|c)o|lundo|mardo|merkredo|(\u0135|jx|jh|j)a(\u016D|ux|uh|u)do|vendredo|sabato)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|\u0135)/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|\u0135)/i, /^v/i, /^s/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,\n  abbreviated:\n    /^([ap][.\\s]?t[.\\s]?m[.\\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,\n  wide: /^(anta(\u016D|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^noktom/i,\n    noon: /^t/i,\n    morning: /^m/i,\n    afternoon: /^posttagmeze/i,\n    evening: /^v/i,\n    night: /^n/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: function (index) {\n      return index + 1;\n    },\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./eo/_lib/formatDistance.js\";\nimport { formatLong } from \"./eo/_lib/formatLong.js\";\nimport { formatRelative } from \"./eo/_lib/formatRelative.js\";\nimport { localize } from \"./eo/_lib/localize.js\";\nimport { match } from \"./eo/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Esperanto locale.\n * @language Esperanto\n * @iso-639-2 epo\n * @author date-fns\n */\nexport const eo = {\n  code: \"eo\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default eo;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de un segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"medio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de un minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"alrededor de 1 hora\",\n    other: \"alrededor de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 d\u00EDa\",\n    other: \"{{count}} d\u00EDas\",\n  },\n\n  aboutXWeeks: {\n    one: \"alrededor de 1 semana\",\n    other: \"alrededor de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"alrededor de 1 mes\",\n    other: \"alrededor de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"alrededor de 1 a\u00F1o\",\n    other: \"alrededor de {{count}} a\u00F1os\",\n  },\n\n  xYears: {\n    one: \"1 a\u00F1o\",\n    other: \"{{count}} a\u00F1os\",\n  },\n\n  overXYears: {\n    one: \"m\u00E1s de 1 a\u00F1o\",\n    other: \"m\u00E1s de {{count}} a\u00F1os\",\n  },\n\n  almostXYears: {\n    one: \"casi 1 a\u00F1o\",\n    other: \"casi {{count}} a\u00F1os\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"hace \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'a las' {{time}}\",\n  long: \"{{date}} 'a las' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'el' eeee 'pasado a la' p\",\n  yesterday: \"'ayer a la' p\",\n  today: \"'hoy a la' p\",\n  tomorrow: \"'ma\u00F1ana a la' p\",\n  nextWeek: \"eeee 'a la' p\",\n  other: \"P\",\n};\n\nconst formatRelativeLocalePlural = {\n  lastWeek: \"'el' eeee 'pasado a las' p\",\n  yesterday: \"'ayer a las' p\",\n  today: \"'hoy a las' p\",\n  tomorrow: \"'ma\u00F1ana a las' p\",\n  nextWeek: \"eeee 'a las' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  if (date.getHours() !== 1) {\n    return formatRelativeLocalePlural[token];\n  } else {\n    return formatRelativeLocale[token];\n  }\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"despu\u00E9s de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1\u00BA trimestre\", \"2\u00BA trimestre\", \"3\u00BA trimestre\", \"4\u00BA trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"e\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"ene\",\n    \"feb\",\n    \"mar\",\n    \"abr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dic\",\n  ],\n\n  wide: [\n    \"enero\",\n    \"febrero\",\n    \"marzo\",\n    \"abril\",\n    \"mayo\",\n    \"junio\",\n    \"julio\",\n    \"agosto\",\n    \"septiembre\",\n    \"octubre\",\n    \"noviembre\",\n    \"diciembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\n  short: [\"do\", \"lu\", \"ma\", \"mi\", \"ju\", \"vi\", \"s\u00E1\"],\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mi\u00E9\", \"jue\", \"vie\", \"s\u00E1b\"],\n  wide: [\n    \"domingo\",\n    \"lunes\",\n    \"martes\",\n    \"mi\u00E9rcoles\",\n    \"jueves\",\n    \"viernes\",\n    \"s\u00E1bado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"ma\u00F1ana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"ma\u00F1ana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"ma\u00F1ana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"de la ma\u00F1ana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"de la ma\u00F1ana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"de la ma\u00F1ana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u00BA\";\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00BA)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|antes de la era com[u\u00FA]n|despu[e\u00E9]s de cristo|era com[u\u00FA]n)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [\n    /^(antes de cristo|antes de la era com[u\u00FA]n)/i,\n    /^(despu[e\u00E9]s de cristo|era com[u\u00FA]n)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](\u00BA)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[efmajsond]/i,\n  abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,\n  wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^e/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^en/i,\n    /^feb/i,\n    /^mar/i,\n    /^abr/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^ago/i,\n    /^sep/i,\n    /^oct/i,\n    /^nov/i,\n    /^dic/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmjvs]/i,\n  short: /^(do|lu|ma|mi|ju|vi|s[\u00E1a])/i,\n  abbreviated: /^(dom|lun|mar|mi[\u00E9e]|jue|vie|s[\u00E1a]b)/i,\n  wide: /^(domingo|lunes|martes|mi[\u00E9e]rcoles|jueves|viernes|s[\u00E1a]bado)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(de la|a las) (ma\u00F1ana|tarde|noche))/i,\n  any: /^([ap]\\.?\\s?m\\.?|medianoche|mediodia|(de la|a las) (ma\u00F1ana|tarde|noche))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn/i,\n    noon: /^md/i,\n    morning: /ma\u00F1ana/i,\n    afternoon: /tarde/i,\n    evening: /tarde/i,\n    night: /noche/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./es/_lib/formatDistance.js\";\nimport { formatLong } from \"./es/_lib/formatLong.js\";\nimport { formatRelative } from \"./es/_lib/formatRelative.js\";\nimport { localize } from \"./es/_lib/localize.js\";\nimport { match } from \"./es/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Spanish locale.\n * @language Spanish\n * @iso-639-2 spa\n * @author Juan Angosto [@juanangosto](https://github.com/juanangosto)\n * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)\n * @author Fernando Ag\u00FCero [@fjaguero](https://github.com/fjaguero)\n * @author Gast\u00F3n Haro [@harogaston](https://github.com/harogaston)\n * @author Yago Carballo [@YagoCarballo](https://github.com/YagoCarballo)\n */\nexport const es = {\n  code: \"es\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default es;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: \"v\u00E4hem kui \u00FCks sekund\",\n      other: \"v\u00E4hem kui {{count}} sekundit\",\n    },\n    withPreposition: {\n      one: \"v\u00E4hem kui \u00FChe sekundi\",\n      other: \"v\u00E4hem kui {{count}} sekundi\",\n    },\n  },\n\n  xSeconds: {\n    standalone: {\n      one: \"\u00FCks sekund\",\n      other: \"{{count}} sekundit\",\n    },\n    withPreposition: {\n      one: \"\u00FChe sekundi\",\n      other: \"{{count}} sekundi\",\n    },\n  },\n\n  halfAMinute: {\n    standalone: \"pool minutit\",\n    withPreposition: \"poole minuti\",\n  },\n\n  lessThanXMinutes: {\n    standalone: {\n      one: \"v\u00E4hem kui \u00FCks minut\",\n      other: \"v\u00E4hem kui {{count}} minutit\",\n    },\n    withPreposition: {\n      one: \"v\u00E4hem kui \u00FChe minuti\",\n      other: \"v\u00E4hem kui {{count}} minuti\",\n    },\n  },\n\n  xMinutes: {\n    standalone: {\n      one: \"\u00FCks minut\",\n      other: \"{{count}} minutit\",\n    },\n    withPreposition: {\n      one: \"\u00FChe minuti\",\n      other: \"{{count}} minuti\",\n    },\n  },\n\n  aboutXHours: {\n    standalone: {\n      one: \"umbes \u00FCks tund\",\n      other: \"umbes {{count}} tundi\",\n    },\n    withPreposition: {\n      one: \"umbes \u00FChe tunni\",\n      other: \"umbes {{count}} tunni\",\n    },\n  },\n\n  xHours: {\n    standalone: {\n      one: \"\u00FCks tund\",\n      other: \"{{count}} tundi\",\n    },\n    withPreposition: {\n      one: \"\u00FChe tunni\",\n      other: \"{{count}} tunni\",\n    },\n  },\n\n  xDays: {\n    standalone: {\n      one: \"\u00FCks p\u00E4ev\",\n      other: \"{{count}} p\u00E4eva\",\n    },\n    withPreposition: {\n      one: \"\u00FChe p\u00E4eva\",\n      other: \"{{count}} p\u00E4eva\",\n    },\n  },\n\n  aboutXWeeks: {\n    standalone: {\n      one: \"umbes \u00FCks n\u00E4dal\",\n      other: \"umbes {{count}} n\u00E4dalat\",\n    },\n    withPreposition: {\n      one: \"umbes \u00FChe n\u00E4dala\",\n      other: \"umbes {{count}} n\u00E4dala\",\n    },\n  },\n\n  xWeeks: {\n    standalone: {\n      one: \"\u00FCks n\u00E4dal\",\n      other: \"{{count}} n\u00E4dalat\",\n    },\n    withPreposition: {\n      one: \"\u00FChe n\u00E4dala\",\n      other: \"{{count}} n\u00E4dala\",\n    },\n  },\n\n  aboutXMonths: {\n    standalone: {\n      one: \"umbes \u00FCks kuu\",\n      other: \"umbes {{count}} kuud\",\n    },\n    withPreposition: {\n      one: \"umbes \u00FChe kuu\",\n      other: \"umbes {{count}} kuu\",\n    },\n  },\n\n  xMonths: {\n    standalone: {\n      one: \"\u00FCks kuu\",\n      other: \"{{count}} kuud\",\n    },\n    withPreposition: {\n      one: \"\u00FChe kuu\",\n      other: \"{{count}} kuu\",\n    },\n  },\n\n  aboutXYears: {\n    standalone: {\n      one: \"umbes \u00FCks aasta\",\n      other: \"umbes {{count}} aastat\",\n    },\n    withPreposition: {\n      one: \"umbes \u00FChe aasta\",\n      other: \"umbes {{count}} aasta\",\n    },\n  },\n\n  xYears: {\n    standalone: {\n      one: \"\u00FCks aasta\",\n      other: \"{{count}} aastat\",\n    },\n    withPreposition: {\n      one: \"\u00FChe aasta\",\n      other: \"{{count}} aasta\",\n    },\n  },\n\n  overXYears: {\n    standalone: {\n      one: \"rohkem kui \u00FCks aasta\",\n      other: \"rohkem kui {{count}} aastat\",\n    },\n    withPreposition: {\n      one: \"rohkem kui \u00FChe aasta\",\n      other: \"rohkem kui {{count}} aasta\",\n    },\n  },\n\n  almostXYears: {\n    standalone: {\n      one: \"peaaegu \u00FCks aasta\",\n      other: \"peaaegu {{count}} aastat\",\n    },\n    withPreposition: {\n      one: \"peaaegu \u00FChe aasta\",\n      other: \"peaaegu {{count}} aasta\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const usageGroup = options?.addSuffix\n    ? formatDistanceLocale[token].withPreposition\n    : formatDistanceLocale[token].standalone;\n\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" p\u00E4rast\";\n    } else {\n      return result + \" eest\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kell' {{time}}\",\n  long: \"{{date}} 'kell' {{time}}\",\n  medium: \"{{date}}. {{time}}\",\n  short: \"{{date}}. {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'eelmine' eeee 'kell' p\",\n  yesterday: \"'eile kell' p\",\n  today: \"'t\u00E4na kell' p\",\n  tomorrow: \"'homme kell' p\",\n  nextWeek: \"'j\u00E4rgmine' eeee 'kell' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"e.m.a\", \"m.a.j\"],\n  abbreviated: [\"e.m.a\", \"m.a.j\"],\n  wide: [\"enne meie ajaarvamist\", \"meie ajaarvamise j\u00E4rgi\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"V\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jaan\",\n    \"veebr\",\n    \"m\u00E4rts\",\n    \"apr\",\n    \"mai\",\n    \"juuni\",\n    \"juuli\",\n    \"aug\",\n    \"sept\",\n    \"okt\",\n    \"nov\",\n    \"dets\",\n  ],\n\n  wide: [\n    \"jaanuar\",\n    \"veebruar\",\n    \"m\u00E4rts\",\n    \"aprill\",\n    \"mai\",\n    \"juuni\",\n    \"juuli\",\n    \"august\",\n    \"september\",\n    \"oktoober\",\n    \"november\",\n    \"detsember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"P\", \"E\", \"T\", \"K\", \"N\", \"R\", \"L\"],\n  short: [\"P\", \"E\", \"T\", \"K\", \"N\", \"R\", \"L\"],\n  abbreviated: [\n    \"p\u00FChap.\",\n    \"esmasp.\",\n    \"teisip.\",\n    \"kolmap.\",\n    \"neljap.\",\n    \"reede.\",\n    \"laup.\",\n  ],\n\n  wide: [\n    \"p\u00FChap\u00E4ev\",\n    \"esmasp\u00E4ev\",\n    \"teisip\u00E4ev\",\n    \"kolmap\u00E4ev\",\n    \"neljap\u00E4ev\",\n    \"reede\",\n    \"laup\u00E4ev\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6\",\n    noon: \"keskp\u00E4ev\",\n    morning: \"hommik\",\n    afternoon: \"p\u00E4rastl\u00F5una\",\n    evening: \"\u00F5htu\",\n    night: \"\u00F6\u00F6\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6\",\n    noon: \"keskp\u00E4ev\",\n    morning: \"hommik\",\n    afternoon: \"p\u00E4rastl\u00F5una\",\n    evening: \"\u00F5htu\",\n    night: \"\u00F6\u00F6\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6\",\n    noon: \"keskp\u00E4ev\",\n    morning: \"hommik\",\n    afternoon: \"p\u00E4rastl\u00F5una\",\n    evening: \"\u00F5htu\",\n    night: \"\u00F6\u00F6\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6l\",\n    noon: \"keskp\u00E4eval\",\n    morning: \"hommikul\",\n    afternoon: \"p\u00E4rastl\u00F5unal\",\n    evening: \"\u00F5htul\",\n    night: \"\u00F6\u00F6sel\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6l\",\n    noon: \"keskp\u00E4eval\",\n    morning: \"hommikul\",\n    afternoon: \"p\u00E4rastl\u00F5unal\",\n    evening: \"\u00F5htul\",\n    night: \"\u00F6\u00F6sel\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"kesk\u00F6\u00F6l\",\n    noon: \"keskp\u00E4eval\",\n    morning: \"hommikul\",\n    afternoon: \"p\u00E4rastl\u00F5unal\",\n    evening: \"\u00F5htul\",\n    night: \"\u00F6\u00F6sel\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: monthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: dayValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^\\d+\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(e\\.m\\.a|m\\.a\\.j|eKr|pKr)/i,\n  abbreviated: /^(e\\.m\\.a|m\\.a\\.j|eKr|pKr)/i,\n  wide: /^(enne meie ajaarvamist|meie ajaarvamise j\u00E4rgi|enne Kristust|p\u00E4rast Kristust)/i,\n};\nconst parseEraPatterns = {\n  any: [/^e/i, /^(m|p)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K[1234]/i,\n  wide: /^[1234](\\.)? kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jvmasond]/i,\n  abbreviated: /^(jaan|veebr|m\u00E4rts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,\n  wide: /^(jaanuar|veebruar|m\u00E4rts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^v/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^v/i,\n    /^m\u00E4r/i,\n    /^ap/i,\n    /^mai/i,\n    /^juun/i,\n    /^juul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[petknrl]/i,\n  short: /^[petknrl]/i,\n  abbreviated: /^(p\u00FCh?|esm?|tei?|kolm?|nel?|ree?|laup?)\\.?/i,\n  wide: /^(p\u00FChap\u00E4ev|esmasp\u00E4ev|teisip\u00E4ev|kolmap\u00E4ev|neljap\u00E4ev|reede|laup\u00E4ev)/i,\n};\nconst parseDayPatterns = {\n  any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|kesk\u00F6\u00F6l?|keskp\u00E4ev(al)?|hommik(ul)?|p\u00E4rastl\u00F5unal?|\u00F5htul?|\u00F6\u00F6(sel)?)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^kesk\u00F6/i,\n    noon: /^keskp/i,\n    morning: /hommik/i,\n    afternoon: /p\u00E4rastl\u00F5una/i,\n    evening: /\u00F5htu/i,\n    night: /\u00F6\u00F6/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./et/_lib/formatDistance.js\";\nimport { formatLong } from \"./et/_lib/formatLong.js\";\nimport { formatRelative } from \"./et/_lib/formatRelative.js\";\nimport { localize } from \"./et/_lib/localize.js\";\nimport { match } from \"./et/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Estonian locale.\n * @language Estonian\n * @iso-639-2 est\n * @author Priit Hansen [@HansenPriit](https://github.com/priithansen)\n */\nexport const et = {\n  code: \"et\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default et;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"segundo bat baino gutxiago\",\n    other: \"{{count}} segundo baino gutxiago\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundo\",\n  },\n\n  halfAMinute: \"minutu erdi\",\n\n  lessThanXMinutes: {\n    one: \"minutu bat baino gutxiago\",\n    other: \"{{count}} minutu baino gutxiago\",\n  },\n\n  xMinutes: {\n    one: \"1 minutu\",\n    other: \"{{count}} minutu\",\n  },\n\n  aboutXHours: {\n    one: \"1 ordu gutxi gorabehera\",\n    other: \"{{count}} ordu gutxi gorabehera\",\n  },\n\n  xHours: {\n    one: \"1 ordu\",\n    other: \"{{count}} ordu\",\n  },\n\n  xDays: {\n    one: \"1 egun\",\n    other: \"{{count}} egun\",\n  },\n\n  aboutXWeeks: {\n    one: \"aste 1 inguru\",\n    other: \"{{count}} aste inguru\",\n  },\n\n  xWeeks: {\n    one: \"1 aste\",\n    other: \"{{count}} astean\",\n  },\n\n  aboutXMonths: {\n    one: \"1 hilabete gutxi gorabehera\",\n    other: \"{{count}} hilabete gutxi gorabehera\",\n  },\n\n  xMonths: {\n    one: \"1 hilabete\",\n    other: \"{{count}} hilabete\",\n  },\n\n  aboutXYears: {\n    one: \"1 urte gutxi gorabehera\",\n    other: \"{{count}} urte gutxi gorabehera\",\n  },\n\n  xYears: {\n    one: \"1 urte\",\n    other: \"{{count}} urte\",\n  },\n\n  overXYears: {\n    one: \"1 urte baino gehiago\",\n    other: \"{{count}} urte baino gehiago\",\n  },\n\n  almostXYears: {\n    one: \"ia 1 urte\",\n    other: \"ia {{count}} urte\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"duela \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, y'ko' MMMM'ren' d'a' y'ren'\",\n  long: \"y'ko' MMMM'ren' d'a'\",\n  medium: \"y MMM d\",\n  short: \"yy/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'tan' {{time}}\",\n  long: \"{{date}} 'tan' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'joan den' eeee, LT\",\n  yesterday: \"'atzo,' p\",\n  today: \"'gaur,' p\",\n  tomorrow: \"'bihar,' p\",\n  nextWeek: \"eeee, p\",\n  other: \"P\",\n};\n\nconst formatRelativeLocalePlural = {\n  lastWeek: \"'joan den' eeee, p\",\n  yesterday: \"'atzo,' p\",\n  today: \"'gaur,' p\",\n  tomorrow: \"'bihar,' p\",\n  nextWeek: \"eeee, p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date) => {\n  if (date.getHours() !== 1) {\n    return formatRelativeLocalePlural[token];\n  }\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"k.a.\", \"k.o.\"],\n  abbreviated: [\"k.a.\", \"k.o.\"],\n  wide: [\"kristo aurretik\", \"kristo ondoren\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1H\", \"2H\", \"3H\", \"4H\"],\n  wide: [\n    \"1. hiruhilekoa\",\n    \"2. hiruhilekoa\",\n    \"3. hiruhilekoa\",\n    \"4. hiruhilekoa\",\n  ],\n};\n\nconst monthValues = {\n  narrow: [\"u\", \"o\", \"m\", \"a\", \"m\", \"e\", \"u\", \"a\", \"i\", \"u\", \"a\", \"a\"],\n  abbreviated: [\n    \"urt\",\n    \"ots\",\n    \"mar\",\n    \"api\",\n    \"mai\",\n    \"eka\",\n    \"uzt\",\n    \"abu\",\n    \"ira\",\n    \"urr\",\n    \"aza\",\n    \"abe\",\n  ],\n\n  wide: [\n    \"urtarrila\",\n    \"otsaila\",\n    \"martxoa\",\n    \"apirila\",\n    \"maiatza\",\n    \"ekaina\",\n    \"uztaila\",\n    \"abuztua\",\n    \"iraila\",\n    \"urria\",\n    \"azaroa\",\n    \"abendua\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"i\", \"a\", \"a\", \"a\", \"o\", \"o\", \"l\"],\n  short: [\"ig\", \"al\", \"as\", \"az\", \"og\", \"or\", \"lr\"],\n  abbreviated: [\"iga\", \"ast\", \"ast\", \"ast\", \"ost\", \"ost\", \"lar\"],\n  wide: [\n    \"igandea\",\n    \"astelehena\",\n    \"asteartea\",\n    \"asteazkena\",\n    \"osteguna\",\n    \"ostirala\",\n    \"larunbata\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"ge\",\n    noon: \"eg\",\n    morning: \"goiza\",\n    afternoon: \"arratsaldea\",\n    evening: \"arratsaldea\",\n    night: \"gaua\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"gauerdia\",\n    noon: \"eguerdia\",\n    morning: \"goiza\",\n    afternoon: \"arratsaldea\",\n    evening: \"arratsaldea\",\n    night: \"gaua\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gauerdia\",\n    noon: \"eguerdia\",\n    morning: \"goiza\",\n    afternoon: \"arratsaldea\",\n    evening: \"arratsaldea\",\n    night: \"gaua\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"ge\",\n    noon: \"eg\",\n    morning: \"goizean\",\n    afternoon: \"arratsaldean\",\n    evening: \"arratsaldean\",\n    night: \"gauean\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"gauerdia\",\n    noon: \"eguerdia\",\n    morning: \"goizean\",\n    afternoon: \"arratsaldean\",\n    evening: \"arratsaldean\",\n    night: \"gauean\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gauerdia\",\n    noon: \"eguerdia\",\n    morning: \"goizean\",\n    afternoon: \"arratsaldean\",\n    evening: \"arratsaldean\",\n    night: \"gauean\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(k.a.|k.o.)/i,\n  abbreviated: /^(k.a.|k.o.)/i,\n  wide: /^(kristo aurretik|kristo ondoren)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/^k.a./i, /^k.o./i],\n  abbreviated: [/^(k.a.)/i, /^(k.o.)/i],\n  wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]H/i,\n  wide: /^[1234](.)? hiruhilekoa/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[uomaei]/i,\n  abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,\n  wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^u/i,\n    /^o/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^e/i,\n    /^u/i,\n    /^a/i,\n    /^i/i,\n    /^u/i,\n    /^a/i,\n    /^a/i,\n  ],\n\n  any: [\n    /^urt/i,\n    /^ots/i,\n    /^mar/i,\n    /^api/i,\n    /^mai/i,\n    /^eka/i,\n    /^uzt/i,\n    /^abu/i,\n    /^ira/i,\n    /^urr/i,\n    /^aza/i,\n    /^abe/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[iaol]/i,\n  short: /^(ig|al|as|az|og|or|lr)/i,\n  abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,\n  wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i],\n  short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i],\n  abbreviated: [/^iga/i, /^ast/i, /^ast/i, /^ast/i, /^ost/i, /^ost/i, /^lar/i],\n\n  wide: [\n    /^igandea/i,\n    /^astelehena/i,\n    /^asteartea/i,\n    /^asteazkena/i,\n    /^osteguna/i,\n    /^ostirala/i,\n    /^larunbata/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,\n  any: /^([ap]\\.?\\s?m\\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,\n};\nconst parseDayPeriodPatterns = {\n  narrow: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^ge/i,\n    noon: /^eg/i,\n    morning: /goiz/i,\n    afternoon: /arratsaldea/i,\n    evening: /arratsaldea/i,\n    night: /gau/i,\n  },\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^gauerdia/i,\n    noon: /^eguerdia/i,\n    morning: /goiz/i,\n    afternoon: /arratsaldea/i,\n    evening: /arratsaldea/i,\n    night: /gau/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./eu/_lib/formatDistance.js\";\nimport { formatLong } from \"./eu/_lib/formatLong.js\";\nimport { formatRelative } from \"./eu/_lib/formatRelative.js\";\nimport { localize } from \"./eu/_lib/localize.js\";\nimport { match } from \"./eu/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Basque locale.\n * @language Basque\n * @iso-639-2 eus\n * @author Jacob S\u00F6derblom [@JacobSoderblom](https://github.com/JacobSoderblom)\n */\nexport const eu = {\n  code: \"eu\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default eu;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u06A9\u0645\u062A\u0631 \u0627\u0632 \u06CC\u06A9 \u062B\u0627\u0646\u06CC\u0647\",\n    other: \"\u06A9\u0645\u062A\u0631 \u0627\u0632 {{count}} \u062B\u0627\u0646\u06CC\u0647\",\n  },\n\n  xSeconds: {\n    one: \"1 \u062B\u0627\u0646\u06CC\u0647\",\n    other: \"{{count}} \u062B\u0627\u0646\u06CC\u0647\",\n  },\n\n  halfAMinute: \"\u0646\u06CC\u0645 \u062F\u0642\u06CC\u0642\u0647\",\n\n  lessThanXMinutes: {\n    one: \"\u06A9\u0645\u062A\u0631 \u0627\u0632 \u06CC\u06A9 \u062F\u0642\u06CC\u0642\u0647\",\n    other: \"\u06A9\u0645\u062A\u0631 \u0627\u0632 {{count}} \u062F\u0642\u06CC\u0642\u0647\",\n  },\n\n  xMinutes: {\n    one: \"1 \u062F\u0642\u06CC\u0642\u0647\",\n    other: \"{{count}} \u062F\u0642\u06CC\u0642\u0647\",\n  },\n\n  aboutXHours: {\n    one: \"\u062D\u062F\u0648\u062F 1 \u0633\u0627\u0639\u062A\",\n    other: \"\u062D\u062F\u0648\u062F {{count}} \u0633\u0627\u0639\u062A\",\n  },\n\n  xHours: {\n    one: \"1 \u0633\u0627\u0639\u062A\",\n    other: \"{{count}} \u0633\u0627\u0639\u062A\",\n  },\n\n  xDays: {\n    one: \"1 \u0631\u0648\u0632\",\n    other: \"{{count}} \u0631\u0648\u0632\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u062D\u062F\u0648\u062F 1 \u0647\u0641\u062A\u0647\",\n    other: \"\u062D\u062F\u0648\u062F {{count}} \u0647\u0641\u062A\u0647\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0647\u0641\u062A\u0647\",\n    other: \"{{count}} \u0647\u0641\u062A\u0647\",\n  },\n\n  aboutXMonths: {\n    one: \"\u062D\u062F\u0648\u062F 1 \u0645\u0627\u0647\",\n    other: \"\u062D\u062F\u0648\u062F {{count}} \u0645\u0627\u0647\",\n  },\n\n  xMonths: {\n    one: \"1 \u0645\u0627\u0647\",\n    other: \"{{count}} \u0645\u0627\u0647\",\n  },\n\n  aboutXYears: {\n    one: \"\u062D\u062F\u0648\u062F 1 \u0633\u0627\u0644\",\n    other: \"\u062D\u062F\u0648\u062F {{count}} \u0633\u0627\u0644\",\n  },\n\n  xYears: {\n    one: \"1 \u0633\u0627\u0644\",\n    other: \"{{count}} \u0633\u0627\u0644\",\n  },\n\n  overXYears: {\n    one: \"\u0628\u06CC\u0634\u062A\u0631 \u0627\u0632 1 \u0633\u0627\u0644\",\n    other: \"\u0628\u06CC\u0634\u062A\u0631 \u0627\u0632 {{count}} \u0633\u0627\u0644\",\n  },\n\n  almostXYears: {\n    one: \"\u0646\u0632\u062F\u06CC\u06A9 1 \u0633\u0627\u0644\",\n    other: \"\u0646\u0632\u062F\u06CC\u06A9 {{count}} \u0633\u0627\u0644\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u062F\u0631 \" + result;\n    } else {\n      return result + \" \u0642\u0628\u0644\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"yyyy/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u062F\u0631' {{time}}\",\n  long: \"{{date}} '\u062F\u0631' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee '\u06AF\u0630\u0634\u062A\u0647 \u062F\u0631' p\",\n  yesterday: \"'\u062F\u06CC\u0631\u0648\u0632 \u062F\u0631' p\",\n  today: \"'\u0627\u0645\u0631\u0648\u0632 \u062F\u0631' p\",\n  tomorrow: \"'\u0641\u0631\u062F\u0627 \u062F\u0631' p\",\n  nextWeek: \"eeee '\u062F\u0631' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0642\", \"\u0628\"],\n  abbreviated: [\"\u0642.\u0645.\", \"\u0628.\u0645.\"],\n  wide: [\"\u0642\u0628\u0644 \u0627\u0632 \u0645\u06CC\u0644\u0627\u062F\", \"\u0628\u0639\u062F \u0627\u0632 \u0645\u06CC\u0644\u0627\u062F\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u0633\u200C\u06451\", \"\u0633\u200C\u06452\", \"\u0633\u200C\u06453\", \"\u0633\u200C\u06454\"],\n  wide: [\"\u0633\u0647\u200C\u0645\u0627\u0647\u0647 1\", \"\u0633\u0647\u200C\u0645\u0627\u0647\u0647 2\", \"\u0633\u0647\u200C\u0645\u0627\u0647\u0647 3\", \"\u0633\u0647\u200C\u0645\u0627\u0647\u0647 4\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"\u0698\", \"\u0641\", \"\u0645\", \"\u0622\", \"\u0645\", \"\u062C\", \"\u062C\", \"\u0622\", \"\u0633\", \"\u0627\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u0698\u0627\u0646\u0640\",\n    \"\u0641\u0648\u0631\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0622\u067E\u0631\",\n    \"\u0645\u06CC\",\n    \"\u062C\u0648\u0646\",\n    \"\u062C\u0648\u0644\u0640\",\n    \"\u0622\u06AF\u0648\",\n    \"\u0633\u067E\u062A\u0640\",\n    \"\u0627\u06A9\u062A\u0640\",\n    \"\u0646\u0648\u0627\u0645\u0640\",\n    \"\u062F\u0633\u0627\u0645\u0640\",\n  ],\n\n  wide: [\n    \"\u0698\u0627\u0646\u0648\u06CC\u0647\",\n    \"\u0641\u0648\u0631\u06CC\u0647\",\n    \"\u0645\u0627\u0631\u0633\",\n    \"\u0622\u067E\u0631\u06CC\u0644\",\n    \"\u0645\u06CC\",\n    \"\u062C\u0648\u0646\",\n    \"\u062C\u0648\u0644\u0627\u06CC\",\n    \"\u0622\u06AF\u0648\u0633\u062A\",\n    \"\u0633\u067E\u062A\u0627\u0645\u0628\u0631\",\n    \"\u0627\u06A9\u062A\u0628\u0631\",\n    \"\u0646\u0648\u0627\u0645\u0628\u0631\",\n    \"\u062F\u0633\u0627\u0645\u0628\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u06CC\", \"\u062F\", \"\u0633\", \"\u0686\", \"\u067E\", \"\u062C\", \"\u0634\"],\n  short: [\"1\u0634\", \"2\u0634\", \"3\u0634\", \"4\u0634\", \"5\u0634\", \"\u062C\", \"\u0634\"],\n  abbreviated: [\n    \"\u06CC\u06A9\u0634\u0646\u0628\u0647\",\n    \"\u062F\u0648\u0634\u0646\u0628\u0647\",\n    \"\u0633\u0647\u200C\u0634\u0646\u0628\u0647\",\n    \"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647\",\n    \"\u067E\u0646\u062C\u0634\u0646\u0628\u0647\",\n    \"\u062C\u0645\u0639\u0647\",\n    \"\u0634\u0646\u0628\u0647\",\n  ],\n\n  wide: [\"\u06CC\u06A9\u0634\u0646\u0628\u0647\", \"\u062F\u0648\u0634\u0646\u0628\u0647\", \"\u0633\u0647\u200C\u0634\u0646\u0628\u0647\", \"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647\", \"\u067E\u0646\u062C\u0634\u0646\u0628\u0647\", \"\u062C\u0645\u0639\u0647\", \"\u0634\u0646\u0628\u0647\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0642\",\n    pm: \"\u0628\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\",\n    afternoon: \"\u0628.\u0638.\",\n    evening: \"\u0639\",\n    night: \"\u0634\",\n  },\n  abbreviated: {\n    am: \"\u0642.\u0638.\",\n    pm: \"\u0628.\u0638.\",\n    midnight: \"\u0646\u06CC\u0645\u0647\u200C\u0634\u0628\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u062D\",\n    afternoon: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    evening: \"\u0639\u0635\u0631\",\n    night: \"\u0634\u0628\",\n  },\n  wide: {\n    am: \"\u0642\u0628\u0644\u200C\u0627\u0632\u0638\u0647\u0631\",\n    pm: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    midnight: \"\u0646\u06CC\u0645\u0647\u200C\u0634\u0628\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u062D\",\n    afternoon: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    evening: \"\u0639\u0635\u0631\",\n    night: \"\u0634\u0628\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0642\",\n    pm: \"\u0628\",\n    midnight: \"\u0646\",\n    noon: \"\u0638\",\n    morning: \"\u0635\",\n    afternoon: \"\u0628.\u0638.\",\n    evening: \"\u0639\",\n    night: \"\u0634\",\n  },\n  abbreviated: {\n    am: \"\u0642.\u0638.\",\n    pm: \"\u0628.\u0638.\",\n    midnight: \"\u0646\u06CC\u0645\u0647\u200C\u0634\u0628\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u062D\",\n    afternoon: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    evening: \"\u0639\u0635\u0631\",\n    night: \"\u0634\u0628\",\n  },\n  wide: {\n    am: \"\u0642\u0628\u0644\u200C\u0627\u0632\u0638\u0647\u0631\",\n    pm: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    midnight: \"\u0646\u06CC\u0645\u0647\u200C\u0634\u0628\",\n    noon: \"\u0638\u0647\u0631\",\n    morning: \"\u0635\u0628\u062D\",\n    afternoon: \"\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631\",\n    evening: \"\u0639\u0635\u0631\",\n    night: \"\u0634\u0628\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0642|\u0628)/i,\n  abbreviated: /^(\u0642\\.?\\s?\u0645\\.?|\u0642\\.?\\s?\u062F\\.?\\s?\u0645\\.?|\u0645\\.?\\s?|\u062F\\.?\\s?\u0645\\.?)/i,\n  wide: /^(\u0642\u0628\u0644 \u0627\u0632 \u0645\u06CC\u0644\u0627\u062F|\u0642\u0628\u0644 \u0627\u0632 \u062F\u0648\u0631\u0627\u0646 \u0645\u0634\u062A\u0631\u06A9|\u0645\u06CC\u0644\u0627\u062F\u06CC|\u062F\u0648\u0631\u0627\u0646 \u0645\u0634\u062A\u0631\u06A9|\u0628\u0639\u062F \u0627\u0632 \u0645\u06CC\u0644\u0627\u062F)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062F/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0633\u200C\u0645[1234]/i,\n  wide: /^\u0633\u0647\u200C\u0645\u0627\u0647\u0647 [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u062C\u0698\u0641\u0645\u0622\u0627\u0645\u0627\u0633\u0646\u062F]/i,\n  abbreviated:\n    /^(\u062C\u0646\u0648|\u0698\u0627\u0646\u0640|\u0698\u0627\u0646\u0648\u06CC\u0647|\u0641\u0648\u0631\u06CC\u0647|\u0641\u0648\u0631|\u0645\u0627\u0631\u0633|\u0622\u0648\u0631\u06CC\u0644|\u0622\u067E\u0631|\u0645\u0647|\u0645\u06CC|\u0698\u0648\u0626\u0646|\u062C\u0648\u0646|\u062C\u0648\u0644|\u062C\u0648\u0644\u0640|\u0698\u0648\u0626\u06CC\u0647|\u0627\u0648\u062A|\u0622\u06AF\u0648|\u0633\u067E\u062A\u0645\u0628\u0631|\u0633\u067E\u062A\u0627\u0645\u0628\u0631|\u0627\u06A9\u062A\u0628\u0631|\u0627\u06A9\u062A\u0648\u0628\u0631|\u0646\u0648\u0627\u0645\u0628\u0631|\u0646\u0648\u0627\u0645\u0640|\u062F\u0633\u0627\u0645\u0628\u0631|\u062F\u0633\u0627\u0645\u0640|\u062F\u0633\u0645)/i,\n  wide: /^(\u0698\u0627\u0646\u0648\u06CC\u0647|\u062C\u0646\u0648\u0631\u06CC|\u0641\u0628\u0631\u0648\u0631\u06CC|\u0641\u0648\u0631\u06CC\u0647|\u0645\u0627\u0631\u0686|\u0645\u0627\u0631\u0633|\u0622\u067E\u0631\u06CC\u0644|\u0627\u067E\u0631\u06CC\u0644|\u0627\u06CC\u067E\u0631\u06CC\u0644|\u0622\u0648\u0631\u06CC\u0644|\u0645\u0647|\u0645\u06CC|\u0698\u0648\u0626\u0646|\u062C\u0648\u0646|\u062C\u0648\u0644\u0627\u06CC|\u0698\u0648\u0626\u06CC\u0647|\u0622\u06AF\u0633\u062A|\u0627\u06AF\u0633\u062A|\u0622\u06AF\u0648\u0633\u062A|\u0627\u0648\u062A|\u0633\u067E\u062A\u0645\u0628\u0631|\u0633\u067E\u062A\u0627\u0645\u0628\u0631|\u0627\u06A9\u062A\u0628\u0631|\u0627\u06A9\u062A\u0648\u0628\u0631|\u0646\u0648\u0627\u0645\u0628\u0631|\u0646\u0648\u0645\u0628\u0631|\u062F\u0633\u0627\u0645\u0628\u0631|\u062F\u0633\u0645\u0628\u0631)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^(\u0698|\u062C)/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^(\u0622|\u0627)/i,\n    /^\u0645/i,\n    /^(\u0698|\u062C)/i,\n    /^(\u062C|\u0698)/i,\n    /^(\u0622|\u0627)/i,\n    /^\u0633/i,\n    /^\u0627/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u0698\u0627/i,\n    /^\u0641/i,\n    /^\u0645\u0627/i,\n    /^\u0622\u067E/i,\n    /^(\u0645\u06CC|\u0645\u0647)/i,\n    /^(\u0698\u0648\u0626\u0646|\u062C\u0648\u0646)/i,\n    /^(\u0698\u0648\u0626\u06CC|\u062C\u0648\u0644)/i,\n    /^(\u0627\u0648\u062A|\u0622\u06AF)/i,\n    /^\u0633/i,\n    /^(\u0627\u0648\u06A9|\u0627\u06A9)/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u0634\u06CC\u062F\u0633\u0686\u067E\u062C]/i,\n  short: /^(\u0634|\u062C|1\u0634|2\u0634|3\u0634|4\u0634|5\u0634)/i,\n  abbreviated: /^(\u06CC\u06A9\u0634\u0646\u0628\u0647|\u062F\u0648\u0634\u0646\u0628\u0647|\u0633\u0647\u200C\u0634\u0646\u0628\u0647|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647|\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647|\u062C\u0645\u0639\u0647|\u0634\u0646\u0628\u0647)/i,\n  wide: /^(\u06CC\u06A9\u0634\u0646\u0628\u0647|\u062F\u0648\u0634\u0646\u0628\u0647|\u0633\u0647\u200C\u0634\u0646\u0628\u0647|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647|\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647|\u062C\u0645\u0639\u0647|\u0634\u0646\u0628\u0647)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u06CC/i, /^\u062F\u0648/i, /^\u0633/i, /^\u0686/i, /^\u067E/i, /^\u062C/i, /^\u0634/i],\n  any: [\n    /^(\u06CC|1\u0634|\u06CC\u06A9\u0634\u0646\u0628\u0647)/i,\n    /^(\u062F|2\u0634|\u062F\u0648\u0634\u0646\u0628\u0647)/i,\n    /^(\u0633|3\u0634|\u0633\u0647\u200C\u0634\u0646\u0628\u0647)/i,\n    /^(\u0686|4\u0634|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647)/i,\n    /^(\u067E|5\u0634|\u067E\u0646\u062C\u0634\u0646\u0628\u0647)/i,\n    /^(\u062C|\u062C\u0645\u0639\u0647)/i,\n    /^(\u0634|\u0634\u0646\u0628\u0647)/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0628|\u0642|\u0646|\u0638|\u0635|\u0628.\u0638.|\u0639|\u0634)/i,\n  abbreviated: /^(\u0642.\u0638.|\u0628.\u0638.|\u0646\u06CC\u0645\u0647\u200C\u0634\u0628|\u0638\u0647\u0631|\u0635\u0628\u062D|\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631|\u0639\u0635\u0631|\u0634\u0628)/i,\n  wide: /^(\u0642\u0628\u0644\u200C\u0627\u0632\u0638\u0647\u0631|\u0646\u06CC\u0645\u0647\u200C\u0634\u0628|\u0638\u0647\u0631|\u0635\u0628\u062D|\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631|\u0639\u0635\u0631|\u0634\u0628)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(\u0642|\u0642.\u0638.|\u0642\u0628\u0644\u200C\u0627\u0632\u0638\u0647\u0631)/i,\n    pm: /^(\u0628|\u0628.\u0638.|\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631)/i,\n    midnight: /^(\u200C\u0646\u06CC\u0645\u0647\u200C\u0634\u0628|\u0646)/i,\n    noon: /^(\u0638|\u0638\u0647\u0631)/i,\n    morning: /(\u0635|\u0635\u0628\u062D)/i,\n    afternoon: /(\u0628|\u0628.\u0638.|\u0628\u0639\u062F\u0627\u0632\u0638\u0647\u0631)/i,\n    evening: /(\u0639|\u0639\u0635\u0631)/i,\n    night: /(\u0634|\u0634\u0628)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./fa-IR/_lib/formatDistance.js\";\nimport { formatLong } from \"./fa-IR/_lib/formatLong.js\";\nimport { formatRelative } from \"./fa-IR/_lib/formatRelative.js\";\nimport { localize } from \"./fa-IR/_lib/localize.js\";\nimport { match } from \"./fa-IR/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Persian/Farsi locale (Iran).\n * @language Persian\n * @iso-639-2 ira\n * @author Morteza Ziyae [@mort3za](https://github.com/mort3za)\n */\nexport const faIR = {\n  code: \"fa-IR\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 6 /* Saturday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default faIR;\n", "function futureSeconds(text) {\n  return text.replace(/sekuntia?/, \"sekunnin\");\n}\n\nfunction futureMinutes(text) {\n  return text.replace(/minuuttia?/, \"minuutin\");\n}\n\nfunction futureHours(text) {\n  return text.replace(/tuntia?/, \"tunnin\");\n}\n\nfunction futureDays(text) {\n  return text.replace(/p\u00E4iv\u00E4\u00E4?/, \"p\u00E4iv\u00E4n\");\n}\n\nfunction futureWeeks(text) {\n  return text.replace(/(viikko|viikkoa)/, \"viikon\");\n}\n\nfunction futureMonths(text) {\n  return text.replace(/(kuukausi|kuukautta)/, \"kuukauden\");\n}\n\nfunction futureYears(text) {\n  return text.replace(/(vuosi|vuotta)/, \"vuoden\");\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"alle sekunti\",\n    other: \"alle {{count}} sekuntia\",\n    futureTense: futureSeconds,\n  },\n\n  xSeconds: {\n    one: \"sekunti\",\n    other: \"{{count}} sekuntia\",\n    futureTense: futureSeconds,\n  },\n\n  halfAMinute: {\n    one: \"puoli minuuttia\",\n    other: \"puoli minuuttia\",\n    futureTense: (_text) => \"puolen minuutin\",\n  },\n\n  lessThanXMinutes: {\n    one: \"alle minuutti\",\n    other: \"alle {{count}} minuuttia\",\n    futureTense: futureMinutes,\n  },\n\n  xMinutes: {\n    one: \"minuutti\",\n    other: \"{{count}} minuuttia\",\n    futureTense: futureMinutes,\n  },\n\n  aboutXHours: {\n    one: \"noin tunti\",\n    other: \"noin {{count}} tuntia\",\n    futureTense: futureHours,\n  },\n\n  xHours: {\n    one: \"tunti\",\n    other: \"{{count}} tuntia\",\n    futureTense: futureHours,\n  },\n\n  xDays: {\n    one: \"p\u00E4iv\u00E4\",\n    other: \"{{count}} p\u00E4iv\u00E4\u00E4\",\n    futureTense: futureDays,\n  },\n\n  aboutXWeeks: {\n    one: \"noin viikko\",\n    other: \"noin {{count}} viikkoa\",\n    futureTense: futureWeeks,\n  },\n\n  xWeeks: {\n    one: \"viikko\",\n    other: \"{{count}} viikkoa\",\n    futureTense: futureWeeks,\n  },\n\n  aboutXMonths: {\n    one: \"noin kuukausi\",\n    other: \"noin {{count}} kuukautta\",\n    futureTense: futureMonths,\n  },\n\n  xMonths: {\n    one: \"kuukausi\",\n    other: \"{{count}} kuukautta\",\n    futureTense: futureMonths,\n  },\n\n  aboutXYears: {\n    one: \"noin vuosi\",\n    other: \"noin {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  xYears: {\n    one: \"vuosi\",\n    other: \"{{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  overXYears: {\n    one: \"yli vuosi\",\n    other: \"yli {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n\n  almostXYears: {\n    one: \"l\u00E4hes vuosi\",\n    other: \"l\u00E4hes {{count}} vuotta\",\n    futureTense: futureYears,\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const tokenValue = formatDistanceLocale[token];\n  const result =\n    count === 1\n      ? tokenValue.one\n      : tokenValue.other.replace(\"{{count}}\", String(count));\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return tokenValue.futureTense(result) + \" kuluttua\";\n    } else {\n      return result + \" sitten\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"eeee d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"d.M.y\",\n};\n\nconst timeFormats = {\n  full: \"HH.mm.ss zzzz\",\n  long: \"HH.mm.ss z\",\n  medium: \"HH.mm.ss\",\n  short: \"HH.mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'klo' {{time}}\",\n  long: \"{{date}} 'klo' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'viime' eeee 'klo' p\",\n  yesterday: \"'eilen klo' p\",\n  today: \"'t\u00E4n\u00E4\u00E4n klo' p\",\n  tomorrow: \"'huomenna klo' p\",\n  nextWeek: \"'ensi' eeee 'klo' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"eaa.\", \"jaa.\"],\n  abbreviated: [\"eaa.\", \"jaa.\"],\n  wide: [\"ennen ajanlaskun alkua\", \"j\u00E4lkeen ajanlaskun alun\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. kvartaali\", \"2. kvartaali\", \"3. kvartaali\", \"4. kvartaali\"],\n};\n\nconst monthValues = {\n  narrow: [\"T\", \"H\", \"M\", \"H\", \"T\", \"K\", \"H\", \"E\", \"S\", \"L\", \"M\", \"J\"],\n  abbreviated: [\n    \"tammi\",\n    \"helmi\",\n    \"maalis\",\n    \"huhti\",\n    \"touko\",\n    \"kes\u00E4\",\n    \"hein\u00E4\",\n    \"elo\",\n    \"syys\",\n    \"loka\",\n    \"marras\",\n    \"joulu\",\n  ],\n\n  wide: [\n    \"tammikuu\",\n    \"helmikuu\",\n    \"maaliskuu\",\n    \"huhtikuu\",\n    \"toukokuu\",\n    \"kes\u00E4kuu\",\n    \"hein\u00E4kuu\",\n    \"elokuu\",\n    \"syyskuu\",\n    \"lokakuu\",\n    \"marraskuu\",\n    \"joulukuu\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: monthValues.narrow,\n  abbreviated: monthValues.abbreviated,\n  wide: [\n    \"tammikuuta\",\n    \"helmikuuta\",\n    \"maaliskuuta\",\n    \"huhtikuuta\",\n    \"toukokuuta\",\n    \"kes\u00E4kuuta\",\n    \"hein\u00E4kuuta\",\n    \"elokuuta\",\n    \"syyskuuta\",\n    \"lokakuuta\",\n    \"marraskuuta\",\n    \"joulukuuta\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"K\", \"T\", \"P\", \"L\"],\n  short: [\"su\", \"ma\", \"ti\", \"ke\", \"to\", \"pe\", \"la\"],\n  abbreviated: [\"sunn.\", \"maan.\", \"tiis.\", \"kesk.\", \"torst.\", \"perj.\", \"la\"],\n\n  wide: [\n    \"sunnuntai\",\n    \"maanantai\",\n    \"tiistai\",\n    \"keskiviikko\",\n    \"torstai\",\n    \"perjantai\",\n    \"lauantai\",\n  ],\n};\n\nconst formattingDayValues = {\n  narrow: dayValues.narrow,\n  short: dayValues.short,\n  abbreviated: dayValues.abbreviated,\n  wide: [\n    \"sunnuntaina\",\n    \"maanantaina\",\n    \"tiistaina\",\n    \"keskiviikkona\",\n    \"torstaina\",\n    \"perjantaina\",\n    \"lauantaina\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"ap\",\n    pm: \"ip\",\n    midnight: \"keskiy\u00F6\",\n    noon: \"keskip\u00E4iv\u00E4\",\n    morning: \"ap\",\n    afternoon: \"ip\",\n    evening: \"illalla\",\n    night: \"y\u00F6ll\u00E4\",\n  },\n  abbreviated: {\n    am: \"ap\",\n    pm: \"ip\",\n    midnight: \"keskiy\u00F6\",\n    noon: \"keskip\u00E4iv\u00E4\",\n    morning: \"ap\",\n    afternoon: \"ip\",\n    evening: \"illalla\",\n    night: \"y\u00F6ll\u00E4\",\n  },\n  wide: {\n    am: \"ap\",\n    pm: \"ip\",\n    midnight: \"keskiy\u00F6ll\u00E4\",\n    noon: \"keskip\u00E4iv\u00E4ll\u00E4\",\n    morning: \"aamup\u00E4iv\u00E4ll\u00E4\",\n    afternoon: \"iltap\u00E4iv\u00E4ll\u00E4\",\n    evening: \"illalla\",\n    night: \"y\u00F6ll\u00E4\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(e|j)/i,\n  abbreviated: /^(eaa.|jaa.)/i,\n  wide: /^(ennen ajanlaskun alkua|j\u00E4lkeen ajanlaskun alun)/i,\n};\nconst parseEraPatterns = {\n  any: [/^e/i, /^j/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234]\\.? kvartaali/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[thmkeslj]/i,\n  abbreviated:\n    /^(tammi|helmi|maalis|huhti|touko|kes\u00E4|hein\u00E4|elo|syys|loka|marras|joulu)/i,\n  wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kes\u00E4kuu|hein\u00E4kuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^t/i,\n    /^h/i,\n    /^m/i,\n    /^h/i,\n    /^t/i,\n    /^k/i,\n    /^h/i,\n    /^e/i,\n    /^s/i,\n    /^l/i,\n    /^m/i,\n    /^j/i,\n  ],\n\n  any: [\n    /^ta/i,\n    /^hel/i,\n    /^maa/i,\n    /^hu/i,\n    /^to/i,\n    /^k/i,\n    /^hei/i,\n    /^e/i,\n    /^s/i,\n    /^l/i,\n    /^mar/i,\n    /^j/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtkpl]/i,\n  short: /^(su|ma|ti|ke|to|pe|la)/i,\n  abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,\n  wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i],\n  any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(ap|ip|keskiy\u00F6|keskip\u00E4iv\u00E4|aamup\u00E4iv\u00E4ll\u00E4|iltap\u00E4iv\u00E4ll\u00E4|illalla|y\u00F6ll\u00E4)/i,\n  any: /^(ap|ip|keskiy\u00F6ll\u00E4|keskip\u00E4iv\u00E4ll\u00E4|aamup\u00E4iv\u00E4ll\u00E4|iltap\u00E4iv\u00E4ll\u00E4|illalla|y\u00F6ll\u00E4)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^ap/i,\n    pm: /^ip/i,\n    midnight: /^keskiy\u00F6/i,\n    noon: /^keskip\u00E4iv\u00E4/i,\n    morning: /aamup\u00E4iv\u00E4ll\u00E4/i,\n    afternoon: /iltap\u00E4iv\u00E4ll\u00E4/i,\n    evening: /illalla/i,\n    night: /y\u00F6ll\u00E4/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./fi/_lib/formatDistance.js\";\nimport { formatLong } from \"./fi/_lib/formatLong.js\";\nimport { formatRelative } from \"./fi/_lib/formatRelative.js\";\nimport { localize } from \"./fi/_lib/localize.js\";\nimport { match } from \"./fi/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Finnish locale.\n * @language Finnish\n * @iso-639-2 fin\n * @author Pyry-Samuli Lahti [@Pyppe](https://github.com/Pyppe)\n * @author Edo Rivai [@mikolajgrzyb](https://github.com/mikolajgrzyb)\n * @author Samu Juvonen [@sjuvonen](https://github.com/sjuvonen)\n */\nexport const fi = {\n  code: \"fi\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default fi;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"moins d\u2019une seconde\",\n    other: \"moins de {{count}} secondes\",\n  },\n\n  xSeconds: {\n    one: \"1 seconde\",\n    other: \"{{count}} secondes\",\n  },\n\n  halfAMinute: \"30 secondes\",\n\n  lessThanXMinutes: {\n    one: \"moins d\u2019une minute\",\n    other: \"moins de {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"environ 1 heure\",\n    other: \"environ {{count}} heures\",\n  },\n\n  xHours: {\n    one: \"1 heure\",\n    other: \"{{count}} heures\",\n  },\n\n  xDays: {\n    one: \"1 jour\",\n    other: \"{{count}} jours\",\n  },\n\n  aboutXWeeks: {\n    one: \"environ 1 semaine\",\n    other: \"environ {{count}} semaines\",\n  },\n\n  xWeeks: {\n    one: \"1 semaine\",\n    other: \"{{count}} semaines\",\n  },\n\n  aboutXMonths: {\n    one: \"environ 1 mois\",\n    other: \"environ {{count}} mois\",\n  },\n\n  xMonths: {\n    one: \"1 mois\",\n    other: \"{{count}} mois\",\n  },\n\n  aboutXYears: {\n    one: \"environ 1 an\",\n    other: \"environ {{count}} ans\",\n  },\n\n  xYears: {\n    one: \"1 an\",\n    other: \"{{count}} ans\",\n  },\n\n  overXYears: {\n    one: \"plus d\u2019un an\",\n    other: \"plus de {{count}} ans\",\n  },\n\n  almostXYears: {\n    one: \"presqu\u2019un an\",\n    other: \"presque {{count}} ans\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n  const form = formatDistanceLocale[token];\n  if (typeof form === \"string\") {\n    result = form;\n  } else if (count === 1) {\n    result = form.one;\n  } else {\n    result = form.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"dans \" + result;\n    } else {\n      return \"il y a \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E0' {{time}}\",\n  long: \"{{date}} '\u00E0' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'dernier \u00E0' p\",\n  yesterday: \"'hier \u00E0' p\",\n  today: \"'aujourd\u2019hui \u00E0' p\",\n  tomorrow: \"'demain \u00E0' p'\",\n  nextWeek: \"eeee 'prochain \u00E0' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"av. J.-C\", \"ap. J.-C\"],\n  abbreviated: [\"av. J.-C\", \"ap. J.-C\"],\n  wide: [\"avant J\u00E9sus-Christ\", \"apr\u00E8s J\u00E9sus-Christ\"],\n};\n\nconst quarterValues = {\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  abbreviated: [\"1er trim.\", \"2\u00E8me trim.\", \"3\u00E8me trim.\", \"4\u00E8me trim.\"],\n  wide: [\"1er trimestre\", \"2\u00E8me trimestre\", \"3\u00E8me trimestre\", \"4\u00E8me trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"janv.\",\n    \"f\u00E9vr.\",\n    \"mars\",\n    \"avr.\",\n    \"mai\",\n    \"juin\",\n    \"juil.\",\n    \"ao\u00FBt\",\n    \"sept.\",\n    \"oct.\",\n    \"nov.\",\n    \"d\u00E9c.\",\n  ],\n\n  wide: [\n    \"janvier\",\n    \"f\u00E9vrier\",\n    \"mars\",\n    \"avril\",\n    \"mai\",\n    \"juin\",\n    \"juillet\",\n    \"ao\u00FBt\",\n    \"septembre\",\n    \"octobre\",\n    \"novembre\",\n    \"d\u00E9cembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\n  short: [\"di\", \"lu\", \"ma\", \"me\", \"je\", \"ve\", \"sa\"],\n  abbreviated: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n\n  wide: [\n    \"dimanche\",\n    \"lundi\",\n    \"mardi\",\n    \"mercredi\",\n    \"jeudi\",\n    \"vendredi\",\n    \"samedi\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"mat.\",\n    afternoon: \"ap.m.\",\n    evening: \"soir\",\n    night: \"mat.\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"matin\",\n    afternoon: \"apr\u00E8s-midi\",\n    evening: \"soir\",\n    night: \"matin\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"du matin\",\n    afternoon: \"de l\u2019apr\u00E8s-midi\",\n    evening: \"du soir\",\n    night: \"du matin\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  if (number === 0) return \"0\";\n\n  const feminineUnits = [\"year\", \"week\", \"hour\", \"minute\", \"second\"];\n  let suffix;\n\n  if (number === 1) {\n    suffix = unit && feminineUnits.includes(unit) ? \"\u00E8re\" : \"er\";\n  } else {\n    suffix = \"\u00E8me\";\n  }\n\n  return number + suffix;\n};\n\nconst LONG_MONTHS_TOKENS = [\"MMM\", \"MMMM\"];\n\nexport const localize = {\n  preprocessor: (date, parts) => {\n    // Replaces the `do` tokens with `d` when used with long month tokens and the day of the month is greater than one.\n    // Use case \"do MMMM\" => 1er ao\u00FBt, 29 ao\u00FBt\n    // see https://github.com/date-fns/date-fns/issues/1391\n\n    if (date.getDate() === 1) return parts;\n\n    const hasLongMonthToken = parts.some(\n      (part) => part.isToken && LONG_MONTHS_TOKENS.includes(part.value),\n    );\n\n    if (!hasLongMonthToken) return parts;\n\n    return parts.map((part) =>\n      part.isToken && part.value === \"do\"\n        ? { isToken: true, value: \"d\" }\n        : part,\n    );\n  },\n\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(i\u00E8me|\u00E8re|\u00E8me|er|e)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,\n  abbreviated: /^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\n  wide: /^(avant J\u00E9sus-Christ|apr\u00E8s J\u00E9sus-Christ)/i,\n};\nconst parseEraPatterns = {\n  any: [/^av/i, /^ap/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^T?[1234]/i,\n  abbreviated: /^[1234](er|\u00E8me|e)? trim\\.?/i,\n  wide: /^[1234](er|\u00E8me|e)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(janv|f\u00E9vr|mars|avr|mai|juin|juill|juil|ao\u00FBt|sept|oct|nov|d\u00E9c)\\.?/i,\n  wide: /^(janvier|f\u00E9vrier|mars|avril|mai|juin|juillet|ao\u00FBt|septembre|octobre|novembre|d\u00E9cembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^av/i,\n    /^ma/i,\n    /^juin/i,\n    /^juil/i,\n    /^ao/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[lmjvsd]/i,\n  short: /^(di|lu|ma|me|je|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,\n  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,\n  any: /^([ap]\\.?\\s?m\\.?|du matin|de l'apr\u00E8s[-\\s]midi|du soir|de la nuit)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^min/i,\n    noon: /^mid/i,\n    morning: /mat/i,\n    afternoon: /ap/i,\n    evening: /soir/i,\n    night: /nuit/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./fr/_lib/formatDistance.js\";\nimport { formatLong } from \"./fr/_lib/formatLong.js\";\nimport { formatRelative } from \"./fr/_lib/formatRelative.js\";\nimport { localize } from \"./fr/_lib/localize.js\";\nimport { match } from \"./fr/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary French locale.\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\n * @author Fran\u00E7ois B [@fbonzon](https://github.com/fbonzon)\n */\nexport const fr = {\n  code: \"fr\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default fr;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"yy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E0' {{time}}\",\n  long: \"{{date}} '\u00E0' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "// Same as fr\nimport { formatDistance } from \"./fr/_lib/formatDistance.js\";\nimport { formatRelative } from \"./fr/_lib/formatRelative.js\";\nimport { localize } from \"./fr/_lib/localize.js\";\nimport { match } from \"./fr/_lib/match.js\";\n\n// Unique for fr-CA\nimport { formatLong } from \"./fr-CA/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary French locale (Canada).\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\n * @author Fran\u00E7ois B [@fbonzon](https://github.com/fbonzon)\n * @author Gabriele Petrioli [@gpetrioli](https://github.com/gpetrioli)\n */\nexport const frCA = {\n  code: \"fr-CA\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n\n  // Unique for fr-CA\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default frCA;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E0' {{time}}\",\n  long: \"{{date}} '\u00E0' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'la semaine derni\u00E8re \u00E0' p\",\n  yesterday: \"'hier \u00E0' p\",\n  today: \"'aujourd\u2019hui \u00E0' p\",\n  tomorrow: \"'demain \u00E0' p'\",\n  nextWeek: \"eeee 'la semaine prochaine \u00E0' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "// Same as fr\nimport { formatDistance } from \"./fr/_lib/formatDistance.js\";\nimport { localize } from \"./fr/_lib/localize.js\";\nimport { match } from \"./fr/_lib/match.js\";\n\n// Unique for fr-CH\nimport { formatLong } from \"./fr-CH/_lib/formatLong.js\";\nimport { formatRelative } from \"./fr-CH/_lib/formatRelative.js\";\n\n/**\n * @category Locales\n * @summary French locale (Switzerland).\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\n * @author Fran\u00E7ois B [@fbonzon](https://github.com/fbonzon)\n * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)\n * @author Alex Hoeing [@dcbn](https://github.com/dcbn)\n */\nexport const frCH = {\n  code: \"fr-CH\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default frCH;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"minder as 1 sekonde\",\n    other: \"minder as {{count}} sekonden\",\n  },\n\n  xSeconds: {\n    one: \"1 sekonde\",\n    other: \"{{count}} sekonden\",\n  },\n\n  halfAMinute: \"oardel min\u00FAt\",\n\n  lessThanXMinutes: {\n    one: \"minder as 1 min\u00FAt\",\n    other: \"minder as {{count}} minuten\",\n  },\n\n  xMinutes: {\n    one: \"1 min\u00FAt\",\n    other: \"{{count}} minuten\",\n  },\n\n  aboutXHours: {\n    one: \"sawat 1 oere\",\n    other: \"sawat {{count}} oere\",\n  },\n\n  xHours: {\n    one: \"1 oere\",\n    other: \"{{count}} oere\",\n  },\n\n  xDays: {\n    one: \"1 dei\",\n    other: \"{{count}} dagen\",\n  },\n\n  aboutXWeeks: {\n    one: \"sawat 1 wike\",\n    other: \"sawat {{count}} wiken\",\n  },\n\n  xWeeks: {\n    one: \"1 wike\",\n    other: \"{{count}} wiken\",\n  },\n\n  aboutXMonths: {\n    one: \"sawat 1 moanne\",\n    other: \"sawat {{count}} moannen\",\n  },\n\n  xMonths: {\n    one: \"1 moanne\",\n    other: \"{{count}} moannen\",\n  },\n\n  aboutXYears: {\n    one: \"sawat 1 jier\",\n    other: \"sawat {{count}} jier\",\n  },\n\n  xYears: {\n    one: \"1 jier\",\n    other: \"{{count}} jier\",\n  },\n\n  overXYears: {\n    one: \"mear as 1 jier\",\n    other: \"mear as {{count}}s jier\",\n  },\n\n  almostXYears: {\n    one: \"hast 1 jier\",\n    other: \"hast {{count}} jier\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"oer \" + result;\n    } else {\n      return result + \" lyn\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd-MM-y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'om' {{time}}\",\n  long: \"{{date}} 'om' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u00F4fr\u00FBne' eeee 'om' p\",\n  yesterday: \"'juster om' p\",\n  today: \"'hjoed om' p\",\n  tomorrow: \"'moarn om' p\",\n  nextWeek: \"eeee 'om' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"f.K.\", \"n.K.\"],\n  abbreviated: [\"f.Kr.\", \"n.Kr.\"],\n  wide: [\"foar Kristus\", \"nei Kristus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1e fearnsjier\", \"2e fearnsjier\", \"3e fearnsjier\", \"4e fearnsjier\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mrt.\",\n    \"apr.\",\n    \"mai.\",\n    \"jun.\",\n    \"jul.\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"jannewaris\",\n    \"febrewaris\",\n    \"maart\",\n    \"april\",\n    \"maaie\",\n    \"juny\",\n    \"july\",\n    \"augustus\",\n    \"septimber\",\n    \"oktober\",\n    \"novimber\",\n    \"desimber\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"],\n  short: [\"si\", \"mo\", \"ti\", \"wo\", \"to\", \"fr\", \"so\"],\n  abbreviated: [\"snein\", \"moa\", \"tii\", \"woa\", \"ton\", \"fre\", \"sneon\"],\n  wide: [\n    \"snein\",\n    \"moandei\",\n    \"tiisdei\",\n    \"woansdei\",\n    \"tongersdei\",\n    \"freed\",\n    \"sneon\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"middei\",\n    morning: \"moarns\",\n    afternoon: \"middeis\",\n    evening: \"j\u00FBns\",\n    night: \"nachts\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"middei\",\n    morning: \"moarns\",\n    afternoon: \"middeis\",\n    evening: \"j\u00FBns\",\n    night: \"nachts\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"middei\",\n    morning: \"moarns\",\n    afternoon: \"middeis\",\n    evening: \"j\u00FBns\",\n    night: \"nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"e\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([fn]\\.? ?K\\.?)/,\n  abbreviated: /^([fn]\\. ?Kr\\.?)/,\n  wide: /^((foar|nei) Kristus)/,\n};\nconst parseEraPatterns = {\n  any: [/^f/, /^n/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K[1234]/i,\n  wide: /^[1234]e fearnsjier/i,\n};\n\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i,\n  wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^jan/i,\n    /^feb/i,\n    /^m(r|a)/i,\n    /^apr/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^aug/i,\n    /^sep/i,\n    /^okt/i,\n    /^nov/i,\n    /^des/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(si|mo|ti|wo|to|fr|so)/i,\n  abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i,\n  wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^sn/i, /^mo/i, /^ti/i, /^wo/i, /^to/i, /^fr/i, /^sn/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|middernacht|middeis|moarns|middei|j\u00FBns|nachts)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /^middernacht/i,\n    noon: /^middei/i,\n    morning: /moarns/i,\n    afternoon: /^middeis/i,\n    evening: /j\u00FBns/i,\n    night: /nachts/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./fy/_lib/formatDistance.js\";\nimport { formatLong } from \"./fy/_lib/formatLong.js\";\nimport { formatRelative } from \"./fy/_lib/formatRelative.js\";\nimport { localize } from \"./fy/_lib/localize.js\";\nimport { match } from \"./fy/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Western Frisian locale (Netherlands).\n * @language West Frisian\n * @iso-639-2 fry\n * @author Damon Asberg [@damon02](https://github.com/damon02)\n */\nexport const fy = {\n  code: \"fy\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default fy;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"nas lugha na diog\",\n    other: \"nas lugha na {{count}} diogan\",\n  },\n\n  xSeconds: {\n    one: \"1 diog\",\n    two: \"2 dhiog\",\n    twenty: \"20 diog\",\n    other: \"{{count}} diogan\",\n  },\n\n  halfAMinute: \"leth mhionaid\",\n\n  lessThanXMinutes: {\n    one: \"nas lugha na mionaid\",\n    other: \"nas lugha na {{count}} mionaidean\",\n  },\n\n  xMinutes: {\n    one: \"1 mionaid\",\n    two: \"2 mhionaid\",\n    twenty: \"20 mionaid\",\n    other: \"{{count}} mionaidean\",\n  },\n\n  aboutXHours: {\n    one: \"mu uair de th\u00ECde\",\n    other: \"mu {{count}} uairean de th\u00ECde\",\n  },\n\n  xHours: {\n    one: \"1 uair de th\u00ECde\",\n    two: \"2 uair de th\u00ECde\",\n    twenty: \"20 uair de th\u00ECde\",\n    other: \"{{count}} uairean de th\u00ECde\",\n  },\n\n  xDays: {\n    one: \"1 l\u00E0\",\n    other: \"{{count}} l\u00E0\",\n  },\n\n  aboutXWeeks: {\n    one: \"mu 1 seachdain\",\n    other: \"mu {{count}} seachdainean\",\n  },\n\n  xWeeks: {\n    one: \"1 seachdain\",\n    other: \"{{count}} seachdainean\",\n  },\n\n  aboutXMonths: {\n    one: \"mu mh\u00ECos\",\n    other: \"mu {{count}} m\u00ECosan\",\n  },\n\n  xMonths: {\n    one: \"1 m\u00ECos\",\n    other: \"{{count}} m\u00ECosan\",\n  },\n\n  aboutXYears: {\n    one: \"mu bhliadhna\",\n    other: \"mu {{count}} bliadhnaichean\",\n  },\n\n  xYears: {\n    one: \"1 bhliadhna\",\n    other: \"{{count}} bliadhna\",\n  },\n\n  overXYears: {\n    one: \"c\u00F2rr is bliadhna\",\n    other: \"c\u00F2rr is {{count}} bliadhnaichean\",\n  },\n\n  almostXYears: {\n    one: \"cha mh\u00F2r bliadhna\",\n    other: \"cha mh\u00F2r {{count}} bliadhnaichean\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2 && !!tokenValue.two) {\n    result = tokenValue.two;\n  } else if (count === 20 && !!tokenValue.twenty) {\n    result = tokenValue.twenty;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"ann an \" + result;\n    } else {\n      return \"o chionn \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'aig' {{time}}\",\n  long: \"{{date}} 'aig' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'mu dheireadh' eeee 'aig' p\", //FIX\n  yesterday: \"'an-d\u00E8 aig' p\",\n  today: \"'an-diugh aig' p\",\n  tomorrow: \"'a-m\u00E0ireach aig' p\",\n  nextWeek: \"eeee 'aig' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"R\", \"A\"],\n  abbreviated: [\"RC\", \"AD\"],\n  wide: [\"ro Chr\u00ECosta\", \"anno domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"C1\", \"C2\", \"C3\", \"C4\"],\n  wide: [\n    \"a' chiad chairteal\",\n    \"an d\u00E0rna cairteal\",\n    \"an treas cairteal\",\n    \"an ceathramh cairteal\",\n  ],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"F\", \"G\", \"M\", \"G\", \"C\", \"\u00D2\", \"I\", \"L\", \"S\", \"D\", \"S\", \"D\"],\n  abbreviated: [\n    \"Faoi\",\n    \"Gear\",\n    \"M\u00E0rt\",\n    \"Gibl\",\n    \"C\u00E8it\",\n    \"\u00D2gmh\",\n    \"Iuch\",\n    \"L\u00F9n\",\n    \"Sult\",\n    \"D\u00E0mh\",\n    \"Samh\",\n    \"D\u00F9bh\",\n  ],\n\n  wide: [\n    \"Am Faoilleach\",\n    \"An Gearran\",\n    \"Am M\u00E0rt\",\n    \"An Giblean\",\n    \"An C\u00E8itean\",\n    \"An t-\u00D2gmhios\",\n    \"An t-Iuchar\",\n    \"An L\u00F9nastal\",\n    \"An t-Sultain\",\n    \"An D\u00E0mhair\",\n    \"An t-Samhain\",\n    \"An D\u00F9bhlachd\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"C\", \"A\", \"H\", \"S\"],\n  short: [\"D\u00F2\", \"Lu\", \"M\u00E0\", \"Ci\", \"Ar\", \"Ha\", \"Sa\"],\n  abbreviated: [\"Did\", \"Dil\", \"Dim\", \"Dic\", \"Dia\", \"Dih\", \"Dis\"],\n  wide: [\n    \"Did\u00F2mhnaich\",\n    \"Diluain\",\n    \"Dim\u00E0irt\",\n    \"Diciadain\",\n    \"Diardaoin\",\n    \"Dihaoine\",\n    \"Disathairne\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"m\",\n    pm: \"f\",\n    midnight: \"m.o.\",\n    noon: \"m.l.\",\n    morning: \"madainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"oidhche\",\n  },\n  abbreviated: {\n    am: \"M.\",\n    pm: \"F.\",\n    midnight: \"meadhan oidhche\",\n    noon: \"meadhan l\u00E0\",\n    morning: \"madainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"oidhche\",\n  },\n  wide: {\n    am: \"m.\",\n    pm: \"f.\",\n    midnight: \"meadhan oidhche\",\n    noon: \"meadhan l\u00E0\",\n    morning: \"madainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"oidhche\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"m\",\n    pm: \"f\",\n    midnight: \"m.o.\",\n    noon: \"m.l.\",\n    morning: \"sa mhadainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"air an oidhche\",\n  },\n  abbreviated: {\n    am: \"M.\",\n    pm: \"F.\",\n    midnight: \"meadhan oidhche\",\n    noon: \"meadhan l\u00E0\",\n    morning: \"sa mhadainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"air an oidhche\",\n  },\n  wide: {\n    am: \"m.\",\n    pm: \"f.\",\n    midnight: \"meadhan oidhche\",\n    noon: \"meadhan l\u00E0\",\n    morning: \"sa mhadainn\",\n    afternoon: \"feasgar\",\n    evening: \"feasgar\",\n    night: \"air an oidhche\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"d\";\n      case 2:\n        return number + \"na\";\n    }\n  }\n\n  if (rem100 === 12) {\n    return number + \"na\";\n  }\n\n  return number + \"mh\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(d|na|tr|mh)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(r|a)/i,\n  abbreviated: /^(r\\.?\\s?c\\.?|r\\.?\\s?a\\.?\\s?c\\.?|a\\.?\\s?d\\.?|a\\.?\\s?c\\.?)/i,\n  wide: /^(ro Chr\u00ECosta|ron aois choitchinn|anno domini|aois choitcheann)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^c[1234]/i,\n  wide: /^[1234](cd|na|tr|mh)? cairteal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[fgmc\u00F2ilsd]/i,\n  abbreviated: /^(faoi|gear|m\u00E0rt|gibl|c\u00E8it|\u00F2gmh|iuch|l\u00F9n|sult|d\u00E0mh|samh|d\u00F9bh)/i,\n  wide: /^(am faoilleach|an gearran|am m\u00E0rt|an giblean|an c\u00E8itean|an t-\u00D2gmhios|an t-Iuchar|an l\u00F9nastal|an t-Sultain|an d\u00E0mhair|an t-Samhain|an d\u00F9bhlachd)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^f/i,\n    /^g/i,\n    /^m/i,\n    /^g/i,\n    /^c/i,\n    /^\u00F2/i,\n    /^i/i,\n    /^l/i,\n    /^s/i,\n    /^d/i,\n    /^s/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^fa/i,\n    /^ge/i,\n    /^m\u00E0/i,\n    /^gi/i,\n    /^c/i,\n    /^\u00F2/i,\n    /^i/i,\n    /^l/i,\n    /^su/i,\n    /^d/i,\n    /^sa/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmcahs]/i,\n  short: /^(d\u00F2|lu|m\u00E0|ci|ar|ha|sa)/i,\n  abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,\n  wide: /^(did\u00F2mhnaich|diluain|dim\u00E0irt|diciadain|diardaoin|dihaoine|disathairne)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],\n  any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,\n  any: /^([ap]\\.?\\s?m\\.?|meadhan oidhche|meadhan l\u00E0|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^m/i,\n    pm: /^f/i,\n    midnight: /^meadhan oidhche/i,\n    noon: /^meadhan l\u00E0/i,\n    morning: /sa mhadainn/i,\n    afternoon: /feasgar/i,\n    evening: /feasgar/i,\n    night: /air an oidhche/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./gd/_lib/formatDistance.js\";\nimport { formatLong } from \"./gd/_lib/formatLong.js\";\nimport { formatRelative } from \"./gd/_lib/formatRelative.js\";\nimport { localize } from \"./gd/_lib/localize.js\";\nimport { match } from \"./gd/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Scottish Gaelic.\n * @language Scottish Gaelic\n * @iso-639-2 gla\n * @author Lee Driscoll [@leedriscoll](https://github.com/leedriscoll)\n */\nexport const gd = {\n  code: \"gd\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default gd;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos dun segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"medio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos dun minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"arredor dunha hora\",\n    other: \"arredor de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 d\u00EDa\",\n    other: \"{{count}} d\u00EDas\",\n  },\n\n  aboutXWeeks: {\n    one: \"arredor dunha semana\",\n    other: \"arredor de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"arredor de 1 mes\",\n    other: \"arredor de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"arredor dun ano\",\n    other: \"arredor de {{count}} anos\",\n  },\n\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\",\n  },\n\n  overXYears: {\n    one: \"m\u00E1is dun ano\",\n    other: \"m\u00E1is de {{count}} anos\",\n  },\n\n  almostXYears: {\n    one: \"case un ano\",\n    other: \"case {{count}} anos\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"hai \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM y\",\n  long: \"d 'de' MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E1s' {{time}}\",\n  long: \"{{date}} '\u00E1s' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'o' eeee 'pasado \u00E1' LT\",\n  yesterday: \"'onte \u00E1' p\",\n  today: \"'hoxe \u00E1' p\",\n  tomorrow: \"'ma\u00F1\u00E1 \u00E1' p\",\n  nextWeek: \"eeee '\u00E1' p\",\n  other: \"P\",\n};\n\nconst formatRelativeLocalePlural = {\n  lastWeek: \"'o' eeee 'pasado \u00E1s' p\",\n  yesterday: \"'onte \u00E1s' p\",\n  today: \"'hoxe \u00E1s' p\",\n  tomorrow: \"'ma\u00F1\u00E1 \u00E1s' p\",\n  nextWeek: \"eeee '\u00E1s' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  if (date.getHours() !== 1) {\n    return formatRelativeLocalePlural[token];\n  }\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"despois de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1\u00BA trimestre\", \"2\u00BA trimestre\", \"3\u00BA trimestre\", \"4\u00BA trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"e\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"xan\",\n    \"feb\",\n    \"mar\",\n    \"abr\",\n    \"mai\",\n    \"xun\",\n    \"xul\",\n    \"ago\",\n    \"set\",\n    \"out\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"xaneiro\",\n    \"febreiro\",\n    \"marzo\",\n    \"abril\",\n    \"maio\",\n    \"xu\u00F1o\",\n    \"xullo\",\n    \"agosto\",\n    \"setembro\",\n    \"outubro\",\n    \"novembro\",\n    \"decembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\n  short: [\"do\", \"lu\", \"ma\", \"me\", \"xo\", \"ve\", \"sa\"],\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mer\", \"xov\", \"ven\", \"sab\"],\n  wide: [\"domingo\", \"luns\", \"martes\", \"m\u00E9rcores\", \"xoves\", \"venres\", \"s\u00E1bado\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"ma\u00F1\u00E1\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoite\",\n    noon: \"mediod\u00EDa\",\n    morning: \"ma\u00F1\u00E1\",\n    afternoon: \"tarde\",\n    evening: \"tardi\u00F1a\",\n    night: \"noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoite\",\n    noon: \"mediod\u00EDa\",\n    morning: \"ma\u00F1\u00E1\",\n    afternoon: \"tarde\",\n    evening: \"tardi\u00F1a\",\n    night: \"noite\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"da ma\u00F1\u00E1\",\n    afternoon: \"da tarde\",\n    evening: \"da tardi\u00F1a\",\n    night: \"da noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoite\",\n    noon: \"mediod\u00EDa\",\n    morning: \"da ma\u00F1\u00E1\",\n    afternoon: \"da tarde\",\n    evening: \"da tardi\u00F1a\",\n    night: \"da noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoite\",\n    noon: \"mediod\u00EDa\",\n    morning: \"da ma\u00F1\u00E1\",\n    afternoon: \"da tarde\",\n    evening: \"da tardi\u00F1a\",\n    night: \"da noite\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u00BA\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00BA)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|antes da era com[u\u00FA]n|despois de cristo|era com[u\u00FA]n)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [\n    /^(antes de cristo|antes da era com[u\u00FA]n)/i,\n    /^(despois de cristo|era com[u\u00FA]n)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](\u00BA)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[xfmasond]/i,\n  abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,\n  wide: /^(xaneiro|febreiro|marzo|abril|maio|xu\u00F1o|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^x/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^x/i,\n    /^x/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^xan/i,\n    /^feb/i,\n    /^mar/i,\n    /^abr/i,\n    /^mai/i,\n    /^xun/i,\n    /^xul/i,\n    /^ago/i,\n    /^set/i,\n    /^out/i,\n    /^nov/i,\n    /^dec/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmxvs]/i,\n  short: /^(do|lu|ma|me|xo|ve|sa)/i,\n  abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,\n  wide: /^(domingo|luns|martes|m[e\u00E9]rcores|xoves|venres|s[\u00E1a]bado)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i],\n  any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(da|[a\u00E1]s) (ma\u00F1[a\u00E1]|tarde|noite))/i,\n  any: /^([ap]\\.?\\s?m\\.?|medianoite|mediod[i\u00ED]a|(da|[a\u00E1]s) (ma\u00F1[a\u00E1]|tarde|noite))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn/i,\n    noon: /^md/i,\n    morning: /ma\u00F1[a\u00E1]/i,\n    afternoon: /tarde/i,\n    evening: /tardi\u00F1a/i,\n    night: /noite/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./gl/_lib/formatDistance.js\";\nimport { formatLong } from \"./gl/_lib/formatLong.js\";\nimport { formatRelative } from \"./gl/_lib/formatRelative.js\";\nimport { localize } from \"./gl/_lib/localize.js\";\nimport { match } from \"./gl/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Galician locale.\n * @language Galician\n * @iso-639-2 glg\n * @author Alberto Doval - Cocodin Technology[@cocodinTech](https://github.com/cocodinTech)\n * @author Fidel Pita [@fidelpita](https://github.com/fidelpita)\n */\nexport const gl = {\n  code: \"gl\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default gl;\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0AB9\u0AAE\u0AA3\u0ABE\u0A82\", // CLDR #1461\n    other: \"\u200B\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0AB8\u0AC7\u0A95\u0A82\u0AA1\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0AB8\u0AC7\u0A95\u0A82\u0AA1\",\n    other: \"{{count}} \u0AB8\u0AC7\u0A95\u0A82\u0AA1\",\n  },\n\n  halfAMinute: \"\u0A85\u0AA1\u0AA7\u0AC0 \u0AAE\u0ABF\u0AA8\u0ABF\u0A9F\",\n\n  lessThanXMinutes: {\n    one: \"\u0A86 \u0AAE\u0ABF\u0AA8\u0ABF\u0A9F\", // CLDR #1448\n    other: \"\u200B\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0AAE\u0ABF\u0AA8\u0ABF\u0A9F\",\n  },\n\n  xMinutes: {\n    one: \"1 \u0AAE\u0ABF\u0AA8\u0ABF\u0A9F\",\n    other: \"{{count}} \u0AAE\u0ABF\u0AA8\u0ABF\u0A9F\",\n  },\n\n  aboutXHours: {\n    one: \"\u200B\u0A86\u0AB6\u0AB0\u0AC7 1 \u0A95\u0AB2\u0ABE\u0A95\",\n    other: \"\u200B\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0A95\u0AB2\u0ABE\u0A95\",\n  },\n\n  xHours: {\n    one: \"1 \u0A95\u0AB2\u0ABE\u0A95\",\n    other: \"{{count}} \u0A95\u0AB2\u0ABE\u0A95\",\n  },\n\n  xDays: {\n    one: \"1 \u0AA6\u0ABF\u0AB5\u0AB8\",\n    other: \"{{count}} \u0AA6\u0ABF\u0AB5\u0AB8\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0A86\u0AB6\u0AB0\u0AC7 1 \u0A85\u0AA0\u0AB5\u0ABE\u0AA1\u0ABF\u0AAF\u0AC1\u0A82\",\n    other: \"\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0A85\u0AA0\u0AB5\u0ABE\u0AA1\u0ABF\u0AAF\u0ABE\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0A85\u0AA0\u0AB5\u0ABE\u0AA1\u0ABF\u0AAF\u0AC1\u0A82\",\n    other: \"{{count}} \u0A85\u0AA0\u0AB5\u0ABE\u0AA1\u0ABF\u0AAF\u0ABE\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0A86\u0AB6\u0AB0\u0AC7 1 \u0AAE\u0AB9\u0ABF\u0AA8\u0ACB\",\n    other: \"\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0AAE\u0AB9\u0ABF\u0AA8\u0ABE\",\n  },\n\n  xMonths: {\n    one: \"1 \u0AAE\u0AB9\u0ABF\u0AA8\u0ACB\",\n    other: \"{{count}} \u0AAE\u0AB9\u0ABF\u0AA8\u0ABE\",\n  },\n\n  aboutXYears: {\n    one: \"\u0A86\u0AB6\u0AB0\u0AC7 1 \u0AB5\u0AB0\u0ACD\u0AB7\",\n    other: \"\u0A86\u0AB6\u0AB0\u0AC7 {{count}} \u0AB5\u0AB0\u0ACD\u0AB7\",\n  },\n\n  xYears: {\n    one: \"1 \u0AB5\u0AB0\u0ACD\u0AB7\",\n    other: \"{{count}} \u0AB5\u0AB0\u0ACD\u0AB7\",\n  },\n\n  overXYears: {\n    one: \"1 \u0AB5\u0AB0\u0ACD\u0AB7\u0AA5\u0AC0 \u0AB5\u0AA7\u0AC1\",\n    other: \"{{count}} \u0AB5\u0AB0\u0ACD\u0AB7\u0AA5\u0AC0 \u0AB5\u0AA7\u0AC1\",\n  },\n\n  almostXYears: {\n    one: \"\u0AB2\u0A97\u0AAD\u0A97 1 \u0AB5\u0AB0\u0ACD\u0AB7\",\n    other: \"\u0AB2\u0A97\u0AAD\u0A97 {{count}} \u0AB5\u0AB0\u0ACD\u0AB7\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u0AAE\u0ABE\u0A82\";\n    } else {\n      return result + \" \u0AAA\u0AB9\u0AC7\u0AB2\u0ABE\u0A82\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n//Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\nconst dateFormats = {\n  full: \"EEEE, d MMMM, y\", // CLDR #1825\n  long: \"d MMMM, y\", // CLDR #1826\n  medium: \"d MMM, y\", // CLDR #1827\n  short: \"d/M/yy\", // CLDR #1828\n};\n\nconst timeFormats = {\n  full: \"hh:mm:ss a zzzz\", // CLDR #1829\n  long: \"hh:mm:ss a z\", // CLDR #1830\n  medium: \"hh:mm:ss a\", // CLDR #1831\n  short: \"hh:mm a\", // CLDR #1832\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\", // CLDR #1833\n  long: \"{{date}} {{time}}\", // CLDR #1834\n  medium: \"{{date}} {{time}}\", // CLDR #1835\n  short: \"{{date}} {{time}}\", // CLDR #1836\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\n\nconst formatRelativeLocale = {\n  lastWeek: \"'\u0AAA\u0ABE\u0A9B\u0AB2\u0ABE' eeee p\", // CLDR #1384\n  yesterday: \"'\u0A97\u0A88\u0A95\u0ABE\u0AB2\u0AC7' p\", // CLDR #1409\n  today: \"'\u0A86\u0A9C\u0AC7' p\", // CLDR #1410\n  tomorrow: \"'\u0A86\u0AB5\u0AA4\u0AC0\u0A95\u0ABE\u0AB2\u0AC7' p\", // CLDR #1411\n  nextWeek: \"eeee p\", // CLDR #1386\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\n// #1621 - #1630\nconst eraValues = {\n  narrow: [\"\u0A88\u0AB8\u0AAA\u0AC2\", \"\u0A88\u0AB8\"],\n  abbreviated: [\"\u0A88.\u0AB8.\u0AAA\u0AC2\u0AB0\u0ACD\u0AB5\u0AC7\", \"\u0A88.\u0AB8.\"],\n  wide: [\"\u0A88\u0AB8\u0AB5\u0AC0\u0AB8\u0AA8 \u0AAA\u0AC2\u0AB0\u0ACD\u0AB5\u0AC7\", \"\u0A88\u0AB8\u0AB5\u0AC0\u0AB8\u0AA8\"],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\n// #1631 - #1654\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1\u0AB2\u0ACB \u0AA4\u0ACD\u0AB0\u0ABF\u0AAE\u0ABE\u0AB8\", \"2\u0A9C\u0ACB \u0AA4\u0ACD\u0AB0\u0ABF\u0AAE\u0ABE\u0AB8\", \"3\u0A9C\u0ACB \u0AA4\u0ACD\u0AB0\u0ABF\u0AAE\u0ABE\u0AB8\", \"4\u0AA5\u0ACB \u0AA4\u0ACD\u0AB0\u0ABF\u0AAE\u0ABE\u0AB8\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\n// #1655 - #1726\nconst monthValues = {\n  narrow: [\"\u0A9C\u0ABE\", \"\u0AAB\u0AC7\", \"\u0AAE\u0ABE\", \"\u0A8F\", \"\u0AAE\u0AC7\", \"\u0A9C\u0AC2\", \"\u0A9C\u0AC1\", \"\u0A93\", \"\u0AB8\", \"\u0A93\", \"\u0AA8\", \"\u0AA1\u0ABF\"],\n\n  abbreviated: [\n    \"\u0A9C\u0ABE\u0AA8\u0ACD\u0AAF\u0AC1\",\n    \"\u0AAB\u0AC7\u0AAC\u0ACD\u0AB0\u0AC1\",\n    \"\u0AAE\u0ABE\u0AB0\u0ACD\u0A9A\",\n    \"\u0A8F\u0AAA\u0ACD\u0AB0\u0ABF\u0AB2\",\n    \"\u0AAE\u0AC7\",\n    \"\u0A9C\u0AC2\u0AA8\",\n    \"\u0A9C\u0AC1\u0AB2\u0ABE\u0A88\",\n    \"\u0A91\u0A97\u0AB8\u0ACD\u0A9F\",\n    \"\u0AB8\u0AAA\u0ACD\u0A9F\u0AC7\",\n    \"\u0A93\u0A95\u0ACD\u0A9F\u0ACB\",\n    \"\u0AA8\u0AB5\u0AC7\",\n    \"\u0AA1\u0ABF\u0AB8\u0AC7\",\n  ],\n\n  wide: [\n    \"\u0A9C\u0ABE\u0AA8\u0ACD\u0AAF\u0AC1\u0A86\u0AB0\u0AC0\",\n    \"\u0AAB\u0AC7\u0AAC\u0ACD\u0AB0\u0AC1\u0A86\u0AB0\u0AC0\",\n    \"\u0AAE\u0ABE\u0AB0\u0ACD\u0A9A\",\n    \"\u0A8F\u0AAA\u0ACD\u0AB0\u0ABF\u0AB2\",\n    \"\u0AAE\u0AC7\",\n    \"\u0A9C\u0AC2\u0AA8\",\n    \"\u0A9C\u0AC1\u0AB2\u0ABE\u0A87\",\n    \"\u0A93\u0A97\u0AB8\u0ACD\u0A9F\",\n    \"\u0AB8\u0AAA\u0ACD\u0A9F\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0\",\n    \"\u0A93\u0A95\u0ACD\u0A9F\u0ACB\u0AAC\u0AB0\",\n    \"\u0AA8\u0AB5\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0\",\n    \"\u0AA1\u0ABF\u0AB8\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\n// #1727 - #1768\nconst dayValues = {\n  narrow: [\"\u0AB0\", \"\u0AB8\u0ACB\", \"\u0AAE\u0A82\", \"\u0AAC\u0AC1\", \"\u0A97\u0AC1\", \"\u0AB6\u0AC1\", \"\u0AB6\"],\n  short: [\"\u0AB0\", \"\u0AB8\u0ACB\", \"\u0AAE\u0A82\", \"\u0AAC\u0AC1\", \"\u0A97\u0AC1\", \"\u0AB6\u0AC1\", \"\u0AB6\"],\n  abbreviated: [\"\u0AB0\u0AB5\u0ABF\", \"\u0AB8\u0ACB\u0AAE\", \"\u0AAE\u0A82\u0A97\u0AB3\", \"\u0AAC\u0AC1\u0AA7\", \"\u0A97\u0AC1\u0AB0\u0AC1\", \"\u0AB6\u0AC1\u0A95\u0ACD\u0AB0\", \"\u0AB6\u0AA8\u0ABF\"],\n  wide: [\n    \"\u0AB0\u0AB5\u0ABF\u0AB5\u0ABE\u0AB0\" /* Sunday */,\n    \"\u0AB8\u0ACB\u0AAE\u0AB5\u0ABE\u0AB0\" /* Monday */,\n    \"\u0AAE\u0A82\u0A97\u0AB3\u0AB5\u0ABE\u0AB0\" /* Tuesday */,\n    \"\u0AAC\u0AC1\u0AA7\u0AB5\u0ABE\u0AB0\" /* Wednesday */,\n    \"\u0A97\u0AC1\u0AB0\u0AC1\u0AB5\u0ABE\u0AB0\" /* Thursday */,\n    \"\u0AB6\u0AC1\u0A95\u0ACD\u0AB0\u0AB5\u0ABE\u0AB0\" /* Friday */,\n    \"\u0AB6\u0AA8\u0ABF\u0AB5\u0ABE\u0AB0\" /* Saturday */,\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\n// #1783 - #1824\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u0AAE.\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC.\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u200B\u0AAE\u0AA7\u0ACD\u0AAF\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u200B\u0AAE\u0AA7\u0ACD\u0AAF\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u0AAE.\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u0AAE\u0AA7\u0ACD\u0AAF\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u200B\u0AAE\u0AA7\u0ACD\u0AAF\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0ABF\",\n    noon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    morning: \"\u0AB8\u0AB5\u0ABE\u0AB0\u0AC7\",\n    afternoon: \"\u0AAC\u0AAA\u0ACB\u0AB0\u0AC7\",\n    evening: \"\u0AB8\u0ABE\u0A82\u0A9C\u0AC7\",\n    night: \"\u0AB0\u0ABE\u0AA4\u0ACD\u0AB0\u0AC7\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u0AB2|\u0A9C|\u0AA5|\u0AA0\u0ACD\u0AA0|\u0AAE)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0A88\u0AB8\u0AAA\u0AC2|\u0A88\u0AB8)/i,\n  abbreviated: /^(\u0A88\\.\u0AB8\\.\u0AAA\u0AC2\u0AB0\u0ACD\u0AB5\u0AC7|\u0A88\\.\u0AB8\\.)/i,\n  wide: /^(\u0A88\u0AB8\u0AB5\u0AC0\u0AB8\u0AA8\\s\u0AAA\u0AC2\u0AB0\u0ACD\u0AB5\u0AC7|\u0A88\u0AB8\u0AB5\u0AC0\u0AB8\u0AA8)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0A88\u0AB8\u0AAA\u0AC2/i, /^\u0A88\u0AB8/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\u0AB2\u0ACB|\u0A9C\u0ACB|\u0AA5\u0ACB)? \u0AA4\u0ACD\u0AB0\u0ABF\u0AAE\u0ABE\u0AB8/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  // eslint-disable-next-line no-misleading-character-class\n  narrow: /^[\u0A9C\u0ABE\u0AAB\u0AC7\u0AAE\u0ABE\u0A8F\u0AAE\u0AC7\u0A9C\u0AC2\u0A9C\u0AC1\u0A93\u0AB8\u0A93\u0AA8\u0AA1\u0ABF]/i,\n  abbreviated:\n    /^(\u0A9C\u0ABE\u0AA8\u0ACD\u0AAF\u0AC1|\u0AAB\u0AC7\u0AAC\u0ACD\u0AB0\u0AC1|\u0AAE\u0ABE\u0AB0\u0ACD\u0A9A|\u0A8F\u0AAA\u0ACD\u0AB0\u0ABF\u0AB2|\u0AAE\u0AC7|\u0A9C\u0AC2\u0AA8|\u0A9C\u0AC1\u0AB2\u0ABE\u0A88|\u0A91\u0A97\u0AB8\u0ACD\u0A9F|\u0AB8\u0AAA\u0ACD\u0A9F\u0AC7|\u0A93\u0A95\u0ACD\u0A9F\u0ACB|\u0AA8\u0AB5\u0AC7|\u0AA1\u0ABF\u0AB8\u0AC7)/i,\n  wide: /^(\u0A9C\u0ABE\u0AA8\u0ACD\u0AAF\u0AC1\u0A86\u0AB0\u0AC0|\u0AAB\u0AC7\u0AAC\u0ACD\u0AB0\u0AC1\u0A86\u0AB0\u0AC0|\u0AAE\u0ABE\u0AB0\u0ACD\u0A9A|\u0A8F\u0AAA\u0ACD\u0AB0\u0ABF\u0AB2|\u0AAE\u0AC7|\u0A9C\u0AC2\u0AA8|\u0A9C\u0AC1\u0AB2\u0ABE\u0A87|\u0A93\u0A97\u0AB8\u0ACD\u0A9F|\u0AB8\u0AAA\u0ACD\u0A9F\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0|\u0A93\u0A95\u0ACD\u0A9F\u0ACB\u0AAC\u0AB0|\u0AA8\u0AB5\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0|\u0AA1\u0ABF\u0AB8\u0AC7\u0AAE\u0ACD\u0AAC\u0AB0)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0A9C\u0ABE/i,\n    /^\u0AAB\u0AC7/i,\n    /^\u0AAE\u0ABE/i,\n    /^\u0A8F/i,\n    /^\u0AAE\u0AC7/i,\n    /^\u0A9C\u0AC2/i,\n    /^\u0A9C\u0AC1/i,\n    /^\u0A91\u0A97/i,\n    /^\u0AB8/i,\n    /^\u0A93\u0A95\u0ACD\u0A9F\u0ACB/i,\n    /^\u0AA8/i,\n    /^\u0AA1\u0ABF/i,\n  ],\n\n  any: [\n    /^\u0A9C\u0ABE/i,\n    /^\u0AAB\u0AC7/i,\n    /^\u0AAE\u0ABE/i,\n    /^\u0A8F/i,\n    /^\u0AAE\u0AC7/i,\n    /^\u0A9C\u0AC2/i,\n    /^\u0A9C\u0AC1/i,\n    /^\u0A91\u0A97/i,\n    /^\u0AB8/i,\n    /^\u0A93\u0A95\u0ACD\u0A9F\u0ACB/i,\n    /^\u0AA8/i,\n    /^\u0AA1\u0ABF/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0AB0|\u0AB8\u0ACB|\u0AAE\u0A82|\u0AAC\u0AC1|\u0A97\u0AC1|\u0AB6\u0AC1|\u0AB6)/i,\n  short: /^(\u0AB0|\u0AB8\u0ACB|\u0AAE\u0A82|\u0AAC\u0AC1|\u0A97\u0AC1|\u0AB6\u0AC1|\u0AB6)/i,\n  abbreviated: /^(\u0AB0\u0AB5\u0ABF|\u0AB8\u0ACB\u0AAE|\u0AAE\u0A82\u0A97\u0AB3|\u0AAC\u0AC1\u0AA7|\u0A97\u0AC1\u0AB0\u0AC1|\u0AB6\u0AC1\u0A95\u0ACD\u0AB0|\u0AB6\u0AA8\u0ABF)/i,\n  wide: /^(\u0AB0\u0AB5\u0ABF\u0AB5\u0ABE\u0AB0|\u0AB8\u0ACB\u0AAE\u0AB5\u0ABE\u0AB0|\u0AAE\u0A82\u0A97\u0AB3\u0AB5\u0ABE\u0AB0|\u0AAC\u0AC1\u0AA7\u0AB5\u0ABE\u0AB0|\u0A97\u0AC1\u0AB0\u0AC1\u0AB5\u0ABE\u0AB0|\u0AB6\u0AC1\u0A95\u0ACD\u0AB0\u0AB5\u0ABE\u0AB0|\u0AB6\u0AA8\u0ABF\u0AB5\u0ABE\u0AB0)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0AB0/i, /^\u0AB8\u0ACB/i, /^\u0AAE\u0A82/i, /^\u0AAC\u0AC1/i, /^\u0A97\u0AC1/i, /^\u0AB6\u0AC1/i, /^\u0AB6/i],\n  any: [/^\u0AB0/i, /^\u0AB8\u0ACB/i, /^\u0AAE\u0A82/i, /^\u0AAC\u0AC1/i, /^\u0A97\u0AC1/i, /^\u0AB6\u0AC1/i, /^\u0AB6/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|\u0AAE\\.?|\u0AB8|\u0AAC|\u0AB8\u0ABE\u0A82|\u0AB0\u0ABE)/i,\n  any: /^(a|p|\u0AAE\\.?|\u0AB8|\u0AAC|\u0AB8\u0ABE\u0A82|\u0AB0\u0ABE)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^\u0AAE\\.?/i,\n    noon: /^\u0AAC/i,\n    morning: /\u0AB8/i,\n    afternoon: /\u0AAC/i,\n    evening: /\u0AB8\u0ABE\u0A82/i,\n    night: /\u0AB0\u0ABE/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./gu/_lib/formatDistance.js\";\nimport { formatLong } from \"./gu/_lib/formatLong.js\";\nimport { formatRelative } from \"./gu/_lib/formatRelative.js\";\nimport { localize } from \"./gu/_lib/localize.js\";\nimport { match } from \"./gu/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Gujarati locale (India).\n * @language Gujarati\n * @iso-639-2 guj\n * @author Manaday Mavani [@ManadayM](https://github.com/manadaym)\n */\nexport const gu = {\n  code: \"gu\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default gu;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05E9\u05E0\u05D9\u05D9\u05D4\",\n    two: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05E9\u05EA\u05D9 \u05E9\u05E0\u05D9\u05D5\u05EA\",\n    other: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05BE{{count}} \u05E9\u05E0\u05D9\u05D5\u05EA\",\n  },\n\n  xSeconds: {\n    one: \"\u05E9\u05E0\u05D9\u05D9\u05D4\",\n    two: \"\u05E9\u05EA\u05D9 \u05E9\u05E0\u05D9\u05D5\u05EA\",\n    other: \"{{count}} \u05E9\u05E0\u05D9\u05D5\u05EA\",\n  },\n\n  halfAMinute: \"\u05D7\u05E6\u05D9 \u05D3\u05E7\u05D4\",\n\n  lessThanXMinutes: {\n    one: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05D3\u05E7\u05D4\",\n    two: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05E9\u05EA\u05D9 \u05D3\u05E7\u05D5\u05EA\",\n    other: \"\u05E4\u05D7\u05D5\u05EA \u05DE\u05BE{{count}} \u05D3\u05E7\u05D5\u05EA\",\n  },\n\n  xMinutes: {\n    one: \"\u05D3\u05E7\u05D4\",\n    two: \"\u05E9\u05EA\u05D9 \u05D3\u05E7\u05D5\u05EA\",\n    other: \"{{count}} \u05D3\u05E7\u05D5\u05EA\",\n  },\n\n  aboutXHours: {\n    one: \"\u05DB\u05E9\u05E2\u05D4\",\n    two: \"\u05DB\u05E9\u05E2\u05EA\u05D9\u05D9\u05DD\",\n    other: \"\u05DB\u05BE{{count}} \u05E9\u05E2\u05D5\u05EA\",\n  },\n\n  xHours: {\n    one: \"\u05E9\u05E2\u05D4\",\n    two: \"\u05E9\u05E2\u05EA\u05D9\u05D9\u05DD\",\n    other: \"{{count}} \u05E9\u05E2\u05D5\u05EA\",\n  },\n\n  xDays: {\n    one: \"\u05D9\u05D5\u05DD\",\n    two: \"\u05D9\u05D5\u05DE\u05D9\u05D9\u05DD\",\n    other: \"{{count}} \u05D9\u05DE\u05D9\u05DD\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u05DB\u05E9\u05D1\u05D5\u05E2\",\n    two: \"\u05DB\u05E9\u05D1\u05D5\u05E2\u05D9\u05D9\u05DD\",\n    other: \"\u05DB\u05BE{{count}} \u05E9\u05D1\u05D5\u05E2\u05D5\u05EA\",\n  },\n\n  xWeeks: {\n    one: \"\u05E9\u05D1\u05D5\u05E2\",\n    two: \"\u05E9\u05D1\u05D5\u05E2\u05D9\u05D9\u05DD\",\n    other: \"{{count}} \u05E9\u05D1\u05D5\u05E2\u05D5\u05EA\",\n  },\n\n  aboutXMonths: {\n    one: \"\u05DB\u05D7\u05D5\u05D3\u05E9\",\n    two: \"\u05DB\u05D7\u05D5\u05D3\u05E9\u05D9\u05D9\u05DD\",\n    other: \"\u05DB\u05BE{{count}} \u05D7\u05D5\u05D3\u05E9\u05D9\u05DD\",\n  },\n\n  xMonths: {\n    one: \"\u05D7\u05D5\u05D3\u05E9\",\n    two: \"\u05D7\u05D5\u05D3\u05E9\u05D9\u05D9\u05DD\",\n    other: \"{{count}} \u05D7\u05D5\u05D3\u05E9\u05D9\u05DD\",\n  },\n\n  aboutXYears: {\n    one: \"\u05DB\u05E9\u05E0\u05D4\",\n    two: \"\u05DB\u05E9\u05E0\u05EA\u05D9\u05D9\u05DD\",\n    other: \"\u05DB\u05BE{{count}} \u05E9\u05E0\u05D9\u05DD\",\n  },\n\n  xYears: {\n    one: \"\u05E9\u05E0\u05D4\",\n    two: \"\u05E9\u05E0\u05EA\u05D9\u05D9\u05DD\",\n    other: \"{{count}} \u05E9\u05E0\u05D9\u05DD\",\n  },\n\n  overXYears: {\n    one: \"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05E9\u05E0\u05D4\",\n    two: \"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05E9\u05E0\u05EA\u05D9\u05D9\u05DD\",\n    other: \"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05BE{{count}} \u05E9\u05E0\u05D9\u05DD\",\n  },\n\n  almostXYears: {\n    one: \"\u05DB\u05DE\u05E2\u05D8 \u05E9\u05E0\u05D4\",\n    two: \"\u05DB\u05DE\u05E2\u05D8 \u05E9\u05E0\u05EA\u05D9\u05D9\u05DD\",\n    other: \"\u05DB\u05DE\u05E2\u05D8 {{count}} \u05E9\u05E0\u05D9\u05DD\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  // Return word instead of `in one day` or `one day ago`\n  if (token === \"xDays\" && options?.addSuffix && count <= 2) {\n    if (options.comparison && options.comparison > 0) {\n      return count === 1 ? \"\u05DE\u05D7\u05E8\" : \"\u05DE\u05D7\u05E8\u05EA\u05D9\u05D9\u05DD\";\n    }\n\n    return count === 1 ? \"\u05D0\u05EA\u05DE\u05D5\u05DC\" : \"\u05E9\u05DC\u05E9\u05D5\u05DD\";\n  }\n\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2) {\n    result = tokenValue.two;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u05D1\u05E2\u05D5\u05D3 \" + result;\n    } else {\n      return \"\u05DC\u05E4\u05E0\u05D9 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d \u05D1MMMM y\",\n  long: \"d \u05D1MMMM y\",\n  medium: \"d \u05D1MMM y\",\n  short: \"d.M.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u05D1\u05E9\u05E2\u05D4' {{time}}\",\n  long: \"{{date}} '\u05D1\u05E9\u05E2\u05D4' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee '\u05E9\u05E2\u05D1\u05E8 \u05D1\u05E9\u05E2\u05D4' p\",\n  yesterday: \"'\u05D0\u05EA\u05DE\u05D5\u05DC \u05D1\u05E9\u05E2\u05D4' p\",\n  today: \"'\u05D4\u05D9\u05D5\u05DD \u05D1\u05E9\u05E2\u05D4' p\",\n  tomorrow: \"'\u05DE\u05D7\u05E8 \u05D1\u05E9\u05E2\u05D4' p\",\n  nextWeek: \"eeee '\u05D1\u05E9\u05E2\u05D4' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E1\", \"\u05DC\u05E1\u05E4\u05D9\u05E8\u05D4\"],\n  abbreviated: [\"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E1\", \"\u05DC\u05E1\u05E4\u05D9\u05E8\u05D4\"],\n  wide: [\"\u05DC\u05E4\u05E0\u05D9 \u05D4\u05E1\u05E4\u05D9\u05E8\u05D4\", \"\u05DC\u05E1\u05E4\u05D9\u05E8\u05D4\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"\u05E8\u05D1\u05E2\u05D5\u05DF 1\", \"\u05E8\u05D1\u05E2\u05D5\u05DF 2\", \"\u05E8\u05D1\u05E2\u05D5\u05DF 3\", \"\u05E8\u05D1\u05E2\u05D5\u05DF 4\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"\u05D9\u05E0\u05D5\u05F3\",\n    \"\u05E4\u05D1\u05E8\u05F3\",\n    \"\u05DE\u05E8\u05E5\",\n    \"\u05D0\u05E4\u05E8\u05F3\",\n    \"\u05DE\u05D0\u05D9\",\n    \"\u05D9\u05D5\u05E0\u05D9\",\n    \"\u05D9\u05D5\u05DC\u05D9\",\n    \"\u05D0\u05D5\u05D2\u05F3\",\n    \"\u05E1\u05E4\u05D8\u05F3\",\n    \"\u05D0\u05D5\u05E7\u05F3\",\n    \"\u05E0\u05D5\u05D1\u05F3\",\n    \"\u05D3\u05E6\u05DE\u05F3\",\n  ],\n\n  wide: [\n    \"\u05D9\u05E0\u05D5\u05D0\u05E8\",\n    \"\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8\",\n    \"\u05DE\u05E8\u05E5\",\n    \"\u05D0\u05E4\u05E8\u05D9\u05DC\",\n    \"\u05DE\u05D0\u05D9\",\n    \"\u05D9\u05D5\u05E0\u05D9\",\n    \"\u05D9\u05D5\u05DC\u05D9\",\n    \"\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8\",\n    \"\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8\",\n    \"\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8\",\n    \"\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8\",\n    \"\u05D3\u05E6\u05DE\u05D1\u05E8\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u05D0\u05F3\", \"\u05D1\u05F3\", \"\u05D2\u05F3\", \"\u05D3\u05F3\", \"\u05D4\u05F3\", \"\u05D5\u05F3\", \"\u05E9\u05F3\"],\n  short: [\"\u05D0\u05F3\", \"\u05D1\u05F3\", \"\u05D2\u05F3\", \"\u05D3\u05F3\", \"\u05D4\u05F3\", \"\u05D5\u05F3\", \"\u05E9\u05F3\"],\n  abbreviated: [\n    \"\u05D9\u05D5\u05DD \u05D0\u05F3\",\n    \"\u05D9\u05D5\u05DD \u05D1\u05F3\",\n    \"\u05D9\u05D5\u05DD \u05D2\u05F3\",\n    \"\u05D9\u05D5\u05DD \u05D3\u05F3\",\n    \"\u05D9\u05D5\u05DD \u05D4\u05F3\",\n    \"\u05D9\u05D5\u05DD \u05D5\u05F3\",\n    \"\u05E9\u05D1\u05EA\",\n  ],\n\n  wide: [\n    \"\u05D9\u05D5\u05DD \u05E8\u05D0\u05E9\u05D5\u05DF\",\n    \"\u05D9\u05D5\u05DD \u05E9\u05E0\u05D9\",\n    \"\u05D9\u05D5\u05DD \u05E9\u05DC\u05D9\u05E9\u05D9\",\n    \"\u05D9\u05D5\u05DD \u05E8\u05D1\u05D9\u05E2\u05D9\",\n    \"\u05D9\u05D5\u05DD \u05D7\u05DE\u05D9\u05E9\u05D9\",\n    \"\u05D9\u05D5\u05DD \u05E9\u05D9\u05E9\u05D9\",\n    \"\u05D9\u05D5\u05DD \u05E9\u05D1\u05EA\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D0\u05D7\u05E8 \u05D4\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05E2\u05E8\u05D1\",\n    night: \"\u05DC\u05D9\u05DC\u05D4\",\n  },\n  abbreviated: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D0\u05D7\u05E8 \u05D4\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05E2\u05E8\u05D1\",\n    night: \"\u05DC\u05D9\u05DC\u05D4\",\n  },\n  wide: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D0\u05D7\u05E8 \u05D4\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05E2\u05E8\u05D1\",\n    night: \"\u05DC\u05D9\u05DC\u05D4\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D1\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05D1\u05E2\u05E8\u05D1\",\n    night: \"\u05D1\u05DC\u05D9\u05DC\u05D4\",\n  },\n  abbreviated: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D0\u05D7\u05E8 \u05D4\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05D1\u05E2\u05E8\u05D1\",\n    night: \"\u05D1\u05DC\u05D9\u05DC\u05D4\",\n  },\n  wide: {\n    am: \"\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6\",\n    pm: \"\u05D0\u05D7\u05D4\u05F4\u05E6\",\n    midnight: \"\u05D7\u05E6\u05D5\u05EA\",\n    noon: \"\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    morning: \"\u05D1\u05D1\u05D5\u05E7\u05E8\",\n    afternoon: \"\u05D0\u05D7\u05E8 \u05D4\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD\",\n    evening: \"\u05D1\u05E2\u05E8\u05D1\",\n    night: \"\u05D1\u05DC\u05D9\u05DC\u05D4\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  // We only show words till 10\n  if (number <= 0 || number > 10) return String(number);\n\n  const unit = String(options?.unit);\n\n  const isFemale = [\"year\", \"hour\", \"minute\", \"second\"].indexOf(unit) >= 0;\n\n  const male = [\n    \"\u05E8\u05D0\u05E9\u05D5\u05DF\",\n    \"\u05E9\u05E0\u05D9\",\n    \"\u05E9\u05DC\u05D9\u05E9\u05D9\",\n    \"\u05E8\u05D1\u05D9\u05E2\u05D9\",\n    \"\u05D7\u05DE\u05D9\u05E9\u05D9\",\n    \"\u05E9\u05D9\u05E9\u05D9\",\n    \"\u05E9\u05D1\u05D9\u05E2\u05D9\",\n    \"\u05E9\u05DE\u05D9\u05E0\u05D9\",\n    \"\u05EA\u05E9\u05D9\u05E2\u05D9\",\n    \"\u05E2\u05E9\u05D9\u05E8\u05D9\",\n  ];\n\n  const female = [\n    \"\u05E8\u05D0\u05E9\u05D5\u05E0\u05D4\",\n    \"\u05E9\u05E0\u05D9\u05D9\u05D4\",\n    \"\u05E9\u05DC\u05D9\u05E9\u05D9\u05EA\",\n    \"\u05E8\u05D1\u05D9\u05E2\u05D9\u05EA\",\n    \"\u05D7\u05DE\u05D9\u05E9\u05D9\u05EA\",\n    \"\u05E9\u05D9\u05E9\u05D9\u05EA\",\n    \"\u05E9\u05D1\u05D9\u05E2\u05D9\u05EA\",\n    \"\u05E9\u05DE\u05D9\u05E0\u05D9\u05EA\",\n    \"\u05EA\u05E9\u05D9\u05E2\u05D9\u05EA\",\n    \"\u05E2\u05E9\u05D9\u05E8\u05D9\u05EA\",\n  ];\n\n  const index = number - 1;\n  return isFemale ? female[index] : male[index];\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern =\n  /^(\\d+|(\u05E8\u05D0\u05E9\u05D5\u05DF|\u05E9\u05E0\u05D9|\u05E9\u05DC\u05D9\u05E9\u05D9|\u05E8\u05D1\u05D9\u05E2\u05D9|\u05D7\u05DE\u05D9\u05E9\u05D9|\u05E9\u05D9\u05E9\u05D9|\u05E9\u05D1\u05D9\u05E2\u05D9|\u05E9\u05DE\u05D9\u05E0\u05D9|\u05EA\u05E9\u05D9\u05E2\u05D9|\u05E2\u05E9\u05D9\u05E8\u05D9|\u05E8\u05D0\u05E9\u05D5\u05E0\u05D4|\u05E9\u05E0\u05D9\u05D9\u05D4|\u05E9\u05DC\u05D9\u05E9\u05D9\u05EA|\u05E8\u05D1\u05D9\u05E2\u05D9\u05EA|\u05D7\u05DE\u05D9\u05E9\u05D9\u05EA|\u05E9\u05D9\u05E9\u05D9\u05EA|\u05E9\u05D1\u05D9\u05E2\u05D9\u05EA|\u05E9\u05DE\u05D9\u05E0\u05D9\u05EA|\u05EA\u05E9\u05D9\u05E2\u05D9\u05EA|\u05E2\u05E9\u05D9\u05E8\u05D9\u05EA))/i;\nconst parseOrdinalNumberPattern = /^(\\d+|\u05E8\u05D0|\u05E9\u05E0|\u05E9\u05DC|\u05E8\u05D1|\u05D7|\u05E9\u05D9|\u05E9\u05D1|\u05E9\u05DE|\u05EA|\u05E2)/i;\n\nconst matchEraPatterns = {\n  narrow: /^\u05DC(\u05E1\u05E4\u05D9\u05E8\u05D4|\u05E4\u05E0\u05D4\u05F4\u05E1)/i,\n  abbreviated: /^\u05DC(\u05E1\u05E4\u05D9\u05E8\u05D4|\u05E4\u05E0\u05D4\u05F4\u05E1)/i,\n  wide: /^\u05DC(\u05E4\u05E0\u05D9 \u05D4)?\u05E1\u05E4\u05D9\u05E8\u05D4/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u05DC\u05E4/i, /^\u05DC\u05E1/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^\u05E8\u05D1\u05E2\u05D5\u05DF [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^\\d+/i,\n  abbreviated: /^(\u05D9\u05E0\u05D5|\u05E4\u05D1\u05E8|\u05DE\u05E8\u05E5|\u05D0\u05E4\u05E8|\u05DE\u05D0\u05D9|\u05D9\u05D5\u05E0\u05D9|\u05D9\u05D5\u05DC\u05D9|\u05D0\u05D5\u05D2|\u05E1\u05E4\u05D8|\u05D0\u05D5\u05E7|\u05E0\u05D5\u05D1|\u05D3\u05E6\u05DE)\u05F3?/i,\n  wide: /^(\u05D9\u05E0\u05D5\u05D0\u05E8|\u05E4\u05D1\u05E8\u05D5\u05D0\u05E8|\u05DE\u05E8\u05E5|\u05D0\u05E4\u05E8\u05D9\u05DC|\u05DE\u05D0\u05D9|\u05D9\u05D5\u05E0\u05D9|\u05D9\u05D5\u05DC\u05D9|\u05D0\u05D5\u05D2\u05D5\u05E1\u05D8|\u05E1\u05E4\u05D8\u05DE\u05D1\u05E8|\u05D0\u05D5\u05E7\u05D8\u05D5\u05D1\u05E8|\u05E0\u05D5\u05D1\u05DE\u05D1\u05E8|\u05D3\u05E6\u05DE\u05D1\u05E8)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^1$/i,\n    /^2/i,\n    /^3/i,\n    /^4/i,\n    /^5/i,\n    /^6/i,\n    /^7/i,\n    /^8/i,\n    /^9/i,\n    /^10/i,\n    /^11/i,\n    /^12/i,\n  ],\n\n  any: [\n    /^\u05D9\u05E0/i,\n    /^\u05E4/i,\n    /^\u05DE\u05E8/i,\n    /^\u05D0\u05E4/i,\n    /^\u05DE\u05D0/i,\n    /^\u05D9\u05D5\u05E0/i,\n    /^\u05D9\u05D5\u05DC/i,\n    /^\u05D0\u05D5\u05D2/i,\n    /^\u05E1/i,\n    /^\u05D0\u05D5\u05E7/i,\n    /^\u05E0/i,\n    /^\u05D3/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05E9]\u05F3/i,\n  short: /^[\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05E9]\u05F3/i,\n  abbreviated: /^(\u05E9\u05D1\u05EA|\u05D9\u05D5\u05DD (\u05D0|\u05D1|\u05D2|\u05D3|\u05D4|\u05D5)\u05F3)/i,\n  wide: /^\u05D9\u05D5\u05DD (\u05E8\u05D0\u05E9\u05D5\u05DF|\u05E9\u05E0\u05D9|\u05E9\u05DC\u05D9\u05E9\u05D9|\u05E8\u05D1\u05D9\u05E2\u05D9|\u05D7\u05DE\u05D9\u05E9\u05D9|\u05E9\u05D9\u05E9\u05D9|\u05E9\u05D1\u05EA)/i,\n};\nconst parseDayPatterns = {\n  abbreviated: [/\u05D0\u05F3$/i, /\u05D1\u05F3$/i, /\u05D2\u05F3$/i, /\u05D3\u05F3$/i, /\u05D4\u05F3$/i, /\u05D5\u05F3$/i, /^\u05E9/i],\n  wide: [/\u05DF$/i, /\u05E0\u05D9$/i, /\u05DC\u05D9\u05E9\u05D9$/i, /\u05E2\u05D9$/i, /\u05DE\u05D9\u05E9\u05D9$/i, /\u05E9\u05D9\u05E9\u05D9$/i, /\u05EA$/i],\n  any: [/^\u05D0/i, /^\u05D1/i, /^\u05D2/i, /^\u05D3/i, /^\u05D4/i, /^\u05D5/i, /^\u05E9/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u05D0\u05D7\u05E8 \u05D4|\u05D1)?(\u05D7\u05E6\u05D5\u05EA|\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD|\u05D1\u05D5\u05E7\u05E8|\u05E2\u05E8\u05D1|\u05DC\u05D9\u05DC\u05D4|\u05D0\u05D7\u05D4\u05F4\u05E6|\u05DC\u05E4\u05E0\u05D4\u05F4\u05E6)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u05DC\u05E4/i,\n    pm: /^\u05D0\u05D7\u05D4/i,\n    midnight: /^\u05D7/i,\n    noon: /^\u05E6/i,\n    morning: /\u05D1\u05D5\u05E7\u05E8/i,\n    afternoon: /\u05D1\u05E6|\u05D0\u05D7\u05E8/i,\n    evening: /\u05E2\u05E8\u05D1/i,\n    night: /\u05DC\u05D9\u05DC\u05D4/i,\n  },\n};\n\nconst ordinalName = [\"\u05E8\u05D0\", \"\u05E9\u05E0\", \"\u05E9\u05DC\", \"\u05E8\u05D1\", \"\u05D7\", \"\u05E9\u05D9\", \"\u05E9\u05D1\", \"\u05E9\u05DE\", \"\u05EA\", \"\u05E2\"];\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => {\n      const number = parseInt(value, 10);\n      return isNaN(number) ? ordinalName.indexOf(value) + 1 : number;\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./he/_lib/formatDistance.js\";\nimport { formatLong } from \"./he/_lib/formatLong.js\";\nimport { formatRelative } from \"./he/_lib/formatRelative.js\";\nimport { localize } from \"./he/_lib/localize.js\";\nimport { match } from \"./he/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Hebrew locale.\n * @language Hebrew\n * @iso-639-2 heb\n * @author Nir Lahad [@nirlah](https://github.com/nirlah)\n */\nexport const he = {\n  code: \"he\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default he;\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst numberValues = {\n  locale: {\n    1: \"\u0967\",\n    2: \"\u0968\",\n    3: \"\u0969\",\n    4: \"\u096A\",\n    5: \"\u096B\",\n    6: \"\u096C\",\n    7: \"\u096D\",\n    8: \"\u096E\",\n    9: \"\u096F\",\n    0: \"\u0966\",\n  },\n  number: {\n    \"\u0967\": \"1\",\n    \"\u0968\": \"2\",\n    \"\u0969\": \"3\",\n    \"\u096A\": \"4\",\n    \"\u096B\": \"5\",\n    \"\u096C\": \"6\",\n    \"\u096D\": \"7\",\n    \"\u096E\": \"8\",\n    \"\u096F\": \"9\",\n    \"\u0966\": \"0\",\n  },\n};\n\n// CLDR #1585 - #1592\nconst eraValues = {\n  narrow: [\"\u0908\u0938\u093E-\u092A\u0942\u0930\u094D\u0935\", \"\u0908\u0938\u094D\u0935\u0940\"],\n  abbreviated: [\"\u0908\u0938\u093E-\u092A\u0942\u0930\u094D\u0935\", \"\u0908\u0938\u094D\u0935\u0940\"],\n  wide: [\"\u0908\u0938\u093E-\u092A\u0942\u0930\u094D\u0935\", \"\u0908\u0938\u0935\u0940 \u0938\u0928\"],\n};\n\n// CLDR #1593 - #1616\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u0924\u093F1\", \"\u0924\u093F2\", \"\u0924\u093F3\", \"\u0924\u093F4\"],\n  wide: [\"\u092A\u0939\u0932\u0940 \u0924\u093F\u092E\u093E\u0939\u0940\", \"\u0926\u0942\u0938\u0930\u0940 \u0924\u093F\u092E\u093E\u0939\u0940\", \"\u0924\u0940\u0938\u0930\u0940 \u0924\u093F\u092E\u093E\u0939\u0940\", \"\u091A\u094C\u0925\u0940 \u0924\u093F\u092E\u093E\u0939\u0940\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n// https://www.unicode.org/cldr/charts/32/summary/hi.html\n// CLDR #1617 - #1688\nconst monthValues = {\n  narrow: [\n    \"\u091C\",\n    \"\u092B\u093C\",\n    \"\u092E\u093E\",\n    \"\u0905\",\n    \"\u092E\u0908\",\n    \"\u091C\u0942\",\n    \"\u091C\u0941\",\n    \"\u0905\u0917\",\n    \"\u0938\u093F\",\n    \"\u0905\u0915\u094D\u091F\u0942\",\n    \"\u0928\",\n    \"\u0926\u093F\",\n  ],\n\n  abbreviated: [\n    \"\u091C\u0928\",\n    \"\u092B\u093C\u0930\",\n    \"\u092E\u093E\u0930\u094D\u091A\",\n    \"\u0905\u092A\u094D\u0930\u0948\u0932\",\n    \"\u092E\u0908\",\n    \"\u091C\u0942\u0928\",\n    \"\u091C\u0941\u0932\",\n    \"\u0905\u0917\",\n    \"\u0938\u093F\u0924\",\n    \"\u0905\u0915\u094D\u091F\u0942\",\n    \"\u0928\u0935\",\n    \"\u0926\u093F\u0938\",\n  ],\n\n  wide: [\n    \"\u091C\u0928\u0935\u0930\u0940\",\n    \"\u092B\u093C\u0930\u0935\u0930\u0940\",\n    \"\u092E\u093E\u0930\u094D\u091A\",\n    \"\u0905\u092A\u094D\u0930\u0948\u0932\",\n    \"\u092E\u0908\",\n    \"\u091C\u0942\u0928\",\n    \"\u091C\u0941\u0932\u093E\u0908\",\n    \"\u0905\u0917\u0938\u094D\u0924\",\n    \"\u0938\u093F\u0924\u0902\u092C\u0930\",\n    \"\u0905\u0915\u094D\u091F\u0942\u092C\u0930\",\n    \"\u0928\u0935\u0902\u092C\u0930\",\n    \"\u0926\u093F\u0938\u0902\u092C\u0930\",\n  ],\n};\n\n// CLDR #1689 - #1744\nconst dayValues = {\n  narrow: [\"\u0930\", \"\u0938\u094B\", \"\u092E\u0902\", \"\u092C\u0941\", \"\u0917\u0941\", \"\u0936\u0941\", \"\u0936\"],\n  short: [\"\u0930\", \"\u0938\u094B\", \"\u092E\u0902\", \"\u092C\u0941\", \"\u0917\u0941\", \"\u0936\u0941\", \"\u0936\"],\n  abbreviated: [\"\u0930\u0935\u093F\", \"\u0938\u094B\u092E\", \"\u092E\u0902\u0917\u0932\", \"\u092C\u0941\u0927\", \"\u0917\u0941\u0930\u0941\", \"\u0936\u0941\u0915\u094D\u0930\", \"\u0936\u0928\u093F\"],\n  wide: [\n    \"\u0930\u0935\u093F\u0935\u093E\u0930\",\n    \"\u0938\u094B\u092E\u0935\u093E\u0930\",\n    \"\u092E\u0902\u0917\u0932\u0935\u093E\u0930\",\n    \"\u092C\u0941\u0927\u0935\u093E\u0930\",\n    \"\u0917\u0941\u0930\u0941\u0935\u093E\u0930\",\n    \"\u0936\u0941\u0915\u094D\u0930\u0935\u093E\u0930\",\n    \"\u0936\u0928\u093F\u0935\u093E\u0930\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n  abbreviated: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n  wide: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n  abbreviated: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n  wide: {\n    am: \"\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928\",\n    pm: \"\u0905\u092A\u0930\u093E\u0939\u094D\u0928\",\n    midnight: \"\u092E\u0927\u094D\u092F\u0930\u093E\u0924\u094D\u0930\u093F\",\n    noon: \"\u0926\u094B\u092A\u0939\u0930\",\n    morning: \"\u0938\u0941\u092C\u0939\",\n    afternoon: \"\u0926\u094B\u092A\u0939\u0930\",\n    evening: \"\u0936\u093E\u092E\",\n    night: \"\u0930\u093E\u0924\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return numberToLocale(number);\n};\n\nexport function localeToNumber(locale) {\n  const enNumber = locale.toString().replace(/[\u0967\u0968\u0969\u096A\u096B\u096C\u096D\u096E\u096F\u0966]/g, function (match) {\n    return numberValues.number[match];\n  });\n  return Number(enNumber);\n}\n\nexport function numberToLocale(enNumber) {\n  return enNumber.toString().replace(/\\d/g, function (match) {\n    return numberValues.locale[match];\n  });\n}\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { numberToLocale } from \"./localize.js\";\n\n// Source: https://www.unicode.org/cldr/charts/32/summary/hi.html\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0967 \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092E\", // CLDR #1310\n    other: \"{{count}} \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092E\",\n  },\n\n  xSeconds: {\n    one: \"\u0967 \u0938\u0947\u0915\u0902\u0921\",\n    other: \"{{count}} \u0938\u0947\u0915\u0902\u0921\",\n  },\n\n  halfAMinute: \"\u0906\u0927\u093E \u092E\u093F\u0928\u091F\",\n\n  lessThanXMinutes: {\n    one: \"\u0967 \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E\",\n    other: \"{{count}} \u092E\u093F\u0928\u091F \u0938\u0947 \u0915\u092E\",\n  },\n\n  xMinutes: {\n    one: \"\u0967 \u092E\u093F\u0928\u091F\", // CLDR #1307\n    other: \"{{count}} \u092E\u093F\u0928\u091F\",\n  },\n\n  aboutXHours: {\n    one: \"\u0932\u0917\u092D\u0917 \u0967 \u0918\u0902\u091F\u093E\",\n    other: \"\u0932\u0917\u092D\u0917 {{count}} \u0918\u0902\u091F\u0947\",\n  },\n\n  xHours: {\n    one: \"\u0967 \u0918\u0902\u091F\u093E\", // CLDR #1304\n    other: \"{{count}} \u0918\u0902\u091F\u0947\", // CLDR #4467\n  },\n\n  xDays: {\n    one: \"\u0967 \u0926\u093F\u0928\", // CLDR #1286\n    other: \"{{count}} \u0926\u093F\u0928\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0932\u0917\u092D\u0917 \u0967 \u0938\u092A\u094D\u0924\u093E\u0939\",\n    other: \"\u0932\u0917\u092D\u0917 {{count}} \u0938\u092A\u094D\u0924\u093E\u0939\",\n  },\n\n  xWeeks: {\n    one: \"\u0967 \u0938\u092A\u094D\u0924\u093E\u0939\",\n    other: \"{{count}} \u0938\u092A\u094D\u0924\u093E\u0939\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0932\u0917\u092D\u0917 \u0967 \u092E\u0939\u0940\u0928\u093E\",\n    other: \"\u0932\u0917\u092D\u0917 {{count}} \u092E\u0939\u0940\u0928\u0947\",\n  },\n\n  xMonths: {\n    one: \"\u0967 \u092E\u0939\u0940\u0928\u093E\",\n    other: \"{{count}} \u092E\u0939\u0940\u0928\u0947\",\n  },\n\n  aboutXYears: {\n    one: \"\u0932\u0917\u092D\u0917 \u0967 \u0935\u0930\u094D\u0937\",\n    other: \"\u0932\u0917\u092D\u0917 {{count}} \u0935\u0930\u094D\u0937\", // CLDR #4823\n  },\n\n  xYears: {\n    one: \"\u0967 \u0935\u0930\u094D\u0937\",\n    other: \"{{count}} \u0935\u0930\u094D\u0937\",\n  },\n\n  overXYears: {\n    one: \"\u0967 \u0935\u0930\u094D\u0937 \u0938\u0947 \u0905\u0927\u093F\u0915\",\n    other: \"{{count}} \u0935\u0930\u094D\u0937 \u0938\u0947 \u0905\u0927\u093F\u0915\",\n  },\n\n  almostXYears: {\n    one: \"\u0932\u0917\u092D\u0917 \u0967 \u0935\u0930\u094D\u0937\",\n    other: \"\u0932\u0917\u092D\u0917 {{count}} \u0935\u0930\u094D\u0937\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", numberToLocale(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u092E\u0947 \";\n    } else {\n      return result + \" \u092A\u0939\u0932\u0947\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM, y\", // CLDR #1787\n  long: \"do MMMM, y\", // CLDR #1788\n  medium: \"d MMM, y\", // CLDR #1789\n  short: \"dd/MM/yyyy\", // CLDR #1790\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\", // CLDR #1791\n  long: \"h:mm:ss a z\", // CLDR #1792\n  medium: \"h:mm:ss a\", // CLDR #1793\n  short: \"h:mm a\", // CLDR #1794\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0915\u094B' {{time}}\", // CLDR #1795\n  long: \"{{date}} '\u0915\u094B' {{time}}\", // CLDR #1796\n  medium: \"{{date}}, {{time}}\", // CLDR #1797\n  short: \"{{date}}, {{time}}\", // CLDR #1798\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u092A\u093F\u091B\u0932\u0947' eeee p\",\n  yesterday: \"'\u0915\u0932' p\",\n  today: \"'\u0906\u091C' p\",\n  tomorrow: \"'\u0915\u0932' p\",\n  nextWeek: \"eeee '\u0915\u094B' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { localeToNumber } from \"./localize.js\";\n\nconst matchOrdinalNumberPattern = /^[\u0966\u0967\u0968\u0969\u096A\u096B\u096C\u096D\u096E\u096F]+/i;\nconst parseOrdinalNumberPattern = /^[\u0966\u0967\u0968\u0969\u096A\u096B\u096C\u096D\u096E\u096F]+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0908\u0938\u093E-\u092A\u0942\u0930\u094D\u0935|\u0908\u0938\u094D\u0935\u0940)/i,\n  abbreviated: /^(\u0908\u0938\u093E\\.?\\s?\u092A\u0942\u0930\u094D\u0935\\.?|\u0908\u0938\u093E\\.?)/i,\n  wide: /^(\u0908\u0938\u093E-\u092A\u0942\u0930\u094D\u0935|\u0908\u0938\u0935\u0940 \u092A\u0942\u0930\u094D\u0935|\u0908\u0938\u0935\u0940 \u0938\u0928|\u0908\u0938\u0935\u0940)/i,\n};\n\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0924\u093F[1234]/i,\n  wide: /^[1234](\u092A\u0939\u0932\u0940|\u0926\u0942\u0938\u0930\u0940|\u0924\u0940\u0938\u0930\u0940|\u091A\u094C\u0925\u0940)? \u0924\u093F\u092E\u093E\u0939\u0940/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  // eslint-disable-next-line no-misleading-character-class\n  narrow: /^[\u091C\u092B\u093C\u092E\u093E\u0905\u092A\u094D\u092E\u0908\u091C\u0942\u0928\u091C\u0941\u0905\u0917\u0938\u093F\u0905\u0915\u094D\u0924\u0928\u0926\u093F]/i,\n  abbreviated: /^(\u091C\u0928|\u092B\u093C\u0930|\u092E\u093E\u0930\u094D\u091A|\u0905\u092A\u094D|\u092E\u0908|\u091C\u0942\u0928|\u091C\u0941\u0932|\u0905\u0917|\u0938\u093F\u0924|\u0905\u0915\u094D\u0924\u0942|\u0928\u0935|\u0926\u093F\u0938)/i,\n  wide: /^(\u091C\u0928\u0935\u0930\u0940|\u092B\u093C\u0930\u0935\u0930\u0940|\u092E\u093E\u0930\u094D\u091A|\u0905\u092A\u094D\u0930\u0948\u0932|\u092E\u0908|\u091C\u0942\u0928|\u091C\u0941\u0932\u093E\u0908|\u0905\u0917\u0938\u094D\u0924|\u0938\u093F\u0924\u0902\u092C\u0930|\u0905\u0915\u094D\u0924\u0942\u092C\u0930|\u0928\u0935\u0902\u092C\u0930|\u0926\u093F\u0938\u0902\u092C\u0930)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u091C/i,\n    /^\u092B\u093C/i,\n    /^\u092E\u093E/i,\n    /^\u0905\u092A\u094D/i,\n    /^\u092E\u0908/i,\n    /^\u091C\u0942/i,\n    /^\u091C\u0941/i,\n    /^\u0905\u0917/i,\n    /^\u0938\u093F/i,\n    /^\u0905\u0915\u094D\u0924\u0942/i,\n    /^\u0928/i,\n    /^\u0926\u093F/i,\n  ],\n\n  any: [\n    /^\u091C\u0928/i,\n    /^\u092B\u093C/i,\n    /^\u092E\u093E/i,\n    /^\u0905\u092A\u094D/i,\n    /^\u092E\u0908/i,\n    /^\u091C\u0942/i,\n    /^\u091C\u0941/i,\n    /^\u0905\u0917/i,\n    /^\u0938\u093F/i,\n    /^\u0905\u0915\u094D\u0924\u0942/i,\n    /^\u0928\u0935/i,\n    /^\u0926\u093F\u0938/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  // eslint-disable-next-line no-misleading-character-class\n  narrow: /^[\u0930\u0935\u093F\u0938\u094B\u092E\u092E\u0902\u0917\u0932\u092C\u0941\u0927\u0917\u0941\u0930\u0941\u0936\u0941\u0915\u094D\u0930\u0936\u0928\u093F]/i,\n  short: /^(\u0930\u0935\u093F|\u0938\u094B\u092E|\u092E\u0902\u0917\u0932|\u092C\u0941\u0927|\u0917\u0941\u0930\u0941|\u0936\u0941\u0915\u094D\u0930|\u0936\u0928\u093F)/i,\n  abbreviated: /^(\u0930\u0935\u093F|\u0938\u094B\u092E|\u092E\u0902\u0917\u0932|\u092C\u0941\u0927|\u0917\u0941\u0930\u0941|\u0936\u0941\u0915\u094D\u0930|\u0936\u0928\u093F)/i,\n  wide: /^(\u0930\u0935\u093F\u0935\u093E\u0930|\u0938\u094B\u092E\u0935\u093E\u0930|\u092E\u0902\u0917\u0932\u0935\u093E\u0930|\u092C\u0941\u0927\u0935\u093E\u0930|\u0917\u0941\u0930\u0941\u0935\u093E\u0930|\u0936\u0941\u0915\u094D\u0930\u0935\u093E\u0930|\u0936\u0928\u093F\u0935\u093E\u0930)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0930\u0935\u093F/i, /^\u0938\u094B\u092E/i, /^\u092E\u0902\u0917\u0932/i, /^\u092C\u0941\u0927/i, /^\u0917\u0941\u0930\u0941/i, /^\u0936\u0941\u0915\u094D\u0930/i, /^\u0936\u0928\u093F/i],\n\n  any: [/^\u0930\u0935\u093F/i, /^\u0938\u094B\u092E/i, /^\u092E\u0902\u0917\u0932/i, /^\u092C\u0941\u0927/i, /^\u0917\u0941\u0930\u0941/i, /^\u0936\u0941\u0915\u094D\u0930/i, /^\u0936\u0928\u093F/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u092A\u0942|\u0905|\u092E|\u0926.\\?|\u0938\u0941|\u0926\u094B|\u0936\u093E|\u0930\u093E)/i,\n  any: /^(\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928|\u0905\u092A\u0930\u093E\u0939\u094D\u0928|\u092E|\u0926.\\?|\u0938\u0941|\u0926\u094B|\u0936\u093E|\u0930\u093E)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u092A\u0942\u0930\u094D\u0935\u093E\u0939\u094D\u0928/i,\n    pm: /^\u0905\u092A\u0930\u093E\u0939\u094D\u0928/i,\n    midnight: /^\u092E\u0927\u094D\u092F/i,\n    noon: /^\u0926\u094B/i,\n    morning: /\u0938\u0941/i,\n    afternoon: /\u0926\u094B/i,\n    evening: /\u0936\u093E/i,\n    night: /\u0930\u093E/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: localeToNumber,\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./hi/_lib/formatDistance.js\";\nimport { formatLong } from \"./hi/_lib/formatLong.js\";\nimport { formatRelative } from \"./hi/_lib/formatRelative.js\";\nimport { localize } from \"./hi/_lib/localize.js\";\nimport { match } from \"./hi/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Hindi locale (India).\n * @language Hindi\n * @iso-639-2 hin\n * @author Mukesh Mandiwal [@mukeshmandiwal](https://github.com/mukeshmandiwal)\n */\nexport const hi = {\n  code: \"hi\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default hi;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      standalone: \"manje od 1 sekunde\",\n      withPrepositionAgo: \"manje od 1 sekunde\",\n      withPrepositionIn: \"manje od 1 sekundu\",\n    },\n    dual: \"manje od {{count}} sekunde\",\n    other: \"manje od {{count}} sekundi\",\n  },\n\n  xSeconds: {\n    one: {\n      standalone: \"1 sekunda\",\n      withPrepositionAgo: \"1 sekunde\",\n      withPrepositionIn: \"1 sekundu\",\n    },\n    dual: \"{{count}} sekunde\",\n    other: \"{{count}} sekundi\",\n  },\n\n  halfAMinute: \"pola minute\",\n\n  lessThanXMinutes: {\n    one: {\n      standalone: \"manje od 1 minute\",\n      withPrepositionAgo: \"manje od 1 minute\",\n      withPrepositionIn: \"manje od 1 minutu\",\n    },\n    dual: \"manje od {{count}} minute\",\n    other: \"manje od {{count}} minuta\",\n  },\n\n  xMinutes: {\n    one: {\n      standalone: \"1 minuta\",\n      withPrepositionAgo: \"1 minute\",\n      withPrepositionIn: \"1 minutu\",\n    },\n    dual: \"{{count}} minute\",\n    other: \"{{count}} minuta\",\n  },\n\n  aboutXHours: {\n    one: {\n      standalone: \"oko 1 sat\",\n      withPrepositionAgo: \"oko 1 sat\",\n      withPrepositionIn: \"oko 1 sat\",\n    },\n    dual: \"oko {{count}} sata\",\n    other: \"oko {{count}} sati\",\n  },\n\n  xHours: {\n    one: {\n      standalone: \"1 sat\",\n      withPrepositionAgo: \"1 sat\",\n      withPrepositionIn: \"1 sat\",\n    },\n    dual: \"{{count}} sata\",\n    other: \"{{count}} sati\",\n  },\n\n  xDays: {\n    one: {\n      standalone: \"1 dan\",\n      withPrepositionAgo: \"1 dan\",\n      withPrepositionIn: \"1 dan\",\n    },\n    dual: \"{{count}} dana\",\n    other: \"{{count}} dana\",\n  },\n\n  aboutXWeeks: {\n    one: {\n      standalone: \"oko 1 tjedan\",\n      withPrepositionAgo: \"oko 1 tjedan\",\n      withPrepositionIn: \"oko 1 tjedan\",\n    },\n    dual: \"oko {{count}} tjedna\",\n    other: \"oko {{count}} tjedana\",\n  },\n\n  xWeeks: {\n    one: {\n      standalone: \"1 tjedan\",\n      withPrepositionAgo: \"1 tjedan\",\n      withPrepositionIn: \"1 tjedan\",\n    },\n    dual: \"{{count}} tjedna\",\n    other: \"{{count}} tjedana\",\n  },\n\n  aboutXMonths: {\n    one: {\n      standalone: \"oko 1 mjesec\",\n      withPrepositionAgo: \"oko 1 mjesec\",\n      withPrepositionIn: \"oko 1 mjesec\",\n    },\n    dual: \"oko {{count}} mjeseca\",\n    other: \"oko {{count}} mjeseci\",\n  },\n\n  xMonths: {\n    one: {\n      standalone: \"1 mjesec\",\n      withPrepositionAgo: \"1 mjesec\",\n      withPrepositionIn: \"1 mjesec\",\n    },\n    dual: \"{{count}} mjeseca\",\n    other: \"{{count}} mjeseci\",\n  },\n\n  aboutXYears: {\n    one: {\n      standalone: \"oko 1 godinu\",\n      withPrepositionAgo: \"oko 1 godinu\",\n      withPrepositionIn: \"oko 1 godinu\",\n    },\n    dual: \"oko {{count}} godine\",\n    other: \"oko {{count}} godina\",\n  },\n\n  xYears: {\n    one: {\n      standalone: \"1 godina\",\n      withPrepositionAgo: \"1 godine\",\n      withPrepositionIn: \"1 godinu\",\n    },\n    dual: \"{{count}} godine\",\n    other: \"{{count}} godina\",\n  },\n\n  overXYears: {\n    one: {\n      standalone: \"preko 1 godinu\",\n      withPrepositionAgo: \"preko 1 godinu\",\n      withPrepositionIn: \"preko 1 godinu\",\n    },\n    dual: \"preko {{count}} godine\",\n    other: \"preko {{count}} godina\",\n  },\n\n  almostXYears: {\n    one: {\n      standalone: \"gotovo 1 godinu\",\n      withPrepositionAgo: \"gotovo 1 godinu\",\n      withPrepositionIn: \"gotovo 1 godinu\",\n    },\n    dual: \"gotovo {{count}} godine\",\n    other: \"gotovo {{count}} godina\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        result = tokenValue.one.withPrepositionIn;\n      } else {\n        result = tokenValue.one.withPrepositionAgo;\n      }\n    } else {\n      result = tokenValue.one.standalone;\n    }\n  } else if (\n    count % 10 > 1 &&\n    count % 10 < 5 && // if last digit is between 2 and 4\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\n  ) {\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"za \" + result;\n    } else {\n      return \"prije \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM y.\",\n  long: \"d. MMMM y.\",\n  medium: \"d. MMM y.\",\n  short: \"dd. MM. y.\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss (zzzz)\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'u' {{time}}\",\n  long: \"{{date}} 'u' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'pro\u0161lu nedjelju u' p\";\n      case 3:\n        return \"'pro\u0161lu srijedu u' p\";\n      case 6:\n        return \"'pro\u0161lu subotu u' p\";\n      default:\n        return \"'pro\u0161li' EEEE 'u' p\";\n    }\n  },\n  yesterday: \"'ju\u010Der u' p\",\n  today: \"'danas u' p\",\n  tomorrow: \"'sutra u' p\",\n  nextWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'idu\u0107u nedjelju u' p\";\n      case 3:\n        return \"'idu\u0107u srijedu u' p\";\n      case 6:\n        return \"'idu\u0107u subotu u' p\";\n      default:\n        return \"'pro\u0161li' EEEE 'u' p\";\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"pr.n.e.\", \"AD\"],\n  abbreviated: [\"pr. Kr.\", \"po. Kr.\"],\n  wide: [\"Prije Krista\", \"Poslije Krista\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"sij\",\n    \"velj\",\n    \"o\u017Eu\",\n    \"tra\",\n    \"svi\",\n    \"lip\",\n    \"srp\",\n    \"kol\",\n    \"ruj\",\n    \"lis\",\n    \"stu\",\n    \"pro\",\n  ],\n\n  wide: [\n    \"sije\u010Danj\",\n    \"velja\u010Da\",\n    \"o\u017Eujak\",\n    \"travanj\",\n    \"svibanj\",\n    \"lipanj\",\n    \"srpanj\",\n    \"kolovoz\",\n    \"rujan\",\n    \"listopad\",\n    \"studeni\",\n    \"prosinac\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"sij\",\n    \"velj\",\n    \"o\u017Eu\",\n    \"tra\",\n    \"svi\",\n    \"lip\",\n    \"srp\",\n    \"kol\",\n    \"ruj\",\n    \"lis\",\n    \"stu\",\n    \"pro\",\n  ],\n\n  wide: [\n    \"sije\u010Dnja\",\n    \"velja\u010De\",\n    \"o\u017Eujka\",\n    \"travnja\",\n    \"svibnja\",\n    \"lipnja\",\n    \"srpnja\",\n    \"kolovoza\",\n    \"rujna\",\n    \"listopada\",\n    \"studenog\",\n    \"prosinca\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"\u010C\", \"P\", \"S\"],\n  short: [\"ned\", \"pon\", \"uto\", \"sri\", \"\u010Det\", \"pet\", \"sub\"],\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sri\", \"\u010Det\", \"pet\", \"sub\"],\n  wide: [\n    \"nedjelja\",\n    \"ponedjeljak\",\n    \"utorak\",\n    \"srijeda\",\n    \"\u010Detvrtak\",\n    \"petak\",\n    \"subota\",\n  ],\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"popodne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"popodne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"poslije podne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"popodne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"popodne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutro\",\n    afternoon: \"poslije podne\",\n    evening: \"nave\u010Der\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\n  abbreviated: /^(pr\\.\\s?Kr\\.|po\\.\\s?Kr\\.)/i,\n  wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^pr/i, /^(po|nova)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\n  wide: /^[1234]\\. kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(10|11|12|[123456789])\\./i,\n  abbreviated: /^(sij|velj|(o\u017Eu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,\n  wide: /^((sije\u010Danj|sije\u010Dnja|sijecanj|sijecnja)|(velja\u010Da|velja\u010De|veljaca|veljace)|(o\u017Eujak|o\u017Eujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /1/i,\n    /2/i,\n    /3/i,\n    /4/i,\n    /5/i,\n    /6/i,\n    /7/i,\n    /8/i,\n    /9/i,\n    /10/i,\n    /11/i,\n    /12/i,\n  ],\n\n  abbreviated: [\n    /^sij/i,\n    /^velj/i,\n    /^(o\u017Eu|ozu)/i,\n    /^tra/i,\n    /^svi/i,\n    /^lip/i,\n    /^srp/i,\n    /^kol/i,\n    /^ruj/i,\n    /^lis/i,\n    /^stu/i,\n    /^pro/i,\n  ],\n\n  wide: [\n    /^sij/i,\n    /^velj/i,\n    /^(o\u017Eu|ozu)/i,\n    /^tra/i,\n    /^svi/i,\n    /^lip/i,\n    /^srp/i,\n    /^kol/i,\n    /^ruj/i,\n    /^lis/i,\n    /^stu/i,\n    /^pro/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npus\u010Dc]/i,\n  short: /^(ned|pon|uto|sri|(\u010Det|cet)|pet|sub)/i,\n  abbreviated: /^(ned|pon|uto|sri|(\u010Det|cet)|pet|sub)/i,\n  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(\u010Detvrtak|cetvrtak)|petak|subota)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|ponoc|pono\u0107|(po)?podne|navecer|nave\u010Der|no\u0107u|poslije podne|ujutro)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^pono/i,\n    noon: /^pod/i,\n    morning: /jutro/i,\n    afternoon: /(poslije\\s|po)+podne/i,\n    evening: /(navece|nave\u010De)/i,\n    night: /(nocu|no\u0107u)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./hr/_lib/formatDistance.js\";\nimport { formatLong } from \"./hr/_lib/formatLong.js\";\nimport { formatRelative } from \"./hr/_lib/formatRelative.js\";\nimport { localize } from \"./hr/_lib/localize.js\";\nimport { match } from \"./hr/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Croatian locale.\n * @language Croatian\n * @iso-639-2 hrv\n * @author Matija Marohni\u0107 [@silvenon](https://github.com/silvenon)\n * @author Manico [@manico](https://github.com/manico)\n * @author Ivan Jer\u017Eabek [@jerzabek](https://github.com/jerzabek)\n */\nexport const hr = {\n  code: \"hr\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default hr;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mwens pase yon segond\",\n    other: \"mwens pase {{count}} segond\",\n  },\n\n  xSeconds: {\n    one: \"1 segond\",\n    other: \"{{count}} segond\",\n  },\n\n  halfAMinute: \"30 segond\",\n\n  lessThanXMinutes: {\n    one: \"mwens pase yon minit\",\n    other: \"mwens pase {{count}} minit\",\n  },\n\n  xMinutes: {\n    one: \"1 minit\",\n    other: \"{{count}} minit\",\n  },\n\n  aboutXHours: {\n    one: \"anviwon in\u00E8\",\n    other: \"anviwon {{count}} \u00E8\",\n  },\n\n  xHours: {\n    one: \"1 l\u00E8\",\n    other: \"{{count}} l\u00E8\",\n  },\n\n  xDays: {\n    one: \"1 jou\",\n    other: \"{{count}} jou\",\n  },\n\n  aboutXWeeks: {\n    one: \"anviwon 1 sem\u00E8n\",\n    other: \"anviwon {{count}} sem\u00E8n\",\n  },\n\n  xWeeks: {\n    one: \"1 sem\u00E8n\",\n    other: \"{{count}} sem\u00E8n\",\n  },\n\n  aboutXMonths: {\n    one: \"anviwon 1 mwa\",\n    other: \"anviwon {{count}} mwa\",\n  },\n\n  xMonths: {\n    one: \"1 mwa\",\n    other: \"{{count}} mwa\",\n  },\n\n  aboutXYears: {\n    one: \"anviwon 1 an\",\n    other: \"anviwon {{count}} an\",\n  },\n\n  xYears: {\n    one: \"1 an\",\n    other: \"{{count}} an\",\n  },\n\n  overXYears: {\n    one: \"plis pase 1 an\",\n    other: \"plis pase {{count}} an\",\n  },\n\n  almostXYears: {\n    one: \"pr\u00E8ske 1 an\",\n    other: \"pr\u00E8ske {{count}} an\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"nan \" + result;\n    } else {\n      return \"sa f\u00E8 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'nan l\u00E8' {{time}}\",\n  long: \"{{date}} 'nan l\u00E8' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'pase nan l\u00E8' p\",\n  yesterday: \"'y\u00E8 nan l\u00E8' p\",\n  today: \"'jodi a' p\",\n  tomorrow: \"'demen nan l\u00E8' p'\",\n  nextWeek: \"eeee 'pwochen nan l\u00E8' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"av. J.-K\", \"ap. J.-K\"],\n  abbreviated: [\"av. J.-K\", \"ap. J.-K\"],\n  wide: [\"anvan Jezi Kris\", \"apre Jezi Kris\"],\n};\n\nconst quarterValues = {\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  abbreviated: [\"1ye trim.\", \"2y\u00E8m trim.\", \"3y\u00E8m trim.\", \"4y\u00E8m trim.\"],\n  wide: [\"1ye trim\u00E8s\", \"2y\u00E8m trim\u00E8s\", \"3y\u00E8m trim\u00E8s\", \"4y\u00E8m trim\u00E8s\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"O\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"janv.\",\n    \"fevr.\",\n    \"mas\",\n    \"avr.\",\n    \"me\",\n    \"jen\",\n    \"jiy\u00E8\",\n    \"out\",\n    \"sept.\",\n    \"okt.\",\n    \"nov.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"janvye\",\n    \"fevrye\",\n    \"mas\",\n    \"avril\",\n    \"me\",\n    \"jen\",\n    \"jiy\u00E8\",\n    \"out\",\n    \"septanm\",\n    \"okt\u00F2b\",\n    \"novanm\",\n    \"desanm\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\n  short: [\"di\", \"le\", \"ma\", \"m\u00E8\", \"je\", \"va\", \"sa\"],\n  abbreviated: [\"dim.\", \"len.\", \"mad.\", \"m\u00E8k.\", \"jed.\", \"van.\", \"sam.\"],\n\n  wide: [\"dimanch\", \"lendi\", \"madi\", \"m\u00E8kredi\", \"jedi\", \"vandredi\", \"samdi\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minwit\",\n    noon: \"midi\",\n    morning: \"mat.\",\n    afternoon: \"ap.m.\",\n    evening: \"swa\",\n    night: \"mat.\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minwit\",\n    noon: \"midi\",\n    morning: \"maten\",\n    afternoon: \"apr\u00E8midi\",\n    evening: \"swa\",\n    night: \"maten\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minwit\",\n    noon: \"midi\",\n    morning: \"nan maten\",\n    afternoon: \"nan apr\u00E8midi\",\n    evening: \"nan asw\u00E8\",\n    night: \"nan maten\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  if (number === 0) return String(number);\n\n  const suffix = number === 1 ? \"ye\" : \"y\u00E8m\";\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(ye|y\u00E8m)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(av\\.J\\.K|ap\\.J\\.K|ap\\.J\\.-K)/i,\n  abbreviated: /^(av\\.J\\.-K|av\\.J-K|apr\\.J\\.-K|apr\\.J-K|ap\\.J-K)/i,\n  wide: /^(avan Jezi Kris|apre Jezi Kris)/i,\n};\nconst parseEraPatterns = {\n  any: [/^av/i, /^ap/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](ye|y\u00E8m)? trim\u00E8s/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(janv|fevr|mas|avr|me|jen|jiy\u00E8|out|sept|okt|nov|des)\\.?/i,\n  wide: /^(janvye|fevrye|mas|avril|me|jen|jiy\u00E8|out|septanm|okt\u00F2b|novanm|desanm)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^o/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^ma/i,\n    /^av/i,\n    /^me/i,\n    /^je/i,\n    /^ji/i,\n    /^ou/i,\n    /^s/i,\n    /^ok/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[lmjvsd]/i,\n  short: /^(di|le|ma|me|je|va|sa)/i,\n  abbreviated: /^(dim|len|mad|m\u00E8k|jed|van|sam)\\.?/i,\n  wide: /^(dimanch|lendi|madi|m\u00E8kredi|jedi|vandredi|samdi)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^di/i, /^le/i, /^ma/i, /^m\u00E8/i, /^je/i, /^va/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|minwit|midi|mat\\.?|ap\\.?m\\.?|swa)/i,\n  any: /^([ap]\\.?\\s?m\\.?|nan maten|nan apr\u00E8midi|nan asw\u00E8)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^min/i,\n    noon: /^mid/i,\n    morning: /mat/i,\n    afternoon: /ap/i,\n    evening: /sw/i,\n    night: /nwit/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ht/_lib/formatDistance.js\";\nimport { formatLong } from \"./ht/_lib/formatLong.js\";\nimport { formatRelative } from \"./ht/_lib/formatRelative.js\";\nimport { localize } from \"./ht/_lib/localize.js\";\nimport { match } from \"./ht/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Haitian Creole locale.\n * @language Haitian Creole\n * @iso-639-2 hat\n * @author Rubens Mariuzzo [@rmariuzzo](https://github.com/rmariuzzo)\n * @author Watson Marcelain [@watsongm24](https://github.com/watsongm24)\n */\nexport const ht = {\n  code: \"ht\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ht;\n", "const translations = {\n  about: \"k\u00F6r\u00FClbel\u00FCl\",\n  over: \"t\u00F6bb mint\",\n  almost: \"majdnem\",\n  lessthan: \"kevesebb mint\",\n};\n\nconst withoutSuffixes = {\n  xseconds: \" m\u00E1sodperc\",\n  halfaminute: \"f\u00E9l perc\",\n  xminutes: \" perc\",\n  xhours: \" \u00F3ra\",\n  xdays: \" nap\",\n  xweeks: \" h\u00E9t\",\n  xmonths: \" h\u00F3nap\",\n  xyears: \" \u00E9v\",\n};\n\nconst withSuffixes = {\n  xseconds: {\n    \"-1\": \" m\u00E1sodperccel ezel\u0151tt\",\n    1: \" m\u00E1sodperc m\u00FAlva\",\n    0: \" m\u00E1sodperce\",\n  },\n  halfaminute: {\n    \"-1\": \"f\u00E9l perccel ezel\u0151tt\",\n    1: \"f\u00E9l perc m\u00FAlva\",\n    0: \"f\u00E9l perce\",\n  },\n  xminutes: {\n    \"-1\": \" perccel ezel\u0151tt\",\n    1: \" perc m\u00FAlva\",\n    0: \" perce\",\n  },\n  xhours: {\n    \"-1\": \" \u00F3r\u00E1val ezel\u0151tt\",\n    1: \" \u00F3ra m\u00FAlva\",\n    0: \" \u00F3r\u00E1ja\",\n  },\n  xdays: {\n    \"-1\": \" nappal ezel\u0151tt\",\n    1: \" nap m\u00FAlva\",\n    0: \" napja\",\n  },\n  xweeks: {\n    \"-1\": \" h\u00E9ttel ezel\u0151tt\",\n    1: \" h\u00E9t m\u00FAlva\",\n    0: \" hete\",\n  },\n  xmonths: {\n    \"-1\": \" h\u00F3nappal ezel\u0151tt\",\n    1: \" h\u00F3nap m\u00FAlva\",\n    0: \" h\u00F3napja\",\n  },\n  xyears: {\n    \"-1\": \" \u00E9vvel ezel\u0151tt\",\n    1: \" \u00E9v m\u00FAlva\",\n    0: \" \u00E9ve\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const adverb = token.match(/about|over|almost|lessthan/i);\n  const unit = adverb ? token.replace(adverb[0], \"\") : token;\n\n  const addSuffix = options?.addSuffix === true;\n  const key = unit.toLowerCase();\n  const comparison = options?.comparison || 0;\n\n  const translated = addSuffix\n    ? withSuffixes[key][comparison]\n    : withoutSuffixes[key];\n\n  let result = key === \"halfaminute\" ? translated : count + translated;\n\n  if (adverb) {\n    const adv = adverb[0].toLowerCase();\n    result = translations[adv] + \" \" + result;\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y. MMMM d., EEEE\",\n  long: \"y. MMMM d.\",\n  medium: \"y. MMM d.\",\n  short: \"y. MM. dd.\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const accusativeWeekdays = [\n  \"vas\u00E1rnap\",\n  \"h\u00E9tf\u0151n\",\n  \"kedden\",\n  \"szerd\u00E1n\",\n  \"cs\u00FCt\u00F6rt\u00F6k\u00F6n\",\n  \"p\u00E9nteken\",\n  \"szombaton\",\n];\n\nfunction week(isFuture) {\n  return (date) => {\n    const weekday = accusativeWeekdays[date.getDay()];\n    const prefix = isFuture ? \"\" : \"'m\u00FAlt' \";\n    return `${prefix}'${weekday}' p'-kor'`;\n  };\n}\nconst formatRelativeLocale = {\n  lastWeek: week(false),\n  yesterday: \"'tegnap' p'-kor'\",\n  today: \"'ma' p'-kor'\",\n  tomorrow: \"'holnap' p'-kor'\",\n  nextWeek: week(true),\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"ie.\", \"isz.\"],\n  abbreviated: [\"i. e.\", \"i. sz.\"],\n  wide: [\"Krisztus el\u0151tt\", \"id\u0151sz\u00E1m\u00EDt\u00E1sunk szerint\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\n  abbreviated: [\"1. n.\u00E9v\", \"2. n.\u00E9v\", \"3. n.\u00E9v\", \"4. n.\u00E9v\"],\n  wide: [\"1. negyed\u00E9v\", \"2. negyed\u00E9v\", \"3. negyed\u00E9v\", \"4. negyed\u00E9v\"],\n};\n\nconst formattingQuarterValues = {\n  narrow: [\"I.\", \"II.\", \"III.\", \"IV.\"],\n  abbreviated: [\"I. n.\u00E9v\", \"II. n.\u00E9v\", \"III. n.\u00E9v\", \"IV. n.\u00E9v\"],\n  wide: [\"I. negyed\u00E9v\", \"II. negyed\u00E9v\", \"III. negyed\u00E9v\", \"IV. negyed\u00E9v\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"\u00C1\", \"M\", \"J\", \"J\", \"A\", \"Sz\", \"O\", \"N\", \"D\"],\n\n  abbreviated: [\n    \"jan.\",\n    \"febr.\",\n    \"m\u00E1rc.\",\n    \"\u00E1pr.\",\n    \"m\u00E1j.\",\n    \"j\u00FAn.\",\n    \"j\u00FAl.\",\n    \"aug.\",\n    \"szept.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"janu\u00E1r\",\n    \"febru\u00E1r\",\n    \"m\u00E1rcius\",\n    \"\u00E1prilis\",\n    \"m\u00E1jus\",\n    \"j\u00FAnius\",\n    \"j\u00FAlius\",\n    \"augusztus\",\n    \"szeptember\",\n    \"okt\u00F3ber\",\n    \"november\",\n    \"december\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"V\", \"H\", \"K\", \"Sz\", \"Cs\", \"P\", \"Sz\"],\n  short: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n  abbreviated: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n  wide: [\n    \"vas\u00E1rnap\",\n    \"h\u00E9tf\u0151\",\n    \"kedd\",\n    \"szerda\",\n    \"cs\u00FCt\u00F6rt\u00F6k\",\n    \"p\u00E9ntek\",\n    \"szombat\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"de.\",\n    pm: \"du.\",\n    midnight: \"\u00E9jf\u00E9l\",\n    noon: \"d\u00E9l\",\n    morning: \"reggel\",\n    afternoon: \"du.\",\n    evening: \"este\",\n    night: \"\u00E9jjel\",\n  },\n  abbreviated: {\n    am: \"de.\",\n    pm: \"du.\",\n    midnight: \"\u00E9jf\u00E9l\",\n    noon: \"d\u00E9l\",\n    morning: \"reggel\",\n    afternoon: \"du.\",\n    evening: \"este\",\n    night: \"\u00E9jjel\",\n  },\n  wide: {\n    am: \"de.\",\n    pm: \"du.\",\n    midnight: \"\u00E9jf\u00E9l\",\n    noon: \"d\u00E9l\",\n    morning: \"reggel\",\n    afternoon: \"d\u00E9lut\u00E1n\",\n    evening: \"este\",\n    night: \"\u00E9jjel\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n    formattingValues: formattingQuarterValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ie\\.|isz\\.)/i,\n  abbreviated: /^(i\\.\\s?e\\.?|b?\\s?c\\s?e|i\\.\\s?sz\\.?)/i,\n  wide: /^(Krisztus el\u0151tt|id\u0151sz\u00E1m\u00EDt\u00E1sunk el\u0151tt|id\u0151sz\u00E1m\u00EDt\u00E1sunk szerint|i\\. sz\\.)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/ie/i, /isz/i],\n  abbreviated: [/^(i\\.?\\s?e\\.?|b\\s?ce)/i, /^(i\\.?\\s?sz\\.?|c\\s?e)/i],\n  any: [/el\u0151tt/i, /(szerint|i. sz.)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]\\.?/i,\n  abbreviated: /^[1234]?\\.?\\s?n\\.\u00E9v/i,\n  wide: /^([1234]|I|II|III|IV)?\\.?\\s?negyed\u00E9v/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfma\u00E1sond]|sz/i,\n  abbreviated:\n    /^(jan\\.?|febr\\.?|m\u00E1rc\\.?|\u00E1pr\\.?|m\u00E1j\\.?|j\u00FAn\\.?|j\u00FAl\\.?|aug\\.?|szept\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  wide: /^(janu\u00E1r|febru\u00E1r|m\u00E1rcius|\u00E1prilis|m\u00E1jus|j\u00FAnius|j\u00FAlius|augusztus|szeptember|okt\u00F3ber|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a|\u00E1/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s|sz/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^m\u00E1r/i,\n    /^\u00E1p/i,\n    /^m\u00E1j/i,\n    /^j\u00FAn/i,\n    /^j\u00FAl/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^([vhkpc]|sz|cs|sz)/i,\n  short: /^([vhkp]|sze|cs|szo)/i,\n  abbreviated: /^([vhkp]|sze|cs|szo)/i,\n  wide: /^(vas\u00E1rnap|h\u00E9tf\u0151|kedd|szerda|cs\u00FCt\u00F6rt\u00F6k|p\u00E9ntek|szombat)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i],\n  any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^((de|du)\\.?|\u00E9jf\u00E9l|d\u00E9lut\u00E1n|d\u00E9l|reggel|este|\u00E9jjel)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^de\\.?/i,\n    pm: /^du\\.?/i,\n    midnight: /^\u00E9jf/i,\n    noon: /^d\u00E9/i,\n    morning: /reg/i,\n    afternoon: /^d\u00E9lu\\.?/i,\n    evening: /es/i,\n    night: /\u00E9jj/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./hu/_lib/formatDistance.js\";\nimport { formatLong } from \"./hu/_lib/formatLong.js\";\nimport { formatRelative } from \"./hu/_lib/formatRelative.js\";\nimport { localize } from \"./hu/_lib/localize.js\";\nimport { match } from \"./hu/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Hungarian locale.\n * @language Hungarian\n * @iso-639-2 hun\n * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)\n * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)\n * @author Zoltan Szepesi [@twodcube](https://github.com/twodcube)\n */\nexport const hu = {\n  code: \"hu\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default hu;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0561\u057E\u0565\u056C\u056B \u0584\u056B\u0579 \u0584\u0561\u0576 1 \u057E\u0561\u0575\u0580\u056F\u0575\u0561\u0576\",\n    other: \"\u0561\u057E\u0565\u056C\u056B \u0584\u056B\u0579 \u0584\u0561\u0576 {{count}} \u057E\u0561\u0575\u0580\u056F\u0575\u0561\u0576\",\n  },\n\n  xSeconds: {\n    one: \"1 \u057E\u0561\u0575\u0580\u056F\u0575\u0561\u0576\",\n    other: \"{{count}} \u057E\u0561\u0575\u0580\u056F\u0575\u0561\u0576\",\n  },\n\n  halfAMinute: \"\u056F\u0565\u057D \u0580\u0578\u057A\u0565\",\n\n  lessThanXMinutes: {\n    one: \"\u0561\u057E\u0565\u056C\u056B \u0584\u056B\u0579 \u0584\u0561\u0576 1 \u0580\u0578\u057A\u0565\",\n    other: \"\u0561\u057E\u0565\u056C\u056B \u0584\u056B\u0579 \u0584\u0561\u0576 {{count}} \u0580\u0578\u057A\u0565\",\n  },\n\n  xMinutes: {\n    one: \"1 \u0580\u0578\u057A\u0565\",\n    other: \"{{count}} \u0580\u0578\u057A\u0565\",\n  },\n\n  aboutXHours: {\n    one: \"\u0574\u0578\u057F 1 \u056A\u0561\u0574\",\n    other: \"\u0574\u0578\u057F {{count}} \u056A\u0561\u0574\",\n  },\n\n  xHours: {\n    one: \"1 \u056A\u0561\u0574\",\n    other: \"{{count}} \u056A\u0561\u0574\",\n  },\n\n  xDays: {\n    one: \"1 \u0585\u0580\",\n    other: \"{{count}} \u0585\u0580\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0574\u0578\u057F 1 \u0577\u0561\u0562\u0561\u0569\",\n    other: \"\u0574\u0578\u057F {{count}} \u0577\u0561\u0562\u0561\u0569\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0577\u0561\u0562\u0561\u0569\",\n    other: \"{{count}} \u0577\u0561\u0562\u0561\u0569\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0574\u0578\u057F 1 \u0561\u0574\u056B\u057D\",\n    other: \"\u0574\u0578\u057F {{count}} \u0561\u0574\u056B\u057D\",\n  },\n\n  xMonths: {\n    one: \"1 \u0561\u0574\u056B\u057D\",\n    other: \"{{count}} \u0561\u0574\u056B\u057D\",\n  },\n\n  aboutXYears: {\n    one: \"\u0574\u0578\u057F 1 \u057F\u0561\u0580\u056B\",\n    other: \"\u0574\u0578\u057F {{count}} \u057F\u0561\u0580\u056B\",\n  },\n\n  xYears: {\n    one: \"1 \u057F\u0561\u0580\u056B\",\n    other: \"{{count}} \u057F\u0561\u0580\u056B\",\n  },\n\n  overXYears: {\n    one: \"\u0561\u057E\u0565\u056C\u056B \u0584\u0561\u0576 1 \u057F\u0561\u0580\u056B\",\n    other: \"\u0561\u057E\u0565\u056C\u056B \u0584\u0561\u0576 {{count}} \u057F\u0561\u0580\u056B\",\n  },\n\n  almostXYears: {\n    one: \"\u0570\u0561\u0574\u0561\u0580\u0575\u0561 1 \u057F\u0561\u0580\u056B\",\n    other: \"\u0570\u0561\u0574\u0561\u0580\u0575\u0561 {{count}} \u057F\u0561\u0580\u056B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" \u0570\u0565\u057F\u0578\";\n    } else {\n      return result + \" \u0561\u057C\u0561\u057B\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"d MMMM, y, EEEE\",\n  long: \"d MMMM, y\",\n  medium: \"d MMM, y\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u056A\u2024'{{time}}\",\n  long: \"{{date}} '\u056A\u2024'{{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0576\u0561\u056D\u0578\u0580\u0564' eeee p'\u058A\u056B\u0576'\",\n  yesterday: \"'\u0565\u0580\u0565\u056F' p'\u058A\u056B\u0576'\",\n  today: \"'\u0561\u0575\u057D\u0585\u0580' p'\u058A\u056B\u0576'\",\n  tomorrow: \"'\u057E\u0561\u0572\u0568' p'\u058A\u056B\u0576'\",\n  nextWeek: \"'\u0570\u0561\u057B\u0578\u0580\u0564' eeee p'\u058A\u056B\u0576'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0554\", \"\u0544\"],\n  abbreviated: [\"\u0554\u0531\", \"\u0544\u0539\"],\n  wide: [\"\u0554\u0580\u056B\u057D\u057F\u0578\u057D\u056B\u0581 \u0561\u057C\u0561\u057B\", \"\u0544\u0565\u0580 \u0569\u057E\u0561\u0580\u056F\u0578\u0582\u0569\u0575\u0561\u0576\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u05541\", \"\u05542\", \"\u05543\", \"\u05544\"],\n  wide: [\"1\u058A\u056B\u0576 \u0584\u0561\u057C\u0578\u0580\u0564\", \"2\u058A\u0580\u0564 \u0584\u0561\u057C\u0578\u0580\u0564\", \"3\u058A\u0580\u0564 \u0584\u0561\u057C\u0578\u0580\u0564\", \"4\u058A\u0580\u0564 \u0584\u0561\u057C\u0578\u0580\u0564\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u0540\", \"\u0553\", \"\u0544\", \"\u0531\", \"\u0544\", \"\u0540\", \"\u0540\", \"\u0555\", \"\u054D\", \"\u0540\", \"\u0546\", \"\u0534\"],\n  abbreviated: [\n    \"\u0570\u0578\u0582\u0576\",\n    \"\u0583\u0565\u057F\",\n    \"\u0574\u0561\u0580\",\n    \"\u0561\u057A\u0580\",\n    \"\u0574\u0561\u0575\",\n    \"\u0570\u0578\u0582\u0576\",\n    \"\u0570\u0578\u0582\u056C\",\n    \"\u0585\u0563\u057D\",\n    \"\u057D\u0565\u057A\",\n    \"\u0570\u0578\u056F\",\n    \"\u0576\u0578\u0575\",\n    \"\u0564\u0565\u056F\",\n  ],\n\n  wide: [\n    \"\u0570\u0578\u0582\u0576\u057E\u0561\u0580\",\n    \"\u0583\u0565\u057F\u0580\u057E\u0561\u0580\",\n    \"\u0574\u0561\u0580\u057F\",\n    \"\u0561\u057A\u0580\u056B\u056C\",\n    \"\u0574\u0561\u0575\u056B\u057D\",\n    \"\u0570\u0578\u0582\u0576\u056B\u057D\",\n    \"\u0570\u0578\u0582\u056C\u056B\u057D\",\n    \"\u0585\u0563\u0578\u057D\u057F\u0578\u057D\",\n    \"\u057D\u0565\u057A\u057F\u0565\u0574\u0562\u0565\u0580\",\n    \"\u0570\u0578\u056F\u057F\u0565\u0574\u0562\u0565\u0580\",\n    \"\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\",\n    \"\u0564\u0565\u056F\u057F\u0565\u0574\u0562\u0565\u0580\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u053F\", \"\u0535\", \"\u0535\", \"\u0549\", \"\u0540\", \"\u0548\", \"\u0547\"],\n  short: [\"\u056F\u0580\", \"\u0565\u0580\", \"\u0565\u0584\", \"\u0579\u0584\", \"\u0570\u0563\", \"\u0578\u0582\u0580\", \"\u0577\u0562\"],\n  abbreviated: [\"\u056F\u056B\u0580\", \"\u0565\u0580\u056F\", \"\u0565\u0580\u0584\", \"\u0579\u0578\u0580\", \"\u0570\u0576\u0563\", \"\u0578\u0582\u0580\u0562\", \"\u0577\u0561\u0562\"],\n  wide: [\n    \"\u056F\u056B\u0580\u0561\u056F\u056B\",\n    \"\u0565\u0580\u056F\u0578\u0582\u0577\u0561\u0562\u0569\u056B\",\n    \"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B\",\n    \"\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B\",\n    \"\u0570\u056B\u0576\u0563\u0577\u0561\u0562\u0569\u056B\",\n    \"\u0578\u0582\u0580\u0562\u0561\u0569\",\n    \"\u0577\u0561\u0562\u0561\u0569\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"\u056F\u0565\u057D\u0563\u0577\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"\u056F\u0565\u057D\u0563\u0577\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\u0568\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\u0568\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\u0575\u0561\u0576\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\u0568\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580\u056B\u0576\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\u056B\u0576\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\u0568\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\u0568\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\u0575\u0561\u0576\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\u0568\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580\u056B\u0576\",\n    noon: \"\u056F\u0565\u057D\u0585\u0580\u056B\u0576\",\n    morning: \"\u0561\u057C\u0561\u057E\u0578\u057F\u0568\",\n    afternoon: \"\u0581\u0565\u0580\u0565\u056F\u0568\",\n    evening: \"\u0565\u0580\u0565\u056F\u0578\u0575\u0561\u0576\",\n    night: \"\u0563\u056B\u0577\u0565\u0580\u0568\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 < 10) {\n    if (rem100 % 10 === 1) {\n      return number + \"\u058A\u056B\u0576\";\n    }\n  }\n  return number + \"\u058A\u0580\u0564\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)((-|\u058A)?(\u056B\u0576|\u0580\u0564))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0554|\u0544)/i,\n  abbreviated: /^(\u0554\\.?\\s?\u0531\\.?|\u0544\\.?\\s?\u0539\\.?\\s?\u0531\\.?|\u0544\\.?\\s?\u0539\\.?|\u0554\\.?\\s?\u0540\\.?)/i,\n  wide: /^(\u0584\u0580\u056B\u057D\u057F\u0578\u057D\u056B\u0581 \u0561\u057C\u0561\u057B|\u0574\u0565\u0580 \u0569\u057E\u0561\u0580\u056F\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u056B\u0581 \u0561\u057C\u0561\u057B|\u0574\u0565\u0580 \u0569\u057E\u0561\u0580\u056F\u0578\u0582\u0569\u0575\u0561\u0576|\u0584\u0580\u056B\u057D\u057F\u0578\u057D\u056B\u0581 \u0570\u0565\u057F\u0578)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0584/i, /^\u0574/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0584[1234]/i,\n  wide: /^[1234]((-|\u058A)?(\u056B\u0576|\u0580\u0564)) \u0584\u0561\u057C\u0578\u0580\u0564/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u0570\u0583\u0574\u0561\u0585\u057D\u0576\u0564]/i,\n  abbreviated: /^(\u0570\u0578\u0582\u0576|\u0583\u0565\u057F|\u0574\u0561\u0580|\u0561\u057A\u0580|\u0574\u0561\u0575|\u0570\u0578\u0582\u0576|\u0570\u0578\u0582\u056C|\u0585\u0563\u057D|\u057D\u0565\u057A|\u0570\u0578\u056F|\u0576\u0578\u0575|\u0564\u0565\u056F)/i,\n  wide: /^(\u0570\u0578\u0582\u0576\u057E\u0561\u0580|\u0583\u0565\u057F\u0580\u057E\u0561\u0580|\u0574\u0561\u0580\u057F|\u0561\u057A\u0580\u056B\u056C|\u0574\u0561\u0575\u056B\u057D|\u0570\u0578\u0582\u0576\u056B\u057D|\u0570\u0578\u0582\u056C\u056B\u057D|\u0585\u0563\u0578\u057D\u057F\u0578\u057D|\u057D\u0565\u057A\u057F\u0565\u0574\u0562\u0565\u0580|\u0570\u0578\u056F\u057F\u0565\u0574\u0562\u0565\u0580|\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580|\u0564\u0565\u056F\u057F\u0565\u0574\u0562\u0565\u0580)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0570/i,\n    /^\u0583/i,\n    /^\u0574/i,\n    /^\u0561/i,\n    /^\u0574/i,\n    /^\u0570/i,\n    /^\u0570/i,\n    /^\u0585/i,\n    /^\u057D/i,\n    /^\u0570/i,\n    /^\u0576/i,\n    /^\u0564/i,\n  ],\n\n  any: [\n    /^\u0570\u0578\u0582/i,\n    /^\u0583/i,\n    /^\u0574\u0561\u0580/i,\n    /^\u0561/i,\n    /^\u0574\u0561\u0575/i,\n    /^\u0570\u0578\u0582\u0576/i,\n    /^\u0570\u0578\u0582\u056C/i,\n    /^\u0585/i,\n    /^\u057D/i,\n    /^\u0570\u0578\u056F/i,\n    /^\u0576/i,\n    /^\u0564/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u0565\u0579\u0570\u0578\u0577\u056F]/i,\n  short: /^(\u056F\u0580|\u0565\u0580|\u0565\u0584|\u0579\u0584|\u0570\u0563|\u0578\u0582\u0580|\u0577\u0562)/i,\n  abbreviated: /^(\u056F\u056B\u0580|\u0565\u0580\u056F|\u0565\u0580\u0584|\u0579\u0578\u0580|\u0570\u0576\u0563|\u0578\u0582\u0580\u0562|\u0577\u0561\u0562)/i,\n  wide: /^(\u056F\u056B\u0580\u0561\u056F\u056B|\u0565\u0580\u056F\u0578\u0582\u0577\u0561\u0562\u0569\u056B|\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B|\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056B|\u0570\u056B\u0576\u0563\u0577\u0561\u0562\u0569\u056B|\u0578\u0582\u0580\u0562\u0561\u0569|\u0577\u0561\u0562\u0561\u0569)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u056F/i, /^\u0565/i, /^\u0565/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],\n  short: [/^\u056F/i, /^\u0565\u0580/i, /^\u0565\u0584/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],\n  abbreviated: [/^\u056F/i, /^\u0565\u0580\u056F/i, /^\u0565\u0580\u0584/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],\n\n  wide: [/^\u056F/i, /^\u0565\u0580\u056F/i, /^\u0565\u0580\u0565/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([ap]|\u056F\u0565\u057D\u0563\u0577|\u056F\u0565\u057D\u0585\u0580|(\u0561\u057C\u0561\u057E\u0578\u057F\u0568?|\u0581\u0565\u0580\u0565\u056F\u0568?|\u0565\u0580\u0565\u056F\u0578(\u0575\u0561\u0576)?|\u0563\u056B\u0577\u0565\u0580\u0568?))/i,\n  any: /^([ap]\\.?\\s?m\\.?|\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580(\u056B\u0576)?|\u056F\u0565\u057D\u0585\u0580(\u056B\u0576)?|(\u0561\u057C\u0561\u057E\u0578\u057F\u0568?|\u0581\u0565\u0580\u0565\u056F\u0568?|\u0565\u0580\u0565\u056F\u0578(\u0575\u0561\u0576)?|\u0563\u056B\u0577\u0565\u0580\u0568?))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /\u056F\u0565\u057D\u0563\u056B\u0577\u0565\u0580/i,\n    noon: /\u056F\u0565\u057D\u0585\u0580/i,\n    morning: /\u0561\u057C\u0561\u057E\u0578\u057F/i,\n    afternoon: /\u0581\u0565\u0580\u0565\u056F/i,\n    evening: /\u0565\u0580\u0565\u056F\u0578/i,\n    night: /\u0563\u056B\u0577\u0565\u0580/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./hy/_lib/formatDistance.js\";\nimport { formatLong } from \"./hy/_lib/formatLong.js\";\nimport { formatRelative } from \"./hy/_lib/formatRelative.js\";\nimport { localize } from \"./hy/_lib/localize.js\";\nimport { match } from \"./hy/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Armenian locale\n * @language Armenian\n * @iso-639-2 arm\n * @author Alex Igityan [@alexigityan](https://github.com/alexigityan)\n */\nexport const hy = {\n  code: \"hy\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default hy;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"kurang dari 1 detik\",\n    other: \"kurang dari {{count}} detik\",\n  },\n\n  xSeconds: {\n    one: \"1 detik\",\n    other: \"{{count}} detik\",\n  },\n\n  halfAMinute: \"setengah menit\",\n\n  lessThanXMinutes: {\n    one: \"kurang dari 1 menit\",\n    other: \"kurang dari {{count}} menit\",\n  },\n\n  xMinutes: {\n    one: \"1 menit\",\n    other: \"{{count}} menit\",\n  },\n\n  aboutXHours: {\n    one: \"sekitar 1 jam\",\n    other: \"sekitar {{count}} jam\",\n  },\n\n  xHours: {\n    one: \"1 jam\",\n    other: \"{{count}} jam\",\n  },\n\n  xDays: {\n    one: \"1 hari\",\n    other: \"{{count}} hari\",\n  },\n\n  aboutXWeeks: {\n    one: \"sekitar 1 minggu\",\n    other: \"sekitar {{count}} minggu\",\n  },\n\n  xWeeks: {\n    one: \"1 minggu\",\n    other: \"{{count}} minggu\",\n  },\n\n  aboutXMonths: {\n    one: \"sekitar 1 bulan\",\n    other: \"sekitar {{count}} bulan\",\n  },\n\n  xMonths: {\n    one: \"1 bulan\",\n    other: \"{{count}} bulan\",\n  },\n\n  aboutXYears: {\n    one: \"sekitar 1 tahun\",\n    other: \"sekitar {{count}} tahun\",\n  },\n\n  xYears: {\n    one: \"1 tahun\",\n    other: \"{{count}} tahun\",\n  },\n\n  overXYears: {\n    one: \"lebih dari 1 tahun\",\n    other: \"lebih dari {{count}} tahun\",\n  },\n\n  almostXYears: {\n    one: \"hampir 1 tahun\",\n    other: \"hampir {{count}} tahun\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"dalam waktu \" + result;\n    } else {\n      return result + \" yang lalu\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"d/M/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH.mm.ss\",\n  long: \"HH.mm.ss\",\n  medium: \"HH.mm\",\n  short: \"HH.mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'pukul' {{time}}\",\n  long: \"{{date}} 'pukul' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'lalu pukul' p\",\n  yesterday: \"'Kemarin pukul' p\",\n  today: \"'Hari ini pukul' p\",\n  tomorrow: \"'Besok pukul' p\",\n  nextWeek: \"eeee 'pukul' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// All data for localization are taken from this page\n// https://www.unicode.org/cldr/charts/32/summary/id.html\nconst eraValues = {\n  narrow: [\"SM\", \"M\"],\n  abbreviated: [\"SM\", \"M\"],\n  wide: [\"Sebelum Masehi\", \"Masehi\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"Kuartal ke-1\", \"Kuartal ke-2\", \"Kuartal ke-3\", \"Kuartal ke-4\"],\n};\n\n// Note: in Indonesian, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mei\",\n    \"Jun\",\n    \"Jul\",\n    \"Agt\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Des\",\n  ],\n\n  wide: [\n    \"Januari\",\n    \"Februari\",\n    \"Maret\",\n    \"April\",\n    \"Mei\",\n    \"Juni\",\n    \"Juli\",\n    \"Agustus\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"M\", \"S\", \"S\", \"R\", \"K\", \"J\", \"S\"],\n  short: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n  abbreviated: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n  wide: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // Can't use \"pertama\", \"kedua\" because can't be parsed\n\n  return \"ke-\" + number;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^ke-(\\d+)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(sm|m)/i,\n  abbreviated: /^(s\\.?\\s?m\\.?|s\\.?\\s?e\\.?\\s?u\\.?|m\\.?|e\\.?\\s?u\\.?)/i,\n  wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i,\n};\nconst parseEraPatterns = {\n  any: [/^s/i, /^(m|e)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K-?\\s[1234]/i,\n  wide: /^Kuartal ke-?\\s?[1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,\n  wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^ma/i,\n    /^ap/i,\n    /^me/i,\n    /^jun/i,\n    /^jul/i,\n    /^ag/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[srkjm]/i,\n  short: /^(min|sen|sel|rab|kam|jum|sab)/i,\n  abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,\n  wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],\n  any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|tengah m|tengah h|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\n  any: /^([ap]\\.?\\s?m\\.?|tengah malam|tengah hari|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^pm/i,\n    midnight: /^tengah m/i,\n    noon: /^tengah h/i,\n    morning: /pagi/i,\n    afternoon: /siang/i,\n    evening: /sore/i,\n    night: /malam/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./id/_lib/formatDistance.js\";\nimport { formatLong } from \"./id/_lib/formatLong.js\";\nimport { formatRelative } from \"./id/_lib/formatRelative.js\";\nimport { localize } from \"./id/_lib/localize.js\";\nimport { match } from \"./id/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Indonesian locale.\n * @language Indonesian\n * @iso-639-2 ind\n * @author Rahmat Budiharso [@rbudiharso](https://github.com/rbudiharso)\n * @author Benget Nata [@bentinata](https://github.com/bentinata)\n * @author Budi Irawan [@deerawan](https://github.com/deerawan)\n * @author Try Ajitiono [@imballinst](https://github.com/imballinst)\n */\nexport const id = {\n  code: \"id\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default id;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"minna en 1 sek\u00FAnda\",\n    other: \"minna en {{count}} sek\u00FAndur\",\n  },\n\n  xSeconds: {\n    one: \"1 sek\u00FAnda\",\n    other: \"{{count}} sek\u00FAndur\",\n  },\n\n  halfAMinute: \"h\u00E1lf m\u00EDn\u00FAta\",\n\n  lessThanXMinutes: {\n    one: \"minna en 1 m\u00EDn\u00FAta\",\n    other: \"minna en {{count}} m\u00EDn\u00FAtur\",\n  },\n\n  xMinutes: {\n    one: \"1 m\u00EDn\u00FAta\",\n    other: \"{{count}} m\u00EDn\u00FAtur\",\n  },\n\n  aboutXHours: {\n    one: \"u.\u00FE.b. 1 klukkustund\",\n    other: \"u.\u00FE.b. {{count}} klukkustundir\",\n  },\n\n  xHours: {\n    one: \"1 klukkustund\",\n    other: \"{{count}} klukkustundir\",\n  },\n\n  xDays: {\n    one: \"1 dagur\",\n    other: \"{{count}} dagar\",\n  },\n\n  aboutXWeeks: {\n    one: \"um viku\",\n    other: \"um {{count}} vikur\",\n  },\n\n  xWeeks: {\n    one: \"1 viku\",\n    other: \"{{count}} vikur\",\n  },\n\n  aboutXMonths: {\n    one: \"u.\u00FE.b. 1 m\u00E1nu\u00F0ur\",\n    other: \"u.\u00FE.b. {{count}} m\u00E1nu\u00F0ir\",\n  },\n\n  xMonths: {\n    one: \"1 m\u00E1nu\u00F0ur\",\n    other: \"{{count}} m\u00E1nu\u00F0ir\",\n  },\n\n  aboutXYears: {\n    one: \"u.\u00FE.b. 1 \u00E1r\",\n    other: \"u.\u00FE.b. {{count}} \u00E1r\",\n  },\n\n  xYears: {\n    one: \"1 \u00E1r\",\n    other: \"{{count}} \u00E1r\",\n  },\n\n  overXYears: {\n    one: \"meira en 1 \u00E1r\",\n    other: \"meira en {{count}} \u00E1r\",\n  },\n\n  almostXYears: {\n    one: \"n\u00E6stum 1 \u00E1r\",\n    other: \"n\u00E6stum {{count}} \u00E1r\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u00ED \" + result;\n    } else {\n      return result + \" s\u00ED\u00F0an\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"do MMM y\",\n  short: \"d.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"'kl'. HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kl.' {{time}}\",\n  long: \"{{date}} 'kl.' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'s\u00ED\u00F0asta' dddd 'kl.' p\",\n  yesterday: \"'\u00ED g\u00E6r kl.' p\",\n  today: \"'\u00ED dag kl.' p\",\n  tomorrow: \"'\u00E1 morgun kl.' p\",\n  nextWeek: \"dddd 'kl.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\n  wide: [\"fyrir Krist\", \"eftir Krist\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1F\", \"2F\", \"3F\", \"4F\"],\n  wide: [\"1. fj\u00F3r\u00F0ungur\", \"2. fj\u00F3r\u00F0ungur\", \"3. fj\u00F3r\u00F0ungur\", \"4. fj\u00F3r\u00F0ungur\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"\u00C1\", \"S\", \"\u00D3\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mars\",\n    \"apr\u00EDl\",\n    \"ma\u00ED\",\n    \"j\u00FAn\u00ED\",\n    \"j\u00FAl\u00ED\",\n    \"\u00E1g\u00FAst\",\n    \"sept.\",\n    \"okt.\",\n    \"n\u00F3v.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"jan\u00FAar\",\n    \"febr\u00FAar\",\n    \"mars\",\n    \"apr\u00EDl\",\n    \"ma\u00ED\",\n    \"j\u00FAn\u00ED\",\n    \"j\u00FAl\u00ED\",\n    \"\u00E1g\u00FAst\",\n    \"september\",\n    \"okt\u00F3ber\",\n    \"n\u00F3vember\",\n    \"desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"\u00DE\", \"M\", \"F\", \"F\", \"L\"],\n  short: [\"Su\", \"M\u00E1\", \"\u00DEr\", \"Mi\", \"Fi\", \"F\u00F6\", \"La\"],\n  abbreviated: [\"sun.\", \"m\u00E1n.\", \"\u00FEri.\", \"mi\u00F0.\", \"fim.\", \"f\u00F6s.\", \"lau.\"],\n\n  wide: [\n    \"sunnudagur\",\n    \"m\u00E1nudagur\",\n    \"\u00FEri\u00F0judagur\",\n    \"mi\u00F0vikudagur\",\n    \"fimmtudagur\",\n    \"f\u00F6studagur\",\n    \"laugardagur\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"f\",\n    pm: \"e\",\n    midnight: \"mi\u00F0n\u00E6tti\",\n    noon: \"h\u00E1degi\",\n    morning: \"morgunn\",\n    afternoon: \"s\u00ED\u00F0degi\",\n    evening: \"kv\u00F6ld\",\n    night: \"n\u00F3tt\",\n  },\n  abbreviated: {\n    am: \"f.h.\",\n    pm: \"e.h.\",\n    midnight: \"mi\u00F0n\u00E6tti\",\n    noon: \"h\u00E1degi\",\n    morning: \"morgunn\",\n    afternoon: \"s\u00ED\u00F0degi\",\n    evening: \"kv\u00F6ld\",\n    night: \"n\u00F3tt\",\n  },\n  wide: {\n    am: \"fyrir h\u00E1degi\",\n    pm: \"eftir h\u00E1degi\",\n    midnight: \"mi\u00F0n\u00E6tti\",\n    noon: \"h\u00E1degi\",\n    morning: \"morgunn\",\n    afternoon: \"s\u00ED\u00F0degi\",\n    evening: \"kv\u00F6ld\",\n    night: \"n\u00F3tt\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"f\",\n    pm: \"e\",\n    midnight: \"\u00E1 mi\u00F0n\u00E6tti\",\n    noon: \"\u00E1 h\u00E1degi\",\n    morning: \"a\u00F0 morgni\",\n    afternoon: \"s\u00ED\u00F0degis\",\n    evening: \"um kv\u00F6ld\",\n    night: \"um n\u00F3tt\",\n  },\n  abbreviated: {\n    am: \"f.h.\",\n    pm: \"e.h.\",\n    midnight: \"\u00E1 mi\u00F0n\u00E6tti\",\n    noon: \"\u00E1 h\u00E1degi\",\n    morning: \"a\u00F0 morgni\",\n    afternoon: \"s\u00ED\u00F0degis\",\n    evening: \"um kv\u00F6ld\",\n    night: \"um n\u00F3tt\",\n  },\n  wide: {\n    am: \"fyrir h\u00E1degi\",\n    pm: \"eftir h\u00E1degi\",\n    midnight: \"\u00E1 mi\u00F0n\u00E6tti\",\n    noon: \"\u00E1 h\u00E1degi\",\n    morning: \"a\u00F0 morgni\",\n    afternoon: \"s\u00ED\u00F0degis\",\n    evening: \"um kv\u00F6ld\",\n    night: \"um n\u00F3tt\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+(\\.)?/i;\n\nconst matchEraPatterns = {\n  narrow: /^(f\\.Kr\\.|e\\.Kr\\.)/i,\n  abbreviated: /^(f\\.Kr\\.|e\\.Kr\\.)/i,\n  wide: /^(fyrir Krist|eftir Krist)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(f\\.Kr\\.)/i, /^(e\\.Kr\\.)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]\\.?/i,\n  abbreviated: /^q[1234]\\.?/i,\n  wide: /^[1234]\\.? fj\u00F3r\u00F0ungur/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1\\.?/i, /2\\.?/i, /3\\.?/i, /4\\.?/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfm\u00E1s\u00F3nd]/i,\n  abbreviated:\n    /^(jan\\.|feb\\.|mars\\.|apr\u00EDl\\.|ma\u00ED|j\u00FAn\u00ED|j\u00FAl\u00ED|\u00E1gust|sep\\.|oct\\.|nov\\.|dec\\.)/i,\n  wide: /^(januar|febr\u00FAar|mars|apr\u00EDl|ma\u00ED|j\u00FAn\u00ED|j\u00FAl\u00ED|\u00E1gust|september|okt\u00F3ber|n\u00F3vember|desember)/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^\u00E1/i,\n    /^s/i,\n    /^\u00F3/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^ma\u00ED/i,\n    /^j\u00FAn/i,\n    /^j\u00FAl/i,\n    /^\u00E1u/i,\n    /^s/i,\n    /^\u00F3/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|m\u00E1|\u00FEr|mi|fi|f\u00F6|la)/i,\n  abbreviated: /^(sun|m\u00E1n|\u00FEri|mi\u00F0|fim|f\u00F6s|lau)\\.?/i,\n  wide: /^(sunnudagur|m\u00E1nudagur|\u00FEri\u00F0judagur|mi\u00F0vikudagur|fimmtudagur|f\u00F6studagur|laugardagur)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^\u00FE/i, /^m/i, /^f/i, /^f/i, /^l/i],\n  any: [/^su/i, /^m\u00E1/i, /^\u00FEr/i, /^mi/i, /^fi/i, /^f\u00F6/i, /^la/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(f|e|s\u00ED\u00F0degis|(\u00E1|a\u00F0|um) (morgni|kv\u00F6ld|n\u00F3tt|mi\u00F0n\u00E6tti))/i,\n  any: /^(fyrir h\u00E1degi|eftir h\u00E1degi|[ef]\\.?h\\.?|s\u00ED\u00F0degis|morgunn|(\u00E1|a\u00F0|um) (morgni|kv\u00F6ld|n\u00F3tt|mi\u00F0n\u00E6tti))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^f/i,\n    pm: /^e/i,\n    midnight: /^mi/i,\n    noon: /^h\u00E1/i,\n    morning: /morgunn/i,\n    afternoon: /s\u00ED\u00F0degi/i,\n    evening: /kv\u00F6ld/i,\n    night: /n\u00F3tt/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./is/_lib/formatDistance.js\";\nimport { formatLong } from \"./is/_lib/formatLong.js\";\nimport { formatRelative } from \"./is/_lib/formatRelative.js\";\nimport { localize } from \"./is/_lib/localize.js\";\nimport { match } from \"./is/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Icelandic locale.\n * @language Icelandic\n * @iso-639-2 isl\n * @author Derek Blank [@derekblank](https://github.com/derekblank)\n * @author Arn\u00F3r \u00DDmir [@lamayg](https://github.com/lamayg)\n */\nexport const is = {\n  code: \"is\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default is;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"meno di un secondo\",\n    other: \"meno di {{count}} secondi\",\n  },\n\n  xSeconds: {\n    one: \"un secondo\",\n    other: \"{{count}} secondi\",\n  },\n\n  halfAMinute: \"alcuni secondi\",\n\n  lessThanXMinutes: {\n    one: \"meno di un minuto\",\n    other: \"meno di {{count}} minuti\",\n  },\n\n  xMinutes: {\n    one: \"un minuto\",\n    other: \"{{count}} minuti\",\n  },\n\n  aboutXHours: {\n    one: \"circa un'ora\",\n    other: \"circa {{count}} ore\",\n  },\n\n  xHours: {\n    one: \"un'ora\",\n    other: \"{{count}} ore\",\n  },\n\n  xDays: {\n    one: \"un giorno\",\n    other: \"{{count}} giorni\",\n  },\n\n  aboutXWeeks: {\n    one: \"circa una settimana\",\n    other: \"circa {{count}} settimane\",\n  },\n\n  xWeeks: {\n    one: \"una settimana\",\n    other: \"{{count}} settimane\",\n  },\n\n  aboutXMonths: {\n    one: \"circa un mese\",\n    other: \"circa {{count}} mesi\",\n  },\n\n  xMonths: {\n    one: \"un mese\",\n    other: \"{{count}} mesi\",\n  },\n\n  aboutXYears: {\n    one: \"circa un anno\",\n    other: \"circa {{count}} anni\",\n  },\n\n  xYears: {\n    one: \"un anno\",\n    other: \"{{count}} anni\",\n  },\n\n  overXYears: {\n    one: \"pi\u00F9 di un anno\",\n    other: \"pi\u00F9 di {{count}} anni\",\n  },\n\n  almostXYears: {\n    one: \"quasi un anno\",\n    other: \"quasi {{count}} anni\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"tra \" + result;\n    } else {\n      return result + \" fa\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst weekdays = [\n  \"domenica\",\n  \"luned\u00EC\",\n  \"marted\u00EC\",\n  \"mercoled\u00EC\",\n  \"gioved\u00EC\",\n  \"venerd\u00EC\",\n  \"sabato\",\n];\n\nfunction lastWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica scorsa alle' p\";\n    default:\n      return \"'\" + weekdays[day] + \" scorso alle' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  return \"'\" + weekdays[day] + \" alle' p\";\n}\n\nfunction nextWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica prossima alle' p\";\n    default:\n      return \"'\" + weekdays[day] + \" prossimo alle' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'ieri alle' p\",\n  today: \"'oggi alle' p\",\n  tomorrow: \"'domani alle' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"aC\", \"dC\"],\n  abbreviated: [\"a.C.\", \"d.C.\"],\n  wide: [\"avanti Cristo\", \"dopo Cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1\u00BA trimestre\", \"2\u00BA trimestre\", \"3\u00BA trimestre\", \"4\u00BA trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"G\", \"F\", \"M\", \"A\", \"M\", \"G\", \"L\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"gen\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"mag\",\n    \"giu\",\n    \"lug\",\n    \"ago\",\n    \"set\",\n    \"ott\",\n    \"nov\",\n    \"dic\",\n  ],\n\n  wide: [\n    \"gennaio\",\n    \"febbraio\",\n    \"marzo\",\n    \"aprile\",\n    \"maggio\",\n    \"giugno\",\n    \"luglio\",\n    \"agosto\",\n    \"settembre\",\n    \"ottobre\",\n    \"novembre\",\n    \"dicembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"G\", \"V\", \"S\"],\n  short: [\"dom\", \"lun\", \"mar\", \"mer\", \"gio\", \"ven\", \"sab\"],\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mer\", \"gio\", \"ven\", \"sab\"],\n  wide: [\n    \"domenica\",\n    \"luned\u00EC\",\n    \"marted\u00EC\",\n    \"mercoled\u00EC\",\n    \"gioved\u00EC\",\n    \"venerd\u00EC\",\n    \"sabato\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"m.\",\n    pm: \"p.\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"mattina\",\n    afternoon: \"pomeriggio\",\n    evening: \"sera\",\n    night: \"notte\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"mattina\",\n    afternoon: \"pomeriggio\",\n    evening: \"sera\",\n    night: \"notte\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"mattina\",\n    afternoon: \"pomeriggio\",\n    evening: \"sera\",\n    night: \"notte\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"m.\",\n    pm: \"p.\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"di mattina\",\n    afternoon: \"del pomeriggio\",\n    evening: \"di sera\",\n    night: \"di notte\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"di mattina\",\n    afternoon: \"del pomeriggio\",\n    evening: \"di sera\",\n    night: \"di notte\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"mezzanotte\",\n    noon: \"mezzogiorno\",\n    morning: \"di mattina\",\n    afternoon: \"del pomeriggio\",\n    evening: \"di sera\",\n    night: \"di notte\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return String(number);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00BA)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(aC|dC)/i,\n  abbreviated: /^(a\\.?\\s?C\\.?|a\\.?\\s?e\\.?\\s?v\\.?|d\\.?\\s?C\\.?|e\\.?\\s?v\\.?)/i,\n  wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i,\n};\nconst parseEraPatterns = {\n  any: [/^a/i, /^(d|e)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](\u00BA)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[gfmalsond]/i,\n  abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,\n  wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^g/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^g/i,\n    /^l/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ge/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mag/i,\n    /^gi/i,\n    /^l/i,\n    /^ag/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmgvs]/i,\n  short: /^(do|lu|ma|me|gi|ve|sa)/i,\n  abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,\n  wide: /^(domenica|luned[i|\u00EC]|marted[i|\u00EC]|mercoled[i|\u00EC]|gioved[i|\u00EC]|venerd[i|\u00EC]|sabato)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(a|m\\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\n  any: /^([ap]\\.?\\s?m\\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mezza/i,\n    noon: /^mezzo/i,\n    morning: /mattina/i,\n    afternoon: /pomeriggio/i,\n    evening: /sera/i,\n    night: /notte/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./it/_lib/formatDistance.js\";\nimport { formatLong } from \"./it/_lib/formatLong.js\";\nimport { formatRelative } from \"./it/_lib/formatRelative.js\";\nimport { localize } from \"./it/_lib/localize.js\";\nimport { match } from \"./it/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Italian locale.\n * @language Italian\n * @iso-639-2 ita\n * @author Alberto Restifo [@albertorestifo](https://github.com/albertorestifo)\n * @author Giovanni Polimeni [@giofilo](https://github.com/giofilo)\n * @author Vincenzo Carrese [@vin-car](https://github.com/vin-car)\n */\nexport const it = {\n  code: \"it\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default it;\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { formatDistance } from \"./it/_lib/formatDistance.js\";\nimport { formatRelative } from \"./it/_lib/formatRelative.js\";\nimport { localize } from \"./it/_lib/localize.js\";\nimport { match } from \"./it/_lib/match.js\";\nimport { formatLong } from \"./it-CH/_lib/formatLong.js\";\n\n/**\n * @category Locales\n * @summary Italian locale (Switzerland).\n * @language Italian\n * @iso-639-2 ita\n * @author Mike Peyer [@maic66](https://github.com/maic66)\n */\nexport const itCH = {\n  code: \"it-CH\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default itCH;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"1\u79D2\u672A\u6E80\",\n    other: \"{{count}}\u79D2\u672A\u6E80\",\n    oneWithSuffix: \"\u7D041\u79D2\",\n    otherWithSuffix: \"\u7D04{{count}}\u79D2\",\n  },\n\n  xSeconds: {\n    one: \"1\u79D2\",\n    other: \"{{count}}\u79D2\",\n  },\n\n  halfAMinute: \"30\u79D2\",\n\n  lessThanXMinutes: {\n    one: \"1\u5206\u672A\u6E80\",\n    other: \"{{count}}\u5206\u672A\u6E80\",\n    oneWithSuffix: \"\u7D041\u5206\",\n    otherWithSuffix: \"\u7D04{{count}}\u5206\",\n  },\n\n  xMinutes: {\n    one: \"1\u5206\",\n    other: \"{{count}}\u5206\",\n  },\n\n  aboutXHours: {\n    one: \"\u7D041\u6642\u9593\",\n    other: \"\u7D04{{count}}\u6642\u9593\",\n  },\n\n  xHours: {\n    one: \"1\u6642\u9593\",\n    other: \"{{count}}\u6642\u9593\",\n  },\n\n  xDays: {\n    one: \"1\u65E5\",\n    other: \"{{count}}\u65E5\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u7D041\u9031\u9593\",\n    other: \"\u7D04{{count}}\u9031\u9593\",\n  },\n\n  xWeeks: {\n    one: \"1\u9031\u9593\",\n    other: \"{{count}}\u9031\u9593\",\n  },\n\n  aboutXMonths: {\n    one: \"\u7D041\u304B\u6708\",\n    other: \"\u7D04{{count}}\u304B\u6708\",\n  },\n\n  xMonths: {\n    one: \"1\u304B\u6708\",\n    other: \"{{count}}\u304B\u6708\",\n  },\n\n  aboutXYears: {\n    one: \"\u7D041\u5E74\",\n    other: \"\u7D04{{count}}\u5E74\",\n  },\n\n  xYears: {\n    one: \"1\u5E74\",\n    other: \"{{count}}\u5E74\",\n  },\n\n  overXYears: {\n    one: \"1\u5E74\u4EE5\u4E0A\",\n    other: \"{{count}}\u5E74\u4EE5\u4E0A\",\n  },\n\n  almostXYears: {\n    one: \"1\u5E74\u8FD1\u304F\",\n    other: \"{{count}}\u5E74\u8FD1\u304F\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options.addSuffix && tokenValue.oneWithSuffix) {\n      result = tokenValue.oneWithSuffix;\n    } else {\n      result = tokenValue.one;\n    }\n  } else {\n    if (options.addSuffix && tokenValue.otherWithSuffix) {\n      result = tokenValue.otherWithSuffix.replace(\"{{count}}\", String(count));\n    } else {\n      result = tokenValue.other.replace(\"{{count}}\", String(count));\n    }\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u5F8C\";\n    } else {\n      return result + \"\u524D\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y\u5E74M\u6708d\u65E5EEEE\",\n  long: \"y\u5E74M\u6708d\u65E5\",\n  medium: \"y/MM/dd\",\n  short: \"y/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"H\u6642mm\u5206ss\u79D2 zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"\u5148\u9031\u306Eeeee\u306Ep\",\n  yesterday: \"\u6628\u65E5\u306Ep\",\n  today: \"\u4ECA\u65E5\u306Ep\",\n  tomorrow: \"\u660E\u65E5\u306Ep\",\n  nextWeek: \"\u7FCC\u9031\u306Eeeee\u306Ep\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) => {\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"BC\", \"AC\"],\n  abbreviated: [\"\u7D00\u5143\u524D\", \"\u897F\u66A6\"],\n  wide: [\"\u7D00\u5143\u524D\", \"\u897F\u66A6\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"\u7B2C1\u56DB\u534A\u671F\", \"\u7B2C2\u56DB\u534A\u671F\", \"\u7B2C3\u56DB\u534A\u671F\", \"\u7B2C4\u56DB\u534A\u671F\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"1\u6708\",\n    \"2\u6708\",\n    \"3\u6708\",\n    \"4\u6708\",\n    \"5\u6708\",\n    \"6\u6708\",\n    \"7\u6708\",\n    \"8\u6708\",\n    \"9\u6708\",\n    \"10\u6708\",\n    \"11\u6708\",\n    \"12\u6708\",\n  ],\n\n  wide: [\n    \"1\u6708\",\n    \"2\u6708\",\n    \"3\u6708\",\n    \"4\u6708\",\n    \"5\u6708\",\n    \"6\u6708\",\n    \"7\u6708\",\n    \"8\u6708\",\n    \"9\u6708\",\n    \"10\u6708\",\n    \"11\u6708\",\n    \"12\u6708\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u65E5\", \"\u6708\", \"\u706B\", \"\u6C34\", \"\u6728\", \"\u91D1\", \"\u571F\"],\n  short: [\"\u65E5\", \"\u6708\", \"\u706B\", \"\u6C34\", \"\u6728\", \"\u91D1\", \"\u571F\"],\n  abbreviated: [\"\u65E5\", \"\u6708\", \"\u706B\", \"\u6C34\", \"\u6728\", \"\u91D1\", \"\u571F\"],\n  wide: [\"\u65E5\u66DC\u65E5\", \"\u6708\u66DC\u65E5\", \"\u706B\u66DC\u65E5\", \"\u6C34\u66DC\u65E5\", \"\u6728\u66DC\u65E5\", \"\u91D1\u66DC\u65E5\", \"\u571F\u66DC\u65E5\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n  abbreviated: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n  wide: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n  abbreviated: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n  wide: {\n    am: \"\u5348\u524D\",\n    pm: \"\u5348\u5F8C\",\n    midnight: \"\u6DF1\u591C\",\n    noon: \"\u6B63\u5348\",\n    morning: \"\u671D\",\n    afternoon: \"\u5348\u5F8C\",\n    evening: \"\u591C\",\n    night: \"\u6DF1\u591C\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = String(options?.unit);\n\n  switch (unit) {\n    case \"year\":\n      return `${number}\u5E74`;\n    case \"quarter\":\n      return `\u7B2C${number}\u56DB\u534A\u671F`;\n    case \"month\":\n      return `${number}\u6708`;\n    case \"week\":\n      return `\u7B2C${number}\u9031`;\n    case \"date\":\n      return `${number}\u65E5`;\n    case \"hour\":\n      return `${number}\u6642`;\n    case \"minute\":\n      return `${number}\u5206`;\n    case \"second\":\n      return `${number}\u79D2`;\n    default:\n      return `${number}`;\n  }\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\n\nconst matchOrdinalNumberPattern = /^\u7B2C?\\d+(\u5E74|\u56DB\u534A\u671F|\u6708|\u9031|\u65E5|\u6642|\u5206|\u79D2)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(B\\.?C\\.?|A\\.?D\\.?)/i,\n  abbreviated: /^(\u7D00\u5143[\u524D\u5F8C]|\u897F\u66A6)/i,\n  wide: /^(\u7D00\u5143[\u524D\u5F8C]|\u897F\u66A6)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/^B/i, /^A/i],\n  any: [/^(\u7D00\u5143\u524D)/i, /^(\u897F\u66A6|\u7D00\u5143\u5F8C)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^Q[1234]/i,\n  wide: /^\u7B2C[1234\u4E00\u4E8C\u4E09\u56DB\uFF11\uFF12\uFF13\uFF14]\u56DB\u534A\u671F/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u4E00|\uFF11)/i, /(2|\u4E8C|\uFF12)/i, /(3|\u4E09|\uFF13)/i, /(4|\u56DB|\uFF14)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^([123456789]|1[012])/,\n  abbreviated: /^([123456789]|1[012])\u6708/i,\n  wide: /^([123456789]|1[012])\u6708/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^1\\D/,\n    /^2/,\n    /^3/,\n    /^4/,\n    /^5/,\n    /^6/,\n    /^7/,\n    /^8/,\n    /^9/,\n    /^10/,\n    /^11/,\n    /^12/,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u65E5\u6708\u706B\u6C34\u6728\u91D1\u571F]/,\n  short: /^[\u65E5\u6708\u706B\u6C34\u6728\u91D1\u571F]/,\n  abbreviated: /^[\u65E5\u6708\u706B\u6C34\u6728\u91D1\u571F]/,\n  wide: /^[\u65E5\u6708\u706B\u6C34\u6728\u91D1\u571F]\u66DC\u65E5/,\n};\nconst parseDayPatterns = {\n  any: [/^\u65E5/, /^\u6708/, /^\u706B/, /^\u6C34/, /^\u6728/, /^\u91D1/, /^\u571F/],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(AM|PM|\u5348\u524D|\u5348\u5F8C|\u6B63\u5348|\u6DF1\u591C|\u771F\u591C\u4E2D|\u591C|\u671D)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(A|\u5348\u524D)/i,\n    pm: /^(P|\u5348\u5F8C)/i,\n    midnight: /^\u6DF1\u591C|\u771F\u591C\u4E2D/i,\n    noon: /^\u6B63\u5348/i,\n    morning: /^\u671D/i,\n    afternoon: /^\u5348\u5F8C/i,\n    evening: /^\u591C/i,\n    night: /^\u6DF1\u591C/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ja/_lib/formatDistance.js\";\nimport { formatLong } from \"./ja/_lib/formatLong.js\";\nimport { formatRelative } from \"./ja/_lib/formatRelative.js\";\nimport { localize } from \"./ja/_lib/localize.js\";\nimport { match } from \"./ja/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Japanese locale.\n * @language Japanese\n * @iso-639-2 jpn\n * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)\n * @author Yamagishi Kazutoshi [@ykzts](https://github.com/ykzts)\n * @author Luca Ban [@mesqueeb](https://github.com/mesqueeb)\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\n * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)\n */\nexport const ja = {\n  code: \"ja\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ja;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"1\u3073\u3087\u3046\u307F\u307E\u3093\",\n    other: \"{{count}}\u3073\u3087\u3046\u307F\u307E\u3093\",\n    oneWithSuffix: \"\u3084\u304F1\u3073\u3087\u3046\",\n    otherWithSuffix: \"\u3084\u304F{{count}}\u3073\u3087\u3046\",\n  },\n\n  xSeconds: {\n    one: \"1\u3073\u3087\u3046\",\n    other: \"{{count}}\u3073\u3087\u3046\",\n  },\n\n  halfAMinute: \"30\u3073\u3087\u3046\",\n\n  lessThanXMinutes: {\n    one: \"1\u3077\u3093\u307F\u307E\u3093\",\n    other: \"{{count}}\u3075\u3093\u307F\u307E\u3093\",\n    oneWithSuffix: \"\u3084\u304F1\u3077\u3093\",\n    otherWithSuffix: \"\u3084\u304F{{count}}\u3075\u3093\",\n  },\n\n  xMinutes: {\n    one: \"1\u3077\u3093\",\n    other: \"{{count}}\u3075\u3093\",\n  },\n\n  aboutXHours: {\n    one: \"\u3084\u304F1\u3058\u304B\u3093\",\n    other: \"\u3084\u304F{{count}}\u3058\u304B\u3093\",\n  },\n\n  xHours: {\n    one: \"1\u3058\u304B\u3093\",\n    other: \"{{count}}\u3058\u304B\u3093\",\n  },\n\n  xDays: {\n    one: \"1\u306B\u3061\",\n    other: \"{{count}}\u306B\u3061\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u3084\u304F1\u3057\u3085\u3046\u304B\u3093\",\n    other: \"\u3084\u304F{{count}}\u3057\u3085\u3046\u304B\u3093\",\n  },\n\n  xWeeks: {\n    one: \"1\u3057\u3085\u3046\u304B\u3093\",\n    other: \"{{count}}\u3057\u3085\u3046\u304B\u3093\",\n  },\n\n  aboutXMonths: {\n    one: \"\u3084\u304F1\u304B\u3052\u3064\",\n    other: \"\u3084\u304F{{count}}\u304B\u3052\u3064\",\n  },\n\n  xMonths: {\n    one: \"1\u304B\u3052\u3064\",\n    other: \"{{count}}\u304B\u3052\u3064\",\n  },\n\n  aboutXYears: {\n    one: \"\u3084\u304F1\u306D\u3093\",\n    other: \"\u3084\u304F{{count}}\u306D\u3093\",\n  },\n\n  xYears: {\n    one: \"1\u306D\u3093\",\n    other: \"{{count}}\u306D\u3093\",\n  },\n\n  overXYears: {\n    one: \"1\u306D\u3093\u3044\u3058\u3087\u3046\",\n    other: \"{{count}}\u306D\u3093\u3044\u3058\u3087\u3046\",\n  },\n\n  almostXYears: {\n    one: \"1\u306D\u3093\u3061\u304B\u304F\",\n    other: \"{{count}}\u306D\u3093\u3061\u304B\u304F\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options.addSuffix && tokenValue.oneWithSuffix) {\n      result = tokenValue.oneWithSuffix;\n    } else {\n      result = tokenValue.one;\n    }\n  } else {\n    if (options.addSuffix && tokenValue.otherWithSuffix) {\n      result = tokenValue.otherWithSuffix.replace(\"{{count}}\", String(count));\n    } else {\n      result = tokenValue.other.replace(\"{{count}}\", String(count));\n    }\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u3042\u3068\";\n    } else {\n      return result + \"\u307E\u3048\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y\u306D\u3093M\u304C\u3064d\u306B\u3061EEEE\",\n  long: \"y\u306D\u3093M\u304C\u3064d\u306B\u3061\",\n  medium: \"y/MM/dd\",\n  short: \"y/MM/dd\",\n};\n\nconst timeFormats = {\n  full: \"H\u3058mm\u3075\u3093ss\u3073\u3087\u3046 zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"\u305B\u3093\u3057\u3085\u3046\u306Eeeee\u306Ep\",\n  yesterday: \"\u304D\u306E\u3046\u306Ep\",\n  today: \"\u304D\u3087\u3046\u306Ep\",\n  tomorrow: \"\u3042\u3057\u305F\u306Ep\",\n  nextWeek: \"\u3088\u304F\u3057\u3085\u3046\u306Eeeee\u306Ep\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) => {\n  return formatRelativeLocale[token];\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"BC\", \"AC\"],\n  abbreviated: [\"\u304D\u3052\u3093\u305C\u3093\", \"\u305B\u3044\u308C\u304D\"],\n  wide: [\"\u304D\u3052\u3093\u305C\u3093\", \"\u305B\u3044\u308C\u304D\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"\u3060\u30441\u3057\u306F\u3093\u304D\", \"\u3060\u30442\u3057\u306F\u3093\u304D\", \"\u3060\u30443\u3057\u306F\u3093\u304D\", \"\u3060\u30444\u3057\u306F\u3093\u304D\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"1\u304C\u3064\",\n    \"2\u304C\u3064\",\n    \"3\u304C\u3064\",\n    \"4\u304C\u3064\",\n    \"5\u304C\u3064\",\n    \"6\u304C\u3064\",\n    \"7\u304C\u3064\",\n    \"8\u304C\u3064\",\n    \"9\u304C\u3064\",\n    \"10\u304C\u3064\",\n    \"11\u304C\u3064\",\n    \"12\u304C\u3064\",\n  ],\n\n  wide: [\n    \"1\u304C\u3064\",\n    \"2\u304C\u3064\",\n    \"3\u304C\u3064\",\n    \"4\u304C\u3064\",\n    \"5\u304C\u3064\",\n    \"6\u304C\u3064\",\n    \"7\u304C\u3064\",\n    \"8\u304C\u3064\",\n    \"9\u304C\u3064\",\n    \"10\u304C\u3064\",\n    \"11\u304C\u3064\",\n    \"12\u304C\u3064\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u306B\u3061\", \"\u3052\u3064\", \"\u304B\", \"\u3059\u3044\", \"\u3082\u304F\", \"\u304D\u3093\", \"\u3069\"],\n  short: [\"\u306B\u3061\", \"\u3052\u3064\", \"\u304B\", \"\u3059\u3044\", \"\u3082\u304F\", \"\u304D\u3093\", \"\u3069\"],\n  abbreviated: [\"\u306B\u3061\", \"\u3052\u3064\", \"\u304B\", \"\u3059\u3044\", \"\u3082\u304F\", \"\u304D\u3093\", \"\u3069\"],\n  wide: [\n    \"\u306B\u3061\u3088\u3046\u3073\",\n    \"\u3052\u3064\u3088\u3046\u3073\",\n    \"\u304B\u3088\u3046\u3073\",\n    \"\u3059\u3044\u3088\u3046\u3073\",\n    \"\u3082\u304F\u3088\u3046\u3073\",\n    \"\u304D\u3093\u3088\u3046\u3073\",\n    \"\u3069\u3088\u3046\u3073\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n  abbreviated: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n  wide: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n  abbreviated: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n  wide: {\n    am: \"\u3054\u305C\u3093\",\n    pm: \"\u3054\u3054\",\n    midnight: \"\u3057\u3093\u3084\",\n    noon: \"\u3057\u3087\u3046\u3054\",\n    morning: \"\u3042\u3055\",\n    afternoon: \"\u3054\u3054\",\n    evening: \"\u3088\u308B\",\n    night: \"\u3057\u3093\u3084\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = String(options?.unit);\n\n  switch (unit) {\n    case \"year\":\n      return `${number}\u306D\u3093`;\n    case \"quarter\":\n      return `\u3060\u3044${number}\u3057\u306F\u3093\u304D`;\n    case \"month\":\n      return `${number}\u304C\u3064`;\n    case \"week\":\n      return `\u3060\u3044${number}\u3057\u3085\u3046`;\n    case \"date\":\n      return `${number}\u306B\u3061`;\n    case \"hour\":\n      return `${number}\u3058`;\n    case \"minute\":\n      return `${number}\u3075\u3093`;\n    case \"second\":\n      return `${number}\u3073\u3087\u3046`;\n    default:\n      return `${number}`;\n  }\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern =\n  /^\u3060?\u3044?\\d+(\u306D\u3093|\u3057\u306F\u3093\u304D|\u304C\u3064|\u3057\u3085\u3046|\u306B\u3061|\u3058|\u3075\u3093|\u3073\u3087\u3046)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(B\\.?C\\.?|A\\.?D\\.?)/i,\n  abbreviated: /^(\u304D\u3052\u3093[\u524D\u5F8C]|\u305B\u3044\u308C\u304D)/i,\n  wide: /^(\u304D\u3052\u3093[\u524D\u5F8C]|\u305B\u3044\u308C\u304D)/i,\n};\nconst parseEraPatterns = {\n  narrow: [/^B/i, /^A/i],\n  any: [/^(\u304D\u3052\u3093\u305C\u3093)/i, /^(\u305B\u3044\u308C\u304D|\u304D\u3052\u3093\u3054)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^Q[1234]/i,\n  wide: /^\u3060\u3044[1234\u4E00\u4E8C\u4E09\u56DB\uFF11\uFF12\uFF13\uFF14]\u3057\u306F\u3093\u304D/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u4E00|\uFF11)/i, /(2|\u4E8C|\uFF12)/i, /(3|\u4E09|\uFF13)/i, /(4|\u56DB|\uFF14)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^([123456789]|1[012])/,\n  abbreviated: /^([123456789]|1[012])\u304C\u3064/i,\n  wide: /^([123456789]|1[012])\u304C\u3064/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^1\\D/,\n    /^2/,\n    /^3/,\n    /^4/,\n    /^5/,\n    /^6/,\n    /^7/,\n    /^8/,\n    /^9/,\n    /^10/,\n    /^11/,\n    /^12/,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u306B\u3061|\u3052\u3064|\u304B|\u3059\u3044|\u3082\u304F|\u304D\u3093|\u3069)/,\n  short: /^(\u306B\u3061|\u3052\u3064|\u304B|\u3059\u3044|\u3082\u304F|\u304D\u3093|\u3069)/,\n  abbreviated: /^(\u306B\u3061|\u3052\u3064|\u304B|\u3059\u3044|\u3082\u304F|\u304D\u3093|\u3069)/,\n  wide: /^(\u306B\u3061|\u3052\u3064|\u304B|\u3059\u3044|\u3082\u304F|\u304D\u3093|\u3069)\u3088\u3046\u3073/,\n};\nconst parseDayPatterns = {\n  any: [/^\u306B\u3061/, /^\u3052\u3064/, /^\u304B/, /^\u3059\u3044/, /^\u3082\u304F/, /^\u304D\u3093/, /^\u3069/],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(AM|PM|\u3054\u305C\u3093|\u3054\u3054|\u3057\u3087\u3046\u3054|\u3057\u3093\u3084|\u307E\u3088\u306A\u304B|\u3088\u308B|\u3042\u3055)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(A|\u3054\u305C\u3093)/i,\n    pm: /^(P|\u3054\u3054)/i,\n    midnight: /^\u3057\u3093\u3084|\u307E\u3088\u306A\u304B/i,\n    noon: /^\u3057\u3087\u3046\u3054/i,\n    morning: /^\u3042\u3055/i,\n    afternoon: /^\u3054\u3054/i,\n    evening: /^\u3088\u308B/i,\n    night: /^\u3057\u3093\u3084/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ja-Hira/_lib/formatDistance.js\";\nimport { formatLong } from \"./ja-Hira/_lib/formatLong.js\";\nimport { formatRelative } from \"./ja-Hira/_lib/formatRelative.js\";\nimport { localize } from \"./ja-Hira/_lib/localize.js\";\nimport { match } from \"./ja-Hira/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Japanese (Hiragana) locale.\n * @language Japanese (Hiragana)\n * @iso-639-2 jpn\n * @author Eri Hiramatsu [@Eritutteo](https://github.com/Eritutteo)\n */\nexport const jaHira = {\n  code: \"ja-Hira\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default jaHira;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    past: \"{{count}} \u10EC\u10D0\u10DB\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8 \u10EE\u10DC\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10D0\u10DB\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8\",\n    future: \"{{count}} \u10EC\u10D0\u10DB\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10E8\u10D8\",\n  },\n\n  xSeconds: {\n    past: \"{{count}} \u10EC\u10D0\u10DB\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10D0\u10DB\u10D8\",\n    future: \"{{count}} \u10EC\u10D0\u10DB\u10E8\u10D8\",\n  },\n\n  halfAMinute: {\n    past: \"\u10DC\u10D0\u10EE\u10D4\u10D5\u10D0\u10E0\u10D8 \u10EC\u10E3\u10D7\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10DC\u10D0\u10EE\u10D4\u10D5\u10D0\u10E0\u10D8 \u10EC\u10E3\u10D7\u10D8\",\n    future: \"\u10DC\u10D0\u10EE\u10D4\u10D5\u10D0\u10E0\u10D8 \u10EC\u10E3\u10D7\u10E8\u10D8\",\n  },\n\n  lessThanXMinutes: {\n    past: \"{{count}} \u10EC\u10E3\u10D7\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8 \u10EE\u10DC\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10E3\u10D7\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10D8\",\n    future: \"{{count}} \u10EC\u10E3\u10D7\u10D6\u10D4 \u10DC\u10D0\u10D9\u10DA\u10D4\u10D1\u10E8\u10D8\",\n  },\n\n  xMinutes: {\n    past: \"{{count}} \u10EC\u10E3\u10D7\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10E3\u10D7\u10D8\",\n    future: \"{{count}} \u10EC\u10E3\u10D7\u10E8\u10D8\",\n  },\n\n  aboutXHours: {\n    past: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10E1\u10D0\u10D0\u10D7\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10E1\u10D0\u10D0\u10D7\u10D8\",\n    future: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10E1\u10D0\u10D0\u10D7\u10E8\u10D8\",\n  },\n\n  xHours: {\n    past: \"{{count}} \u10E1\u10D0\u10D0\u10D7\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10E1\u10D0\u10D0\u10D7\u10D8\",\n    future: \"{{count}} \u10E1\u10D0\u10D0\u10D7\u10E8\u10D8\",\n  },\n\n  xDays: {\n    past: \"{{count}} \u10D3\u10E6\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10D3\u10E6\u10D4\",\n    future: \"{{count}} \u10D3\u10E6\u10D4\u10E8\u10D8\",\n  },\n\n  aboutXWeeks: {\n    past: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\",\n    future: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\u10E8\u10D8\",\n  },\n\n  xWeeks: {\n    past: \"{{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\u10E1 \u10D9\u10D5\u10D8\u10E0\u10D0\",\n    present: \"{{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\",\n    future: \"{{count}} \u10D9\u10D5\u10D8\u10E0\u10D0\u10E8\u10D8\",\n  },\n\n  aboutXMonths: {\n    past: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D7\u10D5\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D7\u10D5\u10D4\",\n    future: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10D7\u10D5\u10D4\u10E8\u10D8\",\n  },\n\n  xMonths: {\n    past: \"{{count}} \u10D7\u10D5\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10D7\u10D5\u10D4\",\n    future: \"{{count}} \u10D7\u10D5\u10D4\u10E8\u10D8\",\n  },\n\n  aboutXYears: {\n    past: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10EC\u10DA\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10EC\u10D4\u10DA\u10D8\",\n    future: \"\u10D3\u10D0\u10D0\u10EE\u10DA\u10DD\u10D4\u10D1\u10D8\u10D7 {{count}} \u10EC\u10D4\u10DA\u10E8\u10D8\",\n  },\n\n  xYears: {\n    past: \"{{count}} \u10EC\u10DA\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10D4\u10DA\u10D8\",\n    future: \"{{count}} \u10EC\u10D4\u10DA\u10E8\u10D8\",\n  },\n\n  overXYears: {\n    past: \"{{count}} \u10EC\u10D4\u10DA\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8 \u10EE\u10DC\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"{{count}} \u10EC\u10D4\u10DA\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8\",\n    future: \"{{count}} \u10EC\u10D4\u10DA\u10D6\u10D4 \u10DB\u10D4\u10E2\u10D8 \u10EE\u10DC\u10D8\u10E1 \u10E8\u10D4\u10DB\u10D3\u10D4\u10D2\",\n  },\n\n  almostXYears: {\n    past: \"\u10D7\u10D8\u10D7\u10E5\u10DB\u10D8\u10E1 {{count}} \u10EC\u10DA\u10D8\u10E1 \u10EC\u10D8\u10DC\",\n    present: \"\u10D7\u10D8\u10D7\u10E5\u10DB\u10D8\u10E1 {{count}} \u10EC\u10D4\u10DA\u10D8\",\n    future: \"\u10D7\u10D8\u10D7\u10E5\u10DB\u10D8\u10E1 {{count}} \u10EC\u10D4\u10DA\u10E8\u10D8\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (\n    options?.addSuffix &&\n    options.comparison &&\n    options.comparison > 0\n  ) {\n    result = tokenValue.future.replace(\"{{count}}\", String(count));\n  } else if (options?.addSuffix) {\n    result = tokenValue.past.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.present.replace(\"{{count}}\", String(count));\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM, y\",\n  long: \"do, MMMM, y\",\n  medium: \"d, MMM, y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}'-\u10D6\u10D4'\",\n  long: \"{{date}} {{time}}'-\u10D6\u10D4'\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u10EC\u10D8\u10DC\u10D0' eeee p'-\u10D6\u10D4'\",\n  yesterday: \"'\u10D2\u10E3\u10E8\u10D8\u10DC' p'-\u10D6\u10D4'\",\n  today: \"'\u10D3\u10E6\u10D4\u10E1' p'-\u10D6\u10D4'\",\n  tomorrow: \"'\u10EE\u10D5\u10D0\u10DA' p'-\u10D6\u10D4'\",\n  nextWeek: \"'\u10E8\u10D4\u10DB\u10D3\u10D4\u10D2\u10D8' eeee p'-\u10D6\u10D4'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u10E9.\u10EC-\u10DB\u10D3\u10D4\", \"\u10E9.\u10EC\"],\n  abbreviated: [\"\u10E9\u10D5.\u10EC-\u10DB\u10D3\u10D4\", \"\u10E9\u10D5.\u10EC\"],\n  wide: [\"\u10E9\u10D5\u10D4\u10DC\u10E1 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D0\u10DB\u10D3\u10D4\", \"\u10E9\u10D5\u10D4\u10DC\u10D8 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D8\u10D7\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u10DA\u10D8 \u10D9\u10D5\", \"2-\u10D4 \u10D9\u10D5\", \"3-\u10D4 \u10D9\u10D5\", \"4-\u10D4 \u10D9\u10D5\"],\n  wide: [\"1-\u10DA\u10D8 \u10D9\u10D5\u10D0\u10E0\u10E2\u10D0\u10DA\u10D8\", \"2-\u10D4 \u10D9\u10D5\u10D0\u10E0\u10E2\u10D0\u10DA\u10D8\", \"3-\u10D4 \u10D9\u10D5\u10D0\u10E0\u10E2\u10D0\u10DA\u10D8\", \"4-\u10D4 \u10D9\u10D5\u10D0\u10E0\u10E2\u10D0\u10DA\u10D8\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\n    \"\u10D8\u10D0\",\n    \"\u10D7\u10D4\",\n    \"\u10DB\u10D0\",\n    \"\u10D0\u10DE\",\n    \"\u10DB\u10E1\",\n    \"\u10D5\u10DC\",\n    \"\u10D5\u10DA\",\n    \"\u10D0\u10D2\",\n    \"\u10E1\u10D4\",\n    \"\u10DD\u10E5\",\n    \"\u10DC\u10DD\",\n    \"\u10D3\u10D4\",\n  ],\n\n  abbreviated: [\n    \"\u10D8\u10D0\u10DC\",\n    \"\u10D7\u10D4\u10D1\",\n    \"\u10DB\u10D0\u10E0\",\n    \"\u10D0\u10DE\u10E0\",\n    \"\u10DB\u10D0\u10D8\",\n    \"\u10D8\u10D5\u10DC\",\n    \"\u10D8\u10D5\u10DA\",\n    \"\u10D0\u10D2\u10D5\",\n    \"\u10E1\u10D4\u10E5\",\n    \"\u10DD\u10E5\u10E2\",\n    \"\u10DC\u10DD\u10D4\",\n    \"\u10D3\u10D4\u10D9\",\n  ],\n\n  wide: [\n    \"\u10D8\u10D0\u10DC\u10D5\u10D0\u10E0\u10D8\",\n    \"\u10D7\u10D4\u10D1\u10D4\u10E0\u10D5\u10D0\u10DA\u10D8\",\n    \"\u10DB\u10D0\u10E0\u10E2\u10D8\",\n    \"\u10D0\u10DE\u10E0\u10D8\u10DA\u10D8\",\n    \"\u10DB\u10D0\u10D8\u10E1\u10D8\",\n    \"\u10D8\u10D5\u10DC\u10D8\u10E1\u10D8\",\n    \"\u10D8\u10D5\u10DA\u10D8\u10E1\u10D8\",\n    \"\u10D0\u10D2\u10D5\u10D8\u10E1\u10E2\u10DD\",\n    \"\u10E1\u10D4\u10E5\u10E2\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8\",\n    \"\u10DD\u10E5\u10E2\u10DD\u10DB\u10D1\u10D4\u10E0\u10D8\",\n    \"\u10DC\u10DD\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8\",\n    \"\u10D3\u10D4\u10D9\u10D4\u10DB\u10D1\u10D4\u10E0\u10D8\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u10D9\u10D5\", \"\u10DD\u10E0\", \"\u10E1\u10D0\", \"\u10DD\u10D7\", \"\u10EE\u10E3\", \"\u10DE\u10D0\", \"\u10E8\u10D0\"],\n  short: [\"\u10D9\u10D5\u10D8\", \"\u10DD\u10E0\u10E8\", \"\u10E1\u10D0\u10DB\", \"\u10DD\u10D7\u10EE\", \"\u10EE\u10E3\u10D7\", \"\u10DE\u10D0\u10E0\", \"\u10E8\u10D0\u10D1\"],\n  abbreviated: [\"\u10D9\u10D5\u10D8\", \"\u10DD\u10E0\u10E8\", \"\u10E1\u10D0\u10DB\", \"\u10DD\u10D7\u10EE\", \"\u10EE\u10E3\u10D7\", \"\u10DE\u10D0\u10E0\", \"\u10E8\u10D0\u10D1\"],\n  wide: [\n    \"\u10D9\u10D5\u10D8\u10E0\u10D0\",\n    \"\u10DD\u10E0\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8\",\n    \"\u10E1\u10D0\u10DB\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8\",\n    \"\u10DD\u10D7\u10EE\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8\",\n    \"\u10EE\u10E3\u10D7\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8\",\n    \"\u10DE\u10D0\u10E0\u10D0\u10E1\u10D9\u10D4\u10D5\u10D8\",\n    \"\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D4\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\",\n    morning: \"\u10D3\u10D8\u10DA\u10D0\",\n    afternoon: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    night: \"\u10E6\u10D0\u10DB\u10D4\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D4\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\",\n    morning: \"\u10D3\u10D8\u10DA\u10D0\",\n    afternoon: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    night: \"\u10E6\u10D0\u10DB\u10D4\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D4\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\",\n    morning: \"\u10D3\u10D8\u10DA\u10D0\",\n    afternoon: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\",\n    night: \"\u10E6\u10D0\u10DB\u10D4\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D8\u10D7\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D8\u10E1\u10D0\u10E1\",\n    morning: \"\u10D3\u10D8\u10DA\u10D8\u10D7\",\n    afternoon: \"\u10DC\u10D0\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\u10D5\u10E1\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\u10E1\",\n    night: \"\u10E6\u10D0\u10DB\u10D8\u10D7\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D8\u10D7\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D8\u10E1\u10D0\u10E1\",\n    morning: \"\u10D3\u10D8\u10DA\u10D8\u10D7\",\n    afternoon: \"\u10DC\u10D0\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\u10D5\u10E1\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\u10E1\",\n    night: \"\u10E6\u10D0\u10DB\u10D8\u10D7\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"\u10E8\u10E3\u10D0\u10E6\u10D0\u10DB\u10D8\u10D7\",\n    noon: \"\u10E8\u10E3\u10D0\u10D3\u10E6\u10D8\u10E1\u10D0\u10E1\",\n    morning: \"\u10D3\u10D8\u10DA\u10D8\u10D7\",\n    afternoon: \"\u10DC\u10D0\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\u10D5\u10E1\",\n    evening: \"\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD\u10E1\",\n    night: \"\u10E6\u10D0\u10DB\u10D8\u10D7\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n\n  if (number === 1) {\n    return number + \"-\u10DA\u10D8\";\n  }\n\n  return number + \"-\u10D4\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-\u10DA\u10D8|-\u10D4)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u10E9\u10D5?\\.\u10EC)/i,\n  abbreviated: /^(\u10E9\u10D5?\\.\u10EC)/i,\n  wide: /^(\u10E9\u10D5\u10D4\u10DC\u10E1 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D0\u10DB\u10D3\u10D4|\u10E5\u10E0\u10D8\u10E1\u10E2\u10D4\u10E8\u10DD\u10D1\u10D0\u10DB\u10D3\u10D4|\u10E9\u10D5\u10D4\u10DC\u10D8 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D8\u10D7|\u10E5\u10E0\u10D8\u10E1\u10E2\u10D4\u10E8\u10DD\u10D1\u10D8\u10D3\u10D0\u10DC)/i,\n};\nconst parseEraPatterns = {\n  any: [\n    /^(\u10E9\u10D5\u10D4\u10DC\u10E1 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D0\u10DB\u10D3\u10D4|\u10E5\u10E0\u10D8\u10E1\u10E2\u10D4\u10E8\u10DD\u10D1\u10D0\u10DB\u10D3\u10D4)/i,\n    /^(\u10E9\u10D5\u10D4\u10DC\u10D8 \u10EC\u10D4\u10DA\u10D7\u10D0\u10E6\u10E0\u10D8\u10EA\u10EE\u10D5\u10D8\u10D7|\u10E5\u10E0\u10D8\u10E1\u10E2\u10D4\u10E8\u10DD\u10D1\u10D8\u10D3\u10D0\u10DC)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]-(\u10DA\u10D8|\u10D4)? \u10D9\u10D5/i,\n  wide: /^[1234]-(\u10DA\u10D8|\u10D4)? \u10D9\u10D5\u10D0\u10E0\u10E2\u10D0\u10DA\u10D8/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  any: /^(\u10D8\u10D0|\u10D7\u10D4|\u10DB\u10D0|\u10D0\u10DE|\u10DB\u10E1|\u10D5\u10DC|\u10D5\u10DA|\u10D0\u10D2|\u10E1\u10D4|\u10DD\u10E5|\u10DC\u10DD|\u10D3\u10D4)/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^\u10D8\u10D0/i,\n    /^\u10D7/i,\n    /^\u10DB\u10D0\u10E0/i,\n    /^\u10D0\u10DE/i,\n    /^\u10DB\u10D0\u10D8/i,\n    /^\u10D8?\u10D5\u10DC/i,\n    /^\u10D8?\u10D5\u10DA/i,\n    /^\u10D0\u10D2/i,\n    /^\u10E1/i,\n    /^\u10DD/i,\n    /^\u10DC/i,\n    /^\u10D3/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u10D9\u10D5|\u10DD\u10E0|\u10E1\u10D0|\u10DD\u10D7|\u10EE\u10E3|\u10DE\u10D0|\u10E8\u10D0)/i,\n  short: /^(\u10D9\u10D5\u10D8|\u10DD\u10E0\u10E8|\u10E1\u10D0\u10DB|\u10DD\u10D7\u10EE|\u10EE\u10E3\u10D7|\u10DE\u10D0\u10E0|\u10E8\u10D0\u10D1)/i,\n  wide: /^(\u10D9\u10D5\u10D8\u10E0\u10D0|\u10DD\u10E0\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8|\u10E1\u10D0\u10DB\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8|\u10DD\u10D7\u10EE\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8|\u10EE\u10E3\u10D7\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8|\u10DE\u10D0\u10E0\u10D0\u10E1\u10D9\u10D4\u10D5\u10D8|\u10E8\u10D0\u10D1\u10D0\u10D7\u10D8)/i,\n};\nconst parseDayPatterns = {\n  any: [/^\u10D9\u10D5/i, /^\u10DD\u10E0/i, /^\u10E1\u10D0/i, /^\u10DD\u10D7/i, /^\u10EE\u10E3/i, /^\u10DE\u10D0/i, /^\u10E8\u10D0/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^([ap]\\.?\\s?m\\.?|\u10E8\u10E3\u10D0\u10E6|\u10D3\u10D8\u10DA)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^\u10E8\u10E3\u10D0\u10E6/i,\n    noon: /^\u10E8\u10E3\u10D0\u10D3\u10E6/i,\n    morning: /^\u10D3\u10D8\u10DA/i,\n    afternoon: /\u10DC\u10D0\u10E8\u10E3\u10D0\u10D3\u10E6\u10D4\u10D5\u10E1/i,\n    evening: /\u10E1\u10D0\u10E6\u10D0\u10DB\u10DD/i,\n    night: /\u10E6\u10D0\u10DB/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ka/_lib/formatDistance.js\";\nimport { formatLong } from \"./ka/_lib/formatLong.js\";\nimport { formatRelative } from \"./ka/_lib/formatRelative.js\";\nimport { localize } from \"./ka/_lib/localize.js\";\nimport { match } from \"./ka/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Georgian locale.\n * @language Georgian\n * @iso-639-2 geo\n * @author Lado Lomidze [@Landish](https://github.com/Landish)\n * @author Nick Shvelidze [@shvelo](https://github.com/shvelo)\n */\nexport const ka = {\n  code: \"ka\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ka;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    regular: {\n      one: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\",\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u0430\u0437\",\n    },\n    future: {\n      one: \"\u0431\u0456\u0440 \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  xSeconds: {\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0431\u04B1\u0440\u044B\u043D\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0431\u04B1\u0440\u044B\u043D\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0431\u04B1\u0440\u044B\u043D\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  halfAMinute: (options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"\u0436\u0430\u0440\u0442\u044B \u043C\u0438\u043D\u0443\u0442 \u0456\u0448\u0456\u043D\u0434\u0435\";\n      } else {\n        return \"\u0436\u0430\u0440\u0442\u044B \u043C\u0438\u043D\u0443\u0442 \u0431\u04B1\u0440\u044B\u043D\";\n      }\n    }\n\n    return \"\u0436\u0430\u0440\u0442\u044B \u043C\u0438\u043D\u0443\u0442\";\n  },\n\n  lessThanXMinutes: {\n    regular: {\n      one: \"1 \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\",\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u0430\u0437\",\n    },\n    future: {\n      one: \"\u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u043C \",\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u043C\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u043C\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u043C\",\n    },\n  },\n\n  xMinutes: {\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442 \u0431\u04B1\u0440\u044B\u043D\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442 \u0431\u04B1\u0440\u044B\u043D\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442 \u0431\u04B1\u0440\u044B\u043D\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  aboutXHours: {\n    regular: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\",\n    },\n    future: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  xHours: {\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0430\u0493\u0430\u0442\",\n      singularGenitive: \"{{count}} \u0441\u0430\u0493\u0430\u0442\",\n      pluralGenitive: \"{{count}} \u0441\u0430\u0493\u0430\u0442\",\n    },\n  },\n\n  xDays: {\n    regular: {\n      singularNominative: \"{{count}} \u043A\u04AF\u043D\",\n      singularGenitive: \"{{count}} \u043A\u04AF\u043D\",\n      pluralGenitive: \"{{count}} \u043A\u04AF\u043D\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u043A\u04AF\u043D\u043D\u0435\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u043A\u04AF\u043D\u043D\u0435\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u043A\u04AF\u043D\u043D\u0435\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  aboutXWeeks: {\n    type: \"weeks\",\n    one: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D 1 \u0430\u043F\u0442\u0430\",\n    other: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u043F\u0442\u0430\",\n  },\n\n  xWeeks: {\n    type: \"weeks\",\n    one: \"1 \u0430\u043F\u0442\u0430\",\n    other: \"{{count}} \u0430\u043F\u0442\u0430\",\n  },\n\n  aboutXMonths: {\n    regular: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\",\n    },\n    future: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0430\u0439\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  xMonths: {\n    regular: {\n      singularNominative: \"{{count}} \u0430\u0439\",\n      singularGenitive: \"{{count}} \u0430\u0439\",\n      pluralGenitive: \"{{count}} \u0430\u0439\",\n    },\n  },\n\n  aboutXYears: {\n    regular: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\",\n    },\n    future: {\n      singularNominative: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"\u0448\u0430\u043C\u0430\u043C\u0435\u043D {{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  xYears: {\n    regular: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n\n  overXYears: {\n    regular: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u0430\u0441\u0442\u0430\u043C\",\n    },\n  },\n\n  almostXYears: {\n    regular: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\u0493\u0430 \u0436\u0430\u049B\u044B\u043D\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\u0493\u0430 \u0436\u0430\u049B\u044B\u043D\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\u0493\u0430 \u0436\u0430\u049B\u044B\u043D\",\n    },\n    future: {\n      singularNominative: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      singularGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n      pluralGenitive: \"{{count}} \u0436\u044B\u043B\u0434\u0430\u043D \u043A\u0435\u0439\u0456\u043D\",\n    },\n  },\n};\n\nfunction declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one && count === 1) return scheme.one;\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nexport const formatDistance = (token, count, options) => {\n  const tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === \"function\") return tokenValue(options);\n\n  if (tokenValue.type === \"weeks\") {\n    return count === 1\n      ? tokenValue.one\n      : tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      if (tokenValue.future) {\n        return declension(tokenValue.future, count);\n      } else {\n        return declension(tokenValue.regular, count) + \" \u043A\u0435\u0439\u0456\u043D\";\n      }\n    } else {\n      if (tokenValue.past) {\n        return declension(tokenValue.past, count);\n      } else {\n        return declension(tokenValue.regular, count) + \" \u0431\u04B1\u0440\u044B\u043D\";\n      }\n    }\n  } else {\n    return declension(tokenValue.regular, count);\n  }\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y '\u0436.'\",\n  long: \"do MMMM y '\u0436.'\",\n  medium: \"d MMM y '\u0436.'\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst accusativeWeekdays = [\n  \"\u0436\u0435\u043A\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n  \"\u0434\u04AF\u0439\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n  \"\u0441\u0435\u0439\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n  \"\u0441\u04D9\u0440\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n  \"\u0431\u0435\u0439\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n  \"\u0436\u04B1\u043C\u0430\u0434\u0430\",\n  \"\u0441\u0435\u043D\u0431\u0456\u0434\u0435\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\u04E9\u0442\u043A\u0435\u043D \" + weekday + \" \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\";\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\" + weekday + \" \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\";\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\u043A\u0435\u043B\u0435\u0441\u0456 \" + weekday + \" \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\";\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'\u043A\u0435\u0448\u0435 \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\",\n  today: \"'\u0431\u04AF\u0433\u0456\u043D \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\",\n  tomorrow: \"'\u0435\u0440\u0442\u0435\u04A3 \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0431.\u0437.\u0434.\", \"\u0431.\u0437.\"],\n  abbreviated: [\"\u0431.\u0437.\u0434.\", \"\u0431.\u0437.\"],\n  wide: [\"\u0431\u0456\u0437\u0434\u0456\u04A3 \u0437\u0430\u043C\u0430\u043D\u044B\u043C\u044B\u0437\u0493\u0430 \u0434\u0435\u0439\u0456\u043D\", \"\u0431\u0456\u0437\u0434\u0456\u04A3 \u0437\u0430\u043C\u0430\u043D\u044B\u043C\u044B\u0437\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0448\u0456 \u0442\u043E\u049B.\", \"2-\u0448\u0456 \u0442\u043E\u049B.\", \"3-\u0448\u0456 \u0442\u043E\u049B.\", \"4-\u0448\u0456 \u0442\u043E\u049B.\"],\n  wide: [\"1-\u0448\u0456 \u0442\u043E\u049B\u0441\u0430\u043D\", \"2-\u0448\u0456 \u0442\u043E\u049B\u0441\u0430\u043D\", \"3-\u0448\u0456 \u0442\u043E\u049B\u0441\u0430\u043D\", \"4-\u0448\u0456 \u0442\u043E\u049B\u0441\u0430\u043D\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u049A\", \"\u0410\", \"\u041D\", \"\u0421\", \"\u041C\", \"\u041C\", \"\u0428\", \"\u0422\", \"\u049A\", \"\u049A\", \"\u049A\", \"\u0416\"],\n  abbreviated: [\n    \"\u049B\u0430\u04A3\",\n    \"\u0430\u049B\u043F\",\n    \"\u043D\u0430\u0443\",\n    \"\u0441\u04D9\u0443\",\n    \"\u043C\u0430\u043C\",\n    \"\u043C\u0430\u0443\",\n    \"\u0448\u0456\u043B\",\n    \"\u0442\u0430\u043C\",\n    \"\u049B\u044B\u0440\",\n    \"\u049B\u0430\u0437\",\n    \"\u049B\u0430\u0440\",\n    \"\u0436\u0435\u043B\",\n  ],\n\n  wide: [\n    \"\u049B\u0430\u04A3\u0442\u0430\u0440\",\n    \"\u0430\u049B\u043F\u0430\u043D\",\n    \"\u043D\u0430\u0443\u0440\u044B\u0437\",\n    \"\u0441\u04D9\u0443\u0456\u0440\",\n    \"\u043C\u0430\u043C\u044B\u0440\",\n    \"\u043C\u0430\u0443\u0441\u044B\u043C\",\n    \"\u0448\u0456\u043B\u0434\u0435\",\n    \"\u0442\u0430\u043C\u044B\u0437\",\n    \"\u049B\u044B\u0440\u043A\u04AF\u0439\u0435\u043A\",\n    \"\u049B\u0430\u0437\u0430\u043D\",\n    \"\u049B\u0430\u0440\u0430\u0448\u0430\",\n    \"\u0436\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D\",\n  ],\n};\nconst formattingMonthValues = {\n  narrow: [\"\u049A\", \"\u0410\", \"\u041D\", \"\u0421\", \"\u041C\", \"\u041C\", \"\u0428\", \"\u0422\", \"\u049A\", \"\u049A\", \"\u049A\", \"\u0416\"],\n  abbreviated: [\n    \"\u049B\u0430\u04A3\",\n    \"\u0430\u049B\u043F\",\n    \"\u043D\u0430\u0443\",\n    \"\u0441\u04D9\u0443\",\n    \"\u043C\u0430\u043C\",\n    \"\u043C\u0430\u0443\",\n    \"\u0448\u0456\u043B\",\n    \"\u0442\u0430\u043C\",\n    \"\u049B\u044B\u0440\",\n    \"\u049B\u0430\u0437\",\n    \"\u049B\u0430\u0440\",\n    \"\u0436\u0435\u043B\",\n  ],\n\n  wide: [\n    \"\u049B\u0430\u04A3\u0442\u0430\u0440\",\n    \"\u0430\u049B\u043F\u0430\u043D\",\n    \"\u043D\u0430\u0443\u0440\u044B\u0437\",\n    \"\u0441\u04D9\u0443\u0456\u0440\",\n    \"\u043C\u0430\u043C\u044B\u0440\",\n    \"\u043C\u0430\u0443\u0441\u044B\u043C\",\n    \"\u0448\u0456\u043B\u0434\u0435\",\n    \"\u0442\u0430\u043C\u044B\u0437\",\n    \"\u049B\u044B\u0440\u043A\u04AF\u0439\u0435\u043A\",\n    \"\u049B\u0430\u0437\u0430\u043D\",\n    \"\u049B\u0430\u0440\u0430\u0448\u0430\",\n    \"\u0436\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u0416\", \"\u0414\", \"\u0421\", \"\u0421\", \"\u0411\", \"\u0416\", \"\u0421\"],\n  short: [\"\u0436\u0441\", \"\u0434\u0441\", \"\u0441\u0441\", \"\u0441\u0440\", \"\u0431\u0441\", \"\u0436\u043C\", \"\u0441\u0431\"],\n  abbreviated: [\"\u0436\u0441\", \"\u0434\u0441\", \"\u0441\u0441\", \"\u0441\u0440\", \"\u0431\u0441\", \"\u0436\u043C\", \"\u0441\u0431\"],\n  wide: [\n    \"\u0436\u0435\u043A\u0441\u0435\u043D\u0431\u0456\",\n    \"\u0434\u04AF\u0439\u0441\u0435\u043D\u0431\u0456\",\n    \"\u0441\u0435\u0439\u0441\u0435\u043D\u0431\u0456\",\n    \"\u0441\u04D9\u0440\u0441\u0435\u043D\u0431\u0456\",\n    \"\u0431\u0435\u0439\u0441\u0435\u043D\u0431\u0456\",\n    \"\u0436\u04B1\u043C\u0430\",\n    \"\u0441\u0435\u043D\u0431\u0456\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0422\u0414\",\n    pm: \"\u0422\u041A\",\n    midnight: \"\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\",\n    noon: \"\u0442\u04AF\u0441\",\n    morning: \"\u0442\u0430\u04A3\",\n    afternoon: \"\u043A\u04AF\u043D\u0434\u0456\u0437\",\n    evening: \"\u043A\u0435\u0448\",\n    night: \"\u0442\u04AF\u043D\",\n  },\n  wide: {\n    am: \"\u0422\u0414\",\n    pm: \"\u0422\u041A\",\n    midnight: \"\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\",\n    noon: \"\u0442\u04AF\u0441\",\n    morning: \"\u0442\u0430\u04A3\",\n    afternoon: \"\u043A\u04AF\u043D\u0434\u0456\u0437\",\n    evening: \"\u043A\u0435\u0448\",\n    night: \"\u0442\u04AF\u043D\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0422\u0414\",\n    pm: \"\u0422\u041A\",\n    midnight: \"\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\u043D\u0434\u0430\",\n    noon: \"\u0442\u04AF\u0441\",\n    morning: \"\u0442\u0430\u04A3\",\n    afternoon: \"\u043A\u04AF\u043D\",\n    evening: \"\u043A\u0435\u0448\",\n    night: \"\u0442\u04AF\u043D\",\n  },\n  wide: {\n    am: \"\u0422\u0414\",\n    pm: \"\u0422\u041A\",\n    midnight: \"\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\u043D\u0434\u0430\",\n    noon: \"\u0442\u04AF\u0441\u0442\u0435\",\n    morning: \"\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3\",\n    afternoon: \"\u043A\u04AF\u043D\u0434\u0456\u0437\",\n    evening: \"\u043A\u0435\u0448\u0442\u0435\",\n    night: \"\u0442\u04AF\u043D\u0434\u0435\",\n  },\n};\n\nconst suffixes = {\n  0: \"-\u0448\u0456\",\n  1: \"-\u0448\u0456\",\n  2: \"-\u0448\u0456\",\n  3: \"-\u0448\u0456\",\n  4: \"-\u0448\u0456\",\n  5: \"-\u0448\u0456\",\n  6: \"-\u0448\u044B\",\n  7: \"-\u0448\u0456\",\n  8: \"-\u0448\u0456\",\n  9: \"-\u0448\u044B\",\n  10: \"-\u0448\u044B\",\n  20: \"-\u0448\u044B\",\n  30: \"-\u0448\u044B\",\n  40: \"-\u0448\u044B\",\n  50: \"-\u0448\u0456\",\n  60: \"-\u0448\u044B\",\n  70: \"-\u0448\u0456\",\n  80: \"-\u0448\u0456\",\n  90: \"-\u0448\u044B\",\n  100: \"-\u0448\u0456\",\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  const mod10 = number % 10;\n  const b = number >= 100 ? 100 : null;\n  const suffix =\n    suffixes[number] || suffixes[mod10] || (b && suffixes[b]) || \"\";\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(\u0448\u0456|\u0448\u044B))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u0431 )?\u0437\\.?\\s?\u0434\\.?)/i,\n  abbreviated: /^((\u0431 )?\u0437\\.?\\s?\u0434\\.?)/i,\n  wide: /^(\u0431\u0456\u0437\u0434\u0456\u04A3 \u0437\u0430\u043C\u0430\u043D\u044B\u043C\u044B\u0437\u0493\u0430 \u0434\u0435\u0439\u0456\u043D|\u0431\u0456\u0437\u0434\u0456\u04A3 \u0437\u0430\u043C\u0430\u043D\u044B\u043C\u044B\u0437|\u0431\u0456\u0437\u0434\u0456\u04A3 \u0437\u0430\u043C\u0430\u043D\u044B\u043C\u044B\u0437\u0434\u0430\u043D)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0431/i, /^\u0437/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?\u0448\u0456)? \u0442\u043E\u049B.?/i,\n  wide: /^[1234](-?\u0448\u0456)? \u0442\u043E\u049B\u0441\u0430\u043D/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u049B|\u0430|\u043D|\u0441|\u043C|\u043C\u0430\u0443|\u0448|\u0442|\u049B\u044B\u0440|\u049B\u0430\u0437|\u049B\u0430\u0440|\u0436)/i,\n  abbreviated: /^(\u049B\u0430\u04A3|\u0430\u049B\u043F|\u043D\u0430\u0443|\u0441\u04D9\u0443|\u043C\u0430\u043C|\u043C\u0430\u0443|\u0448\u0456\u043B|\u0442\u0430\u043C|\u049B\u044B\u0440|\u049B\u0430\u0437|\u049B\u0430\u0440|\u0436\u0435\u043B)/i,\n  wide: /^(\u049B\u0430\u04A3\u0442\u0430\u0440|\u0430\u049B\u043F\u0430\u043D|\u043D\u0430\u0443\u0440\u044B\u0437|\u0441\u04D9\u0443\u0456\u0440|\u043C\u0430\u043C\u044B\u0440|\u043C\u0430\u0443\u0441\u044B\u043C|\u0448\u0456\u043B\u0434\u0435|\u0442\u0430\u043C\u044B\u0437|\u049B\u044B\u0440\u043A\u04AF\u0439\u0435\u043A|\u049B\u0430\u0437\u0430\u043D|\u049B\u0430\u0440\u0430\u0448\u0430|\u0436\u0435\u043B\u0442\u043E\u049B\u0441\u0430\u043D)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u049B/i,\n    /^\u0430/i,\n    /^\u043D/i,\n    /^\u0441/i,\n    /^\u043C/i,\n    /^\u043C/i,\n    /^\u0448/i,\n    /^\u0442/i,\n    /^\u049B/i,\n    /^\u049B/i,\n    /^\u049B/i,\n    /^\u0436/i,\n  ],\n\n  abbreviated: [\n    /^\u049B\u0430\u04A3/i,\n    /^\u0430\u049B\u043F/i,\n    /^\u043D\u0430\u0443/i,\n    /^\u0441\u04D9\u0443/i,\n    /^\u043C\u0430\u043C/i,\n    /^\u043C\u0430\u0443/i,\n    /^\u0448\u0456\u043B/i,\n    /^\u0442\u0430\u043C/i,\n    /^\u049B\u044B\u0440/i,\n    /^\u049B\u0430\u0437/i,\n    /^\u049B\u0430\u0440/i,\n    /^\u0436\u0435\u043B/i,\n  ],\n\n  any: [\n    /^\u049B/i,\n    /^\u0430/i,\n    /^\u043D/i,\n    /^\u0441/i,\n    /^\u043C/i,\n    /^\u043C/i,\n    /^\u0448/i,\n    /^\u0442/i,\n    /^\u049B/i,\n    /^\u049B/i,\n    /^\u049B/i,\n    /^\u0436/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0436|\u0434|\u0441|\u0441|\u0431|\u0436|\u0441)/i,\n  short: /^(\u0436\u0441|\u0434\u0441|\u0441\u0441|\u0441\u0440|\u0431\u0441|\u0436\u043C|\u0441\u0431)/i,\n  wide: /^(\u0436\u0435\u043A\u0441\u0435\u043D\u0431\u0456|\u0434\u04AF\u0439\u0441\u0435\u043D\u0431\u0456|\u0441\u0435\u0439\u0441\u0435\u043D\u0431\u0456|\u0441\u04D9\u0440\u0441\u0435\u043D\u0431\u0456|\u0431\u0435\u0439\u0441\u0435\u043D\u0431\u0456|\u0436\u04B1\u043C\u0430|\u0441\u0435\u043D\u0431\u0456)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0436/i, /^\u0434/i, /^\u0441/i, /^\u0441/i, /^\u0431/i, /^\u0436/i, /^\u0441/i],\n  short: [/^\u0436\u0441/i, /^\u0434\u0441/i, /^\u0441\u0441/i, /^\u0441\u0440/i, /^\u0431\u0441/i, /^\u0436\u043C/i, /^\u0441\u0431/i],\n  any: [\n    /^\u0436[\u0435\u043A]/i,\n    /^\u0434[\u04AF\u0439]/i,\n    /^\u0441e[\u0439]/i,\n    /^\u0441\u04D9[\u0440]/i,\n    /^\u0431[\u0435\u0439]/i,\n    /^\u0436[\u04B1\u043C]/i,\n    /^\u0441\u0435[\u043D]/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^\u0422\\.?\\s?[\u0414\u041A]\\.?|\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\u043D\u0434\u0430|((\u0442\u04AF\u0441\u0442\u0435|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u0434\u0430|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u043C\u0435\u043D|\u0442\u0430\u04A3|\u043A\u04AF\u043D\u0434\u0456\u0437|\u043A\u04AF\u043D|\u043A\u0435\u0448\u0442\u0435|\u043A\u0435\u0448|\u0442\u04AF\u043D\u0434\u0435|\u0442\u04AF\u043D)\\.?)/i,\n  wide: /^\u0422\\.?\\s?[\u0414\u041A]\\.?|\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\u043D\u0434\u0430|((\u0442\u04AF\u0441\u0442\u0435|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u0434\u0430|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u043C\u0435\u043D|\u0442\u0430\u04A3|\u043A\u04AF\u043D\u0434\u0456\u0437|\u043A\u04AF\u043D|\u043A\u0435\u0448\u0442\u0435|\u043A\u0435\u0448|\u0442\u04AF\u043D\u0434\u0435|\u0442\u04AF\u043D)\\.?)/i,\n  any: /^\u0422\\.?\\s?[\u0414\u041A]\\.?|\u0442\u04AF\u043D \u043E\u0440\u0442\u0430\u0441\u044B\u043D\u0434\u0430|((\u0442\u04AF\u0441\u0442\u0435|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u0434\u0430|\u0442\u0430\u04A3\u0435\u0440\u0442\u0435\u04A3|\u0442\u0430\u04A3\u043C\u0435\u043D|\u0442\u0430\u04A3|\u043A\u04AF\u043D\u0434\u0456\u0437|\u043A\u04AF\u043D|\u043A\u0435\u0448\u0442\u0435|\u043A\u0435\u0448|\u0442\u04AF\u043D\u0434\u0435|\u0442\u04AF\u043D)\\.?)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0422\u0414/i,\n    pm: /^\u0422\u041A/i,\n    midnight: /^\u0442\u04AF\u043D \u043E\u0440\u0442\u0430/i,\n    noon: /^\u043A\u04AF\u043D\u0434\u0456\u0437/i,\n    morning: /\u0442\u0430\u04A3/i,\n    afternoon: /\u0442\u04AF\u0441/i,\n    evening: /\u043A\u0435\u0448/i,\n    night: /\u0442\u04AF\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./kk/_lib/formatDistance.js\";\nimport { formatLong } from \"./kk/_lib/formatLong.js\";\nimport { formatRelative } from \"./kk/_lib/formatRelative.js\";\nimport { localize } from \"./kk/_lib/localize.js\";\nimport { match } from \"./kk/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Kazakh locale.\n * @language Kazakh\n * @iso-639-2 kaz\n * @author Nikita Bayev [@drugoi](https://github.com/drugoi)\n */\nexport const kk = {\n  code: \"kk\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default kk;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: \"\u178F\u17B7\u1785\u1787\u17B6\u1784 {{count}} \u179C\u17B7\u1793\u17B6\u1791\u17B8\",\n  xSeconds: \"{{count}} \u179C\u17B7\u1793\u17B6\u1791\u17B8\",\n  halfAMinute: \"\u1780\u1793\u17D2\u179B\u17C7\u1793\u17B6\u1791\u17B8\",\n  lessThanXMinutes: \"\u178F\u17B7\u1785\u1787\u17B6\u1784 {{count}} \u1793\u17B6\u1791\u17B8\",\n  xMinutes: \"{{count}} \u1793\u17B6\u1791\u17B8\",\n  aboutXHours: \"\u1794\u17D2\u179A\u17A0\u17C2\u179B {{count}} \u1798\u17C9\u17C4\u1784\",\n  xHours: \"{{count}} \u1798\u17C9\u17C4\u1784\",\n  xDays: \"{{count}} \u1790\u17D2\u1784\u17C3\",\n  aboutXWeeks: \"\u1794\u17D2\u179A\u17A0\u17C2\u179B {{count}} \u179F\u1794\u17D2\u178F\u17B6\u17A0\u17CD\",\n  xWeeks: \"{{count}} \u179F\u1794\u17D2\u178F\u17B6\u17A0\u17CD\",\n  aboutXMonths: \"\u1794\u17D2\u179A\u17A0\u17C2\u179B {{count}} \u1781\u17C2\",\n  xMonths: \"{{count}} \u1781\u17C2\",\n  aboutXYears: \"\u1794\u17D2\u179A\u17A0\u17C2\u179B {{count}} \u1786\u17D2\u1793\u17B6\u17C6\",\n  xYears: \"{{count}} \u1786\u17D2\u1793\u17B6\u17C6\",\n  overXYears: \"\u1787\u17B6\u1784 {{count}} \u1786\u17D2\u1793\u17B6\u17C6\",\n  almostXYears: \"\u1787\u17B7\u178F {{count}} \u1786\u17D2\u1793\u17B6\u17C6\",\n};\n\nexport const formatDistance = (token, count, options) => {\n  const tokenValue = formatDistanceLocale[token];\n\n  let result = tokenValue;\n\n  if (typeof count === \"number\") {\n    result = result.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u1780\u17D2\u1793\u17BB\u1784\u179A\u1799\u17C8\u1796\u17C1\u179B \" + result;\n    } else {\n      return result + \"\u1798\u17BB\u1793\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a\",\n  long: \"h:mm:ss a\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u1798\u17C9\u17C4\u1784' {{time}}\",\n  long: \"{{date}} '\u1798\u17C9\u17C4\u1784' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u1790\u17D2\u1784\u17C3'eeee'\u179F\u200B\u1794\u17D2\u178F\u17B6\u200B\u17A0\u17CD\u200B\u1798\u17BB\u1793\u1798\u17C9\u17C4\u1784' p\",\n  yesterday: \"'\u1798\u17D2\u179F\u17B7\u179B\u1798\u17B7\u1789\u1793\u17C5\u1798\u17C9\u17C4\u1784' p\",\n  today: \"'\u1790\u17D2\u1784\u17C3\u1793\u17C1\u17C7\u1798\u17C9\u17C4\u1784' p\",\n  tomorrow: \"'\u1790\u17D2\u1784\u17C3\u179F\u17D2\u17A2\u17C2\u1780\u1798\u17C9\u17C4\u1784' p\",\n  nextWeek: \"'\u1790\u17D2\u1784\u17C3'eeee'\u179F\u200B\u1794\u17D2\u178F\u17B6\u200B\u17A0\u17CD\u200B\u1780\u17D2\u179A\u17C4\u1799\u1798\u17C9\u17C4\u1784' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u1798.\u1782\u179F\", \"\u1782\u179F\"],\n  abbreviated: [\"\u1798\u17BB\u1793\u1782.\u179F\", \"\u1782.\u179F\"],\n  wide: [\"\u1798\u17BB\u1793\u1782\u17D2\u179A\u17B7\u179F\u17D2\u178F\u179F\u1780\u179A\u17B6\u1787\", \"\u1793\u17C3\u1782\u17D2\u179A\u17B7\u179F\u17D2\u178F\u179F\u1780\u179A\u17B6\u1787\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"\u178F\u17D2\u179A\u17B8\u1798\u17B6\u179F\u1791\u17B8 1\", \"\u178F\u17D2\u179A\u17B8\u1798\u17B6\u179F\u1791\u17B8 2\", \"\u178F\u17D2\u179A\u17B8\u1798\u17B6\u179F\u1791\u17B8 3\", \"\u178F\u17D2\u179A\u17B8\u1798\u17B6\u179F\u1791\u17B8 4\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u1798.\u1780\",\n    \"\u1780.\u1798\",\n    \"\u1798\u17B7\",\n    \"\u1798.\u179F\",\n    \"\u17A7.\u179F\",\n    \"\u1798.\u1790\",\n    \"\u1780.\u178A\",\n    \"\u179F\u17B8\",\n    \"\u1780\u1789\",\n    \"\u178F\u17BB\",\n    \"\u179C\u17B7\",\n    \"\u1792\",\n  ],\n\n  abbreviated: [\n    \"\u1798\u1780\u179A\u17B6\",\n    \"\u1780\u17BB\u1798\u17D2\u1797\u17C8\",\n    \"\u1798\u17B8\u1793\u17B6\",\n    \"\u1798\u17C1\u179F\u17B6\",\n    \"\u17A7\u179F\u1797\u17B6\",\n    \"\u1798\u17B7\u1790\u17BB\u1793\u17B6\",\n    \"\u1780\u1780\u17D2\u1780\u178A\u17B6\",\n    \"\u179F\u17B8\u17A0\u17B6\",\n    \"\u1780\u1789\u17D2\u1789\u17B6\",\n    \"\u178F\u17BB\u179B\u17B6\",\n    \"\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6\",\n    \"\u1792\u17D2\u1793\u17BC\",\n  ],\n\n  wide: [\n    \"\u1798\u1780\u179A\u17B6\",\n    \"\u1780\u17BB\u1798\u17D2\u1797\u17C8\",\n    \"\u1798\u17B8\u1793\u17B6\",\n    \"\u1798\u17C1\u179F\u17B6\",\n    \"\u17A7\u179F\u1797\u17B6\",\n    \"\u1798\u17B7\u1790\u17BB\u1793\u17B6\",\n    \"\u1780\u1780\u17D2\u1780\u178A\u17B6\",\n    \"\u179F\u17B8\u17A0\u17B6\",\n    \"\u1780\u1789\u17D2\u1789\u17B6\",\n    \"\u178F\u17BB\u179B\u17B6\",\n    \"\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6\",\n    \"\u1792\u17D2\u1793\u17BC\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u17A2\u17B6\", \"\u1785\", \"\u17A2\", \"\u1796\", \"\u1796\u17D2\u179A\", \"\u179F\u17BB\", \"\u179F\"],\n  short: [\"\u17A2\u17B6\", \"\u1785\", \"\u17A2\", \"\u1796\", \"\u1796\u17D2\u179A\", \"\u179F\u17BB\", \"\u179F\"],\n  abbreviated: [\"\u17A2\u17B6\", \"\u1785\", \"\u17A2\", \"\u1796\", \"\u1796\u17D2\u179A\", \"\u179F\u17BB\", \"\u179F\"],\n  wide: [\"\u17A2\u17B6\u1791\u17B7\u178F\u17D2\u1799\", \"\u1785\u1793\u17D2\u1791\", \"\u17A2\u1784\u17D2\u1782\u17B6\u179A\", \"\u1796\u17BB\u1792\", \"\u1796\u17D2\u179A\u17A0\u179F\u17D2\u1794\u178F\u17B7\u17CD\", \"\u179F\u17BB\u1780\u17D2\u179A\", \"\u179F\u17C5\u179A\u17CD\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n  abbreviated: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n  wide: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n  abbreviated: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n  wide: {\n    am: \"\u1796\u17D2\u179A\u17B9\u1780\",\n    pm: \"\u179B\u17D2\u1784\u17B6\u1785\",\n    midnight: \"\u200B\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A\",\n    noon: \"\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB\",\n    morning: \"\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780\",\n    afternoon: \"\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B\",\n    evening: \"\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785\",\n    night: \"\u1796\u17C1\u179B\u1799\u1794\u17CB\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _) => {\n  const number = Number(dirtyNumber);\n  return number.toString();\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u1798\\.)?\u1782\u179F/i,\n  abbreviated: /^(\u1798\u17BB\u1793)?\u1782\\.\u179F/i,\n  wide: /^(\u1798\u17BB\u1793|\u1793\u17C3)\u1782\u17D2\u179A\u17B7\u179F\u17D2\u178F\u179F\u1780\u179A\u17B6\u1787/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u1798|\u1798\u17BB\u1793)\u1782\\.?\u179F/i, /^(\u1793\u17C3)?\u1782\\.?\u179F/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^(\u178F\u17D2\u179A\u17B8\u1798\u17B6\u179F)(\u1791\u17B8)?\\s?[1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u1798\\.\u1780|\u1780\\.\u1798|\u1798\u17B7|\u1798\\.\u179F|\u17A7\\.\u179F|\u1798\\.\u1790|\u1780\\.\u178A|\u179F\u17B8|\u1780\u1789|\u178F\u17BB|\u179C\u17B7|\u1792)/i,\n  abbreviated:\n    /^(\u1798\u1780\u179A\u17B6|\u1780\u17BB\u1798\u17D2\u1797\u17C8|\u1798\u17B8\u1793\u17B6|\u1798\u17C1\u179F\u17B6|\u17A7\u179F\u1797\u17B6|\u1798\u17B7\u1790\u17BB\u1793\u17B6|\u1780\u1780\u17D2\u1780\u178A\u17B6|\u179F\u17B8\u17A0\u17B6|\u1780\u1789\u17D2\u1789\u17B6|\u178F\u17BB\u179B\u17B6|\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6|\u1792\u17D2\u1793\u17BC)/i,\n  wide: /^(\u1798\u1780\u179A\u17B6|\u1780\u17BB\u1798\u17D2\u1797\u17C8|\u1798\u17B8\u1793\u17B6|\u1798\u17C1\u179F\u17B6|\u17A7\u179F\u1797\u17B6|\u1798\u17B7\u1790\u17BB\u1793\u17B6|\u1780\u1780\u17D2\u1780\u178A\u17B6|\u179F\u17B8\u17A0\u17B6|\u1780\u1789\u17D2\u1789\u17B6|\u178F\u17BB\u179B\u17B6|\u179C\u17B7\u1785\u17D2\u1786\u17B7\u1780\u17B6|\u1792\u17D2\u1793\u17BC)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u1798\\.\u1780/i,\n    /^\u1780\\.\u1798/i,\n    /^\u1798\u17B7/i,\n    /^\u1798\\.\u179F/i,\n    /^\u17A7\\.\u179F/i,\n    /^\u1798\\.\u1790/i,\n    /^\u1780\\.\u178A/i,\n    /^\u179F\u17B8/i,\n    /^\u1780\u1789/i,\n    /^\u178F\u17BB/i,\n    /^\u179C\u17B7/i,\n    /^\u1792/i,\n  ],\n\n  any: [\n    /^\u1798\u1780/i,\n    /^\u1780\u17BB/i,\n    /^\u1798\u17B8\u1793/i,\n    /^\u1798\u17C1/i,\n    /^\u17A7\u179F/i,\n    /^\u1798\u17B7\u1790/i,\n    /^\u1780\u1780/i,\n    /^\u179F\u17B8/i,\n    /^\u1780\u1789/i,\n    /^\u178F\u17BB/i,\n    /^\u179C\u17B7\u1785/i,\n    /^\u1792/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u17A2\u17B6|\u1785|\u17A2|\u1796|\u1796\u17D2\u179A|\u179F\u17BB|\u179F)/i,\n  short: /^(\u17A2\u17B6|\u1785|\u17A2|\u1796|\u1796\u17D2\u179A|\u179F\u17BB|\u179F)/i,\n  abbreviated: /^(\u17A2\u17B6|\u1785|\u17A2|\u1796|\u1796\u17D2\u179A|\u179F\u17BB|\u179F)/i,\n  wide: /^(\u17A2\u17B6\u1791\u17B7\u178F\u17D2\u1799|\u1785\u1793\u17D2\u1791|\u17A2\u1784\u17D2\u1782\u17B6\u179A|\u1796\u17BB\u1792|\u1796\u17D2\u179A\u17A0\u179F\u17D2\u1794\u178F\u17B7\u17CD|\u179F\u17BB\u1780\u17D2\u179A|\u179F\u17C5\u179A\u17CD)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u17A2\u17B6/i, /^\u1785/i, /^\u17A2/i, /^\u1796/i, /^\u1796\u17D2\u179A/i, /^\u179F\u17BB/i, /^\u179F/i],\n  any: [/^\u17A2\u17B6/i, /^\u1785/i, /^\u17A2/i, /^\u1796/i, /^\u1796\u17D2\u179A/i, /^\u179F\u17BB/i, /^\u179F\u17C5/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(\u1796\u17D2\u179A\u17B9\u1780|\u179B\u17D2\u1784\u17B6\u1785|\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780|\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB|\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785|\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B|\u1796\u17C1\u179B\u1799\u1794\u17CB|\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A)/i,\n  any: /^(\u1796\u17D2\u179A\u17B9\u1780|\u179B\u17D2\u1784\u17B6\u1785|\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780|\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB|\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785|\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B|\u1796\u17C1\u179B\u1799\u1794\u17CB|\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A)/i,\n};\n\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u1796\u17D2\u179A\u17B9\u1780/i,\n    pm: /^\u179B\u17D2\u1784\u17B6\u1785/i,\n    midnight: /^\u1796\u17C1\u179B\u1780\u178E\u17D2\u178A\u17B6\u179B\u17A2\u1792\u17D2\u179A\u17B6\u178F\u17D2\u179A/i,\n    noon: /^\u1796\u17C1\u179B\u1790\u17D2\u1784\u17C3\u178F\u17D2\u179A\u1784\u17CB/i,\n    morning: /\u1796\u17C1\u179B\u1796\u17D2\u179A\u17B9\u1780/i,\n    afternoon: /\u1796\u17C1\u179B\u179A\u179F\u17C0\u179B/i,\n    evening: /\u1796\u17C1\u179B\u179B\u17D2\u1784\u17B6\u1785/i,\n    night: /\u1796\u17C1\u179B\u1799\u1794\u17CB/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./km/_lib/formatDistance.js\";\nimport { formatLong } from \"./km/_lib/formatLong.js\";\nimport { formatRelative } from \"./km/_lib/formatRelative.js\";\nimport { localize } from \"./km/_lib/localize.js\";\nimport { match } from \"./km/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Khmer locale (Cambodian).\n * @language Khmer\n * @iso-639-2 khm\n * @author Seanghay Yath [@seanghay](https://github.com/seanghay)\n */\nexport const km = {\n  code: \"km\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default km;\n", "// note: no implementation for weeks\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      default: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      future: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      past: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      future: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      past: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n    },\n  },\n\n  xSeconds: {\n    one: {\n      default: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\",\n      future: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0CA8\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CC1\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD\u200C\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0CB8\u0CC6\u0C95\u0CC6\u0C82\u0CA1\u0CCD \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  halfAMinute: {\n    other: {\n      default: \"\u0C85\u0CB0\u0CCD\u0CA7 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\",\n      future: \"\u0C85\u0CB0\u0CCD\u0CA7 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0C85\u0CB0\u0CCD\u0CA7 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0CA6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  lessThanXMinutes: {\n    one: {\n      default: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      future: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      past: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      future: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n      past: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C95\u0CCD\u0C95\u0CBF\u0C82\u0CA4 \u0C95\u0CA1\u0CBF\u0CAE\u0CC6\",\n    },\n  },\n\n  xMinutes: {\n    one: {\n      default: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\",\n      future: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0CA6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0CA8\u0CBF\u0CAE\u0CBF\u0CB7\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  aboutXHours: {\n    one: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0C97\u0C82\u0C9F\u0CC6\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0C97\u0C82\u0C9F\u0CC6\u0CAF\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0C97\u0C82\u0C9F\u0CC6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3\u0CC1\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  xHours: {\n    one: {\n      default: \"1 \u0C97\u0C82\u0C9F\u0CC6\",\n      future: \"1 \u0C97\u0C82\u0C9F\u0CC6\u0CAF\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0C97\u0C82\u0C9F\u0CC6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0C97\u0C82\u0C9F\u0CC6\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  xDays: {\n    one: {\n      default: \"1 \u0CA6\u0CBF\u0CA8\",\n      future: \"1 \u0CA6\u0CBF\u0CA8\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0CA6\u0CBF\u0CA8\u0CA6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CA6\u0CBF\u0CA8\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0CA6\u0CBF\u0CA8\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0CA6\u0CBF\u0CA8\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  // TODO\n  // aboutXWeeks: {},\n\n  // TODO\n  // xWeeks: {},\n\n  aboutXMonths: {\n    one: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  xMonths: {\n    one: {\n      default: \"1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\",\n      future: \"1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0CA4\u0CBF\u0C82\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0CA4\u0CBF\u0C82\u0C97\u0CB3\u0CC1\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  aboutXYears: {\n    one: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CB5\u0CB0\u0CCD\u0CB7\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CC1\",\n      future: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CB8\u0CC1\u0CAE\u0CBE\u0CB0\u0CC1 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  xYears: {\n    one: {\n      default: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\",\n      future: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CC1\",\n      future: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3 \u0CB9\u0CBF\u0C82\u0CA6\u0CC6\",\n    },\n  },\n\n  overXYears: {\n    one: {\n      default: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6 \u0CAE\u0CC7\u0CB2\u0CC6\",\n      future: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6 \u0CAE\u0CC7\u0CB2\u0CC6\",\n      past: \"1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6 \u0CAE\u0CC7\u0CB2\u0CC6\",\n    },\n    other: {\n      default: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3 \u0CAE\u0CC7\u0CB2\u0CC6\",\n      future: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3 \u0CAE\u0CC7\u0CB2\u0CC6\",\n      past: \"{{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3 \u0CAE\u0CC7\u0CB2\u0CC6\",\n    },\n  },\n\n  almostXYears: {\n    one: {\n      default: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      future: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 1 \u0CB5\u0CB0\u0CCD\u0CB7\u0CA6\u0CB2\u0CCD\u0CB2\u0CBF\",\n    },\n    other: {\n      default: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      future: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n      past: \"\u0CAC\u0CB9\u0CC1\u0CA4\u0CC7\u0C95 {{count}} \u0CB5\u0CB0\u0CCD\u0CB7\u0C97\u0CB3\u0CB2\u0CCD\u0CB2\u0CBF\",\n    },\n  },\n};\n\nfunction getResultByTense(parentToken, options) {\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return parentToken.future;\n    } else {\n      return parentToken.past;\n    }\n  }\n  return parentToken.default;\n}\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n\n  if (tokenValue.one && count === 1) {\n    result = getResultByTense(tokenValue.one, options);\n  } else {\n    result = getResultByTense(tokenValue.other, options);\n  }\n\n  return result.replace(\"{{count}}\", String(count));\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html\n\nconst dateFormats = {\n  full: \"EEEE, MMMM d, y\", // CLDR 1816\n  long: \"MMMM d, y\", // CLDR 1817\n  medium: \"MMM d, y\", // CLDR 1818\n  short: \"d/M/yy\", // CLDR 1819\n};\n\nconst timeFormats = {\n  full: \"hh:mm:ss a zzzz\", // CLDR 1820\n  long: \"hh:mm:ss a z\", // CLDR 1821\n  medium: \"hh:mm:ss a\", // CLDR 1822\n  short: \"hh:mm a\", // CLDR 1823\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\", // CLDR 1824\n  long: \"{{date}} {{time}}\", // CLDR 1825\n  medium: \"{{date}} {{time}}\", // CLDR 1826\n  short: \"{{date}} {{time}}\", // CLDR 1827\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0C95\u0CB3\u0CC6\u0CA6' eeee p '\u0C95\u0CCD\u0C95\u0CC6'\",\n  yesterday: \"'\u0CA8\u0CBF\u0CA8\u0CCD\u0CA8\u0CC6' p '\u0C95\u0CCD\u0C95\u0CC6'\",\n  today: \"'\u0C87\u0C82\u0CA6\u0CC1' p '\u0C95\u0CCD\u0C95\u0CC6'\",\n  tomorrow: \"'\u0CA8\u0CBE\u0CB3\u0CC6' p '\u0C95\u0CCD\u0C95\u0CC6'\",\n  nextWeek: \"eeee p '\u0C95\u0CCD\u0C95\u0CC6'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html\n\nconst eraValues = {\n  narrow: [\"\u0C95\u0CCD\u0CB0\u0CBF.\u0CAA\u0CC2\", \"\u0C95\u0CCD\u0CB0\u0CBF.\u0CB6\"],\n  abbreviated: [\"\u0C95\u0CCD\u0CB0\u0CBF.\u0CAA\u0CC2\", \"\u0C95\u0CCD\u0CB0\u0CBF.\u0CB6\"], // CLDR #1618, #1620\n  wide: [\"\u0C95\u0CCD\u0CB0\u0CBF\u0CB8\u0CCD\u0CA4 \u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\", \"\u0C95\u0CCD\u0CB0\u0CBF\u0CB8\u0CCD\u0CA4 \u0CB6\u0C95\"], // CLDR #1614, #1616\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u0CA4\u0CCD\u0CB0\u0CC8 1\", \"\u0CA4\u0CCD\u0CB0\u0CC8 2\", \"\u0CA4\u0CCD\u0CB0\u0CC8 3\", \"\u0CA4\u0CCD\u0CB0\u0CC8 4\"], // CLDR #1630 - #1638\n  wide: [\"1\u0CA8\u0CC7 \u0CA4\u0CCD\u0CB0\u0CC8\u0CAE\u0CBE\u0CB8\u0CBF\u0C95\", \"2\u0CA8\u0CC7 \u0CA4\u0CCD\u0CB0\u0CC8\u0CAE\u0CBE\u0CB8\u0CBF\u0C95\", \"3\u0CA8\u0CC7 \u0CA4\u0CCD\u0CB0\u0CC8\u0CAE\u0CBE\u0CB8\u0CBF\u0C95\", \"4\u0CA8\u0CC7 \u0CA4\u0CCD\u0CB0\u0CC8\u0CAE\u0CBE\u0CB8\u0CBF\u0C95\"],\n  // CLDR #1622 - #1629\n};\n\n// CLDR #1646 - #1717\nconst monthValues = {\n  narrow: [\"\u0C9C\", \"\u0CAB\u0CC6\", \"\u0CAE\u0CBE\", \"\u0C8F\", \"\u0CAE\u0CC7\", \"\u0C9C\u0CC2\", \"\u0C9C\u0CC1\", \"\u0C86\", \"\u0CB8\u0CC6\", \"\u0C85\", \"\u0CA8\", \"\u0CA1\u0CBF\"],\n\n  abbreviated: [\n    \"\u0C9C\u0CA8\",\n    \"\u0CAB\u0CC6\u0CAC\u0CCD\u0CB0\",\n    \"\u0CAE\u0CBE\u0CB0\u0CCD\u0C9A\u0CCD\",\n    \"\u0C8F\u0CAA\u0CCD\u0CB0\u0CBF\",\n    \"\u0CAE\u0CC7\",\n    \"\u0C9C\u0CC2\u0CA8\u0CCD\",\n    \"\u0C9C\u0CC1\u0CB2\u0CC8\",\n    \"\u0C86\u0C97\",\n    \"\u0CB8\u0CC6\u0CAA\u0CCD\u0C9F\u0CC6\u0C82\",\n    \"\u0C85\u0C95\u0CCD\u0C9F\u0CCB\",\n    \"\u0CA8\u0CB5\u0CC6\u0C82\",\n    \"\u0CA1\u0CBF\u0CB8\u0CC6\u0C82\",\n  ],\n\n  wide: [\n    \"\u0C9C\u0CA8\u0CB5\u0CB0\u0CBF\",\n    \"\u0CAB\u0CC6\u0CAC\u0CCD\u0CB0\u0CB5\u0CB0\u0CBF\",\n    \"\u0CAE\u0CBE\u0CB0\u0CCD\u0C9A\u0CCD\",\n    \"\u0C8F\u0CAA\u0CCD\u0CB0\u0CBF\u0CB2\u0CCD\",\n    \"\u0CAE\u0CC7\",\n    \"\u0C9C\u0CC2\u0CA8\u0CCD\",\n    \"\u0C9C\u0CC1\u0CB2\u0CC8\",\n    \"\u0C86\u0C97\u0CB8\u0CCD\u0C9F\u0CCD\",\n    \"\u0CB8\u0CC6\u0CAA\u0CCD\u0C9F\u0CC6\u0C82\u0CAC\u0CB0\u0CCD\",\n    \"\u0C85\u0C95\u0CCD\u0C9F\u0CCB\u0CAC\u0CB0\u0CCD\",\n    \"\u0CA8\u0CB5\u0CC6\u0C82\u0CAC\u0CB0\u0CCD\",\n    \"\u0CA1\u0CBF\u0CB8\u0CC6\u0C82\u0CAC\u0CB0\u0CCD\",\n  ],\n};\n\n// CLDR #1718 - #1773\nconst dayValues = {\n  narrow: [\"\u0CAD\u0CBE\", \"\u0CB8\u0CCB\", \"\u0CAE\u0C82\", \"\u0CAC\u0CC1\", \"\u0C97\u0CC1\", \"\u0CB6\u0CC1\", \"\u0CB6\"],\n  short: [\"\u0CAD\u0CBE\u0CA8\u0CC1\", \"\u0CB8\u0CCB\u0CAE\", \"\u0CAE\u0C82\u0C97\u0CB3\", \"\u0CAC\u0CC1\u0CA7\", \"\u0C97\u0CC1\u0CB0\u0CC1\", \"\u0CB6\u0CC1\u0C95\u0CCD\u0CB0\", \"\u0CB6\u0CA8\u0CBF\"],\n  abbreviated: [\"\u0CAD\u0CBE\u0CA8\u0CC1\", \"\u0CB8\u0CCB\u0CAE\", \"\u0CAE\u0C82\u0C97\u0CB3\", \"\u0CAC\u0CC1\u0CA7\", \"\u0C97\u0CC1\u0CB0\u0CC1\", \"\u0CB6\u0CC1\u0C95\u0CCD\u0CB0\", \"\u0CB6\u0CA8\u0CBF\"],\n  wide: [\n    \"\u0CAD\u0CBE\u0CA8\u0CC1\u0CB5\u0CBE\u0CB0\",\n    \"\u0CB8\u0CCB\u0CAE\u0CB5\u0CBE\u0CB0\",\n    \"\u0CAE\u0C82\u0C97\u0CB3\u0CB5\u0CBE\u0CB0\",\n    \"\u0CAC\u0CC1\u0CA7\u0CB5\u0CBE\u0CB0\",\n    \"\u0C97\u0CC1\u0CB0\u0CC1\u0CB5\u0CBE\u0CB0\",\n    \"\u0CB6\u0CC1\u0C95\u0CCD\u0CB0\u0CB5\u0CBE\u0CB0\",\n    \"\u0CB6\u0CA8\u0CBF\u0CB5\u0CBE\u0CB0\",\n  ],\n};\n\n// CLDR #1774 - #1815\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8\",\n    pm: \"\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CB9\u0CCD\u0CA8\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CB9\u0CCD\u0CA8\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n  abbreviated: {\n    am: \"\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8\",\n    pm: \"\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n  wide: {\n    am: \"\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8\",\n    pm: \"\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0CAA\u0CC2\",\n    pm: \"\u0C85\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n  abbreviated: {\n    am: \"\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8\",\n    pm: \"\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF \u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n  wide: {\n    am: \"\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8\",\n    pm: \"\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8\",\n    midnight: \"\u0CAE\u0CA7\u0CCD\u0CAF \u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n    noon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    morning: \"\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6\",\n    afternoon: \"\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9\",\n    evening: \"\u0CB8\u0C82\u0C9C\u0CC6\",\n    night: \"\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u0CA8\u0CC7\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u0CA8\u0CC7|\u0CA8\u0CC6)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0C95\u0CCD\u0CB0\u0CBF.\u0CAA\u0CC2|\u0C95\u0CCD\u0CB0\u0CBF.\u0CB6)/i,\n  abbreviated: /^(\u0C95\u0CCD\u0CB0\u0CBF\\.?\\s?\u0CAA\u0CC2\\.?|\u0C95\u0CCD\u0CB0\u0CBF\\.?\\s?\u0CB6\\.?|\u0CAA\u0CCD\u0CB0\\.?\\s?\u0CB6\\.?)/i,\n  wide: /^(\u0C95\u0CCD\u0CB0\u0CBF\u0CB8\u0CCD\u0CA4 \u0CAA\u0CC2\u0CB0\u0CCD\u0CB5|\u0C95\u0CCD\u0CB0\u0CBF\u0CB8\u0CCD\u0CA4 \u0CB6\u0C95|\u0CAA\u0CCD\u0CB0\u0CB8\u0C95\u0CCD\u0CA4 \u0CB6\u0C95)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0CAA\u0CC2/i, /^(\u0CB6|\u0CAA\u0CCD\u0CB0)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0CA4\u0CCD\u0CB0\u0CC8[1234]|\u0CA4\u0CCD\u0CB0\u0CC8 [1234]| [1234]\u0CA4\u0CCD\u0CB0\u0CC8/i,\n  wide: /^[1234](\u0CA8\u0CC7)? \u0CA4\u0CCD\u0CB0\u0CC8\u0CAE\u0CBE\u0CB8\u0CBF\u0C95/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u0C9C\u0CC2|\u0C9C\u0CC1|\u0C9C|\u0CAB\u0CC6|\u0CAE\u0CBE|\u0C8F|\u0CAE\u0CC7|\u0C86|\u0CB8\u0CC6|\u0C85|\u0CA8|\u0CA1\u0CBF)/i,\n  abbreviated:\n    /^(\u0C9C\u0CA8|\u0CAB\u0CC6\u0CAC\u0CCD\u0CB0|\u0CAE\u0CBE\u0CB0\u0CCD\u0C9A\u0CCD|\u0C8F\u0CAA\u0CCD\u0CB0\u0CBF|\u0CAE\u0CC7|\u0C9C\u0CC2\u0CA8\u0CCD|\u0C9C\u0CC1\u0CB2\u0CC8|\u0C86\u0C97|\u0CB8\u0CC6\u0CAA\u0CCD\u0C9F\u0CC6\u0C82|\u0C85\u0C95\u0CCD\u0C9F\u0CCB|\u0CA8\u0CB5\u0CC6\u0C82|\u0CA1\u0CBF\u0CB8\u0CC6\u0C82)/i,\n  wide: /^(\u0C9C\u0CA8\u0CB5\u0CB0\u0CBF|\u0CAB\u0CC6\u0CAC\u0CCD\u0CB0\u0CB5\u0CB0\u0CBF|\u0CAE\u0CBE\u0CB0\u0CCD\u0C9A\u0CCD|\u0C8F\u0CAA\u0CCD\u0CB0\u0CBF\u0CB2\u0CCD|\u0CAE\u0CC7|\u0C9C\u0CC2\u0CA8\u0CCD|\u0C9C\u0CC1\u0CB2\u0CC8|\u0C86\u0C97\u0CB8\u0CCD\u0C9F\u0CCD|\u0CB8\u0CC6\u0CAA\u0CCD\u0C9F\u0CC6\u0C82\u0CAC\u0CB0\u0CCD|\u0C85\u0C95\u0CCD\u0C9F\u0CCB\u0CAC\u0CB0\u0CCD|\u0CA8\u0CB5\u0CC6\u0C82\u0CAC\u0CB0\u0CCD|\u0CA1\u0CBF\u0CB8\u0CC6\u0C82\u0CAC\u0CB0\u0CCD)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0C9C$/i,\n    /^\u0CAB\u0CC6/i,\n    /^\u0CAE\u0CBE/i,\n    /^\u0C8F/i,\n    /^\u0CAE\u0CC7/i,\n    /^\u0C9C\u0CC2/i,\n    /^\u0C9C\u0CC1$/i,\n    /^\u0C86/i,\n    /^\u0CB8\u0CC6/i,\n    /^\u0C85/i,\n    /^\u0CA8/i,\n    /^\u0CA1\u0CBF/i,\n  ],\n\n  any: [\n    /^\u0C9C\u0CA8/i,\n    /^\u0CAB\u0CC6/i,\n    /^\u0CAE\u0CBE/i,\n    /^\u0C8F/i,\n    /^\u0CAE\u0CC7/i,\n    /^\u0C9C\u0CC2\u0CA8\u0CCD/i,\n    /^\u0C9C\u0CC1\u0CB2\u0CC8/i,\n    /^\u0C86/i,\n    /^\u0CB8\u0CC6/i,\n    /^\u0C85/i,\n    /^\u0CA8/i,\n    /^\u0CA1\u0CBF/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0CAD\u0CBE|\u0CB8\u0CCB|\u0CAE|\u0CAC\u0CC1|\u0C97\u0CC1|\u0CB6\u0CC1|\u0CB6)/i,\n  short: /^(\u0CAD\u0CBE\u0CA8\u0CC1|\u0CB8\u0CCB\u0CAE|\u0CAE\u0C82\u0C97\u0CB3|\u0CAC\u0CC1\u0CA7|\u0C97\u0CC1\u0CB0\u0CC1|\u0CB6\u0CC1\u0C95\u0CCD\u0CB0|\u0CB6\u0CA8\u0CBF)/i,\n  abbreviated: /^(\u0CAD\u0CBE\u0CA8\u0CC1|\u0CB8\u0CCB\u0CAE|\u0CAE\u0C82\u0C97\u0CB3|\u0CAC\u0CC1\u0CA7|\u0C97\u0CC1\u0CB0\u0CC1|\u0CB6\u0CC1\u0C95\u0CCD\u0CB0|\u0CB6\u0CA8\u0CBF)/i,\n  wide: /^(\u0CAD\u0CBE\u0CA8\u0CC1\u0CB5\u0CBE\u0CB0|\u0CB8\u0CCB\u0CAE\u0CB5\u0CBE\u0CB0|\u0CAE\u0C82\u0C97\u0CB3\u0CB5\u0CBE\u0CB0|\u0CAC\u0CC1\u0CA7\u0CB5\u0CBE\u0CB0|\u0C97\u0CC1\u0CB0\u0CC1\u0CB5\u0CBE\u0CB0|\u0CB6\u0CC1\u0C95\u0CCD\u0CB0\u0CB5\u0CBE\u0CB0|\u0CB6\u0CA8\u0CBF\u0CB5\u0CBE\u0CB0)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0CAD\u0CBE/i, /^\u0CB8\u0CCB/i, /^\u0CAE/i, /^\u0CAC\u0CC1/i, /^\u0C97\u0CC1/i, /^\u0CB6\u0CC1/i, /^\u0CB6/i],\n  any: [/^\u0CAD\u0CBE/i, /^\u0CB8\u0CCB/i, /^\u0CAE/i, /^\u0CAC\u0CC1/i, /^\u0C97\u0CC1/i, /^\u0CB6\u0CC1/i, /^\u0CB6/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0CAA\u0CC2|\u0C85|\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF|\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9|\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6|\u0CB8\u0C82\u0C9C\u0CC6|\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF)/i,\n  any: /^(\u0CAA\u0CC2\u0CB0\u0CCD\u0CB5\u0CBE\u0CB9\u0CCD\u0CA8|\u0C85\u0CAA\u0CB0\u0CBE\u0CB9\u0CCD\u0CA8|\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF|\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9|\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6|\u0CB8\u0C82\u0C9C\u0CC6|\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0CAA\u0CC2/i,\n    pm: /^\u0C85/i,\n    midnight: /\u0CAE\u0CA7\u0CCD\u0CAF\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF/i,\n    noon: /\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9/i,\n    morning: /\u0CAC\u0CC6\u0CB3\u0C97\u0CCD\u0C97\u0CC6/i,\n    afternoon: /\u0CAE\u0CA7\u0CCD\u0CAF\u0CBE\u0CA8\u0CCD\u0CB9/i,\n    evening: /\u0CB8\u0C82\u0C9C\u0CC6/i,\n    night: /\u0CB0\u0CBE\u0CA4\u0CCD\u0CB0\u0CBF/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./kn/_lib/formatDistance.js\";\nimport { formatLong } from \"./kn/_lib/formatLong.js\";\nimport { formatRelative } from \"./kn/_lib/formatRelative.js\";\nimport { localize } from \"./kn/_lib/localize.js\";\nimport { match } from \"./kn/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Kannada locale (India).\n * @language Kannada\n * @iso-639-2 kan\n * @author Manjunatha Gouli [@developergouli](https://github.com/developergouli)\n */\nexport const kn = {\n  code: \"kn\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default kn;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"1\uCD08 \uBBF8\uB9CC\",\n    other: \"{{count}}\uCD08 \uBBF8\uB9CC\",\n  },\n\n  xSeconds: {\n    one: \"1\uCD08\",\n    other: \"{{count}}\uCD08\",\n  },\n\n  halfAMinute: \"30\uCD08\",\n\n  lessThanXMinutes: {\n    one: \"1\uBD84 \uBBF8\uB9CC\",\n    other: \"{{count}}\uBD84 \uBBF8\uB9CC\",\n  },\n\n  xMinutes: {\n    one: \"1\uBD84\",\n    other: \"{{count}}\uBD84\",\n  },\n\n  aboutXHours: {\n    one: \"\uC57D 1\uC2DC\uAC04\",\n    other: \"\uC57D {{count}}\uC2DC\uAC04\",\n  },\n\n  xHours: {\n    one: \"1\uC2DC\uAC04\",\n    other: \"{{count}}\uC2DC\uAC04\",\n  },\n\n  xDays: {\n    one: \"1\uC77C\",\n    other: \"{{count}}\uC77C\",\n  },\n\n  aboutXWeeks: {\n    one: \"\uC57D 1\uC8FC\",\n    other: \"\uC57D {{count}}\uC8FC\",\n  },\n\n  xWeeks: {\n    one: \"1\uC8FC\",\n    other: \"{{count}}\uC8FC\",\n  },\n\n  aboutXMonths: {\n    one: \"\uC57D 1\uAC1C\uC6D4\",\n    other: \"\uC57D {{count}}\uAC1C\uC6D4\",\n  },\n\n  xMonths: {\n    one: \"1\uAC1C\uC6D4\",\n    other: \"{{count}}\uAC1C\uC6D4\",\n  },\n\n  aboutXYears: {\n    one: \"\uC57D 1\uB144\",\n    other: \"\uC57D {{count}}\uB144\",\n  },\n\n  xYears: {\n    one: \"1\uB144\",\n    other: \"{{count}}\uB144\",\n  },\n\n  overXYears: {\n    one: \"1\uB144 \uC774\uC0C1\",\n    other: \"{{count}}\uB144 \uC774\uC0C1\",\n  },\n\n  almostXYears: {\n    one: \"\uAC70\uC758 1\uB144\",\n    other: \"\uAC70\uC758 {{count}}\uB144\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" \uD6C4\";\n    } else {\n      return result + \" \uC804\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y\uB144 M\uC6D4 d\uC77C EEEE\",\n  long: \"y\uB144 M\uC6D4 d\uC77C\",\n  medium: \"y.MM.dd\",\n  short: \"y.MM.dd\",\n};\n\nconst timeFormats = {\n  full: \"a H\uC2DC mm\uBD84 ss\uCD08 zzzz\",\n  long: \"a H:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\uC9C0\uB09C' eeee p\",\n  yesterday: \"'\uC5B4\uC81C' p\",\n  today: \"'\uC624\uB298' p\",\n  tomorrow: \"'\uB0B4\uC77C' p\",\n  nextWeek: \"'\uB2E4\uC74C' eeee p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"BC\", \"AD\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"\uAE30\uC6D0\uC804\", \"\uC11C\uAE30\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1\uBD84\uAE30\", \"2\uBD84\uAE30\", \"3\uBD84\uAE30\", \"4\uBD84\uAE30\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"1\uC6D4\",\n    \"2\uC6D4\",\n    \"3\uC6D4\",\n    \"4\uC6D4\",\n    \"5\uC6D4\",\n    \"6\uC6D4\",\n    \"7\uC6D4\",\n    \"8\uC6D4\",\n    \"9\uC6D4\",\n    \"10\uC6D4\",\n    \"11\uC6D4\",\n    \"12\uC6D4\",\n  ],\n\n  wide: [\n    \"1\uC6D4\",\n    \"2\uC6D4\",\n    \"3\uC6D4\",\n    \"4\uC6D4\",\n    \"5\uC6D4\",\n    \"6\uC6D4\",\n    \"7\uC6D4\",\n    \"8\uC6D4\",\n    \"9\uC6D4\",\n    \"10\uC6D4\",\n    \"11\uC6D4\",\n    \"12\uC6D4\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\uC77C\", \"\uC6D4\", \"\uD654\", \"\uC218\", \"\uBAA9\", \"\uAE08\", \"\uD1A0\"],\n  short: [\"\uC77C\", \"\uC6D4\", \"\uD654\", \"\uC218\", \"\uBAA9\", \"\uAE08\", \"\uD1A0\"],\n  abbreviated: [\"\uC77C\", \"\uC6D4\", \"\uD654\", \"\uC218\", \"\uBAA9\", \"\uAE08\", \"\uD1A0\"],\n  wide: [\"\uC77C\uC694\uC77C\", \"\uC6D4\uC694\uC77C\", \"\uD654\uC694\uC77C\", \"\uC218\uC694\uC77C\", \"\uBAA9\uC694\uC77C\", \"\uAE08\uC694\uC77C\", \"\uD1A0\uC694\uC77C\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n  abbreviated: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n  wide: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n  abbreviated: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n  wide: {\n    am: \"\uC624\uC804\",\n    pm: \"\uC624\uD6C4\",\n    midnight: \"\uC790\uC815\",\n    noon: \"\uC815\uC624\",\n    morning: \"\uC544\uCE68\",\n    afternoon: \"\uC624\uD6C4\",\n    evening: \"\uC800\uB141\",\n    night: \"\uBC24\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = String(options?.unit);\n\n  switch (unit) {\n    case \"minute\":\n    case \"second\":\n      return String(number);\n    case \"date\":\n      return number + \"\uC77C\";\n    default:\n      return number + \"\uBC88\uC9F8\";\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\uC77C|\uBC88\uC9F8)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(\uAE30\uC6D0\uC804|\uC11C\uAE30)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(bc|\uAE30\uC6D0\uC804)/i, /^(ad|\uC11C\uAE30)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234]\uC0AC?\uBD84\uAE30/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(1[012]|[123456789])/,\n  abbreviated: /^(1[012]|[123456789])\uC6D4/i,\n  wide: /^(1[012]|[123456789])\uC6D4/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^1\uC6D4?$/,\n    /^2/,\n    /^3/,\n    /^4/,\n    /^5/,\n    /^6/,\n    /^7/,\n    /^8/,\n    /^9/,\n    /^10/,\n    /^11/,\n    /^12/,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\uC77C\uC6D4\uD654\uC218\uBAA9\uAE08\uD1A0]/,\n  short: /^[\uC77C\uC6D4\uD654\uC218\uBAA9\uAE08\uD1A0]/,\n  abbreviated: /^[\uC77C\uC6D4\uD654\uC218\uBAA9\uAE08\uD1A0]/,\n  wide: /^[\uC77C\uC6D4\uD654\uC218\uBAA9\uAE08\uD1A0]\uC694\uC77C/,\n};\nconst parseDayPatterns = {\n  any: [/^\uC77C/, /^\uC6D4/, /^\uD654/, /^\uC218/, /^\uBAA9/, /^\uAE08/, /^\uD1A0/],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|\uC624\uC804|\uC624\uD6C4|\uC790\uC815|\uC815\uC624|\uC544\uCE68|\uC800\uB141|\uBC24)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(am|\uC624\uC804)/i,\n    pm: /^(pm|\uC624\uD6C4)/i,\n    midnight: /^\uC790\uC815/i,\n    noon: /^\uC815\uC624/i,\n    morning: /^\uC544\uCE68/i,\n    afternoon: /^\uC624\uD6C4/i,\n    evening: /^\uC800\uB141/i,\n    night: /^\uBC24/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ko/_lib/formatDistance.js\";\nimport { formatLong } from \"./ko/_lib/formatLong.js\";\nimport { formatRelative } from \"./ko/_lib/formatRelative.js\";\nimport { localize } from \"./ko/_lib/localize.js\";\nimport { match } from \"./ko/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Korean locale.\n * @language Korean\n * @iso-639-2 kor\n * @author Hong Chulju [@angdev](https://github.com/angdev)\n * @author Lee Seoyoen [@iamssen](https://github.com/iamssen)\n * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)\n */\nexport const ko = {\n  code: \"ko\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ko;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: \"manner w\u00E9i eng Sekonn\",\n      other: \"manner w\u00E9i {{count}} Sekonnen\",\n    },\n    withPreposition: {\n      one: \"manner w\u00E9i enger Sekonn\",\n      other: \"manner w\u00E9i {{count}} Sekonnen\",\n    },\n  },\n\n  xSeconds: {\n    standalone: {\n      one: \"eng Sekonn\",\n      other: \"{{count}} Sekonnen\",\n    },\n    withPreposition: {\n      one: \"enger Sekonn\",\n      other: \"{{count}} Sekonnen\",\n    },\n  },\n\n  halfAMinute: {\n    standalone: \"eng hallef Minutt\",\n    withPreposition: \"enger hallwer Minutt\",\n  },\n\n  lessThanXMinutes: {\n    standalone: {\n      one: \"manner w\u00E9i eng Minutt\",\n      other: \"manner w\u00E9i {{count}} Minutten\",\n    },\n    withPreposition: {\n      one: \"manner w\u00E9i enger Minutt\",\n      other: \"manner w\u00E9i {{count}} Minutten\",\n    },\n  },\n\n  xMinutes: {\n    standalone: {\n      one: \"eng Minutt\",\n      other: \"{{count}} Minutten\",\n    },\n    withPreposition: {\n      one: \"enger Minutt\",\n      other: \"{{count}} Minutten\",\n    },\n  },\n\n  aboutXHours: {\n    standalone: {\n      one: \"ongef\u00E9ier eng Stonn\",\n      other: \"ongef\u00E9ier {{count}} Stonnen\",\n    },\n    withPreposition: {\n      one: \"ongef\u00E9ier enger Stonn\",\n      other: \"ongef\u00E9ier {{count}} Stonnen\",\n    },\n  },\n\n  xHours: {\n    standalone: {\n      one: \"eng Stonn\",\n      other: \"{{count}} Stonnen\",\n    },\n    withPreposition: {\n      one: \"enger Stonn\",\n      other: \"{{count}} Stonnen\",\n    },\n  },\n\n  xDays: {\n    standalone: {\n      one: \"een Dag\",\n      other: \"{{count}} Deeg\",\n    },\n    withPreposition: {\n      one: \"engem Dag\",\n      other: \"{{count}} Deeg\",\n    },\n  },\n\n  aboutXWeeks: {\n    standalone: {\n      one: \"ongef\u00E9ier eng Woch\",\n      other: \"ongef\u00E9ier {{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"ongef\u00E9ier enger Woche\",\n      other: \"ongef\u00E9ier {{count}} Wochen\",\n    },\n  },\n\n  xWeeks: {\n    standalone: {\n      one: \"eng Woch\",\n      other: \"{{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"enger Woch\",\n      other: \"{{count}} Wochen\",\n    },\n  },\n\n  aboutXMonths: {\n    standalone: {\n      one: \"ongef\u00E9ier ee Mount\",\n      other: \"ongef\u00E9ier {{count}} M\u00E9int\",\n    },\n    withPreposition: {\n      one: \"ongef\u00E9ier engem Mount\",\n      other: \"ongef\u00E9ier {{count}} M\u00E9int\",\n    },\n  },\n\n  xMonths: {\n    standalone: {\n      one: \"ee Mount\",\n      other: \"{{count}} M\u00E9int\",\n    },\n    withPreposition: {\n      one: \"engem Mount\",\n      other: \"{{count}} M\u00E9int\",\n    },\n  },\n\n  aboutXYears: {\n    standalone: {\n      one: \"ongef\u00E9ier ee Joer\",\n      other: \"ongef\u00E9ier {{count}} Joer\",\n    },\n    withPreposition: {\n      one: \"ongef\u00E9ier engem Joer\",\n      other: \"ongef\u00E9ier {{count}} Joer\",\n    },\n  },\n\n  xYears: {\n    standalone: {\n      one: \"ee Joer\",\n      other: \"{{count}} Joer\",\n    },\n    withPreposition: {\n      one: \"engem Joer\",\n      other: \"{{count}} Joer\",\n    },\n  },\n\n  overXYears: {\n    standalone: {\n      one: \"m\u00E9i w\u00E9i ee Joer\",\n      other: \"m\u00E9i w\u00E9i {{count}} Joer\",\n    },\n    withPreposition: {\n      one: \"m\u00E9i w\u00E9i engem Joer\",\n      other: \"m\u00E9i w\u00E9i {{count}} Joer\",\n    },\n  },\n\n  almostXYears: {\n    standalone: {\n      one: \"bal ee Joer\",\n      other: \"bal {{count}} Joer\",\n    },\n    withPreposition: {\n      one: \"bal engem Joer\",\n      other: \"bal {{count}} Joer\",\n    },\n  },\n};\n\nconst EXCEPTION_CONSONANTS = [\"d\", \"h\", \"n\", \"t\", \"z\"];\nconst VOWELS = [\"a,\", \"e\", \"i\", \"o\", \"u\"];\nconst DIGITS_SPOKEN_N_NEEDED = [0, 1, 2, 3, 8, 9];\nconst FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED = [40, 50, 60, 70];\n\n// Eifeler Regel\nfunction isFinalNNeeded(nextWords) {\n  const firstLetter = nextWords.charAt(0).toLowerCase();\n  if (\n    VOWELS.indexOf(firstLetter) != -1 ||\n    EXCEPTION_CONSONANTS.indexOf(firstLetter) != -1\n  ) {\n    return true;\n  }\n\n  // Numbers would need to converted into words for checking.\n  // Therefore, I have listed the digits that require a preceeding n with a few exceptions.\n  const firstWord = nextWords.split(\" \")[0];\n  const number = parseInt(firstWord);\n  if (\n    !isNaN(number) &&\n    DIGITS_SPOKEN_N_NEEDED.indexOf(number % 10) != -1 &&\n    FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED.indexOf(\n      parseInt(firstWord.substring(0, 2)),\n    ) == -1\n  ) {\n    return true;\n  }\n\n  // Omit other checks as they are not expected here.\n  return false;\n}\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n\n  const usageGroup = options?.addSuffix\n    ? tokenValue.withPreposition\n    : tokenValue.standalone;\n\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"a\" + (isFinalNNeeded(result) ? \"n\" : \"\") + \" \" + result;\n    } else {\n      return \"viru\" + (isFinalNNeeded(result) ? \"n\" : \"\") + \" \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y\", // M\u00E9indeg, 7. Januar 2018\n  long: \"do MMMM y\", // 7. Januar 2018\n  medium: \"do MMM y\", // 7. Jan 2018\n  short: \"dd.MM.yy\", // 07.01.18\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'um' {{time}}\",\n  long: \"{{date}} 'um' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const day = date.getDay();\n    let result = \"'l\u00E4schte\";\n    if (day === 2 || day === 4) {\n      // Eifeler Regel: Add an n before the consonant d; Here \"D\u00EBnschdeg\" \"and Donneschde\".\n      result += \"n\";\n    }\n    result += \"' eeee 'um' p\";\n    return result;\n  },\n  yesterday: \"'g\u00EBschter um' p\",\n  today: \"'haut um' p\",\n  tomorrow: \"'moien um' p\",\n  nextWeek: \"eeee 'um' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"viru Christus\", \"no Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"M\u00E4e\",\n    \"Abr\",\n    \"Mee\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dez\",\n  ],\n\n  wide: [\n    \"Januar\",\n    \"Februar\",\n    \"M\u00E4erz\",\n    \"Abr\u00EBll\",\n    \"Mee\",\n    \"Juni\",\n    \"Juli\",\n    \"August\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Dezember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\n  short: [\"So\", \"M\u00E9\", \"D\u00EB\", \"M\u00EB\", \"Do\", \"Fr\", \"Sa\"],\n  abbreviated: [\"So.\", \"M\u00E9.\", \"D\u00EB.\", \"M\u00EB.\", \"Do.\", \"Fr.\", \"Sa.\"],\n  wide: [\n    \"Sonndeg\",\n    \"M\u00E9indeg\",\n    \"D\u00EBnschdeg\",\n    \"M\u00EBttwoch\",\n    \"Donneschdeg\",\n    \"Freideg\",\n    \"Samschdeg\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"mo.\",\n    pm: \"nom\u00EB.\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"M\u00EBtteg\",\n    morning: \"Moien\",\n    afternoon: \"Nom\u00EBtteg\",\n    evening: \"Owend\",\n    night: \"Nuecht\",\n  },\n  abbreviated: {\n    am: \"moies\",\n    pm: \"nom\u00EBttes\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"M\u00EBtteg\",\n    morning: \"Moien\",\n    afternoon: \"Nom\u00EBtteg\",\n    evening: \"Owend\",\n    night: \"Nuecht\",\n  },\n  wide: {\n    am: \"moies\",\n    pm: \"nom\u00EBttes\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"M\u00EBtteg\",\n    morning: \"Moien\",\n    afternoon: \"Nom\u00EBtteg\",\n    evening: \"Owend\",\n    night: \"Nuecht\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"mo.\",\n    pm: \"nom.\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"m\u00EBttes\",\n    morning: \"moies\",\n    afternoon: \"nom\u00EBttes\",\n    evening: \"owes\",\n    night: \"nuets\",\n  },\n  abbreviated: {\n    am: \"moies\",\n    pm: \"nom\u00EBttes\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"m\u00EBttes\",\n    morning: \"moies\",\n    afternoon: \"nom\u00EBttes\",\n    evening: \"owes\",\n    night: \"nuets\",\n  },\n  wide: {\n    am: \"moies\",\n    pm: \"nom\u00EBttes\",\n    midnight: \"M\u00EBtternuecht\",\n    noon: \"m\u00EBttes\",\n    morning: \"moies\",\n    afternoon: \"nom\u00EBttes\",\n    evening: \"owes\",\n    night: \"nuets\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  wide: /^(viru Christus|virun eiser Z\u00E4itrechnung|no Christus|eiser Z\u00E4itrechnung)/i,\n};\nconst parseEraPatterns = {\n  any: [/^v/i, /^n/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? Quartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|m\u00E4e|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,\n  wide: /^(januar|februar|m\u00E4erz|abr\u00EBll|mee|juni|juli|august|september|oktober|november|dezember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^m\u00E4/i,\n    /^ab/i,\n    /^me/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smdf]/i,\n  short: /^(so|m\u00E9|d\u00EB|m\u00EB|do|fr|sa)/i,\n  abbreviated: /^(son?|m\u00E9i?|d\u00EBn?|m\u00EBt?|don?|fre?|sam?)\\.?/i,\n  wide: /^(sonndeg|m\u00E9indeg|d\u00EBnschdeg|m\u00EBttwoch|donneschdeg|freideg|samschdeg)/i,\n};\nconst parseDayPatterns = {\n  any: [/^so/i, /^m\u00E9/i, /^d\u00EB/i, /^m\u00EB/i, /^do/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(mo\\.?|nom\u00EB\\.?|M\u00EBtternuecht|m\u00EBttes|moies|nom\u00EBttes|owes|nuets)/i,\n  abbreviated:\n    /^(moi\\.?|nom\u00EBt\\.?|M\u00EBtternuecht|m\u00EBttes|moies|nom\u00EBttes|owes|nuets)/i,\n  wide: /^(moies|nom\u00EBttes|M\u00EBtternuecht|m\u00EBttes|moies|nom\u00EBttes|owes|nuets)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^m/i,\n    pm: /^n/i,\n    midnight: /^M\u00EBtter/i,\n    noon: /^m\u00EBttes/i,\n    morning: /moies/i,\n    afternoon: /nom\u00EBttes/i, // will never be matched. Afternoon is matched by `pm`\n    evening: /owes/i,\n    night: /nuets/i, // will never be matched. Night is matched by `pm`\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./lb/_lib/formatDistance.js\";\nimport { formatLong } from \"./lb/_lib/formatLong.js\";\nimport { formatRelative } from \"./lb/_lib/formatRelative.js\";\nimport { localize } from \"./lb/_lib/localize.js\";\nimport { match } from \"./lb/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Luxembourgish locale.\n * @language Luxembourgish\n * @iso-639-2 ltz\n * @author Daniel Waxweiler [@dwaxweiler](https://github.com/dwaxweiler)\n */\nexport const lb = {\n  code: \"lb\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default lb;\n", "const translations = {\n  xseconds_other: \"sekund\u0117_sekund\u017Ei\u0173_sekundes\",\n  xminutes_one: \"minut\u0117_minut\u0117s_minut\u0119\",\n  xminutes_other: \"minut\u0117s_minu\u010Di\u0173_minutes\",\n  xhours_one: \"valanda_valandos_valand\u0105\",\n  xhours_other: \"valandos_valand\u0173_valandas\",\n  xdays_one: \"diena_dienos_dien\u0105\",\n  xdays_other: \"dienos_dien\u0173_dienas\",\n  xweeks_one: \"savait\u0117_savait\u0117s_savait\u0119\",\n  xweeks_other: \"savait\u0117s_savai\u010Di\u0173_savaites\",\n  xmonths_one: \"m\u0117nuo_m\u0117nesio_m\u0117nes\u012F\",\n  xmonths_other: \"m\u0117nesiai_m\u0117nesi\u0173_m\u0117nesius\",\n  xyears_one: \"metai_met\u0173_metus\",\n  xyears_other: \"metai_met\u0173_metus\",\n  about: \"apie\",\n  over: \"daugiau nei\",\n  almost: \"beveik\",\n  lessthan: \"ma\u017Eiau nei\",\n};\n\nconst translateSeconds = (_number, addSuffix, _key, isFuture) => {\n  if (!addSuffix) {\n    return \"kelios sekund\u0117s\";\n  } else {\n    return isFuture ? \"keli\u0173 sekund\u017Ei\u0173\" : \"kelias sekundes\";\n  }\n};\n\nconst translateSingular = (_number, addSuffix, key, isFuture) => {\n  return !addSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n};\n\nconst translate = (number, addSuffix, key, isFuture) => {\n  const result = number + \" \";\n  if (number === 1) {\n    return result + translateSingular(number, addSuffix, key, isFuture);\n  } else if (!addSuffix) {\n    return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n};\n\nfunction special(number) {\n  return number % 10 === 0 || (number > 10 && number < 20);\n}\n\nfunction forms(key) {\n  return translations[key].split(\"_\");\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: translateSeconds,\n    other: translate,\n  },\n\n  xSeconds: {\n    one: translateSeconds,\n    other: translate,\n  },\n\n  halfAMinute: \"pus\u0117 minut\u0117s\",\n\n  lessThanXMinutes: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xMinutes: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  aboutXHours: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xHours: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xDays: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  aboutXWeeks: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xWeeks: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  aboutXMonths: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xMonths: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  aboutXYears: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  xYears: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  overXYears: {\n    one: translateSingular,\n    other: translate,\n  },\n\n  almostXYears: {\n    one: translateSingular,\n    other: translate,\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const adverb = token.match(/about|over|almost|lessthan/i);\n  const unit = adverb ? token.replace(adverb[0], \"\") : token;\n\n  const isFuture = options?.comparison !== undefined && options.comparison > 0;\n\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one(\n      count,\n      options?.addSuffix === true,\n      unit.toLowerCase() + \"_one\",\n      isFuture,\n    );\n  } else {\n    result = tokenValue.other(\n      count,\n      options?.addSuffix === true,\n      unit.toLowerCase() + \"_other\",\n      isFuture,\n    );\n  }\n\n  if (adverb) {\n    const key = adverb[0].toLowerCase();\n    result = translations[key] + \" \" + result;\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"po \" + result;\n    } else {\n      return \"prie\u0161 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y 'm'. MMMM d 'd'., EEEE\",\n  long: \"y 'm'. MMMM d 'd'.\",\n  medium: \"y-MM-dd\",\n  short: \"y-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'Pra\u0117jus\u012F' eeee p\",\n  yesterday: \"'Vakar' p\",\n  today: \"'\u0160iandien' p\",\n  tomorrow: \"'Rytoj' p\",\n  nextWeek: \"eeee p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"pr. Kr.\", \"po Kr.\"],\n  abbreviated: [\"pr. Kr.\", \"po Kr.\"],\n  wide: [\"prie\u0161 Krist\u0173\", \"po Kristaus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"I ketv.\", \"II ketv.\", \"III ketv.\", \"IV ketv.\"],\n  wide: [\"I ketvirtis\", \"II ketvirtis\", \"III ketvirtis\", \"IV ketvirtis\"],\n};\n\nconst formattingQuarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"I k.\", \"II k.\", \"III k.\", \"IV k.\"],\n  wide: [\"I ketvirtis\", \"II ketvirtis\", \"III ketvirtis\", \"IV ketvirtis\"],\n};\n\nconst monthValues = {\n  narrow: [\"S\", \"V\", \"K\", \"B\", \"G\", \"B\", \"L\", \"R\", \"R\", \"S\", \"L\", \"G\"],\n  abbreviated: [\n    \"saus.\",\n    \"vas.\",\n    \"kov.\",\n    \"bal.\",\n    \"geg.\",\n    \"bir\u017E.\",\n    \"liep.\",\n    \"rugp.\",\n    \"rugs.\",\n    \"spal.\",\n    \"lapkr.\",\n    \"gruod.\",\n  ],\n\n  wide: [\n    \"sausis\",\n    \"vasaris\",\n    \"kovas\",\n    \"balandis\",\n    \"gegu\u017E\u0117\",\n    \"bir\u017Eelis\",\n    \"liepa\",\n    \"rugpj\u016Btis\",\n    \"rugs\u0117jis\",\n    \"spalis\",\n    \"lapkritis\",\n    \"gruodis\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"S\", \"V\", \"K\", \"B\", \"G\", \"B\", \"L\", \"R\", \"R\", \"S\", \"L\", \"G\"],\n  abbreviated: [\n    \"saus.\",\n    \"vas.\",\n    \"kov.\",\n    \"bal.\",\n    \"geg.\",\n    \"bir\u017E.\",\n    \"liep.\",\n    \"rugp.\",\n    \"rugs.\",\n    \"spal.\",\n    \"lapkr.\",\n    \"gruod.\",\n  ],\n\n  wide: [\n    \"sausio\",\n    \"vasario\",\n    \"kovo\",\n    \"baland\u017Eio\",\n    \"gegu\u017E\u0117s\",\n    \"bir\u017Eelio\",\n    \"liepos\",\n    \"rugpj\u016B\u010Dio\",\n    \"rugs\u0117jo\",\n    \"spalio\",\n    \"lapkri\u010Dio\",\n    \"gruod\u017Eio\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"P\", \"A\", \"T\", \"K\", \"P\", \"\u0160\"],\n  short: [\"Sk\", \"Pr\", \"An\", \"Tr\", \"Kt\", \"Pn\", \"\u0160t\"],\n  abbreviated: [\"sk\", \"pr\", \"an\", \"tr\", \"kt\", \"pn\", \"\u0161t\"],\n  wide: [\n    \"sekmadienis\",\n    \"pirmadienis\",\n    \"antradienis\",\n    \"tre\u010Diadienis\",\n    \"ketvirtadienis\",\n    \"penktadienis\",\n    \"\u0161e\u0161tadienis\",\n  ],\n};\n\nconst formattingDayValues = {\n  narrow: [\"S\", \"P\", \"A\", \"T\", \"K\", \"P\", \"\u0160\"],\n  short: [\"Sk\", \"Pr\", \"An\", \"Tr\", \"Kt\", \"Pn\", \"\u0160t\"],\n  abbreviated: [\"sk\", \"pr\", \"an\", \"tr\", \"kt\", \"pn\", \"\u0161t\"],\n  wide: [\n    \"sekmadien\u012F\",\n    \"pirmadien\u012F\",\n    \"antradien\u012F\",\n    \"tre\u010Diadien\u012F\",\n    \"ketvirtadien\u012F\",\n    \"penktadien\u012F\",\n    \"\u0161e\u0161tadien\u012F\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"pr. p.\",\n    pm: \"pop.\",\n    midnight: \"vidurnaktis\",\n    noon: \"vidurdienis\",\n    morning: \"rytas\",\n    afternoon: \"diena\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n  abbreviated: {\n    am: \"prie\u0161piet\",\n    pm: \"popiet\",\n    midnight: \"vidurnaktis\",\n    noon: \"vidurdienis\",\n    morning: \"rytas\",\n    afternoon: \"diena\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n  wide: {\n    am: \"prie\u0161piet\",\n    pm: \"popiet\",\n    midnight: \"vidurnaktis\",\n    noon: \"vidurdienis\",\n    morning: \"rytas\",\n    afternoon: \"diena\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"pr. p.\",\n    pm: \"pop.\",\n    midnight: \"vidurnaktis\",\n    noon: \"perpiet\",\n    morning: \"rytas\",\n    afternoon: \"popiet\u0117\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n  abbreviated: {\n    am: \"prie\u0161piet\",\n    pm: \"popiet\",\n    midnight: \"vidurnaktis\",\n    noon: \"perpiet\",\n    morning: \"rytas\",\n    afternoon: \"popiet\u0117\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n  wide: {\n    am: \"prie\u0161piet\",\n    pm: \"popiet\",\n    midnight: \"vidurnaktis\",\n    noon: \"perpiet\",\n    morning: \"rytas\",\n    afternoon: \"popiet\u0117\",\n    evening: \"vakaras\",\n    night: \"naktis\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"-oji\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingQuarterValues,\n    defaultFormattingWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-oji)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^p(r|o)\\.?\\s?(kr\\.?|me)/i,\n  abbreviated: /^(pr\\.\\s?(kr\\.|m\\.\\s?e\\.)|po\\s?kr\\.|m\u016Bs\u0173 eroje)/i,\n  wide: /^(prie\u0161 Krist\u0173|prie\u0161 m\u016Bs\u0173 er\u0105|po Kristaus|m\u016Bs\u0173 eroje)/i,\n};\nconst parseEraPatterns = {\n  wide: [/prie\u0161/i, /(po|m\u016Bs\u0173)/i],\n  any: [/^pr/i, /^(po|m)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^([1234])/i,\n  abbreviated: /^(I|II|III|IV)\\s?ketv?\\.?/i,\n  wide: /^(I|II|III|IV)\\s?ketvirtis/i,\n};\nconst parseQuarterPatterns = {\n  narrow: [/1/i, /2/i, /3/i, /4/i],\n  any: [/I$/i, /II$/i, /III/i, /IV/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[svkbglr]/i,\n  abbreviated:\n    /^(saus\\.|vas\\.|kov\\.|bal\\.|geg\\.|bir\u017E\\.|liep\\.|rugp\\.|rugs\\.|spal\\.|lapkr\\.|gruod\\.)/i,\n  wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|baland\u017E?i(s|o)|gegu\u017E\u0117s?|bir\u017Eeli(s|o)|liep(a|os)|rugpj\u016B(t|\u010D)i(s|o)|rugs\u0117j(is|o)|spali(s|o)|lapkri(t|\u010D)i(s|o)|gruod\u017E?i(s|o))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^s/i,\n    /^v/i,\n    /^k/i,\n    /^b/i,\n    /^g/i,\n    /^b/i,\n    /^l/i,\n    /^r/i,\n    /^r/i,\n    /^s/i,\n    /^l/i,\n    /^g/i,\n  ],\n\n  any: [\n    /^saus/i,\n    /^vas/i,\n    /^kov/i,\n    /^bal/i,\n    /^geg/i,\n    /^bir\u017E/i,\n    /^liep/i,\n    /^rugp/i,\n    /^rugs/i,\n    /^spal/i,\n    /^lapkr/i,\n    /^gruod/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[spatk\u0161]/i,\n  short: /^(sk|pr|an|tr|kt|pn|\u0161t)/i,\n  abbreviated: /^(sk|pr|an|tr|kt|pn|\u0161t)/i,\n  wide: /^(sekmadien(is|\u012F)|pirmadien(is|\u012F)|antradien(is|\u012F)|tre\u010Diadien(is|\u012F)|ketvirtadien(is|\u012F)|penktadien(is|\u012F)|\u0161e\u0161tadien(is|\u012F))/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^\u0161/i],\n  wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^\u0161e/i],\n  any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^\u0161t/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(pr.\\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popiet\u0117)|vakaras|naktis)/i,\n  any: /^(prie\u0161piet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popiet\u0117)|vakaras|naktis)/i,\n};\nconst parseDayPeriodPatterns = {\n  narrow: {\n    am: /^pr/i,\n    pm: /^pop./i,\n    midnight: /^vidurnaktis/i,\n    noon: /^(vidurdienis|perp)/i,\n    morning: /rytas/i,\n    afternoon: /(die|popiet\u0117)/i,\n    evening: /vakaras/i,\n    night: /naktis/i,\n  },\n  any: {\n    am: /^pr/i,\n    pm: /^popiet$/i,\n    midnight: /^vidurnaktis/i,\n    noon: /^(vidurdienis|perp)/i,\n    morning: /rytas/i,\n    afternoon: /(die|popiet\u0117)/i,\n    evening: /vakaras/i,\n    night: /naktis/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./lt/_lib/formatDistance.js\";\nimport { formatLong } from \"./lt/_lib/formatLong.js\";\nimport { formatRelative } from \"./lt/_lib/formatRelative.js\";\nimport { localize } from \"./lt/_lib/localize.js\";\nimport { match } from \"./lt/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Lithuanian locale.\n * @language Lithuanian\n * @iso-639-2 lit\n * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)\n * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)\n */\nexport const lt = {\n  code: \"lt\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default lt;\n", "function buildLocalizeTokenFn(schema) {\n  return (count, options) => {\n    if (count === 1) {\n      if (options?.addSuffix) {\n        return schema.one[0].replace(\"{{time}}\", schema.one[2]);\n      } else {\n        return schema.one[0].replace(\"{{time}}\", schema.one[1]);\n      }\n    } else {\n      const rem = count % 10 === 1 && count % 100 !== 11;\n      if (options?.addSuffix) {\n        return schema.other[0]\n          .replace(\"{{time}}\", rem ? schema.other[3] : schema.other[4])\n          .replace(\"{{count}}\", String(count));\n      } else {\n        return schema.other[0]\n          .replace(\"{{time}}\", rem ? schema.other[1] : schema.other[2])\n          .replace(\"{{count}}\", String(count));\n      }\n    }\n  };\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    one: [\"maz\u0101k par {{time}}\", \"sekundi\", \"sekundi\"],\n    other: [\n      \"maz\u0101k nek\u0101 {{count}} {{time}}\",\n      \"sekunde\",\n      \"sekundes\",\n      \"sekundes\",\n      \"sekund\u0113m\",\n    ],\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"sekunde\", \"sekundes\"],\n    other: [\n      \"{{count}} {{time}}\",\n      \"sekunde\",\n      \"sekundes\",\n      \"sekundes\",\n      \"sekund\u0113m\",\n    ],\n  }),\n\n  halfAMinute: (_count, options) => {\n    if (options?.addSuffix) {\n      return \"pusmin\u016Btes\";\n    } else {\n      return \"pusmin\u016Bte\";\n    }\n  },\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    one: [\"maz\u0101k par {{time}}\", \"min\u016Bti\", \"min\u016Bti\"],\n    other: [\n      \"maz\u0101k nek\u0101 {{count}} {{time}}\",\n      \"min\u016Bte\",\n      \"min\u016Btes\",\n      \"min\u016Btes\",\n      \"min\u016Bt\u0113m\",\n    ],\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"min\u016Bte\", \"min\u016Btes\"],\n    other: [\"{{count}} {{time}}\", \"min\u016Bte\", \"min\u016Btes\", \"min\u016Btes\", \"min\u016Bt\u0113m\"],\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    one: [\"apm\u0113ram 1 {{time}}\", \"stunda\", \"stundas\"],\n    other: [\n      \"apm\u0113ram {{count}} {{time}}\",\n      \"stunda\",\n      \"stundas\",\n      \"stundas\",\n      \"stund\u0101m\",\n    ],\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"stunda\", \"stundas\"],\n    other: [\"{{count}} {{time}}\", \"stunda\", \"stundas\", \"stundas\", \"stund\u0101m\"],\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"diena\", \"dienas\"],\n    other: [\"{{count}} {{time}}\", \"diena\", \"dienas\", \"dienas\", \"dien\u0101m\"],\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    one: [\"apm\u0113ram 1 {{time}}\", \"ned\u0113\u013Ca\", \"ned\u0113\u013Cas\"],\n    other: [\n      \"apm\u0113ram {{count}} {{time}}\",\n      \"ned\u0113\u013Ca\",\n      \"ned\u0113\u013Cu\",\n      \"ned\u0113\u013Cas\",\n      \"ned\u0113\u013C\u0101m\",\n    ],\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"ned\u0113\u013Ca\", \"ned\u0113\u013Cas\"],\n    other: [\n      \"{{count}} {{time}}\", // TODO\n      \"ned\u0113\u013Ca\",\n      \"ned\u0113\u013Cu\",\n      \"ned\u0113\u013Cas\",\n      \"ned\u0113\u013C\u0101m\",\n    ],\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    one: [\"apm\u0113ram 1 {{time}}\", \"m\u0113nesis\", \"m\u0113ne\u0161a\"],\n    other: [\n      \"apm\u0113ram {{count}} {{time}}\",\n      \"m\u0113nesis\",\n      \"m\u0113ne\u0161i\",\n      \"m\u0113ne\u0161a\",\n      \"m\u0113ne\u0161iem\",\n    ],\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"m\u0113nesis\", \"m\u0113ne\u0161a\"],\n    other: [\"{{count}} {{time}}\", \"m\u0113nesis\", \"m\u0113ne\u0161i\", \"m\u0113ne\u0161a\", \"m\u0113ne\u0161iem\"],\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    one: [\"apm\u0113ram 1 {{time}}\", \"gads\", \"gada\"],\n    other: [\"apm\u0113ram {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    one: [\"1 {{time}}\", \"gads\", \"gada\"],\n    other: [\"{{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    one: [\"ilg\u0101k par 1 {{time}}\", \"gadu\", \"gadu\"],\n    other: [\"vair\u0101k nek\u0101 {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    one: [\"gandr\u012Bz 1 {{time}}\", \"gads\", \"gada\"],\n    other: [\"vair\u0101k nek\u0101 {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  const result = formatDistanceLocale[token](count, options);\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"p\u0113c \" + result;\n    } else {\n      return \"pirms \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, y. 'gada' d. MMMM\",\n  long: \"y. 'gada' d. MMMM\",\n  medium: \"dd.MM.y.\",\n  short: \"dd.MM.y.\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'plkst.' {{time}}\",\n  long: \"{{date}} 'plkst.' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst weekdays = [\n  \"sv\u0113tdien\u0101\",\n  \"pirmdien\u0101\",\n  \"otrdien\u0101\",\n  \"tre\u0161dien\u0101\",\n  \"ceturtdien\u0101\",\n  \"piektdien\u0101\",\n  \"sestdien\u0101\",\n];\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    if (isSameWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n\n    const weekday = weekdays[date.getDay()];\n    return \"'Pag\u0101ju\u0161\u0101 \" + weekday + \" plkst.' p\";\n  },\n  yesterday: \"'Vakar plkst.' p\",\n  today: \"'\u0160odien plkst.' p\",\n  tomorrow: \"'R\u012Bt plkst.' p\",\n  nextWeek: (date, baseDate, options) => {\n    if (isSameWeek(date, baseDate, options)) {\n      return \"eeee 'plkst.' p\";\n    }\n\n    const weekday = weekdays[date.getDay()];\n    return \"'N\u0101kamaj\u0101 \" + weekday + \" plkst.' p\";\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"p.m.\u0113\", \"m.\u0113\"],\n  abbreviated: [\"p. m. \u0113.\", \"m. \u0113.\"],\n  wide: [\"pirms m\u016Bsu \u0113ras\", \"m\u016Bsu \u0113r\u0101\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1. cet.\", \"2. cet.\", \"3. cet.\", \"4. cet.\"],\n  wide: [\n    \"pirmais ceturksnis\",\n    \"otrais ceturksnis\",\n    \"tre\u0161ais ceturksnis\",\n    \"ceturtais ceturksnis\",\n  ],\n};\n\nconst formattingQuarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1. cet.\", \"2. cet.\", \"3. cet.\", \"4. cet.\"],\n  wide: [\n    \"pirmaj\u0101 ceturksn\u012B\",\n    \"otraj\u0101 ceturksn\u012B\",\n    \"tre\u0161aj\u0101 ceturksn\u012B\",\n    \"ceturtaj\u0101 ceturksn\u012B\",\n  ],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"janv.\",\n    \"febr.\",\n    \"marts\",\n    \"apr.\",\n    \"maijs\",\n    \"j\u016Bn.\",\n    \"j\u016Bl.\",\n    \"aug.\",\n    \"sept.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"janv\u0101ris\",\n    \"febru\u0101ris\",\n    \"marts\",\n    \"apr\u012Blis\",\n    \"maijs\",\n    \"j\u016Bnijs\",\n    \"j\u016Blijs\",\n    \"augusts\",\n    \"septembris\",\n    \"oktobris\",\n    \"novembris\",\n    \"decembris\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"janv.\",\n    \"febr.\",\n    \"mart\u0101\",\n    \"apr.\",\n    \"maijs\",\n    \"j\u016Bn.\",\n    \"j\u016Bl.\",\n    \"aug.\",\n    \"sept.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"janv\u0101r\u012B\",\n    \"febru\u0101r\u012B\",\n    \"mart\u0101\",\n    \"apr\u012Bl\u012B\",\n    \"maij\u0101\",\n    \"j\u016Bnij\u0101\",\n    \"j\u016Blij\u0101\",\n    \"august\u0101\",\n    \"septembr\u012B\",\n    \"oktobr\u012B\",\n    \"novembr\u012B\",\n    \"decembr\u012B\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"P\", \"O\", \"T\", \"C\", \"P\", \"S\"],\n  short: [\"Sv\", \"P\", \"O\", \"T\", \"C\", \"Pk\", \"S\"],\n  abbreviated: [\n    \"sv\u0113td.\",\n    \"pirmd.\",\n    \"otrd.\",\n    \"tre\u0161d.\",\n    \"ceturtd.\",\n    \"piektd.\",\n    \"sestd.\",\n  ],\n\n  wide: [\n    \"sv\u0113tdiena\",\n    \"pirmdiena\",\n    \"otrdiena\",\n    \"tre\u0161diena\",\n    \"ceturtdiena\",\n    \"piektdiena\",\n    \"sestdiena\",\n  ],\n};\n\nconst formattingDayValues = {\n  narrow: [\"S\", \"P\", \"O\", \"T\", \"C\", \"P\", \"S\"],\n  short: [\"Sv\", \"P\", \"O\", \"T\", \"C\", \"Pk\", \"S\"],\n  abbreviated: [\n    \"sv\u0113td.\",\n    \"pirmd.\",\n    \"otrd.\",\n    \"tre\u0161d.\",\n    \"ceturtd.\",\n    \"piektd.\",\n    \"sestd.\",\n  ],\n\n  wide: [\n    \"sv\u0113tdien\u0101\",\n    \"pirmdien\u0101\",\n    \"otrdien\u0101\",\n    \"tre\u0161dien\u0101\",\n    \"ceturtdien\u0101\",\n    \"piektdien\u0101\",\n    \"sestdien\u0101\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusn.\",\n    noon: \"pusd.\",\n    morning: \"r\u012Bts\",\n    afternoon: \"diena\",\n    evening: \"vakars\",\n    night: \"nakts\",\n  },\n  abbreviated: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusn.\",\n    noon: \"pusd.\",\n    morning: \"r\u012Bts\",\n    afternoon: \"p\u0113cpusd.\",\n    evening: \"vakars\",\n    night: \"nakts\",\n  },\n  wide: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusnakts\",\n    noon: \"pusdienlaiks\",\n    morning: \"r\u012Bts\",\n    afternoon: \"p\u0113cpusdiena\",\n    evening: \"vakars\",\n    night: \"nakts\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusn.\",\n    noon: \"pusd.\",\n    morning: \"r\u012Bt\u0101\",\n    afternoon: \"dien\u0101\",\n    evening: \"vakar\u0101\",\n    night: \"nakt\u012B\",\n  },\n  abbreviated: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusn.\",\n    noon: \"pusd.\",\n    morning: \"r\u012Bt\u0101\",\n    afternoon: \"p\u0113cpusd.\",\n    evening: \"vakar\u0101\",\n    night: \"nakt\u012B\",\n  },\n  wide: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"pusnakt\u012B\",\n    noon: \"pusdienlaik\u0101\",\n    morning: \"r\u012Bt\u0101\",\n    afternoon: \"p\u0113cpusdien\u0101\",\n    evening: \"vakar\u0101\",\n    night: \"nakt\u012B\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingQuarterValues,\n    defaultFormattingWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(p\\.m\\.\u0113|m\\.\u0113)/i,\n  abbreviated: /^(p\\. m\\. \u0113\\.|m\\. \u0113\\.)/i,\n  wide: /^(pirms m\u016Bsu \u0113ras|m\u016Bsu \u0113r\u0101)/i,\n};\nconst parseEraPatterns = {\n  any: [/^p/i, /^m/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](\\. cet\\.)/i,\n  wide: /^(pirma(is|j\u0101)|otra(is|j\u0101)|tre\u0161a(is|j\u0101)|ceturta(is|j\u0101)) ceturksn(is|\u012B)/i,\n};\nconst parseQuarterPatterns = {\n  narrow: [/^1/i, /^2/i, /^3/i, /^4/i],\n  abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i],\n  wide: [/^p/i, /^o/i, /^t/i, /^c/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(janv\\.|febr\\.|marts|apr\\.|maijs|j\u016Bn\\.|j\u016Bl\\.|aug\\.|sept\\.|okt\\.|nov\\.|dec\\.)/i,\n  wide: /^(janv\u0101r(is|\u012B)|febru\u0101r(is|\u012B)|mart[s\u0101]|apr\u012Bl(is|\u012B)|maij[s\u0101]|j\u016Bnij[s\u0101]|j\u016Blij[s\u0101]|august[s\u0101]|septembr(is|\u012B)|oktobr(is|\u012B)|novembr(is|\u012B)|decembr(is|\u012B))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mai/i,\n    /^j\u016Bn/i,\n    /^j\u016Bl/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[spotc]/i,\n  short: /^(sv|pi|o|t|c|pk|s)/i,\n  abbreviated: /^(sv\u0113td\\.|pirmd\\.|otrd.\\|tre\u0161d\\.|ceturtd\\.|piektd\\.|sestd\\.)/i,\n  wide: /^(sv\u0113tdien(a|\u0101)|pirmdien(a|\u0101)|otrdien(a|\u0101)|tre\u0161dien(a|\u0101)|ceturtdien(a|\u0101)|piektdien(a|\u0101)|sestdien(a|\u0101))/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i],\n  any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(am|pm|pusn\\.|pusd\\.|r\u012Bt(s|\u0101)|dien(a|\u0101)|vakar(s|\u0101)|nakt(s|\u012B))/,\n  abbreviated: /^(am|pm|pusn\\.|pusd\\.|r\u012Bt(s|\u0101)|p\u0113cpusd\\.|vakar(s|\u0101)|nakt(s|\u012B))/,\n  wide: /^(am|pm|pusnakt(s|\u012B)|pusdienlaik(s|\u0101)|r\u012Bt(s|\u0101)|p\u0113cpusdien(a|\u0101)|vakar(s|\u0101)|nakt(s|\u012B))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /^pusn/i,\n    noon: /^pusd/i,\n    morning: /^r/i,\n    afternoon: /^(d|p\u0113c)/i,\n    evening: /^v/i,\n    night: /^n/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"wide\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./lv/_lib/formatDistance.js\";\nimport { formatLong } from \"./lv/_lib/formatLong.js\";\nimport { formatRelative } from \"./lv/_lib/formatRelative.js\";\nimport { localize } from \"./lv/_lib/localize.js\";\nimport { match } from \"./lv/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Latvian locale (Latvia).\n * @language Latvian\n * @iso-639-2 lav\n * @author R\u016Bdolfs Pu\u0137\u012Btis [@prudolfs](https://github.com/prudolfs)\n */\nexport const lv = {\n  code: \"lv\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default lv;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n    other: \"\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n    other: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  halfAMinute: \"\u043F\u043E\u043B\u043E\u0432\u0438\u043D\u0430 \u043C\u0438\u043D\u0443\u0442\u0430\",\n\n  lessThanXMinutes: {\n    one: \"\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 \u043C\u0438\u043D\u0443\u0442\u0430\",\n    other: \"\u043F\u043E\u043C\u0430\u043B\u043A\u0443 \u043E\u0434 {{count}} \u043C\u0438\u043D\u0443\u0442\u0438\",\n  },\n\n  xMinutes: {\n    one: \"1 \u043C\u0438\u043D\u0443\u0442\u0430\",\n    other: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0438\",\n  },\n\n  aboutXHours: {\n    one: \"\u043E\u043A\u043E\u043B\u0443 1 \u0447\u0430\u0441\",\n    other: \"\u043E\u043A\u043E\u043B\u0443 {{count}} \u0447\u0430\u0441\u0430\",\n  },\n\n  xHours: {\n    one: \"1 \u0447\u0430\u0441\",\n    other: \"{{count}} \u0447\u0430\u0441\u0430\",\n  },\n\n  xDays: {\n    one: \"1 \u0434\u0435\u043D\",\n    other: \"{{count}} \u0434\u0435\u043D\u0430\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u043E\u043A\u043E\u043B\u0443 1 \u043D\u0435\u0434\u0435\u043B\u0430\",\n    other: \"\u043E\u043A\u043E\u043B\u0443 {{count}} \u043C\u0435\u0441\u0435\u0446\u0438\",\n  },\n\n  xWeeks: {\n    one: \"1 \u043D\u0435\u0434\u0435\u043B\u0430\",\n    other: \"{{count}} \u043D\u0435\u0434\u0435\u043B\u0438\",\n  },\n\n  aboutXMonths: {\n    one: \"\u043E\u043A\u043E\u043B\u0443 1 \u043C\u0435\u0441\u0435\u0446\",\n    other: \"\u043E\u043A\u043E\u043B\u0443 {{count}} \u043D\u0435\u0434\u0435\u043B\u0438\",\n  },\n\n  xMonths: {\n    one: \"1 \u043C\u0435\u0441\u0435\u0446\",\n    other: \"{{count}} \u043C\u0435\u0441\u0435\u0446\u0438\",\n  },\n\n  aboutXYears: {\n    one: \"\u043E\u043A\u043E\u043B\u0443 1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u043E\u043A\u043E\u043B\u0443 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  xYears: {\n    one: \"1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  overXYears: {\n    one: \"\u043F\u043E\u0432\u0435\u045C\u0435 \u043E\u0434 1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u043F\u043E\u0432\u0435\u045C\u0435 \u043E\u0434 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n\n  almostXYears: {\n    one: \"\u0431\u0435\u0437\u043C\u0430\u043B\u043A\u0443 1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n    other: \"\u0431\u0435\u0437\u043C\u0430\u043B\u043A\u0443 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0437\u0430 \" + result;\n    } else {\n      return \"\u043F\u0440\u0435\u0434 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, dd MMMM yyyy\",\n  long: \"dd MMMM yyyy\",\n  medium: \"dd MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst weekdays = [\n  \"\u043D\u0435\u0434\u0435\u043B\u0430\",\n  \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A\",\n  \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n  \"\u0441\u0440\u0435\u0434\u0430\",\n  \"\u0447\u0435\u0442\u0432\u0440\u0442\u043E\u043A\",\n  \"\u043F\u0435\u0442\u043E\u043A\",\n  \"\u0441\u0430\u0431\u043E\u0442\u0430\",\n];\n\nfunction lastWeek(day) {\n  const weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'\u043C\u0438\u043D\u0430\u0442\u0430\u0442\u0430 \" + weekday + \" \u0432\u043E' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'\u043C\u0438\u043D\u0430\u0442\u0438\u043E\u0442 \" + weekday + \" \u0432\u043E' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'\u043E\u0432\u0430 \" + weekday + \" \u0432o' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'\u043E\u0432\u043E\u0458 \" + weekday + \" \u0432o' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = weekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 6:\n      return \"'\u0441\u043B\u0435\u0434\u043D\u0430\u0442\u0430 \" + weekday + \" \u0432o' p\";\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return \"'\u0441\u043B\u0435\u0434\u043D\u0438\u043E\u0442 \" + weekday + \" \u0432o' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'\u0432\u0447\u0435\u0440\u0430 \u0432\u043E' p\",\n  today: \"'\u0434\u0435\u043D\u0435\u0441 \u0432\u043E' p\",\n  tomorrow: \"'\u0443\u0442\u0440\u0435 \u0432\u043E' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u043F\u0440.\u043D.\u0435.\", \"\u043D.\u0435.\"],\n  abbreviated: [\"\u043F\u0440\u0435\u0434 \u043D. \u0435.\", \"\u043D. \u0435.\"],\n  wide: [\"\u043F\u0440\u0435\u0434 \u043D\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430\", \"\u043D\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0432\u0438 \u043A\u0432.\", \"2-\u0440\u0438 \u043A\u0432.\", \"3-\u0442\u0438 \u043A\u0432.\", \"4-\u0442\u0438 \u043A\u0432.\"],\n  wide: [\"1-\u0432\u0438 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2-\u0440\u0438 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3-\u0442\u0438 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4-\u0442\u0438 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  abbreviated: [\n    \"\u0458\u0430\u043D\",\n    \"\u0444\u0435\u0432\",\n    \"\u043C\u0430\u0440\",\n    \"\u0430\u043F\u0440\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\",\n    \"\u0458\u0443\u043B\",\n    \"\u0430\u0432\u0433\",\n    \"\u0441\u0435\u043F\u0442\",\n    \"\u043E\u043A\u0442\",\n    \"\u043D\u043E\u0435\u043C\",\n    \"\u0434\u0435\u043A\",\n  ],\n\n  wide: [\n    \"\u0458\u0430\u043D\u0443\u0430\u0440\u0438\",\n    \"\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0438\u043B\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\u0438\",\n    \"\u0458\u0443\u043B\u0438\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438\",\n    \"\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438\",\n    \"\u043D\u043E\u0435\u043C\u0432\u0440\u0438\",\n    \"\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0412\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0435\", \"\u043F\u043E\", \"\u0432\u0442\", \"\u0441\u0440\", \"\u0447\u0435\", \"\u043F\u0435\", \"\u0441\u0430\"],\n  abbreviated: [\"\u043D\u0435\u0434\", \"\u043F\u043E\u043D\", \"\u0432\u0442\u043E\", \"\u0441\u0440\u0435\", \"\u0447\u0435\u0442\", \"\u043F\u0435\u0442\", \"\u0441\u0430\u0431\"],\n  wide: [\n    \"\u043D\u0435\u0434\u0435\u043B\u0430\",\n    \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A\",\n    \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n    \"\u0441\u0440\u0435\u0434\u0430\",\n    \"\u0447\u0435\u0442\u0432\u0440\u0442\u043E\u043A\",\n    \"\u043F\u0435\u0442\u043E\u043A\",\n    \"\u0441\u0430\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  wide: {\n    am: \"\u043F\u0440\u0435\u0442\u043F\u043B\u0430\u0434\u043D\u0435\",\n    pm: \"\u043F\u043E\u043F\u043B\u0430\u0434\u043D\u0435\",\n    midnight: \"\u043F\u043E\u043B\u043D\u043E\u045C\",\n    noon: \"\u043D\u0430\u043F\u043B\u0430\u0434\u043D\u0435\",\n    morning: \"\u043D\u0430\u0443\u0442\u0440\u043E\",\n    afternoon: \"\u043F\u043E\u043F\u043B\u0430\u0434\u043D\u0435\",\n    evening: \"\u043D\u0430\u0432\u0435\u0447\u0435\u0440\",\n    night: \"\u043D\u043E\u045C\u0435\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"-\u0432\u0438\";\n      case 2:\n        return number + \"-\u0440\u0438\";\n      case 7:\n      case 8:\n        return number + \"-\u043C\u0438\";\n    }\n  }\n  return number + \"-\u0442\u0438\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?[\u0432\u0440\u043C\u0442][\u0438])?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u043F\u0440)?\u043D\\.?\\s?\u0435\\.?)/i,\n  abbreviated: /^((\u043F\u0440)?\u043D\\.?\\s?\u0435\\.?)/i,\n  wide: /^(\u043F\u0440\u0435\u0434 \u043D\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430|\u043D\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u043F/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u0432\u0440\u0442]?\u0438?)? \u043A\u0432.?/i,\n  wide: /^[1234](-?[\u0432\u0440\u0442]?\u0438?)? \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u043F\u0432\u0441\u0447]/i,\n  short: /^(\u043D\u0435|\u043F\u043E|\u0432\u0442|\u0441\u0440|\u0447\u0435|\u043F\u0435|\u0441\u0430)/i,\n  abbreviated: /^(\u043D\u0435\u0434|\u043F\u043E\u043D|\u0432\u0442\u043E|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043F\u0435\u0442|\u0441\u0430\u0431)/i,\n  wide: /^(\u043D\u0435\u0434\u0435\u043B\u0430|\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u043D\u0438\u043A|\u0432\u0442\u043E\u0440\u043D\u0438\u043A|\u0441\u0440\u0435\u0434\u0430|\u0447\u0435\u0442\u0432\u0440\u0442\u043E\u043A|\u043F\u0435\u0442\u043E\u043A|\u0441\u0430\u0431\u043E\u0442\u0430)/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u043F/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u043D[\u0435\u0434]/i, /^\u043F[\u043E\u043D]/i, /^\u0432\u0442/i, /^\u0441\u0440/i, /^\u0447[\u0435\u0442]/i, /^\u043F[\u0435\u0442]/i, /^\u0441[\u0430\u0431]/i],\n};\n\nconst matchMonthPatterns = {\n  abbreviated: /^(\u0458\u0430\u043D|\u0444\u0435\u0432|\u043C\u0430\u0440|\u0430\u043F\u0440|\u043C\u0430\u0458|\u0458\u0443\u043D|\u0458\u0443\u043B|\u0430\u0432\u0433|\u0441\u0435\u043F|\u043E\u043A\u0442|\u043D\u043E\u0435\u043C|\u0434\u0435\u043A)/i,\n  wide: /^(\u0458\u0430\u043D\u0443\u0430\u0440\u0438|\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438|\u043C\u0430\u0440\u0442|\u0430\u043F\u0440\u0438\u043B|\u043C\u0430\u0458|\u0458\u0443\u043D\u0438|\u0458\u0443\u043B\u0438|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043F\u0442\u0435\u043C\u0432\u0440\u0438|\u043E\u043A\u0442\u043E\u043C\u0432\u0440\u0438|\u043D\u043E\u0435\u043C\u0432\u0440\u0438|\u0434\u0435\u043A\u0435\u043C\u0432\u0440\u0438)/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^\u0458\u0430/i,\n    /^\u0424/i,\n    /^\u043C\u0430\u0440/i,\n    /^\u0430\u043F/i,\n    /^\u043C\u0430\u0458/i,\n    /^\u0458\u0443\u043D/i,\n    /^\u0458\u0443\u043B/i,\n    /^\u0430\u0432/i,\n    /^\u0441\u0435/i,\n    /^\u043E\u043A\u0442/i,\n    /^\u043D\u043E/i,\n    /^\u0434\u0435/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u043F\u0440\u0435\u0442\u043F|\u043F\u043E\u043F\u043B|\u043F\u043E\u043B\u043D\u043E\u045C|\u0443\u0442\u0440\u043E|\u043F\u043B\u0430\u0434\u043D\u0435|\u0432\u0435\u0447\u0435\u0440|\u043D\u043E\u045C)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /\u043F\u0440\u0435\u0442\u043F\u043B\u0430\u0434\u043D\u0435/i,\n    pm: /\u043F\u043E\u043F\u043B\u0430\u0434\u043D\u0435/i,\n    midnight: /\u043F\u043E\u043B\u043D\u043E\u045C/i,\n    noon: /\u043D\u0430\u043F\u043B\u0430\u0434\u043D\u0435/i,\n    morning: /\u043D\u0430\u0443\u0442\u0440\u043E/i,\n    afternoon: /\u043F\u043E\u043F\u043B\u0430\u0434\u043D\u0435/i,\n    evening: /\u043D\u0430\u0432\u0435\u0447\u0435\u0440/i,\n    night: /\u043D\u043E\u045C\u0435/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./mk/_lib/formatDistance.js\";\nimport { formatLong } from \"./mk/_lib/formatLong.js\";\nimport { formatRelative } from \"./mk/_lib/formatRelative.js\";\nimport { localize } from \"./mk/_lib/localize.js\";\nimport { match } from \"./mk/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Macedonian locale.\n * @language Macedonian\n * @iso-639-2 mkd\n * @author Petar Vlahu [@vlahupetar](https://github.com/vlahupetar)\n * @author Altrim Beqiri [@altrim](https://github.com/altrim)\n */\nexport const mk = {\n  code: \"mk\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default mk;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0441\u0435\u043A\u0443\u043D\u0434 \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439\",\n    other: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\",\n    other: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n  },\n\n  halfAMinute: \"\u0445\u0430\u0433\u0430\u0441 \u043C\u0438\u043D\u0443\u0442\",\n\n  lessThanXMinutes: {\n    one: \"\u043C\u0438\u043D\u0443\u0442 \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439\",\n    other: \"{{count}} \u043C\u0438\u043D\u0443\u0442 \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439\",\n  },\n\n  xMinutes: {\n    one: \"1 \u043C\u0438\u043D\u0443\u0442\",\n    other: \"{{count}} \u043C\u0438\u043D\u0443\u0442\",\n  },\n\n  aboutXHours: {\n    one: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 1 \u0446\u0430\u0433\",\n    other: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 {{count}} \u0446\u0430\u0433\",\n  },\n\n  xHours: {\n    one: \"1 \u0446\u0430\u0433\",\n    other: \"{{count}} \u0446\u0430\u0433\",\n  },\n\n  xDays: {\n    one: \"1 \u04E9\u0434\u04E9\u0440\",\n    other: \"{{count}} \u04E9\u0434\u04E9\u0440\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 1 \u0434\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433\",\n    other: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 {{count}} \u0434\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0434\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433\",\n    other: \"{{count}} \u0434\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433\",\n  },\n\n  aboutXMonths: {\n    one: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 1 \u0441\u0430\u0440\",\n    other: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 {{count}} \u0441\u0430\u0440\",\n  },\n\n  xMonths: {\n    one: \"1 \u0441\u0430\u0440\",\n    other: \"{{count}} \u0441\u0430\u0440\",\n  },\n\n  aboutXYears: {\n    one: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 1 \u0436\u0438\u043B\",\n    other: \"\u043E\u0439\u0440\u043E\u043B\u0446\u043E\u043E\u0433\u043E\u043E\u0440 {{count}} \u0436\u0438\u043B\",\n  },\n\n  xYears: {\n    one: \"1 \u0436\u0438\u043B\",\n    other: \"{{count}} \u0436\u0438\u043B\",\n  },\n\n  overXYears: {\n    one: \"1 \u0436\u0438\u043B \u0433\u0430\u0440\u0430\u043D\",\n    other: \"{{count}} \u0436\u0438\u043B \u0433\u0430\u0440\u0430\u043D\",\n  },\n\n  almostXYears: {\n    one: \"\u0431\u0430\u0440\u0430\u0433 1 \u0436\u0438\u043B\",\n    other: \"\u0431\u0430\u0440\u0430\u0433 {{count}} \u0436\u0438\u043B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    /**\n     * Append genitive case\n     */\n    const words = result.split(\" \");\n    const lastword = words.pop();\n    result = words.join(\" \");\n    switch (lastword) {\n      case \"\u0441\u0435\u043A\u0443\u043D\u0434\":\n        result += \" \u0441\u0435\u043A\u0443\u043D\u0434\u0438\u0439\u043D\";\n        break;\n      case \"\u043C\u0438\u043D\u0443\u0442\":\n        result += \" \u043C\u0438\u043D\u0443\u0442\u044B\u043D\";\n        break;\n      case \"\u0446\u0430\u0433\":\n        result += \" \u0446\u0430\u0433\u0438\u0439\u043D\";\n        break;\n      case \"\u04E9\u0434\u04E9\u0440\":\n        result += \" \u04E9\u0434\u0440\u0438\u0439\u043D\";\n        break;\n      case \"\u0441\u0430\u0440\":\n        result += \" \u0441\u0430\u0440\u044B\u043D\";\n        break;\n      case \"\u0436\u0438\u043B\":\n        result += \" \u0436\u0438\u043B\u0438\u0439\u043D\";\n        break;\n      case \"\u0445\u043E\u043D\u043E\u0433\":\n        result += \" \u0445\u043E\u043D\u043E\u0433\u0438\u0439\u043D\";\n        break;\n      case \"\u0433\u0430\u0440\u0430\u043D\":\n        result += \" \u0433\u0430\u0440\u0430\u043D\u044B\";\n        break;\n      case \"\u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439\":\n        result += \" \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439 \u0445\u0443\u0433\u0430\u0446\u0430\u0430\u043D\u044B\";\n        break;\n      default:\n        result += lastword + \"-\u043D\";\n    }\n\n    if (options.comparison && options.comparison > 0) {\n      return result + \" \u0434\u0430\u0440\u0430\u0430\";\n    } else {\n      return result + \" \u04E9\u043C\u043D\u04E9\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y '\u043E\u043D\u044B' MMMM'\u044B\u043D' d, EEEE '\u0433\u0430\u0440\u0430\u0433'\",\n  long: \"y '\u043E\u043D\u044B' MMMM'\u044B\u043D' d\",\n  medium: \"y '\u043E\u043D\u044B' MMM'\u044B\u043D' d\",\n  short: \"y.MM.dd\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u04E9\u043D\u0433\u04E9\u0440\u0441\u04E9\u043D' eeee '\u0433\u0430\u0440\u0430\u0433\u0438\u0439\u043D' p '\u0446\u0430\u0433\u0442'\",\n  yesterday: \"'\u04E9\u0447\u0438\u0433\u0434\u04E9\u0440' p '\u0446\u0430\u0433\u0442'\",\n  today: \"'\u04E9\u043D\u04E9\u04E9\u0434\u04E9\u0440' p '\u0446\u0430\u0433\u0442'\",\n  tomorrow: \"'\u043C\u0430\u0440\u0433\u0430\u0430\u0448' p '\u0446\u0430\u0433\u0442'\",\n  nextWeek: \"'\u0438\u0440\u044D\u0445' eeee '\u0433\u0430\u0440\u0430\u0433\u0438\u0439\u043D' p '\u0446\u0430\u0433\u0442'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u041D\u0422\u04E8\", \"\u041D\u0422\"],\n  abbreviated: [\"\u041D\u0422\u04E8\", \"\u041D\u0422\"],\n  wide: [\"\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D \u04E9\u043C\u043D\u04E9\u0445\", \"\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D\"],\n};\n\nconst quarterValues = {\n  narrow: [\"I\", \"II\", \"III\", \"IV\"],\n  abbreviated: [\"I \u0443\u043B\u0438\u0440\u0430\u043B\", \"II \u0443\u043B\u0438\u0440\u0430\u043B\", \"III \u0443\u043B\u0438\u0440\u0430\u043B\", \"IV \u0443\u043B\u0438\u0440\u0430\u043B\"],\n  wide: [\"1-\u0440 \u0443\u043B\u0438\u0440\u0430\u043B\", \"2-\u0440 \u0443\u043B\u0438\u0440\u0430\u043B\", \"3-\u0440 \u0443\u043B\u0438\u0440\u0430\u043B\", \"4-\u0440 \u0443\u043B\u0438\u0440\u0430\u043B\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\n    \"I\",\n    \"II\",\n    \"III\",\n    \"IV\",\n    \"V\",\n    \"VI\",\n    \"VII\",\n    \"VIII\",\n    \"IX\",\n    \"X\",\n    \"XI\",\n    \"XII\",\n  ],\n\n  abbreviated: [\n    \"1-\u0440 \u0441\u0430\u0440\",\n    \"2-\u0440 \u0441\u0430\u0440\",\n    \"3-\u0440 \u0441\u0430\u0440\",\n    \"4-\u0440 \u0441\u0430\u0440\",\n    \"5-\u0440 \u0441\u0430\u0440\",\n    \"6-\u0440 \u0441\u0430\u0440\",\n    \"7-\u0440 \u0441\u0430\u0440\",\n    \"8-\u0440 \u0441\u0430\u0440\",\n    \"9-\u0440 \u0441\u0430\u0440\",\n    \"10-\u0440 \u0441\u0430\u0440\",\n    \"11-\u0440 \u0441\u0430\u0440\",\n    \"12-\u0440 \u0441\u0430\u0440\",\n  ],\n\n  wide: [\n    \"\u041D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0425\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0414\u04E9\u0440\u04E9\u0432\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0417\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0414\u043E\u043B\u043E\u043E\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u041D\u0430\u0439\u043C\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0415\u0441\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0410\u0440\u0432\u0430\u043D\u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0410\u0440\u0432\u0430\u043D \u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\n    \"I\",\n    \"II\",\n    \"III\",\n    \"IV\",\n    \"V\",\n    \"VI\",\n    \"VII\",\n    \"VIII\",\n    \"IX\",\n    \"X\",\n    \"XI\",\n    \"XII\",\n  ],\n\n  abbreviated: [\n    \"1-\u0440 \u0441\u0430\u0440\",\n    \"2-\u0440 \u0441\u0430\u0440\",\n    \"3-\u0440 \u0441\u0430\u0440\",\n    \"4-\u0440 \u0441\u0430\u0440\",\n    \"5-\u0440 \u0441\u0430\u0440\",\n    \"6-\u0440 \u0441\u0430\u0440\",\n    \"7-\u0440 \u0441\u0430\u0440\",\n    \"8-\u0440 \u0441\u0430\u0440\",\n    \"9-\u0440 \u0441\u0430\u0440\",\n    \"10-\u0440 \u0441\u0430\u0440\",\n    \"11-\u0440 \u0441\u0430\u0440\",\n    \"12-\u0440 \u0441\u0430\u0440\",\n  ],\n\n  wide: [\n    \"\u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0434\u04E9\u0440\u04E9\u0432\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0434\u043E\u043B\u043E\u043E\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u043D\u0430\u0439\u043C\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0435\u0441\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n    \"\u0430\u0440\u0432\u0430\u043D\u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440\",\n    \"\u0430\u0440\u0432\u0430\u043D \u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u0414\", \"\u041C\", \"\u041B\", \"\u041F\", \"\u0411\", \"\u0411\"],\n  short: [\"\u041D\u044F\", \"\u0414\u0430\", \"\u041C\u044F\", \"\u041B\u0445\", \"\u041F\u04AF\", \"\u0411\u0430\", \"\u0411\u044F\"],\n  abbreviated: [\"\u041D\u044F\u043C\", \"\u0414\u0430\u0432\", \"\u041C\u044F\u0433\", \"\u041B\u0445\u0430\", \"\u041F\u04AF\u0440\", \"\u0411\u0430\u0430\", \"\u0411\u044F\u043C\"],\n  wide: [\"\u041D\u044F\u043C\", \"\u0414\u0430\u0432\u0430\u0430\", \"\u041C\u044F\u0433\u043C\u0430\u0440\", \"\u041B\u0445\u0430\u0433\u0432\u0430\", \"\u041F\u04AF\u0440\u044D\u0432\", \"\u0411\u0430\u0430\u0441\u0430\u043D\", \"\u0411\u044F\u043C\u0431\u0430\"],\n};\n\nconst formattingDayValues = {\n  narrow: [\"\u041D\", \"\u0414\", \"\u041C\", \"\u041B\", \"\u041F\", \"\u0411\", \"\u0411\"],\n  short: [\"\u041D\u044F\", \"\u0414\u0430\", \"\u041C\u044F\", \"\u041B\u0445\", \"\u041F\u04AF\", \"\u0411\u0430\", \"\u0411\u044F\"],\n  abbreviated: [\"\u041D\u044F\u043C\", \"\u0414\u0430\u0432\", \"\u041C\u044F\u0433\", \"\u041B\u0445\u0430\", \"\u041F\u04AF\u0440\", \"\u0411\u0430\u0430\", \"\u0411\u044F\u043C\"],\n  wide: [\"\u043D\u044F\u043C\", \"\u0434\u0430\u0432\u0430\u0430\", \"\u043C\u044F\u0433\u043C\u0430\u0440\", \"\u043B\u0445\u0430\u0433\u0432\u0430\", \"\u043F\u04AF\u0440\u044D\u0432\", \"\u0431\u0430\u0430\u0441\u0430\u043D\", \"\u0431\u044F\u043C\u0431\u0430\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u04AF.\u04E9.\",\n    pm: \"\u04AF.\u0445.\",\n    midnight: \"\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434\",\n    noon: \"\u04AF\u0434 \u0434\u0443\u043D\u0434\",\n    morning: \"\u04E9\u0433\u043B\u04E9\u04E9\",\n    afternoon: \"\u04E9\u0434\u04E9\u0440\",\n    evening: \"\u043E\u0440\u043E\u0439\",\n    night: \"\u0448\u04E9\u043D\u04E9\",\n  },\n  abbreviated: {\n    am: \"\u04AF.\u04E9.\",\n    pm: \"\u04AF.\u0445.\",\n    midnight: \"\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434\",\n    noon: \"\u04AF\u0434 \u0434\u0443\u043D\u0434\",\n    morning: \"\u04E9\u0433\u043B\u04E9\u04E9\",\n    afternoon: \"\u04E9\u0434\u04E9\u0440\",\n    evening: \"\u043E\u0440\u043E\u0439\",\n    night: \"\u0448\u04E9\u043D\u04E9\",\n  },\n  wide: {\n    am: \"\u04AF.\u04E9.\",\n    pm: \"\u04AF.\u0445.\",\n    midnight: \"\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434\",\n    noon: \"\u04AF\u0434 \u0434\u0443\u043D\u0434\",\n    morning: \"\u04E9\u0433\u043B\u04E9\u04E9\",\n    afternoon: \"\u04E9\u0434\u04E9\u0440\",\n    evening: \"\u043E\u0440\u043E\u0439\",\n    night: \"\u0448\u04E9\u043D\u04E9\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /\\d+/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u043D\u0442\u04E9|\u043D\u0442)/i,\n  abbreviated: /^(\u043D\u0442\u04E9|\u043D\u0442)/i,\n  wide: /^(\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D \u04E9\u043C\u043D\u04E9|\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u043D\u0442\u04E9|\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D \u04E9\u043C\u043D\u04E9)/i, /^(\u043D\u0442|\u043D\u0438\u0439\u0442\u0438\u0439\u043D \u0442\u043E\u043E\u043B\u043B\u044B\u043D)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^(iv|iii|ii|i)/i,\n  abbreviated: /^(iv|iii|ii|i) \u0443\u043B\u0438\u0440\u0430\u043B/i,\n  wide: /^[1-4]-\u0440 \u0443\u043B\u0438\u0440\u0430\u043B/i,\n};\nconst parseQuarterPatterns = {\n  any: [/^(i(\\s|$)|1)/i, /^(ii(\\s|$)|2)/i, /^(iii(\\s|$)|3)/i, /^(iv(\\s|$)|4)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,\n  abbreviated:\n    /^(1-\u0440 \u0441\u0430\u0440|2-\u0440 \u0441\u0430\u0440|3-\u0440 \u0441\u0430\u0440|4-\u0440 \u0441\u0430\u0440|5-\u0440 \u0441\u0430\u0440|6-\u0440 \u0441\u0430\u0440|7-\u0440 \u0441\u0430\u0440|8-\u0440 \u0441\u0430\u0440|9-\u0440 \u0441\u0430\u0440|10-\u0440 \u0441\u0430\u0440|11-\u0440 \u0441\u0430\u0440|12-\u0440 \u0441\u0430\u0440)/i,\n  wide: /^(\u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440|\u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0434\u04E9\u0440\u04E9\u0432\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440|\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0434\u043E\u043B\u043E\u043E\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u043D\u0430\u0439\u043C\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0435\u0441\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440|\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0430\u0440\u0432\u0430\u043D \u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440 \u0441\u0430\u0440|\u0430\u0440\u0432\u0430\u043D \u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^i$/i,\n    /^ii$/i,\n    /^iii$/i,\n    /^iv$/i,\n    /^v$/i,\n    /^vi$/i,\n    /^vii$/i,\n    /^viii$/i,\n    /^ix$/i,\n    /^x$/i,\n    /^xi$/i,\n    /^xii$/i,\n  ],\n\n  any: [\n    /^(1|\u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440)/i,\n    /^(2|\u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(3|\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(4|\u0434\u04E9\u0440\u04E9\u0432\u0434\u04AF\u0433\u044D\u044D\u0440)/i,\n    /^(5|\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(6|\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(7|\u0434\u043E\u043B\u043E\u043E\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(8|\u043D\u0430\u0439\u043C\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(9|\u0435\u0441\u0434\u04AF\u0433\u044D\u044D\u0440)/i,\n    /^(10|\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n    /^(11|\u0430\u0440\u0432\u0430\u043D \u043D\u044D\u0433\u0434\u04AF\u0433\u044D\u044D\u0440)/i,\n    /^(12|\u0430\u0440\u0432\u0430\u043D \u0445\u043E\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440)/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u0434\u043C\u043B\u043F\u0431\u0431]/i,\n  short: /^(\u043D\u044F|\u0434\u0430|\u043C\u044F|\u043B\u0445|\u043F\u04AF|\u0431\u0430|\u0431\u044F)/i,\n  abbreviated: /^(\u043D\u044F\u043C|\u0434\u0430\u0432|\u043C\u044F\u0433|\u043B\u0445\u0430|\u043F\u04AF\u0440|\u0431\u0430\u0430|\u0431\u044F\u043C)/i,\n  wide: /^(\u043D\u044F\u043C|\u0434\u0430\u0432\u0430\u0430|\u043C\u044F\u0433\u043C\u0430\u0440|\u043B\u0445\u0430\u0433\u0432\u0430|\u043F\u04AF\u0440\u044D\u0432|\u0431\u0430\u0430\u0441\u0430\u043D|\u0431\u044F\u043C\u0431\u0430)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u0434/i, /^\u043C/i, /^\u043B/i, /^\u043F/i, /^\u0431/i, /^\u0431/i],\n  any: [/^\u043D\u044F/i, /^\u0434\u0430/i, /^\u043C\u044F/i, /^\u043B\u0445/i, /^\u043F\u04AF/i, /^\u0431\u0430/i, /^\u0431\u044F/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u04AF\\.\u04E9\\.|\u04AF\\.\u0445\\.|\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434|\u04AF\u0434 \u0434\u0443\u043D\u0434|\u04E9\u0433\u043B\u04E9\u04E9|\u04E9\u0434\u04E9\u0440|\u043E\u0440\u043E\u0439|\u0448\u04E9\u043D\u04E9)/i,\n  any: /^(\u04AF\\.\u04E9\\.|\u04AF\\.\u0445\\.|\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434|\u04AF\u0434 \u0434\u0443\u043D\u0434|\u04E9\u0433\u043B\u04E9\u04E9|\u04E9\u0434\u04E9\u0440|\u043E\u0440\u043E\u0439|\u0448\u04E9\u043D\u04E9)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u04AF\\.\u04E9\\./i,\n    pm: /^\u04AF\\.\u0445\\./i,\n    midnight: /^\u0448\u04E9\u043D\u04E9 \u0434\u0443\u043D\u0434/i,\n    noon: /^\u04AF\u0434 \u0434\u0443\u043D\u0434/i,\n    morning: /\u04E9\u0433\u043B\u04E9\u04E9/i,\n    afternoon: /\u04E9\u0434\u04E9\u0440/i,\n    evening: /\u043E\u0440\u043E\u0439/i,\n    night: /\u0448\u04E9\u043D\u04E9/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./mn/_lib/formatDistance.js\";\nimport { formatLong } from \"./mn/_lib/formatLong.js\";\nimport { formatRelative } from \"./mn/_lib/formatRelative.js\";\nimport { localize } from \"./mn/_lib/localize.js\";\nimport { match } from \"./mn/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Mongolian locale.\n * @language Mongolian\n * @iso-639-2 mon\n * @author Bilguun Ochirbat [@bilguun0203](https://github.com/bilguun0203)\n */\nexport const mn = {\n  code: \"mn\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default mn;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"kurang dari 1 saat\",\n    other: \"kurang dari {{count}} saat\",\n  },\n\n  xSeconds: {\n    one: \"1 saat\",\n    other: \"{{count}} saat\",\n  },\n\n  halfAMinute: \"setengah minit\",\n\n  lessThanXMinutes: {\n    one: \"kurang dari 1 minit\",\n    other: \"kurang dari {{count}} minit\",\n  },\n\n  xMinutes: {\n    one: \"1 minit\",\n    other: \"{{count}} minit\",\n  },\n\n  aboutXHours: {\n    one: \"sekitar 1 jam\",\n    other: \"sekitar {{count}} jam\",\n  },\n\n  xHours: {\n    one: \"1 jam\",\n    other: \"{{count}} jam\",\n  },\n\n  xDays: {\n    one: \"1 hari\",\n    other: \"{{count}} hari\",\n  },\n\n  aboutXWeeks: {\n    one: \"sekitar 1 minggu\",\n    other: \"sekitar {{count}} minggu\",\n  },\n\n  xWeeks: {\n    one: \"1 minggu\",\n    other: \"{{count}} minggu\",\n  },\n\n  aboutXMonths: {\n    one: \"sekitar 1 bulan\",\n    other: \"sekitar {{count}} bulan\",\n  },\n\n  xMonths: {\n    one: \"1 bulan\",\n    other: \"{{count}} bulan\",\n  },\n\n  aboutXYears: {\n    one: \"sekitar 1 tahun\",\n    other: \"sekitar {{count}} tahun\",\n  },\n\n  xYears: {\n    one: \"1 tahun\",\n    other: \"{{count}} tahun\",\n  },\n\n  overXYears: {\n    one: \"lebih dari 1 tahun\",\n    other: \"lebih dari {{count}} tahun\",\n  },\n\n  almostXYears: {\n    one: \"hampir 1 tahun\",\n    other: \"hampir {{count}} tahun\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"dalam masa \" + result;\n    } else {\n      return result + \" yang lalu\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"d/M/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH.mm.ss\",\n  long: \"HH.mm.ss\",\n  medium: \"HH.mm\",\n  short: \"HH.mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'pukul' {{time}}\",\n  long: \"{{date}} 'pukul' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'lepas pada jam' p\",\n  yesterday: \"'Semalam pada jam' p\",\n  today: \"'Hari ini pada jam' p\",\n  tomorrow: \"'Esok pada jam' p\",\n  nextWeek: \"eeee 'pada jam' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// Most data for localization are taken from this page\n// https://www.unicode.org/cldr/charts/32/summary/ms.html\nconst eraValues = {\n  narrow: [\"SM\", \"M\"],\n  abbreviated: [\"SM\", \"M\"],\n  wide: [\"Sebelum Masihi\", \"Masihi\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"S1\", \"S2\", \"S3\", \"S4\"],\n  wide: [\"Suku pertama\", \"Suku kedua\", \"Suku ketiga\", \"Suku keempat\"],\n};\n\n// Note: in Malay, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"O\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mac\",\n    \"Apr\",\n    \"Mei\",\n    \"Jun\",\n    \"Jul\",\n    \"Ogo\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dis\",\n  ],\n\n  wide: [\n    \"Januari\",\n    \"Februari\",\n    \"Mac\",\n    \"April\",\n    \"Mei\",\n    \"Jun\",\n    \"Julai\",\n    \"Ogos\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Disember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"A\", \"I\", \"S\", \"R\", \"K\", \"J\", \"S\"],\n  short: [\"Ahd\", \"Isn\", \"Sel\", \"Rab\", \"Kha\", \"Jum\", \"Sab\"],\n  abbreviated: [\"Ahd\", \"Isn\", \"Sel\", \"Rab\", \"Kha\", \"Jum\", \"Sab\"],\n  wide: [\"Ahad\", \"Isnin\", \"Selasa\", \"Rabu\", \"Khamis\", \"Jumaat\", \"Sabtu\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"tgh malam\",\n    noon: \"tgh hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"tengah hari\",\n    evening: \"petang\",\n    night: \"malam\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  // Can't use \"pertama\", \"kedua\" because can't be parsed\n  return \"ke-\" + Number(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^ke-(\\d+)?/i;\nconst parseOrdinalNumberPattern = /petama|\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(sm|m)/i,\n  abbreviated: /^(s\\.?\\s?m\\.?|m\\.?)/i,\n  wide: /^(sebelum masihi|masihi)/i,\n};\nconst parseEraPatterns = {\n  any: [/^s/i, /^(m)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^S[1234]/i,\n  wide: /Suku (pertama|kedua|ketiga|keempat)/i,\n};\nconst parseQuarterPatterns = {\n  any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,\n  wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^o/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^ma/i,\n    /^ap/i,\n    /^me/i,\n    /^jun/i,\n    /^jul/i,\n    /^og/i,\n    /^s/i,\n    /^ok/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[aisrkj]/i,\n  short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,\n  abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,\n  wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],\n  any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,\n  any: /^([ap]\\.?\\s?m\\.?|tengah malam|tengah hari|pagi|petang|malam)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^pm/i,\n    midnight: /^tengah m/i,\n    noon: /^tengah h/i,\n    morning: /pa/i,\n    afternoon: /tengah h/i,\n    evening: /pe/i,\n    night: /m/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ms/_lib/formatDistance.js\";\nimport { formatLong } from \"./ms/_lib/formatLong.js\";\nimport { formatRelative } from \"./ms/_lib/formatRelative.js\";\nimport { localize } from \"./ms/_lib/localize.js\";\nimport { match } from \"./ms/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Malay locale.\n * @language Malay\n * @iso-639-2 msa\n * @author Ruban Selvarajah [@Zyten](https://github.com/Zyten)\n */\nexport const ms = {\n  code: \"ms\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ms;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"inqas minn sekonda\",\n    other: \"inqas minn {{count}} sekondi\",\n  },\n\n  xSeconds: {\n    one: \"sekonda\",\n    other: \"{{count}} sekondi\",\n  },\n\n  halfAMinute: \"nofs minuta\",\n\n  lessThanXMinutes: {\n    one: \"inqas minn minuta\",\n    other: \"inqas minn {{count}} minuti\",\n  },\n\n  xMinutes: {\n    one: \"minuta\",\n    other: \"{{count}} minuti\",\n  },\n\n  aboutXHours: {\n    one: \"madwar sieg\u0127a\",\n    other: \"madwar {{count}} sieg\u0127at\",\n  },\n\n  xHours: {\n    one: \"sieg\u0127a\",\n    other: \"{{count}} sieg\u0127at\",\n  },\n\n  xDays: {\n    one: \"\u0121urnata\",\n    other: \"{{count}} \u0121ranet\",\n  },\n\n  aboutXWeeks: {\n    one: \"madwar \u0121img\u0127a\",\n    other: \"madwar {{count}} \u0121img\u0127at\",\n  },\n\n  xWeeks: {\n    one: \"\u0121img\u0127a\",\n    other: \"{{count}} \u0121img\u0127at\",\n  },\n\n  aboutXMonths: {\n    one: \"madwar xahar\",\n    other: \"madwar {{count}} xhur\",\n  },\n\n  xMonths: {\n    one: \"xahar\",\n    other: \"{{count}} xhur\",\n  },\n\n  aboutXYears: {\n    one: \"madwar sena\",\n    two: \"madwar sentejn\",\n    other: \"madwar {{count}} snin\",\n  },\n\n  xYears: {\n    one: \"sena\",\n    two: \"sentejn\",\n    other: \"{{count}} snin\",\n  },\n\n  overXYears: {\n    one: \"aktar minn sena\",\n    two: \"aktar minn sentejn\",\n    other: \"aktar minn {{count}} snin\",\n  },\n\n  almostXYears: {\n    one: \"kwa\u017Ci sena\",\n    two: \"kwa\u017Ci sentejn\",\n    other: \"kwa\u017Ci {{count}} snin\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2 && tokenValue.two) {\n    result = tokenValue.two;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"f'\" + result;\n    } else {\n      return result + \" ilu\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'li g\u0127adda' 'fil-'p\",\n  yesterday: \"'Il-biera\u0127 fil-'p\",\n  today: \"'Illum fil-'p\",\n  tomorrow: \"'G\u0127ada fil-'p\",\n  nextWeek: \"eeee 'fil-'p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"Q\", \"W\"],\n  abbreviated: [\"QK\", \"WK\"],\n  wide: [\"qabel Kristu\", \"wara Kristu\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1. kwart\", \"2. kwart\", \"3. kwart\", \"4. kwart\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"\u0120\", \"L\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Fra\",\n    \"Mar\",\n    \"Apr\",\n    \"Mej\",\n    \"\u0120un\",\n    \"Lul\",\n    \"Aww\",\n    \"Set\",\n    \"Ott\",\n    \"Nov\",\n    \"Di\u010B\",\n  ],\n\n  wide: [\n    \"Jannar\",\n    \"Frar\",\n    \"Marzu\",\n    \"April\",\n    \"Mejju\",\n    \"\u0120unju\",\n    \"Lulju\",\n    \"Awwissu\",\n    \"Settembru\",\n    \"Ottubru\",\n    \"Novembru\",\n    \"Di\u010Bembru\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u0126\", \"T\", \"T\", \"E\", \"\u0126\", \"\u0120\", \"S\"],\n  short: [\"\u0126a\", \"Tn\", \"Tl\", \"Er\", \"\u0126a\", \"\u0120i\", \"Si\"],\n  abbreviated: [\"\u0126ad\", \"Tne\", \"Tli\", \"Erb\", \"\u0126am\", \"\u0120im\", \"Sib\"],\n  wide: [\n    \"Il-\u0126add\",\n    \"It-Tnejn\",\n    \"It-Tlieta\",\n    \"L-Erbg\u0127a\",\n    \"Il-\u0126amis\",\n    \"Il-\u0120img\u0127a\",\n    \"Is-Sibt\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"lejl\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"lejl\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"lejl\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"billejl\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"billejl\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\u0127axija\",\n    night: \"billejl\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u00BA\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00BA)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(q|w)/i,\n  abbreviated: /^(q\\.?\\s?k\\.?|b\\.?\\s?c\\.?\\s?e\\.?|w\\.?\\s?k\\.?)/i,\n  wide: /^(qabel kristu|before common era|wara kristu|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(q|b)/i, /^(w|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^k[1234]/i,\n  wide: /^[1234](\\.)? kwart/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmaglsond]/i,\n  abbreviated: /^(jan|fra|mar|apr|mej|\u0121un|lul|aww|set|ott|nov|di\u010B)/i,\n  wide: /^(jannar|frar|marzu|april|mejju|\u0121unju|lulju|awwissu|settembru|ottubru|novembru|di\u010Bembru)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^\u0121/i,\n    /^l/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mej/i,\n    /^\u0121/i,\n    /^l/i,\n    /^aw/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u0127te\u0121s]/i,\n  short: /^(\u0127a|tn|tl|er|\u0127a|\u0121i|si)/i,\n  abbreviated: /^(\u0127ad|tne|tli|erb|\u0127am|\u0121im|sib)/i,\n  wide: /^(il-\u0127add|it-tnejn|it-tlieta|l-erbg\u0127a|il-\u0127amis|il-\u0121img\u0127a|is-sibt)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0127/i, /^t/i, /^t/i, /^e/i, /^\u0127/i, /^\u0121/i, /^s/i],\n  any: [\n    /^(il-)?\u0127ad/i,\n    /^(it-)?tn/i,\n    /^(it-)?tl/i,\n    /^(l-)?er/i,\n    /^(il-)?ham/i,\n    /^(il-)?\u0121i/i,\n    /^(is-)?si/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (g\u0127odwa|wara nofsinhar|filg\u0127axija|lejl))/i,\n  any: /^([ap]\\.?\\s?m\\.?|f'nofsillejl|f'nofsinhar|(ta') (g\u0127odwa|wara nofsinhar|filg\u0127axija|lejl))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^f'nofsillejl/i,\n    noon: /^f'nofsinhar/i,\n    morning: /g\u0127odwa/i,\n    afternoon: /wara(\\s.*)nofsinhar/i,\n    evening: /filg\u0127axija/i,\n    night: /lejl/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./mt/_lib/formatDistance.js\";\nimport { formatLong } from \"./mt/_lib/formatLong.js\";\nimport { formatRelative } from \"./mt/_lib/formatRelative.js\";\nimport { localize } from \"./mt/_lib/localize.js\";\nimport { match } from \"./mt/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Maltese locale.\n * @language Maltese\n * @iso-639-2 mlt\n * @author Andras Matzon [@amatzon](@link https://github.com/amatzon)\n * @author Bryan Borg [@bryanMt](@link https://github.com/bryanMt)\n */\nexport const mt = {\n  code: \"mt\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default mt;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mindre enn ett sekund\",\n    other: \"mindre enn {{count}} sekunder\",\n  },\n\n  xSeconds: {\n    one: \"ett sekund\",\n    other: \"{{count}} sekunder\",\n  },\n\n  halfAMinute: \"et halvt minutt\",\n\n  lessThanXMinutes: {\n    one: \"mindre enn ett minutt\",\n    other: \"mindre enn {{count}} minutter\",\n  },\n\n  xMinutes: {\n    one: \"ett minutt\",\n    other: \"{{count}} minutter\",\n  },\n\n  aboutXHours: {\n    one: \"omtrent en time\",\n    other: \"omtrent {{count}} timer\",\n  },\n\n  xHours: {\n    one: \"en time\",\n    other: \"{{count}} timer\",\n  },\n\n  xDays: {\n    one: \"en dag\",\n    other: \"{{count}} dager\",\n  },\n\n  aboutXWeeks: {\n    one: \"omtrent en uke\",\n    other: \"omtrent {{count}} uker\",\n  },\n\n  xWeeks: {\n    one: \"en uke\",\n    other: \"{{count}} uker\",\n  },\n\n  aboutXMonths: {\n    one: \"omtrent en m\u00E5ned\",\n    other: \"omtrent {{count}} m\u00E5neder\",\n  },\n\n  xMonths: {\n    one: \"en m\u00E5ned\",\n    other: \"{{count}} m\u00E5neder\",\n  },\n\n  aboutXYears: {\n    one: \"omtrent ett \u00E5r\",\n    other: \"omtrent {{count}} \u00E5r\",\n  },\n\n  xYears: {\n    one: \"ett \u00E5r\",\n    other: \"{{count}} \u00E5r\",\n  },\n\n  overXYears: {\n    one: \"over ett \u00E5r\",\n    other: \"over {{count}} \u00E5r\",\n  },\n\n  almostXYears: {\n    one: \"nesten ett \u00E5r\",\n    other: \"nesten {{count}} \u00E5r\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"om \" + result;\n    } else {\n      return result + \" siden\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"'kl'. HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kl.' {{time}}\",\n  long: \"{{date}} 'kl.' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'forrige' eeee 'kl.' p\",\n  yesterday: \"'i g\u00E5r kl.' p\",\n  today: \"'i dag kl.' p\",\n  tomorrow: \"'i morgen kl.' p\",\n  nextWeek: \"EEEE 'kl.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\n  wide: [\"f\u00F8r Kristus\", \"etter Kristus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mars\",\n    \"apr.\",\n    \"mai\",\n    \"juni\",\n    \"juli\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mars\",\n    \"april\",\n    \"mai\",\n    \"juni\",\n    \"juli\",\n    \"august\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\n  short: [\"s\u00F8\", \"ma\", \"ti\", \"on\", \"to\", \"fr\", \"l\u00F8\"],\n  abbreviated: [\"s\u00F8n\", \"man\", \"tir\", \"ons\", \"tor\", \"fre\", \"l\u00F8r\"],\n  wide: [\n    \"s\u00F8ndag\",\n    \"mandag\",\n    \"tirsdag\",\n    \"onsdag\",\n    \"torsdag\",\n    \"fredag\",\n    \"l\u00F8rdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 etterm.\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natten\",\n  },\n  abbreviated: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 etterm.\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natten\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morgenen\",\n    afternoon: \"p\u00E5 ettermiddagen\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natten\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  wide: /^(f\u00F8r Kristus|f\u00F8r v\u00E5r tid|etter Kristus|v\u00E5r tid)/i,\n};\nconst parseEraPatterns = {\n  any: [/^f/i, /^e/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\n  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^aug/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtofl]/i,\n  short: /^(s\u00F8|ma|ti|on|to|fr|l\u00F8)/i,\n  abbreviated: /^(s\u00F8n|man|tir|ons|tor|fre|l\u00F8r)/i,\n  wide: /^(s\u00F8ndag|mandag|tirsdag|onsdag|torsdag|fredag|l\u00F8rdag)/i,\n};\nconst parseDayPatterns = {\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(midnatt|middag|(p\u00E5) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(p\u00E5) (morgenen|ettermiddagen|kvelden|natten))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a(\\.?\\s?m\\.?)?$/i,\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\n    midnight: /^midn/i,\n    noon: /^midd/i,\n    morning: /morgen/i,\n    afternoon: /ettermiddag/i,\n    evening: /kveld/i,\n    night: /natt/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./nb/_lib/formatDistance.js\";\nimport { formatLong } from \"./nb/_lib/formatLong.js\";\nimport { formatRelative } from \"./nb/_lib/formatRelative.js\";\nimport { localize } from \"./nb/_lib/localize.js\";\nimport { match } from \"./nb/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Norwegian Bokm\u00E5l locale.\n * @language Norwegian Bokm\u00E5l\n * @iso-639-2 nob\n * @author Hans-Kristian Koren [@Hanse](https://github.com/Hanse)\n * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)\n * @author Dag Stuan [@dagstuan](https://github.com/dagstuan)\n */\nexport const nb = {\n  code: \"nb\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default nb;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"minder dan een seconde\",\n    other: \"minder dan {{count}} seconden\",\n  },\n\n  xSeconds: {\n    one: \"1 seconde\",\n    other: \"{{count}} seconden\",\n  },\n\n  halfAMinute: \"een halve minuut\",\n\n  lessThanXMinutes: {\n    one: \"minder dan een minuut\",\n    other: \"minder dan {{count}} minuten\",\n  },\n\n  xMinutes: {\n    one: \"een minuut\",\n    other: \"{{count}} minuten\",\n  },\n\n  aboutXHours: {\n    one: \"ongeveer 1 uur\",\n    other: \"ongeveer {{count}} uur\",\n  },\n\n  xHours: {\n    one: \"1 uur\",\n    other: \"{{count}} uur\",\n  },\n\n  xDays: {\n    one: \"1 dag\",\n    other: \"{{count}} dagen\",\n  },\n\n  aboutXWeeks: {\n    one: \"ongeveer 1 week\",\n    other: \"ongeveer {{count}} weken\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weken\",\n  },\n\n  aboutXMonths: {\n    one: \"ongeveer 1 maand\",\n    other: \"ongeveer {{count}} maanden\",\n  },\n\n  xMonths: {\n    one: \"1 maand\",\n    other: \"{{count}} maanden\",\n  },\n\n  aboutXYears: {\n    one: \"ongeveer 1 jaar\",\n    other: \"ongeveer {{count}} jaar\",\n  },\n\n  xYears: {\n    one: \"1 jaar\",\n    other: \"{{count}} jaar\",\n  },\n\n  overXYears: {\n    one: \"meer dan 1 jaar\",\n    other: \"meer dan {{count}} jaar\",\n  },\n\n  almostXYears: {\n    one: \"bijna 1 jaar\",\n    other: \"bijna {{count}} jaar\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"over \" + result;\n    } else {\n      return result + \" geleden\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd-MM-y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'om' {{time}}\",\n  long: \"{{date}} 'om' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'afgelopen' eeee 'om' p\",\n  yesterday: \"'gisteren om' p\",\n  today: \"'vandaag om' p\",\n  tomorrow: \"'morgen om' p\",\n  nextWeek: \"eeee 'om' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"v.C.\", \"n.C.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"voor Christus\", \"na Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1e kwartaal\", \"2e kwartaal\", \"3e kwartaal\", \"4e kwartaal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mrt.\",\n    \"apr.\",\n    \"mei\",\n    \"jun.\",\n    \"jul.\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"januari\",\n    \"februari\",\n    \"maart\",\n    \"april\",\n    \"mei\",\n    \"juni\",\n    \"juli\",\n    \"augustus\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"december\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"Z\", \"M\", \"D\", \"W\", \"D\", \"V\", \"Z\"],\n  short: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n  abbreviated: [\"zon\", \"maa\", \"din\", \"woe\", \"don\", \"vri\", \"zat\"],\n  wide: [\n    \"zondag\",\n    \"maandag\",\n    \"dinsdag\",\n    \"woensdag\",\n    \"donderdag\",\n    \"vrijdag\",\n    \"zaterdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middaguur\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s middags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middaguur\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s middags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middaguur\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s middags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"e\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([vn]\\.? ?C\\.?)/,\n  abbreviated: /^([vn]\\. ?Chr\\.?)/,\n  wide: /^((voor|na) Christus)/,\n};\nconst parseEraPatterns = {\n  any: [/^v/, /^n/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K[1234]/i,\n  wide: /^[1234]e kwartaal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\n  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^jan/i,\n    /^feb/i,\n    /^m(r|a)/i,\n    /^apr/i,\n    /^mei/i,\n    /^jun/i,\n    /^jul/i,\n    /^aug/i,\n    /^sep/i,\n    /^okt/i,\n    /^nov/i,\n    /^dec/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[zmdwv]/i,\n  short: /^(zo|ma|di|wo|do|vr|za)/i,\n  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,\n  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],\n  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /^middernacht/i,\n    noon: /^het middaguur/i,\n    morning: /ochtend/i,\n    afternoon: /middag/i,\n    evening: /avond/i,\n    night: /nacht/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./nl/_lib/formatDistance.js\";\nimport { formatLong } from \"./nl/_lib/formatLong.js\";\nimport { formatRelative } from \"./nl/_lib/formatRelative.js\";\nimport { localize } from \"./nl/_lib/localize.js\";\nimport { match } from \"./nl/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Dutch locale.\n * @language Dutch\n * @iso-639-2 nld\n * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)\n * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)\n * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)\n * @author Edo Rivai [@edorivai](https://github.com/edorivai)\n * @author Niels Keurentjes [@curry684](https://github.com/curry684)\n * @author Stefan Vermaas [@stefanvermaas](https://github.com/stefanvermaas)\n */\nexport const nl = {\n  code: \"nl\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default nl;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"minder dan een seconde\",\n    other: \"minder dan {{count}} seconden\",\n  },\n\n  xSeconds: {\n    one: \"1 seconde\",\n    other: \"{{count}} seconden\",\n  },\n\n  halfAMinute: \"een halve minuut\",\n\n  lessThanXMinutes: {\n    one: \"minder dan een minuut\",\n    other: \"minder dan {{count}} minuten\",\n  },\n\n  xMinutes: {\n    one: \"een minuut\",\n    other: \"{{count}} minuten\",\n  },\n\n  aboutXHours: {\n    one: \"ongeveer 1 uur\",\n    other: \"ongeveer {{count}} uur\",\n  },\n\n  xHours: {\n    one: \"1 uur\",\n    other: \"{{count}} uur\",\n  },\n\n  xDays: {\n    one: \"1 dag\",\n    other: \"{{count}} dagen\",\n  },\n\n  aboutXWeeks: {\n    one: \"ongeveer 1 week\",\n    other: \"ongeveer {{count}} weken\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weken\",\n  },\n\n  aboutXMonths: {\n    one: \"ongeveer 1 maand\",\n    other: \"ongeveer {{count}} maanden\",\n  },\n\n  xMonths: {\n    one: \"1 maand\",\n    other: \"{{count}} maanden\",\n  },\n\n  aboutXYears: {\n    one: \"ongeveer 1 jaar\",\n    other: \"ongeveer {{count}} jaar\",\n  },\n\n  xYears: {\n    one: \"1 jaar\",\n    other: \"{{count}} jaar\",\n  },\n\n  overXYears: {\n    one: \"meer dan 1 jaar\",\n    other: \"meer dan {{count}} jaar\",\n  },\n\n  almostXYears: {\n    one: \"bijna 1 jaar\",\n    other: \"bijna {{count}} jaar\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"over \" + result;\n    } else {\n      return result + \" geleden\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'om' {{time}}\",\n  long: \"{{date}} 'om' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'vorige' eeee 'om' p\",\n  yesterday: \"'gisteren om' p\",\n  today: \"'vandaag om' p\",\n  tomorrow: \"'morgen om' p\",\n  nextWeek: \"eeee 'om' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"v.C.\", \"n.C.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"voor Christus\", \"na Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1e kwartaal\", \"2e kwartaal\", \"3e kwartaal\", \"4e kwartaal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mrt.\",\n    \"apr.\",\n    \"mei\",\n    \"jun.\",\n    \"jul.\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"januari\",\n    \"februari\",\n    \"maart\",\n    \"april\",\n    \"mei\",\n    \"juni\",\n    \"juli\",\n    \"augustus\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"december\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"Z\", \"M\", \"D\", \"W\", \"D\", \"V\", \"Z\"],\n  short: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n  abbreviated: [\"zon\", \"maa\", \"din\", \"woe\", \"don\", \"vri\", \"zat\"],\n  wide: [\n    \"zondag\",\n    \"maandag\",\n    \"dinsdag\",\n    \"woensdag\",\n    \"donderdag\",\n    \"vrijdag\",\n    \"zaterdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middag\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s namiddags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middag\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s namiddags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"middernacht\",\n    noon: \"het middag\",\n    morning: \"'s ochtends\",\n    afternoon: \"'s namiddags\",\n    evening: \"'s avonds\",\n    night: \"'s nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"e\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([vn]\\.? ?C\\.?)/,\n  abbreviated: /^([vn]\\. ?Chr\\.?)/,\n  wide: /^((voor|na) Christus)/,\n};\nconst parseEraPatterns = {\n  any: [/^v/, /^n/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K[1234]/i,\n  wide: /^[1234]e kwartaal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\n  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^jan/i,\n    /^feb/i,\n    /^m(r|a)/i,\n    /^apr/i,\n    /^mei/i,\n    /^jun/i,\n    /^jul/i,\n    /^aug/i,\n    /^sep/i,\n    /^okt/i,\n    /^nov/i,\n    /^dec/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[zmdwv]/i,\n  short: /^(zo|ma|di|wo|do|vr|za)/i,\n  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,\n  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],\n  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /^middernacht/i,\n    noon: /^het middaguur/i,\n    morning: /ochtend/i,\n    afternoon: /middag/i,\n    evening: /avond/i,\n    night: /nacht/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./nl-BE/_lib/formatDistance.js\";\nimport { formatLong } from \"./nl-BE/_lib/formatLong.js\";\nimport { formatRelative } from \"./nl-BE/_lib/formatRelative.js\";\nimport { localize } from \"./nl-BE/_lib/localize.js\";\nimport { match } from \"./nl-BE/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Dutch locale.\n * @language Dutch\n * @iso-639-2 nld\n * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)\n * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)\n * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)\n * @author Alex Hoeing [@dcbn](https://github.com/dcbn)\n */\nexport const nlBE = {\n  code: \"nl-BE\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default nlBE;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mindre enn eitt sekund\",\n    other: \"mindre enn {{count}} sekund\",\n  },\n\n  xSeconds: {\n    one: \"eitt sekund\",\n    other: \"{{count}} sekund\",\n  },\n\n  halfAMinute: \"eit halvt minutt\",\n\n  lessThanXMinutes: {\n    one: \"mindre enn eitt minutt\",\n    other: \"mindre enn {{count}} minutt\",\n  },\n\n  xMinutes: {\n    one: \"eitt minutt\",\n    other: \"{{count}} minutt\",\n  },\n\n  aboutXHours: {\n    one: \"omtrent ein time\",\n    other: \"omtrent {{count}} timar\",\n  },\n\n  xHours: {\n    one: \"ein time\",\n    other: \"{{count}} timar\",\n  },\n\n  xDays: {\n    one: \"ein dag\",\n    other: \"{{count}} dagar\",\n  },\n\n  aboutXWeeks: {\n    one: \"omtrent ei veke\",\n    other: \"omtrent {{count}} veker\",\n  },\n\n  xWeeks: {\n    one: \"ei veke\",\n    other: \"{{count}} veker\",\n  },\n\n  aboutXMonths: {\n    one: \"omtrent ein m\u00E5nad\",\n    other: \"omtrent {{count}} m\u00E5nader\",\n  },\n\n  xMonths: {\n    one: \"ein m\u00E5nad\",\n    other: \"{{count}} m\u00E5nader\",\n  },\n\n  aboutXYears: {\n    one: \"omtrent eitt \u00E5r\",\n    other: \"omtrent {{count}} \u00E5r\",\n  },\n\n  xYears: {\n    one: \"eitt \u00E5r\",\n    other: \"{{count}} \u00E5r\",\n  },\n\n  overXYears: {\n    one: \"over eitt \u00E5r\",\n    other: \"over {{count}} \u00E5r\",\n  },\n\n  almostXYears: {\n    one: \"nesten eitt \u00E5r\",\n    other: \"nesten {{count}} \u00E5r\",\n  },\n};\n\nconst wordMapping = [\n  \"null\",\n  \"ein\",\n  \"to\",\n  \"tre\",\n  \"fire\",\n  \"fem\",\n  \"seks\",\n  \"sju\",\n  \"\u00E5tte\",\n  \"ni\",\n  \"ti\",\n  \"elleve\",\n  \"tolv\",\n];\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\n      \"{{count}}\",\n      count < 13 ? wordMapping[count] : String(count),\n    );\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"om \" + result;\n    } else {\n      return result + \" sidan\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"'kl'. HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kl.' {{time}}\",\n  long: \"{{date}} 'kl.' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'f\u00F8rre' eeee 'kl.' p\",\n  yesterday: \"'i g\u00E5r kl.' p\",\n  today: \"'i dag kl.' p\",\n  tomorrow: \"'i morgon kl.' p\",\n  nextWeek: \"EEEE 'kl.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\n  wide: [\"f\u00F8r Kristus\", \"etter Kristus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mars\",\n    \"apr.\",\n    \"mai\",\n    \"juni\",\n    \"juli\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"des.\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mars\",\n    \"april\",\n    \"mai\",\n    \"juni\",\n    \"juli\",\n    \"august\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\n  short: [\"su\", \"m\u00E5\", \"ty\", \"on\", \"to\", \"fr\", \"lau\"],\n  abbreviated: [\"sun\", \"m\u00E5n\", \"tys\", \"ons\", \"tor\", \"fre\", \"laur\"],\n  wide: [\n    \"sundag\",\n    \"m\u00E5ndag\",\n    \"tysdag\",\n    \"onsdag\",\n    \"torsdag\",\n    \"fredag\",\n    \"laurdag\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 etterm.\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natta\",\n  },\n  abbreviated: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 etterm.\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natta\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morgonen\",\n    afternoon: \"p\u00E5 ettermiddagen\",\n    evening: \"p\u00E5 kvelden\",\n    night: \"p\u00E5 natta\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\n  wide: /^(f\u00F8r Kristus|f\u00F8r v\u00E5r tid|etter Kristus|v\u00E5r tid)/i,\n};\nconst parseEraPatterns = {\n  any: [/^f/i, /^e/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\n  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^aug/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtofl]/i,\n  short: /^(su|m\u00E5|ty|on|to|fr|la)/i,\n  abbreviated: /^(sun|m\u00E5n|tys|ons|tor|fre|laur)/i,\n  wide: /^(sundag|m\u00E5ndag|tysdag|onsdag|torsdag|fredag|laurdag)/i,\n};\nconst parseDayPatterns = {\n  any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(midnatt|middag|(p\u00E5) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(p\u00E5) (morgonen|ettermiddagen|kvelden|natta))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a(\\.?\\s?m\\.?)?$/i,\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\n    midnight: /^midn/i,\n    noon: /^midd/i,\n    morning: /morgon/i,\n    afternoon: /ettermiddag/i,\n    evening: /kveld/i,\n    night: /natt/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./nn/_lib/formatDistance.js\";\nimport { formatLong } from \"./nn/_lib/formatLong.js\";\nimport { formatRelative } from \"./nn/_lib/formatRelative.js\";\nimport { localize } from \"./nn/_lib/localize.js\";\nimport { match } from \"./nn/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Norwegian Nynorsk locale.\n * @language Norwegian Nynorsk\n * @iso-639-2 nno\n * @author Mats Byrkjeland [@draperunner](https://github.com/draperunner)\n */\nexport const nn = {\n  code: \"nn\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default nn;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mens d\u2019una segonda\",\n    other: \"mens de {{count}} segondas\",\n  },\n\n  xSeconds: {\n    one: \"1 segonda\",\n    other: \"{{count}} segondas\",\n  },\n\n  halfAMinute: \"30 segondas\",\n\n  lessThanXMinutes: {\n    one: \"mens d\u2019una minuta\",\n    other: \"mens de {{count}} minutas\",\n  },\n\n  xMinutes: {\n    one: \"1 minuta\",\n    other: \"{{count}} minutas\",\n  },\n\n  aboutXHours: {\n    one: \"environ 1 ora\",\n    other: \"environ {{count}} oras\",\n  },\n\n  xHours: {\n    one: \"1 ora\",\n    other: \"{{count}} oras\",\n  },\n\n  xDays: {\n    one: \"1 jorn\",\n    other: \"{{count}} jorns\",\n  },\n\n  aboutXWeeks: {\n    one: \"environ 1 setmana\",\n    other: \"environ {{count}} setmanas\",\n  },\n\n  xWeeks: {\n    one: \"1 setmana\",\n    other: \"{{count}} setmanas\",\n  },\n\n  aboutXMonths: {\n    one: \"environ 1 mes\",\n    other: \"environ {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"environ 1 an\",\n    other: \"environ {{count}} ans\",\n  },\n\n  xYears: {\n    one: \"1 an\",\n    other: \"{{count}} ans\",\n  },\n\n  overXYears: {\n    one: \"mai d\u2019un an\",\n    other: \"mai de {{count}} ans\",\n  },\n\n  almostXYears: {\n    one: \"gaireben un an\",\n    other: \"gaireben {{count}} ans\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"d\u2019aqu\u00ED \" + result;\n    } else {\n      return \"fa \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d 'de' MMMM y\",\n  long: \"d 'de' MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'a' {{time}}\",\n  long: \"{{date}} 'a' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'passat a' p\",\n  yesterday: \"'i\u00E8r a' p\",\n  today: \"'u\u00E8i a' p\",\n  tomorrow: \"'deman a' p\",\n  nextWeek: \"eeee 'a' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"ab. J.C.\", \"apr. J.C.\"],\n  abbreviated: [\"ab. J.C.\", \"apr. J.C.\"],\n  wide: [\"abans J\u00E8sus-Crist\", \"apr\u00E8s J\u00E8sus-Crist\"],\n};\n\nconst quarterValues = {\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  abbreviated: [\"1\u00E8r trim.\", \"2nd trim.\", \"3en trim.\", \"4en trim.\"],\n  wide: [\"1\u00E8r trim\u00E8stre\", \"2nd trim\u00E8stre\", \"3en trim\u00E8stre\", \"4en trim\u00E8stre\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"GN\",\n    \"FB\",\n    \"M\u00C7\",\n    \"AB\",\n    \"MA\",\n    \"JN\",\n    \"JL\",\n    \"AG\",\n    \"ST\",\n    \"OC\",\n    \"NV\",\n    \"DC\",\n  ],\n\n  abbreviated: [\n    \"gen.\",\n    \"febr.\",\n    \"mar\u00E7\",\n    \"abr.\",\n    \"mai\",\n    \"junh\",\n    \"jul.\",\n    \"ag.\",\n    \"set.\",\n    \"oct.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"geni\u00E8r\",\n    \"febri\u00E8r\",\n    \"mar\u00E7\",\n    \"abril\",\n    \"mai\",\n    \"junh\",\n    \"julhet\",\n    \"agost\",\n    \"setembre\",\n    \"oct\u00F2bre\",\n    \"novembre\",\n    \"decembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n  short: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n  abbreviated: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n  wide: [\n    \"dimenge\",\n    \"diluns\",\n    \"dimars\",\n    \"dim\u00E8cres\",\n    \"dij\u00F2us\",\n    \"divendres\",\n    \"dissabte\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"matin\",\n    afternoon: \"apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"v\u00E8spre\",\n    night: \"nu\u00E8ch\",\n  },\n  abbreviated: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"matin\",\n    afternoon: \"apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"v\u00E8spre\",\n    night: \"nu\u00E8ch\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"matin\",\n    afternoon: \"apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"v\u00E8spre\",\n    night: \"nu\u00E8ch\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"del matin\",\n    afternoon: \"de l\u2019apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"del ser\",\n    night: \"de la nu\u00E8ch\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"del matin\",\n    afternoon: \"de l\u2019apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"del ser\",\n    night: \"de la nu\u00E8ch\",\n  },\n  wide: {\n    am: \"ante meridiem\",\n    pm: \"post meridiem\",\n    midnight: \"mi\u00E8janu\u00E8ch\",\n    noon: \"mi\u00E8gjorn\",\n    morning: \"del matin\",\n    afternoon: \"de l\u2019apr\u00E8p-mi\u00E8gjorn\",\n    evening: \"del ser\",\n    night: \"de la nu\u00E8ch\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n  let ordinal;\n\n  switch (number) {\n    case 1:\n      ordinal = \"\u00E8r\";\n      break;\n    case 2:\n      ordinal = \"nd\";\n      break;\n    default:\n      ordinal = \"en\";\n  }\n\n  // feminine for year, week, hour, minute, second\n  if (\n    unit === \"year\" ||\n    unit === \"week\" ||\n    unit === \"hour\" ||\n    unit === \"minute\" ||\n    unit === \"second\"\n  ) {\n    ordinal += \"a\";\n  }\n\n  return number + ordinal;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00E8r|nd|en)?[a]?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ab\\.J\\.C|apr\\.J\\.C|apr\\.J\\.-C)/i,\n  abbreviated: /^(ab\\.J\\.-C|ab\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\n  wide: /^(abans J\u00E8sus-Crist|apr\u00E8s J\u00E8sus-Crist)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ab/i, /^ap/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^T[1234]/i,\n  abbreviated: /^[1234](\u00E8r|nd|en)? trim\\.?/i,\n  wide: /^[1234](\u00E8r|nd|en)? trim\u00E8stre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(GN|FB|M\u00C7|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i,\n  abbreviated: /^(gen|febr|mar\u00E7|abr|mai|junh|jul|ag|set|oct|nov|dec)\\.?/i,\n  wide: /^(geni\u00E8r|febri\u00E8r|mar\u00E7|abril|mai|junh|julhet|agost|setembre|oct\u00F2bre|novembre|decembre)/i,\n};\nconst parseMonthPatterns = {\n  any: [\n    /^g/i,\n    /^f/i,\n    /^ma[r?]|M\u00C7/i,\n    /^ab/i,\n    /^ma[i?]/i,\n    /^ju[n?]|JN/i,\n    /^ju[l?]|JL/i,\n    /^ag/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^d[glmcjvs]\\.?/i,\n  short: /^d[glmcjvs]\\.?/i,\n  abbreviated: /^d[glmcjvs]\\.?/i,\n  wide: /^(dimenge|diluns|dimars|dim\u00E8cres|dij\u00F2us|divendres|dissabte)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\n  short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\n  abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\n\n  any: [\n    /^dg|dime/i,\n    /^dl|dil/i,\n    /^dm|dima/i,\n    /^dc|dim\u00E8/i,\n    /^dj|dij/i,\n    /^dv|div/i,\n    /^ds|dis/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /(^(a\\.?m|p\\.?m))|(ante meridiem|post meridiem)|((del |de la |de l\u2019)(matin|apr\u00E8p-mi\u00E8gjorn|v\u00E8spre|ser|nu\u00E8ch))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /(^a)|ante meridiem/i,\n    pm: /(^p)|post meridiem/i,\n    midnight: /^mi\u00E8j/i,\n    noon: /^mi\u00E8g/i,\n    morning: /matin/i,\n    afternoon: /apr\u00E8p-mi\u00E8gjorn/i,\n    evening: /v\u00E8spre|ser/i,\n    night: /nu\u00E8ch/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./oc/_lib/formatDistance.js\";\nimport { formatLong } from \"./oc/_lib/formatLong.js\";\nimport { formatRelative } from \"./oc/_lib/formatRelative.js\";\nimport { localize } from \"./oc/_lib/localize.js\";\nimport { match } from \"./oc/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Occitan locale.\n * @language Occitan\n * @iso-639-2 oci\n * @author Quentin PAG\u00C8S\n */\nexport const oc = {\n  code: \"oc\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default oc;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      regular: \"mniej ni\u017C sekunda\",\n      past: \"mniej ni\u017C sekund\u0119\",\n      future: \"mniej ni\u017C sekund\u0119\",\n    },\n    twoFour: \"mniej ni\u017C {{count}} sekundy\",\n    other: \"mniej ni\u017C {{count}} sekund\",\n  },\n\n  xSeconds: {\n    one: {\n      regular: \"sekunda\",\n      past: \"sekund\u0119\",\n      future: \"sekund\u0119\",\n    },\n    twoFour: \"{{count}} sekundy\",\n    other: \"{{count}} sekund\",\n  },\n\n  halfAMinute: {\n    one: \"p\u00F3\u0142 minuty\",\n    twoFour: \"p\u00F3\u0142 minuty\",\n    other: \"p\u00F3\u0142 minuty\",\n  },\n\n  lessThanXMinutes: {\n    one: {\n      regular: \"mniej ni\u017C minuta\",\n      past: \"mniej ni\u017C minut\u0119\",\n      future: \"mniej ni\u017C minut\u0119\",\n    },\n    twoFour: \"mniej ni\u017C {{count}} minuty\",\n    other: \"mniej ni\u017C {{count}} minut\",\n  },\n\n  xMinutes: {\n    one: {\n      regular: \"minuta\",\n      past: \"minut\u0119\",\n      future: \"minut\u0119\",\n    },\n    twoFour: \"{{count}} minuty\",\n    other: \"{{count}} minut\",\n  },\n\n  aboutXHours: {\n    one: {\n      regular: \"oko\u0142o godziny\",\n      past: \"oko\u0142o godziny\",\n      future: \"oko\u0142o godzin\u0119\",\n    },\n    twoFour: \"oko\u0142o {{count}} godziny\",\n    other: \"oko\u0142o {{count}} godzin\",\n  },\n\n  xHours: {\n    one: {\n      regular: \"godzina\",\n      past: \"godzin\u0119\",\n      future: \"godzin\u0119\",\n    },\n    twoFour: \"{{count}} godziny\",\n    other: \"{{count}} godzin\",\n  },\n\n  xDays: {\n    one: {\n      regular: \"dzie\u0144\",\n      past: \"dzie\u0144\",\n      future: \"1 dzie\u0144\",\n    },\n    twoFour: \"{{count}} dni\",\n    other: \"{{count}} dni\",\n  },\n\n  aboutXWeeks: {\n    one: \"oko\u0142o tygodnia\",\n    twoFour: \"oko\u0142o {{count}} tygodni\",\n    other: \"oko\u0142o {{count}} tygodni\",\n  },\n\n  xWeeks: {\n    one: \"tydzie\u0144\",\n    twoFour: \"{{count}} tygodnie\",\n    other: \"{{count}} tygodni\",\n  },\n\n  aboutXMonths: {\n    one: \"oko\u0142o miesi\u0105c\",\n    twoFour: \"oko\u0142o {{count}} miesi\u0105ce\",\n    other: \"oko\u0142o {{count}} miesi\u0119cy\",\n  },\n\n  xMonths: {\n    one: \"miesi\u0105c\",\n    twoFour: \"{{count}} miesi\u0105ce\",\n    other: \"{{count}} miesi\u0119cy\",\n  },\n\n  aboutXYears: {\n    one: \"oko\u0142o rok\",\n    twoFour: \"oko\u0142o {{count}} lata\",\n    other: \"oko\u0142o {{count}} lat\",\n  },\n\n  xYears: {\n    one: \"rok\",\n    twoFour: \"{{count}} lata\",\n    other: \"{{count}} lat\",\n  },\n\n  overXYears: {\n    one: \"ponad rok\",\n    twoFour: \"ponad {{count}} lata\",\n    other: \"ponad {{count}} lat\",\n  },\n\n  almostXYears: {\n    one: \"prawie rok\",\n    twoFour: \"prawie {{count}} lata\",\n    other: \"prawie {{count}} lat\",\n  },\n};\n\nfunction declensionGroup(scheme, count) {\n  if (count === 1) {\n    return scheme.one;\n  }\n\n  const rem100 = count % 100;\n\n  // ends with 11-20\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other;\n  }\n\n  const rem10 = rem100 % 10;\n\n  // ends with 2, 3, 4\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour;\n  }\n\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  const group = declensionGroup(scheme, count);\n  const finalText = typeof group === \"string\" ? group : group[time];\n  return finalText.replace(\"{{count}}\", String(count));\n}\n\nexport const formatDistance = (token, count, options) => {\n  const scheme = formatDistanceLocale[token];\n  if (!options?.addSuffix) {\n    return declension(scheme, count, \"regular\");\n  }\n\n  if (options.comparison && options.comparison > 0) {\n    return \"za \" + declension(scheme, count, \"future\");\n  } else {\n    return declension(scheme, count, \"past\") + \" temu\";\n  }\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"do MMM y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst adjectivesLastWeek = {\n  masculine: \"ostatni\",\n  feminine: \"ostatnia\",\n};\n\nconst adjectivesThisWeek = {\n  masculine: \"ten\",\n  feminine: \"ta\",\n};\n\nconst adjectivesNextWeek = {\n  masculine: \"nast\u0119pny\",\n  feminine: \"nast\u0119pna\",\n};\n\nconst dayGrammaticalGender = {\n  0: \"feminine\",\n  1: \"masculine\",\n  2: \"masculine\",\n  3: \"feminine\",\n  4: \"masculine\",\n  5: \"masculine\",\n  6: \"feminine\",\n};\n\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\n  let adjectives;\n  if (isSameWeek(date, baseDate, options)) {\n    adjectives = adjectivesThisWeek;\n  } else if (token === \"lastWeek\") {\n    adjectives = adjectivesLastWeek;\n  } else if (token === \"nextWeek\") {\n    adjectives = adjectivesNextWeek;\n  } else {\n    throw new Error(`Cannot determine adjectives for token ${token}`);\n  }\n\n  const day = date.getDay();\n  const grammaticalGender = dayGrammaticalGender[day];\n\n  const adjective = adjectives[grammaticalGender];\n\n  return `'${adjective}' eeee 'o' p`;\n}\n\nconst formatRelativeLocale = {\n  lastWeek: dayAndTimeWithAdjective,\n  yesterday: \"'wczoraj o' p\",\n  today: \"'dzisiaj o' p\",\n  tomorrow: \"'jutro o' p\",\n  nextWeek: dayAndTimeWithAdjective,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(token, date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"p.n.e.\", \"n.e.\"],\n  abbreviated: [\"p.n.e.\", \"n.e.\"],\n  wide: [\"przed nasz\u0105 er\u0105\", \"naszej ery\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"I kw.\", \"II kw.\", \"III kw.\", \"IV kw.\"],\n  wide: [\"I kwarta\u0142\", \"II kwarta\u0142\", \"III kwarta\u0142\", \"IV kwarta\u0142\"],\n};\n\nconst monthValues = {\n  narrow: [\"S\", \"L\", \"M\", \"K\", \"M\", \"C\", \"L\", \"S\", \"W\", \"P\", \"L\", \"G\"],\n  abbreviated: [\n    \"sty\",\n    \"lut\",\n    \"mar\",\n    \"kwi\",\n    \"maj\",\n    \"cze\",\n    \"lip\",\n    \"sie\",\n    \"wrz\",\n    \"pa\u017A\",\n    \"lis\",\n    \"gru\",\n  ],\n\n  wide: [\n    \"stycze\u0144\",\n    \"luty\",\n    \"marzec\",\n    \"kwiecie\u0144\",\n    \"maj\",\n    \"czerwiec\",\n    \"lipiec\",\n    \"sierpie\u0144\",\n    \"wrzesie\u0144\",\n    \"pa\u017Adziernik\",\n    \"listopad\",\n    \"grudzie\u0144\",\n  ],\n};\nconst monthFormattingValues = {\n  narrow: [\"s\", \"l\", \"m\", \"k\", \"m\", \"c\", \"l\", \"s\", \"w\", \"p\", \"l\", \"g\"],\n  abbreviated: [\n    \"sty\",\n    \"lut\",\n    \"mar\",\n    \"kwi\",\n    \"maj\",\n    \"cze\",\n    \"lip\",\n    \"sie\",\n    \"wrz\",\n    \"pa\u017A\",\n    \"lis\",\n    \"gru\",\n  ],\n\n  wide: [\n    \"stycznia\",\n    \"lutego\",\n    \"marca\",\n    \"kwietnia\",\n    \"maja\",\n    \"czerwca\",\n    \"lipca\",\n    \"sierpnia\",\n    \"wrze\u015Bnia\",\n    \"pa\u017Adziernika\",\n    \"listopada\",\n    \"grudnia\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"N\", \"P\", \"W\", \"\u015A\", \"C\", \"P\", \"S\"],\n  short: [\"nie\", \"pon\", \"wto\", \"\u015Bro\", \"czw\", \"pi\u0105\", \"sob\"],\n  abbreviated: [\"niedz.\", \"pon.\", \"wt.\", \"\u015Br.\", \"czw.\", \"pt.\", \"sob.\"],\n  wide: [\n    \"niedziela\",\n    \"poniedzia\u0142ek\",\n    \"wtorek\",\n    \"\u015Broda\",\n    \"czwartek\",\n    \"pi\u0105tek\",\n    \"sobota\",\n  ],\n};\nconst dayFormattingValues = {\n  narrow: [\"n\", \"p\", \"w\", \"\u015B\", \"c\", \"p\", \"s\"],\n  short: [\"nie\", \"pon\", \"wto\", \"\u015Bro\", \"czw\", \"pi\u0105\", \"sob\"],\n  abbreviated: [\"niedz.\", \"pon.\", \"wt.\", \"\u015Br.\", \"czw.\", \"pt.\", \"sob.\"],\n  wide: [\n    \"niedziela\",\n    \"poniedzia\u0142ek\",\n    \"wtorek\",\n    \"\u015Broda\",\n    \"czwartek\",\n    \"pi\u0105tek\",\n    \"sobota\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"p\u00F3\u0142n.\",\n    noon: \"po\u0142\",\n    morning: \"rano\",\n    afternoon: \"popo\u0142.\",\n    evening: \"wiecz.\",\n    night: \"noc\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"p\u00F3\u0142noc\",\n    noon: \"po\u0142udnie\",\n    morning: \"rano\",\n    afternoon: \"popo\u0142udnie\",\n    evening: \"wiecz\u00F3r\",\n    night: \"noc\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"p\u00F3\u0142noc\",\n    noon: \"po\u0142udnie\",\n    morning: \"rano\",\n    afternoon: \"popo\u0142udnie\",\n    evening: \"wiecz\u00F3r\",\n    night: \"noc\",\n  },\n};\n\nconst dayPeriodFormattingValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"o p\u00F3\u0142n.\",\n    noon: \"w po\u0142.\",\n    morning: \"rano\",\n    afternoon: \"po po\u0142.\",\n    evening: \"wiecz.\",\n    night: \"w nocy\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"o p\u00F3\u0142nocy\",\n    noon: \"w po\u0142udnie\",\n    morning: \"rano\",\n    afternoon: \"po po\u0142udniu\",\n    evening: \"wieczorem\",\n    night: \"w nocy\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"o p\u00F3\u0142nocy\",\n    noon: \"w po\u0142udnie\",\n    morning: \"rano\",\n    afternoon: \"po po\u0142udniu\",\n    evening: \"wieczorem\",\n    night: \"w nocy\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: monthFormattingValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n    formattingValues: dayFormattingValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: dayPeriodFormattingValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(p\\.?\\s*n\\.?\\s*e\\.?\\s*|n\\.?\\s*e\\.?\\s*)/i,\n  abbreviated: /^(p\\.?\\s*n\\.?\\s*e\\.?\\s*|n\\.?\\s*e\\.?\\s*)/i,\n  wide: /^(przed\\s*nasz(\u0105|a)\\s*er(\u0105|a)|naszej\\s*ery)/i,\n};\nconst parseEraPatterns = {\n  any: [/^p/i, /^n/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^(I|II|III|IV)\\s*kw\\.?/i,\n  wide: /^(I|II|III|IV)\\s*kwarta(\u0142|l)/i,\n};\nconst parseQuarterPatterns = {\n  narrow: [/1/i, /2/i, /3/i, /4/i],\n  any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[slmkcwpg]/i,\n  abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(\u017A|z)|lis|gru)/i,\n  wide: /^(stycznia|stycze(\u0144|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(\u0144|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(\u0144|n)|wrze(\u015B|s)nia|wrzesie(\u0144|n)|pa(\u017A|z)dziernika|pa(\u017A|z)dziernik|listopada|listopad|grudnia|grudzie(\u0144|n))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^s/i,\n    /^l/i,\n    /^m/i,\n    /^k/i,\n    /^m/i,\n    /^c/i,\n    /^l/i,\n    /^s/i,\n    /^w/i,\n    /^p/i,\n    /^l/i,\n    /^g/i,\n  ],\n\n  any: [\n    /^st/i,\n    /^lu/i,\n    /^mar/i,\n    /^k/i,\n    /^maj/i,\n    /^c/i,\n    /^lip/i,\n    /^si/i,\n    /^w/i,\n    /^p/i,\n    /^lis/i,\n    /^g/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npw\u015Bcs]/i,\n  short: /^(nie|pon|wto|(\u015B|s)ro|czw|pi(\u0105|a)|sob)/i,\n  abbreviated: /^(niedz|pon|wt|(\u015B|s)r|czw|pt|sob)\\.?/i,\n  wide: /^(niedziela|poniedzia(\u0142|l)ek|wtorek|(\u015B|s)roda|czwartek|pi(\u0105|a)tek|sobota)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^n/i, /^p/i, /^w/i, /^\u015B/i, /^c/i, /^p/i, /^s/i],\n  abbreviated: [/^n/i, /^po/i, /^w/i, /^(\u015B|s)r/i, /^c/i, /^pt/i, /^so/i],\n\n  any: [/^n/i, /^po/i, /^w/i, /^(\u015B|s)r/i, /^c/i, /^pi/i, /^so/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(^a$|^p$|p\u00F3(\u0142|l)n\\.?|o\\s*p\u00F3(\u0142|l)n\\.?|po(\u0142|l)\\.?|w\\s*po(\u0142|l)\\.?|po\\s*po(\u0142|l)\\.?|rano|wiecz\\.?|noc|w\\s*nocy)/i,\n  any: /^(am|pm|p\u00F3(\u0142|l)noc|o\\s*p\u00F3(\u0142|l)nocy|po(\u0142|l)udnie|w\\s*po(\u0142|l)udnie|popo(\u0142|l)udnie|po\\s*po(\u0142|l)udniu|rano|wiecz\u00F3r|wieczorem|noc|w\\s*nocy)/i,\n};\nconst parseDayPeriodPatterns = {\n  narrow: {\n    am: /^a$/i,\n    pm: /^p$/i,\n    midnight: /p\u00F3(\u0142|l)n/i,\n    noon: /po(\u0142|l)/i,\n    morning: /rano/i,\n    afternoon: /po\\s*po(\u0142|l)/i,\n    evening: /wiecz/i,\n    night: /noc/i,\n  },\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /p\u00F3(\u0142|l)n/i,\n    noon: /po(\u0142|l)/i,\n    morning: /rano/i,\n    afternoon: /po\\s*po(\u0142|l)/i,\n    evening: /wiecz/i,\n    night: /noc/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./pl/_lib/formatDistance.js\";\nimport { formatLong } from \"./pl/_lib/formatLong.js\";\nimport { formatRelative } from \"./pl/_lib/formatRelative.js\";\nimport { localize } from \"./pl/_lib/localize.js\";\nimport { match } from \"./pl/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Polish locale.\n * @language Polish\n * @iso-639-2 pol\n * @author Mateusz Derks [@ertrzyiks](https://github.com/ertrzyiks)\n * @author Just RAG [@justrag](https://github.com/justrag)\n * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)\n * @author Mateusz Tokarski [@mutisz](https://github.com/mutisz)\n */\nexport const pl = {\n  code: \"pl\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default pl;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de um segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"meio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de um minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"aproximadamente 1 hora\",\n    other: \"aproximadamente {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 dia\",\n    other: \"{{count}} dias\",\n  },\n\n  aboutXWeeks: {\n    one: \"aproximadamente 1 semana\",\n    other: \"aproximadamente {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"aproximadamente 1 m\u00EAs\",\n    other: \"aproximadamente {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 m\u00EAs\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"aproximadamente 1 ano\",\n    other: \"aproximadamente {{count}} anos\",\n  },\n\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\",\n  },\n\n  overXYears: {\n    one: \"mais de 1 ano\",\n    other: \"mais de {{count}} anos\",\n  },\n\n  almostXYears: {\n    one: \"quase 1 ano\",\n    other: \"quase {{count}} anos\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"daqui a \" + result;\n    } else {\n      return \"h\u00E1 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d 'de' MMM 'de' y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E0s' {{time}}\",\n  long: \"{{date}} '\u00E0s' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const weekday = date.getDay();\n    const last = weekday === 0 || weekday === 6 ? \"\u00FAltimo\" : \"\u00FAltima\";\n    return \"'\" + last + \"' eeee '\u00E0s' p\";\n  },\n  yesterday: \"'ontem \u00E0s' p\",\n  today: \"'hoje \u00E0s' p\",\n  tomorrow: \"'amanh\u00E3 \u00E0s' p\",\n  nextWeek: \"eeee '\u00E0s' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"aC\", \"dC\"],\n  abbreviated: [\"a.C.\", \"d.C.\"],\n  wide: [\"antes de Cristo\", \"depois de Cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1\u00BA trimestre\", \"2\u00BA trimestre\", \"3\u00BA trimestre\", \"4\u00BA trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"fev\",\n    \"mar\",\n    \"abr\",\n    \"mai\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"set\",\n    \"out\",\n    \"nov\",\n    \"dez\",\n  ],\n\n  wide: [\n    \"janeiro\",\n    \"fevereiro\",\n    \"mar\u00E7o\",\n    \"abril\",\n    \"maio\",\n    \"junho\",\n    \"julho\",\n    \"agosto\",\n    \"setembro\",\n    \"outubro\",\n    \"novembro\",\n    \"dezembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"d\", \"s\", \"t\", \"q\", \"q\", \"s\", \"s\"],\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"s\u00E1b\"],\n  abbreviated: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"s\u00E1b\"],\n  wide: [\n    \"domingo\",\n    \"segunda-feira\",\n    \"ter\u00E7a-feira\",\n    \"quarta-feira\",\n    \"quinta-feira\",\n    \"sexta-feira\",\n    \"s\u00E1bado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"noite\",\n    night: \"madrugada\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"noite\",\n    night: \"madrugada\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"noite\",\n    night: \"madrugada\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da noite\",\n    night: \"da madrugada\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da noite\",\n    night: \"da madrugada\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da noite\",\n    night: \"da madrugada\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u00BA\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u00BA|\u00AA)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [\n    /^(antes de cristo|antes da era comum)/i,\n    /^(depois de cristo|era comum)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](\u00BA|\u00AA)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\n  wide: /^(janeiro|fevereiro|mar\u00E7o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ab/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^ag/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dstq]/i,\n  short: /^(dom|seg|ter|qua|qui|sex|s[\u00E1a]b)/i,\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[\u00E1a]b)/i,\n  wide: /^(domingo|segunda-?\\s?feira|ter\u00E7a-?\\s?feira|quarta-?\\s?feira|quinta-?\\s?feira|sexta-?\\s?feira|s[\u00E1a]bado)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i],\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[\u00E1a]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(a|p|meia-?\\s?noite|meio-?\\s?dia|(da) (manh[\u00E3a]|tarde|noite|madrugada))/i,\n  any: /^([ap]\\.?\\s?m\\.?|meia-?\\s?noite|meio-?\\s?dia|(da) (manh[\u00E3a]|tarde|noite|madrugada))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^meia/i,\n    noon: /^meio/i,\n    morning: /manh[\u00E3a]/i,\n    afternoon: /tarde/i,\n    evening: /noite/i,\n    night: /madrugada/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./pt/_lib/formatDistance.js\";\nimport { formatLong } from \"./pt/_lib/formatLong.js\";\nimport { formatRelative } from \"./pt/_lib/formatRelative.js\";\nimport { localize } from \"./pt/_lib/localize.js\";\nimport { match } from \"./pt/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Portuguese locale.\n * @language Portuguese\n * @iso-639-2 por\n * @author D\u00E1rio Freire [@dfreire](https://github.com/dfreire)\n * @author Adri\u00E1n de la Rosa [@adrm](https://github.com/adrm)\n */\nexport const pt = {\n  code: \"pt\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default pt;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de um segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"meio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de um minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"cerca de 1 hora\",\n    other: \"cerca de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 dia\",\n    other: \"{{count}} dias\",\n  },\n\n  aboutXWeeks: {\n    one: \"cerca de 1 semana\",\n    other: \"cerca de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"cerca de 1 m\u00EAs\",\n    other: \"cerca de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 m\u00EAs\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"cerca de 1 ano\",\n    other: \"cerca de {{count}} anos\",\n  },\n\n  xYears: {\n    one: \"1 ano\",\n    other: \"{{count}} anos\",\n  },\n\n  overXYears: {\n    one: \"mais de 1 ano\",\n    other: \"mais de {{count}} anos\",\n  },\n\n  almostXYears: {\n    one: \"quase 1 ano\",\n    other: \"quase {{count}} anos\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"em \" + result;\n    } else {\n      return \"h\u00E1 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u00E0s' {{time}}\",\n  long: \"{{date}} '\u00E0s' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const weekday = date.getDay();\n    const last = weekday === 0 || weekday === 6 ? \"\u00FAltimo\" : \"\u00FAltima\";\n    return \"'\" + last + \"' eeee '\u00E0s' p\";\n  },\n  yesterday: \"'ontem \u00E0s' p\",\n  today: \"'hoje \u00E0s' p\",\n  tomorrow: \"'amanh\u00E3 \u00E0s' p\",\n  nextWeek: \"eeee '\u00E0s' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"depois de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1\u00BA trimestre\", \"2\u00BA trimestre\", \"3\u00BA trimestre\", \"4\u00BA trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"fev\",\n    \"mar\",\n    \"abr\",\n    \"mai\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"set\",\n    \"out\",\n    \"nov\",\n    \"dez\",\n  ],\n\n  wide: [\n    \"janeiro\",\n    \"fevereiro\",\n    \"mar\u00E7o\",\n    \"abril\",\n    \"maio\",\n    \"junho\",\n    \"julho\",\n    \"agosto\",\n    \"setembro\",\n    \"outubro\",\n    \"novembro\",\n    \"dezembro\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sab\"],\n  abbreviated: [\n    \"domingo\",\n    \"segunda\",\n    \"ter\u00E7a\",\n    \"quarta\",\n    \"quinta\",\n    \"sexta\",\n    \"s\u00E1bado\",\n  ],\n\n  wide: [\n    \"domingo\",\n    \"segunda-feira\",\n    \"ter\u00E7a-feira\",\n    \"quarta-feira\",\n    \"quinta-feira\",\n    \"sexta-feira\",\n    \"s\u00E1bado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"manh\u00E3\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noite\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"meia-noite\",\n    noon: \"meio-dia\",\n    morning: \"da manh\u00E3\",\n    afternoon: \"da tarde\",\n    evening: \"da tarde\",\n    night: \"da noite\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  if (options?.unit === \"week\") {\n    return number + \"\u00AA\";\n  }\n  return number + \"\u00BA\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)[\u00BA\u00AAo]?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|d\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|depois de cristo)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [/^antes de cristo/i, /^depois de cristo/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](\u00BA)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmajsond]/i,\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\n  wide: /^(janeiro|fevereiro|mar\u00E7o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^fev/i,\n    /^mar/i,\n    /^abr/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^ago/i,\n    /^set/i,\n    /^out/i,\n    /^nov/i,\n    /^dez/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(dom|[23456]\u00AA?|s[a\u00E1]b)/i,\n  short: /^(dom|[23456]\u00AA?|s[a\u00E1]b)/i,\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[a\u00E1]b)/i,\n  wide: /^(domingo|(segunda|ter[c\u00E7]a|quarta|quinta|sexta)([- ]feira)?|s[a\u00E1]bado)/i,\n};\nconst parseDayPatterns = {\n  short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[a\u00E1]/i],\n  narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[a\u00E1]/i],\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[a\u00E1]b/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(da) (manh\u00E3|tarde|noite))/i,\n  any: /^([ap]\\.?\\s?m\\.?|meia[-\\s]noite|meio[-\\s]dia|(da) (manh\u00E3|tarde|noite))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn|^meia[-\\s]noite/i,\n    noon: /^md|^meio[-\\s]dia/i,\n    morning: /manh\u00E3/i,\n    afternoon: /tarde/i,\n    evening: /tarde/i,\n    night: /noite/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./pt-BR/_lib/formatDistance.js\";\nimport { formatLong } from \"./pt-BR/_lib/formatLong.js\";\nimport { formatRelative } from \"./pt-BR/_lib/formatRelative.js\";\nimport { localize } from \"./pt-BR/_lib/localize.js\";\nimport { match } from \"./pt-BR/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Portuguese locale (Brazil).\n * @language Portuguese\n * @iso-639-2 por\n * @author Lucas Duailibe [@duailibe](https://github.com/duailibe)\n * @author Yago Carballo [@yagocarballo](https://github.com/YagoCarballo)\n */\nexport const ptBR = {\n  code: \"pt-BR\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ptBR;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mai pu\u021Bin de o secund\u0103\",\n    other: \"mai pu\u021Bin de {{count}} secunde\",\n  },\n\n  xSeconds: {\n    one: \"1 secund\u0103\",\n    other: \"{{count}} secunde\",\n  },\n\n  halfAMinute: \"jum\u0103tate de minut\",\n\n  lessThanXMinutes: {\n    one: \"mai pu\u021Bin de un minut\",\n    other: \"mai pu\u021Bin de {{count}} minute\",\n  },\n\n  xMinutes: {\n    one: \"1 minut\",\n    other: \"{{count}} minute\",\n  },\n\n  aboutXHours: {\n    one: \"circa 1 or\u0103\",\n    other: \"circa {{count}} ore\",\n  },\n\n  xHours: {\n    one: \"1 or\u0103\",\n    other: \"{{count}} ore\",\n  },\n\n  xDays: {\n    one: \"1 zi\",\n    other: \"{{count}} zile\",\n  },\n\n  aboutXWeeks: {\n    one: \"circa o s\u0103pt\u0103m\u00E2n\u0103\",\n    other: \"circa {{count}} s\u0103pt\u0103m\u00E2ni\",\n  },\n\n  xWeeks: {\n    one: \"1 s\u0103pt\u0103m\u00E2n\u0103\",\n    other: \"{{count}} s\u0103pt\u0103m\u00E2ni\",\n  },\n\n  aboutXMonths: {\n    one: \"circa 1 lun\u0103\",\n    other: \"circa {{count}} luni\",\n  },\n\n  xMonths: {\n    one: \"1 lun\u0103\",\n    other: \"{{count}} luni\",\n  },\n\n  aboutXYears: {\n    one: \"circa 1 an\",\n    other: \"circa {{count}} ani\",\n  },\n\n  xYears: {\n    one: \"1 an\",\n    other: \"{{count}} ani\",\n  },\n\n  overXYears: {\n    one: \"peste 1 an\",\n    other: \"peste {{count}} ani\",\n  },\n\n  almostXYears: {\n    one: \"aproape 1 an\",\n    other: \"aproape {{count}} ani\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u00EEn \" + result;\n    } else {\n      return result + \" \u00EEn urm\u0103\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'la' {{time}}\",\n  long: \"{{date}} 'la' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'trecut\u0103 la' p\",\n  yesterday: \"'ieri la' p\",\n  today: \"'ast\u0103zi la' p\",\n  tomorrow: \"'m\u00E2ine la' p\",\n  nextWeek: \"eeee 'viitoare la' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u00CE\", \"D\"],\n  abbreviated: [\"\u00CE.d.C.\", \"D.C.\"],\n  wide: [\"\u00CEnainte de Cristos\", \"Dup\u0103 Cristos\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\n    \"primul trimestru\",\n    \"al doilea trimestru\",\n    \"al treilea trimestru\",\n    \"al patrulea trimestru\",\n  ],\n};\n\nconst monthValues = {\n  narrow: [\"I\", \"F\", \"M\", \"A\", \"M\", \"I\", \"I\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"ian\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"mai\",\n    \"iun\",\n    \"iul\",\n    \"aug\",\n    \"sep\",\n    \"oct\",\n    \"noi\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"ianuarie\",\n    \"februarie\",\n    \"martie\",\n    \"aprilie\",\n    \"mai\",\n    \"iunie\",\n    \"iulie\",\n    \"august\",\n    \"septembrie\",\n    \"octombrie\",\n    \"noiembrie\",\n    \"decembrie\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\n  short: [\"du\", \"lu\", \"ma\", \"mi\", \"jo\", \"vi\", \"s\u00E2\"],\n  abbreviated: [\"dum\", \"lun\", \"mar\", \"mie\", \"joi\", \"vin\", \"s\u00E2m\"],\n  wide: [\"duminic\u0103\", \"luni\", \"mar\u021Bi\", \"miercuri\", \"joi\", \"vineri\", \"s\u00E2mb\u0103t\u0103\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"ami\",\n    morning: \"dim\",\n    afternoon: \"da\",\n    evening: \"s\",\n    night: \"n\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"miezul nop\u021Bii\",\n    noon: \"amiaz\u0103\",\n    morning: \"diminea\u021B\u0103\",\n    afternoon: \"dup\u0103-amiaz\u0103\",\n    evening: \"sear\u0103\",\n    night: \"noapte\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"miezul nop\u021Bii\",\n    noon: \"amiaz\u0103\",\n    morning: \"diminea\u021B\u0103\",\n    afternoon: \"dup\u0103-amiaz\u0103\",\n    evening: \"sear\u0103\",\n    night: \"noapte\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"amiaz\u0103\",\n    morning: \"diminea\u021B\u0103\",\n    afternoon: \"dup\u0103-amiaz\u0103\",\n    evening: \"sear\u0103\",\n    night: \"noapte\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"miezul nop\u021Bii\",\n    noon: \"amiaz\u0103\",\n    morning: \"diminea\u021B\u0103\",\n    afternoon: \"dup\u0103-amiaz\u0103\",\n    evening: \"sear\u0103\",\n    night: \"noapte\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"miezul nop\u021Bii\",\n    noon: \"amiaz\u0103\",\n    morning: \"diminea\u021B\u0103\",\n    afternoon: \"dup\u0103-amiaz\u0103\",\n    evening: \"sear\u0103\",\n    night: \"noapte\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u00CE|D)/i,\n  abbreviated:\n    /^(\u00CE\\.?\\s?d\\.?\\s?C\\.?|\u00CE\\.?\\s?e\\.?\\s?n\\.?|D\\.?\\s?C\\.?|e\\.?\\s?n\\.?)/i,\n  wide: /^(\u00CEnainte de Cristos|\u00CEnaintea erei noastre|Dup\u0103 Cristos|Era noastr\u0103)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u00CEC/i, /^DC/i],\n  wide: [\n    /^(\u00CEnainte de Cristos|\u00CEnaintea erei noastre)/i,\n    /^(Dup\u0103 Cristos|Era noastr\u0103)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^trimestrul [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[ifmaasond]/i,\n  abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,\n  wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^i/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^i/i,\n    /^i/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ia/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mai/i,\n    /^iun/i,\n    /^iul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmjvs]/i,\n  short: /^(d|l|ma|mi|j|v|s)/i,\n  abbreviated: /^(dum|lun|mar|mie|jo|vi|s\u00E2)/i,\n  wide: /^(duminica|luni|mar\u0163i|miercuri|joi|vineri|s\u00E2mb\u0103t\u0103)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|a|(diminea\u0163a|dup\u0103-amiaza|seara|noaptea))/i,\n  any: /^([ap]\\.?\\s?m\\.?|miezul nop\u021Bii|amiaza|(diminea\u0163a|dup\u0103-amiaza|seara|noaptea))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn/i,\n    noon: /amiaza/i,\n    morning: /diminea\u0163a/i,\n    afternoon: /dup\u0103-amiaza/i,\n    evening: /seara/i,\n    night: /noaptea/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ro/_lib/formatDistance.js\";\nimport { formatLong } from \"./ro/_lib/formatLong.js\";\nimport { formatRelative } from \"./ro/_lib/formatRelative.js\";\nimport { localize } from \"./ro/_lib/localize.js\";\nimport { match } from \"./ro/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Romanian locale.\n * @language Romanian\n * @iso-639-2 ron\n * @author Sergiu Munteanu [@jsergiu](https://github.com/jsergiu)\n * @author Adrian Ocneanu [@aocneanu](https://github.com/aocneanu)\n * @author Mihai Ocneanu [@gandesc](https://github.com/gandesc)\n */\nexport const ro = {\n  code: \"ro\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ro;\n", "function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"\u0447\u0435\u0440\u0435\u0437 \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" \u043D\u0430\u0437\u0430\u0434\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u044C\u0448\u0435 \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      singularNominative: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      singularGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n      pluralGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u043D\u0430\u0437\u0430\u0434\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B \u043D\u0430\u0437\u0430\u0434\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u043D\u0430\u0437\u0430\u0434\",\n    },\n    future: {\n      singularNominative: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u044B\",\n      pluralGenitive: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  halfAMinute: (_count, options) => {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        return \"\u0447\u0435\u0440\u0435\u0437 \u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B\";\n      } else {\n        return \"\u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B \u043D\u0430\u0437\u0430\u0434\";\n      }\n    }\n\n    return \"\u043F\u043E\u043B\u043C\u0438\u043D\u0443\u0442\u044B\";\n  },\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u044C\u0448\u0435 \u043C\u0438\u043D\u0443\u0442\u044B\",\n      singularNominative: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B\",\n      singularGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442\",\n      pluralGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435 {{count}} \u043C\u0438\u043D\u0443\u0442\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 \u043C\u0438\u043D\u0443\u0442\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B\",\n      pluralGenitive: \"\u043C\u0435\u043D\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0430\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u044B\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0443 \u043D\u0430\u0437\u0430\u0434\",\n      singularGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u044B \u043D\u0430\u0437\u0430\u0434\",\n      pluralGenitive: \"{{count}} \u043C\u0438\u043D\u0443\u0442 \u043D\u0430\u0437\u0430\u0434\",\n    },\n    future: {\n      singularNominative: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u0443\",\n      singularGenitive: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\u044B\",\n      pluralGenitive: \"\u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0438\u043D\u0443\u0442\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u0430\",\n      singularGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u043E\u0432\",\n      pluralGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0447\u0430\u0441\u043E\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u0430\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u043E\u0432\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0447\u0430\u0441\",\n      singularGenitive: \"{{count}} \u0447\u0430\u0441\u0430\",\n      pluralGenitive: \"{{count}} \u0447\u0430\u0441\u043E\u0432\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0434\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0434\u043D\u044F\",\n      pluralGenitive: \"{{count}} \u0434\u043D\u0435\u0439\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u0438\",\n      singularGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u044C\",\n      pluralGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043D\u0435\u0434\u0435\u043B\u044C\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u044E\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u0438\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043D\u0435\u0434\u0435\u043B\u044C\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043D\u0435\u0434\u0435\u043B\u044F\",\n      singularGenitive: \"{{count}} \u043D\u0435\u0434\u0435\u043B\u0438\",\n      pluralGenitive: \"{{count}} \u043D\u0435\u0434\u0435\u043B\u044C\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\",\n      singularGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432\",\n      pluralGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0430\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0435\u0441\u044F\u0446\",\n      singularGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u0430\",\n      pluralGenitive: \"{{count}} \u043C\u0435\u0441\u044F\u0446\u0435\u0432\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u0433\u043E\u0434\u0430\",\n      singularGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043B\u0435\u0442\",\n      pluralGenitive: \"\u043E\u043A\u043E\u043B\u043E {{count}} \u043B\u0435\u0442\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"{{count}} \u0433\u043E\u0434\u0430\",\n      pluralGenitive: \"{{count}} \u043B\u0435\u0442\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u0433\u043E\u0434\u0430\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u043B\u0435\u0442\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448\u0435 {{count}} \u043B\u0435\u0442\",\n    },\n    future: {\n      singularNominative: \"\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430\",\n      pluralGenitive: \"\u0431\u043E\u043B\u044C\u0448\u0435, \u0447\u0435\u043C \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043F\u043E\u0447\u0442\u0438 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u043F\u043E\u0447\u0442\u0438 {{count}} \u0433\u043E\u0434\u0430\",\n      pluralGenitive: \"\u043F\u043E\u0447\u0442\u0438 {{count}} \u043B\u0435\u0442\",\n    },\n    future: {\n      singularNominative: \"\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\",\n      singularGenitive: \"\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043E\u0434\u0430\",\n      pluralGenitive: \"\u043F\u043E\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u043B\u0435\u0442\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  return formatDistanceLocale[token](count, options);\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM y '\u0433.'\",\n  long: \"d MMMM y '\u0433.'\",\n  medium: \"d MMM y '\u0433.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nconst accusativeWeekdays = [\n  \"\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435\",\n  \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A\",\n  \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n  \"\u0441\u0440\u0435\u0434\u0443\",\n  \"\u0447\u0435\u0442\u0432\u0435\u0440\u0433\",\n  \"\u043F\u044F\u0442\u043D\u0438\u0446\u0443\",\n  \"\u0441\u0443\u0431\u0431\u043E\u0442\u0443\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'\u0432 \u043F\u0440\u043E\u0448\u043B\u043E\u0435 \" + weekday + \" \u0432' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0432 \u043F\u0440\u043E\u0448\u043B\u044B\u0439 \" + weekday + \" \u0432' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0432 \u043F\u0440\u043E\u0448\u043B\u0443\u044E \" + weekday + \" \u0432' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  if (day === 2 /* Tue */) {\n    return \"'\u0432\u043E \" + weekday + \" \u0432' p\";\n  } else {\n    return \"'\u0432 \" + weekday + \" \u0432' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u0435 \" + weekday + \" \u0432' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \" + weekday + \" \u0432' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0432 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0443\u044E \" + weekday + \" \u0432' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'\u0432\u0447\u0435\u0440\u0430 \u0432' p\",\n  today: \"'\u0441\u0435\u0433\u043E\u0434\u043D\u044F \u0432' p\",\n  tomorrow: \"'\u0437\u0430\u0432\u0442\u0440\u0430 \u0432' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0434\u043E \u043D.\u044D.\", \"\u043D.\u044D.\"],\n  abbreviated: [\"\u0434\u043E \u043D. \u044D.\", \"\u043D. \u044D.\"],\n  wide: [\"\u0434\u043E \u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B\", \"\u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0439 \u043A\u0432.\", \"2-\u0439 \u043A\u0432.\", \"3-\u0439 \u043A\u0432.\", \"4-\u0439 \u043A\u0432.\"],\n  wide: [\"1-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u042F\", \"\u0424\", \"\u041C\", \"\u0410\", \"\u041C\", \"\u0418\", \"\u0418\", \"\u0410\", \"\u0421\", \"\u041E\", \"\u041D\", \"\u0414\"],\n  abbreviated: [\n    \"\u044F\u043D\u0432.\",\n    \"\u0444\u0435\u0432.\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440.\",\n    \"\u043C\u0430\u0439\",\n    \"\u0438\u044E\u043D\u044C\",\n    \"\u0438\u044E\u043B\u044C\",\n    \"\u0430\u0432\u0433.\",\n    \"\u0441\u0435\u043D\u0442.\",\n    \"\u043E\u043A\u0442.\",\n    \"\u043D\u043E\u044F\u0431.\",\n    \"\u0434\u0435\u043A.\",\n  ],\n\n  wide: [\n    \"\u044F\u043D\u0432\u0430\u0440\u044C\",\n    \"\u0444\u0435\u0432\u0440\u0430\u043B\u044C\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0435\u043B\u044C\",\n    \"\u043C\u0430\u0439\",\n    \"\u0438\u044E\u043D\u044C\",\n    \"\u0438\u044E\u043B\u044C\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044C\",\n    \"\u043E\u043A\u0442\u044F\u0431\u0440\u044C\",\n    \"\u043D\u043E\u044F\u0431\u0440\u044C\",\n    \"\u0434\u0435\u043A\u0430\u0431\u0440\u044C\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"\u042F\", \"\u0424\", \"\u041C\", \"\u0410\", \"\u041C\", \"\u0418\", \"\u0418\", \"\u0410\", \"\u0421\", \"\u041E\", \"\u041D\", \"\u0414\"],\n  abbreviated: [\n    \"\u044F\u043D\u0432.\",\n    \"\u0444\u0435\u0432.\",\n    \"\u043C\u0430\u0440.\",\n    \"\u0430\u043F\u0440.\",\n    \"\u043C\u0430\u044F\",\n    \"\u0438\u044E\u043D.\",\n    \"\u0438\u044E\u043B.\",\n    \"\u0430\u0432\u0433.\",\n    \"\u0441\u0435\u043D\u0442.\",\n    \"\u043E\u043A\u0442.\",\n    \"\u043D\u043E\u044F\u0431.\",\n    \"\u0434\u0435\u043A.\",\n  ],\n\n  wide: [\n    \"\u044F\u043D\u0432\u0430\u0440\u044F\",\n    \"\u0444\u0435\u0432\u0440\u0430\u043B\u044F\",\n    \"\u043C\u0430\u0440\u0442\u0430\",\n    \"\u0430\u043F\u0440\u0435\u043B\u044F\",\n    \"\u043C\u0430\u044F\",\n    \"\u0438\u044E\u043D\u044F\",\n    \"\u0438\u044E\u043B\u044F\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\u0430\",\n    \"\u0441\u0435\u043D\u0442\u044F\u0431\u0440\u044F\",\n    \"\u043E\u043A\u0442\u044F\u0431\u0440\u044F\",\n    \"\u043D\u043E\u044F\u0431\u0440\u044F\",\n    \"\u0434\u0435\u043A\u0430\u0431\u0440\u044F\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u0412\", \"\u041F\", \"\u0412\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u0432\u0441\", \"\u043F\u043D\", \"\u0432\u0442\", \"\u0441\u0440\", \"\u0447\u0442\", \"\u043F\u0442\", \"\u0441\u0431\"],\n  abbreviated: [\"\u0432\u0441\u043A\", \"\u043F\u043D\u0434\", \"\u0432\u0442\u0440\", \"\u0441\u0440\u0434\", \"\u0447\u0442\u0432\", \"\u043F\u0442\u043D\", \"\u0441\u0443\u0431\"],\n  wide: [\n    \"\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C\u0435\",\n    \"\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A\",\n    \"\u0432\u0442\u043E\u0440\u043D\u0438\u043A\",\n    \"\u0441\u0440\u0435\u0434\u0430\",\n    \"\u0447\u0435\u0442\u0432\u0435\u0440\u0433\",\n    \"\u043F\u044F\u0442\u043D\u0438\u0446\u0430\",\n    \"\u0441\u0443\u0431\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D.\",\n    noon: \"\u043F\u043E\u043B\u0434.\",\n    morning: \"\u0443\u0442\u0440\u043E\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044C\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D.\",\n    noon: \"\u043F\u043E\u043B\u0434.\",\n    morning: \"\u0443\u0442\u0440\u043E\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u044C\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D\u043E\u0447\u044C\",\n    noon: \"\u043F\u043E\u043B\u0434\u0435\u043D\u044C\",\n    morning: \"\u0443\u0442\u0440\u043E\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447\u0435\u0440\",\n    night: \"\u043D\u043E\u0447\u044C\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D.\",\n    noon: \"\u043F\u043E\u043B\u0434.\",\n    morning: \"\u0443\u0442\u0440\u0430\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u0438\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D.\",\n    noon: \"\u043F\u043E\u043B\u0434.\",\n    morning: \"\u0443\u0442\u0440\u0430\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u0438\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u043E\u043B\u043D\u043E\u0447\u044C\",\n    noon: \"\u043F\u043E\u043B\u0434\u0435\u043D\u044C\",\n    morning: \"\u0443\u0442\u0440\u0430\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447\u0435\u0440\u0430\",\n    night: \"\u043D\u043E\u0447\u0438\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  let suffix;\n  if (unit === \"date\") {\n    suffix = \"-\u0435\";\n  } else if (unit === \"week\" || unit === \"minute\" || unit === \"second\") {\n    suffix = \"-\u044F\";\n  } else {\n    suffix = \"-\u0439\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(\u0435|\u044F|\u0439|\u043E\u0435|\u044C\u0435|\u0430\u044F|\u044C\u044F|\u044B\u0439|\u043E\u0439|\u0438\u0439|\u044B\u0439))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u0434\u043E )?\u043D\\.?\\s?\u044D\\.?)/i,\n  abbreviated: /^((\u0434\u043E )?\u043D\\.?\\s?\u044D\\.?)/i,\n  wide: /^(\u0434\u043E \u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0435\u0439 \u044D\u0440\u044B|\u043D\u0430\u0448\u0430 \u044D\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0434/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u044B\u043E\u0438]?\u0439?)? \u043A\u0432.?/i,\n  wide: /^[1234](-?[\u044B\u043E\u0438]?\u0439?)? \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\n\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u044F\u0444\u043C\u0430\u0438\u0441\u043E\u043D\u0434]/i,\n  abbreviated:\n    /^(\u044F\u043D\u0432|\u0444\u0435\u0432|\u043C\u0430\u0440\u0442?|\u0430\u043F\u0440|\u043C\u0430[\u0439\u044F]|\u0438\u044E\u043D[\u044C\u044F]?|\u0438\u044E\u043B[\u044C\u044F]?|\u0430\u0432\u0433|\u0441\u0435\u043D\u0442?|\u043E\u043A\u0442|\u043D\u043E\u044F\u0431?|\u0434\u0435\u043A)\\.?/i,\n  wide: /^(\u044F\u043D\u0432\u0430\u0440[\u044C\u044F]|\u0444\u0435\u0432\u0440\u0430\u043B[\u044C\u044F]|\u043C\u0430\u0440\u0442\u0430?|\u0430\u043F\u0440\u0435\u043B[\u044C\u044F]|\u043C\u0430[\u0439\u044F]|\u0438\u044E\u043D[\u044C\u044F]|\u0438\u044E\u043B[\u044C\u044F]|\u0430\u0432\u0433\u0443\u0441\u0442\u0430?|\u0441\u0435\u043D\u0442\u044F\u0431\u0440[\u044C\u044F]|\u043E\u043A\u0442\u044F\u0431\u0440[\u044C\u044F]|\u043E\u043A\u0442\u044F\u0431\u0440[\u044C\u044F]|\u043D\u043E\u044F\u0431\u0440[\u044C\u044F]|\u0434\u0435\u043A\u0430\u0431\u0440[\u044C\u044F])/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u044F/i,\n    /^\u0444/i,\n    /^\u043C/i,\n    /^\u0430/i,\n    /^\u043C/i,\n    /^\u0438/i,\n    /^\u0438/i,\n    /^\u0430/i,\n    /^\u0441/i,\n    /^\u043E/i,\n    /^\u043D/i,\n    /^\u044F/i,\n  ],\n\n  any: [\n    /^\u044F/i,\n    /^\u0444/i,\n    /^\u043C\u0430\u0440/i,\n    /^\u0430\u043F/i,\n    /^\u043C\u0430[\u0439\u044F]/i,\n    /^\u0438\u044E\u043D/i,\n    /^\u0438\u044E\u043B/i,\n    /^\u0430\u0432/i,\n    /^\u0441/i,\n    /^\u043E/i,\n    /^\u043D/i,\n    /^\u0434/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u0432\u043F\u0441\u0447]/i,\n  short: /^(\u0432\u0441|\u0432\u043E|\u043F\u043D|\u043F\u043E|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u0447\u0435|\u043F\u0442|\u043F\u044F|\u0441\u0431|\u0441\u0443)\\.?/i,\n  abbreviated: /^(\u0432\u0441\u043A|\u0432\u043E\u0441|\u043F\u043D\u0434|\u043F\u043E\u043D|\u0432\u0442\u0440|\u0432\u0442\u043E|\u0441\u0440\u0434|\u0441\u0440\u0435|\u0447\u0442\u0432|\u0447\u0435\u0442|\u043F\u0442\u043D|\u043F\u044F\u0442|\u0441\u0443\u0431).?/i,\n  wide: /^(\u0432\u043E\u0441\u043A\u0440\u0435\u0441\u0435\u043D\u044C[\u0435\u044F]|\u043F\u043E\u043D\u0435\u0434\u0435\u043B\u044C\u043D\u0438\u043A\u0430?|\u0432\u0442\u043E\u0440\u043D\u0438\u043A\u0430?|\u0441\u0440\u0435\u0434[\u0430\u044B]|\u0447\u0435\u0442\u0432\u0435\u0440\u0433\u0430?|\u043F\u044F\u0442\u043D\u0438\u0446[\u0430\u044B]|\u0441\u0443\u0431\u0431\u043E\u0442[\u0430\u044B])/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^\u0432/i, /^\u043F/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u0432[\u043E\u0441]/i, /^\u043F[\u043E\u043D]/i, /^\u0432/i, /^\u0441\u0440/i, /^\u0447/i, /^\u043F[\u044F\u0442]/i, /^\u0441[\u0443\u0431]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([\u0434\u043F]\u043F|\u043F\u043E\u043B\u043D\\.?|\u043F\u043E\u043B\u0434\\.?|\u0443\u0442\u0440[\u043E\u0430]|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447[\u044C\u0438])/i,\n  abbreviated: /^([\u0434\u043F]\u043F|\u043F\u043E\u043B\u043D\\.?|\u043F\u043E\u043B\u0434\\.?|\u0443\u0442\u0440[\u043E\u0430]|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u043E\u0447[\u044C\u0438])/i,\n  wide: /^([\u0434\u043F]\u043F|\u043F\u043E\u043B\u043D\u043E\u0447\u044C|\u043F\u043E\u043B\u0434\u0435\u043D\u044C|\u0443\u0442\u0440[\u043E\u0430]|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\u0435\u0440\u0430?|\u043D\u043E\u0447[\u044C\u0438])/i,\n};\n\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0434\u043F/i,\n    pm: /^\u043F\u043F/i,\n    midnight: /^\u043F\u043E\u043B\u043D/i,\n    noon: /^\u043F\u043E\u043B\u0434/i,\n    morning: /^\u0443/i,\n    afternoon: /^\u0434[\u0435\u043D]/i,\n    evening: /^\u0432/i,\n    night: /^\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ru/_lib/formatDistance.js\";\nimport { formatLong } from \"./ru/_lib/formatLong.js\";\nimport { formatRelative } from \"./ru/_lib/formatRelative.js\";\nimport { localize } from \"./ru/_lib/localize.js\";\nimport { match } from \"./ru/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Russian locale.\n * @language Russian\n * @iso-639-2 rus\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const ru = {\n  code: \"ru\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ru;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"unnit go ovtta sekundda\",\n    other: \"unnit go {{count}} sekundda\",\n  },\n\n  xSeconds: {\n    one: \"sekundda\",\n    other: \"{{count}} sekundda\",\n  },\n\n  halfAMinute: \"bealle minuhta\",\n\n  lessThanXMinutes: {\n    one: \"unnit go bealle minuhta\",\n    other: \"unnit go {{count}} minuhta\",\n  },\n\n  xMinutes: {\n    one: \"minuhta\",\n    other: \"{{count}} minuhta\",\n  },\n\n  aboutXHours: {\n    one: \"sullii ovtta diimmu\",\n    other: \"sullii {{count}} diimmu\",\n  },\n\n  xHours: {\n    one: \"diimmu\",\n    other: \"{{count}} diimmu\",\n  },\n\n  xDays: {\n    one: \"beaivvi\",\n    other: \"{{count}} beaivvi\",\n  },\n\n  aboutXWeeks: {\n    one: \"sullii ovtta vahku\",\n    other: \"sullii {{count}} vahku\",\n  },\n\n  xWeeks: {\n    one: \"vahku\",\n    other: \"{{count}} vahku\",\n  },\n\n  aboutXMonths: {\n    one: \"sullii ovtta m\u00E1nu\",\n    other: \"sullii {{count}} m\u00E1nu\",\n  },\n\n  xMonths: {\n    one: \"m\u00E1nu\",\n    other: \"{{count}} m\u00E1nu\",\n  },\n\n  aboutXYears: {\n    one: \"sullii ovtta jagi\",\n    other: \"sullii {{count}} jagi\",\n  },\n\n  xYears: {\n    one: \"jagi\",\n    other: \"{{count}} jagi\",\n  },\n\n  overXYears: {\n    one: \"guhkit go jagi\",\n    other: \"guhkit go {{count}} jagi\",\n  },\n\n  almostXYears: {\n    one: \"measta jagi\",\n    other: \"measta {{count}} jagi\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"geah\u010Den \" + result;\n    } else {\n      return result + \" \u00E1igi\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE MMMM d. 'b.' y\",\n  long: \"MMMM d. 'b.' y\",\n  medium: \"MMM d. 'b.' y\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"'dii.' HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'dii.' {{time}}\",\n  long: \"{{date}} 'dii.' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'ovddit' eeee 'dii.' p\",\n  yesterday: \"'ikte dii.' p\",\n  today: \"'odne dii.' p\",\n  tomorrow: \"'ihtin dii.' p\",\n  nextWeek: \"EEEE 'dii.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"o.Kr.\", \"m.Kr.\"],\n  abbreviated: [\"o.Kr.\", \"m.Kr.\"],\n  wide: [\"ovdal Kristusa\", \"ma\u014B\u014Bel Kristusa\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. kvart\u00E1la\", \"2. kvart\u00E1la\", \"3. kvart\u00E1la\", \"4. kvart\u00E1la\"],\n};\n\nconst monthValues = {\n  narrow: [\"O\", \"G\", \"N\", \"C\", \"M\", \"G\", \"S\", \"B\", \"\u010C\", \"G\", \"S\", \"J\"],\n  abbreviated: [\n    \"o\u0111\u0111a\",\n    \"guov\",\n    \"njuk\",\n    \"cuo\",\n    \"mies\",\n    \"geas\",\n    \"suoi\",\n    \"borg\",\n    \"\u010Dak\u010D\",\n    \"golg\",\n    \"sk\u00E1b\",\n    \"juov\",\n  ],\n\n  wide: [\n    \"o\u0111\u0111ajagem\u00E1nnu\",\n    \"guovvam\u00E1nnu\",\n    \"njuk\u010Dam\u00E1nnu\",\n    \"cuo\u014Bom\u00E1nnu\",\n    \"miessem\u00E1nnu\",\n    \"geassem\u00E1nnu\",\n    \"suoidnem\u00E1nnu\",\n    \"borgem\u00E1nnu\",\n    \"\u010Dak\u010Dam\u00E1nnu\",\n    \"golggotm\u00E1nnu\",\n    \"sk\u00E1bmam\u00E1nnu\",\n    \"juovlam\u00E1nnu\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"V\", \"M\", \"G\", \"D\", \"B\", \"L\"],\n  short: [\"sotn\", \"vuos\", \"ma\u014B\", \"gask\", \"duor\", \"bear\", \"l\u00E1v\"],\n  abbreviated: [\"sotn\", \"vuos\", \"ma\u014B\", \"gask\", \"duor\", \"bear\", \"l\u00E1v\"],\n  wide: [\n    \"sotnabeaivi\",\n    \"vuoss\u00E1rga\",\n    \"ma\u014B\u014Beb\u00E1rga\",\n    \"gaskavahkku\",\n    \"duorastat\",\n    \"bearjadat\",\n    \"l\u00E1vvardat\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"gaskaidja\",\n    noon: \"gaskabeaivi\",\n    morning: \"i\u0111\u0111es\",\n    afternoon: \"ma\u014B\u014Bel gaska.\",\n    evening: \"eahkes\",\n    night: \"ihkku\",\n  },\n  abbreviated: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gaskaidja\",\n    noon: \"gaskabeaivvi\",\n    morning: \"i\u0111\u0111es\",\n    afternoon: \"ma\u014B\u014Bel gaskabea.\",\n    evening: \"eahkes\",\n    night: \"ihkku\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"gaskaidja\",\n    noon: \"gaskabeavvi\",\n    morning: \"i\u0111\u0111es\",\n    afternoon: \"ma\u014B\u014Bel gaskabeaivvi\",\n    evening: \"eahkes\",\n    night: \"ihkku\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(o\\.? ?Kr\\.?|m\\.? ?Kr\\.?)/i,\n  abbreviated: /^(o\\.? ?Kr\\.?|m\\.? ?Kr\\.?)/i,\n  wide: /^(ovdal Kristusa|ovdal min \u00E1iggi|ma\u014B\u014Bel Kristusa|min \u00E1igi)/i,\n};\nconst parseEraPatterns = {\n  any: [/^o/i, /^m/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? kvart\u00E1la/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[ogncmsb\u010Dj]/i,\n  abbreviated:\n    /^(o\u0111\u0111a|guov|njuk|cuo|mies|geas|suoi|borg|\u010Dak\u010D|golg|sk\u00E1b|juov)\\.?/i,\n  wide: /^(o\u0111\u0111ajagem\u00E1nnu|guovvam\u00E1nnu|njuk\u010Dam\u00E1nnu|cuo\u014Bom\u00E1nnu|miessem\u00E1nnu|geassem\u00E1nnu|suoidnem\u00E1nnu|borgem\u00E1nnu|\u010Dak\u010Dam\u00E1nnu|golggotm\u00E1nnu|sk\u00E1bmam\u00E1nnu|juovlam\u00E1nnu)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^o/i,\n    /^g/i,\n    /^n/i,\n    /^c/i,\n    /^m/i,\n    /^g/i,\n    /^s/i,\n    /^b/i,\n    /^\u010D/i,\n    /^g/i,\n    /^s/i,\n    /^j/i,\n  ],\n\n  any: [\n    /^o/i,\n    /^gu/i,\n    /^n/i,\n    /^c/i,\n    /^m/i,\n    /^ge/i,\n    /^su/i,\n    /^b/i,\n    /^\u010D/i,\n    /^go/i,\n    /^sk/i,\n    /^j/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[svmgdbl]/i,\n  short: /^(sotn|vuos|ma\u014B|gask|duor|bear|l\u00E1v)/i,\n  abbreviated: /^(sotn|vuos|ma\u014B|gask|duor|bear|l\u00E1v)/i,\n  wide: /^(sotnabeaivi|vuoss\u00E1rga|ma\u014B\u014Beb\u00E1rga|gaskavahkku|duorastat|bearjadat|l\u00E1vvardat)/i,\n};\nconst parseDayPatterns = {\n  any: [/^s/i, /^v/i, /^m/i, /^g/i, /^d/i, /^b/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(gaskaidja|gaskabeaivvi|(p\u00E5) (i\u0111\u0111es|ma\u014B\u014Bel gaskabeaivvi|eahkes|ihkku)|[ap])/i,\n  any: /^([ap]\\.?\\s?m\\.?|gaskaidja|gaskabeaivvi|(p\u00E5) (i\u0111\u0111es|ma\u014B\u014Bel gaskabeaivvi|eahkes|ihkku))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a(\\.?\\s?m\\.?)?$/i,\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\n    midnight: /^gaskai/i,\n    noon: /^gaskab/i,\n    morning: /i\u0111\u0111es/i,\n    afternoon: /ma\u014B\u014Bel gaskabeaivvi/i,\n    evening: /eahkes/i,\n    night: /ihkku/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./se/_lib/formatDistance.js\";\nimport { formatLong } from \"./se/_lib/formatLong.js\";\nimport { formatRelative } from \"./se/_lib/formatRelative.js\";\nimport { localize } from \"./se/_lib/localize.js\";\nimport { match } from \"./se/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Northern S\u00E1mi locale.\n * @language Northern S\u00E1mi\n * @iso-639-2 sme\n * @author Audun Rundberg [@audunru](https://github.com/audunru)\n */\nexport const se = {\n  code: \"se\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default se;\n", "function declensionGroup(scheme, count) {\n  if (count === 1 && scheme.one) {\n    return scheme.one;\n  }\n\n  if (count >= 2 && count <= 4 && scheme.twoFour) {\n    return scheme.twoFour;\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other;\n}\n\nfunction declension(scheme, count, time) {\n  const group = declensionGroup(scheme, count);\n  const finalText = group[time];\n  return finalText.replace(\"{{count}}\", String(count));\n}\n\nfunction extractPreposition(token) {\n  const result = [\"lessThan\", \"about\", \"over\", \"almost\"].filter(\n    function (preposition) {\n      return !!token.match(new RegExp(\"^\" + preposition));\n    },\n  );\n\n  return result[0];\n}\n\nfunction prefixPreposition(preposition) {\n  let translation = \"\";\n\n  if (preposition === \"almost\") {\n    translation = \"takmer\";\n  }\n\n  if (preposition === \"about\") {\n    translation = \"pribli\u017Ene\";\n  }\n\n  return translation.length > 0 ? translation + \" \" : \"\";\n}\n\nfunction suffixPreposition(preposition) {\n  let translation = \"\";\n\n  if (preposition === \"lessThan\") {\n    translation = \"menej ne\u017E\";\n  }\n\n  if (preposition === \"over\") {\n    translation = \"viac ne\u017E\";\n  }\n\n  return translation.length > 0 ? translation + \" \" : \"\";\n}\n\nfunction lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nconst formatDistanceLocale = {\n  xSeconds: {\n    one: {\n      present: \"sekunda\",\n      past: \"sekundou\",\n      future: \"sekundu\",\n    },\n    twoFour: {\n      present: \"{{count}} sekundy\",\n      past: \"{{count}} sekundami\",\n      future: \"{{count}} sekundy\",\n    },\n    other: {\n      present: \"{{count}} sek\u00FAnd\",\n      past: \"{{count}} sekundami\",\n      future: \"{{count}} sek\u00FAnd\",\n    },\n  },\n\n  halfAMinute: {\n    other: {\n      present: \"pol min\u00FAty\",\n      past: \"pol min\u00FAtou\",\n      future: \"pol min\u00FAty\",\n    },\n  },\n\n  xMinutes: {\n    one: {\n      present: \"min\u00FAta\",\n      past: \"min\u00FAtou\",\n      future: \"min\u00FAtu\",\n    },\n    twoFour: {\n      present: \"{{count}} min\u00FAty\",\n      past: \"{{count}} min\u00FAtami\",\n      future: \"{{count}} min\u00FAty\",\n    },\n    other: {\n      present: \"{{count}} min\u00FAt\",\n      past: \"{{count}} min\u00FAtami\",\n      future: \"{{count}} min\u00FAt\",\n    },\n  },\n\n  xHours: {\n    one: {\n      present: \"hodina\",\n      past: \"hodinou\",\n      future: \"hodinu\",\n    },\n    twoFour: {\n      present: \"{{count}} hodiny\",\n      past: \"{{count}} hodinami\",\n      future: \"{{count}} hodiny\",\n    },\n    other: {\n      present: \"{{count}} hod\u00EDn\",\n      past: \"{{count}} hodinami\",\n      future: \"{{count}} hod\u00EDn\",\n    },\n  },\n\n  xDays: {\n    one: {\n      present: \"de\u0148\",\n      past: \"d\u0148om\",\n      future: \"de\u0148\",\n    },\n    twoFour: {\n      present: \"{{count}} dni\",\n      past: \"{{count}} d\u0148ami\",\n      future: \"{{count}} dni\",\n    },\n    other: {\n      present: \"{{count}} dn\u00ED\",\n      past: \"{{count}} d\u0148ami\",\n      future: \"{{count}} dn\u00ED\",\n    },\n  },\n\n  xWeeks: {\n    one: {\n      present: \"t\u00FD\u017Ede\u0148\",\n      past: \"t\u00FD\u017Ed\u0148om\",\n      future: \"t\u00FD\u017Ede\u0148\",\n    },\n    twoFour: {\n      present: \"{{count}} t\u00FD\u017Edne\",\n      past: \"{{count}} t\u00FD\u017Ed\u0148ami\",\n      future: \"{{count}} t\u00FD\u017Edne\",\n    },\n    other: {\n      present: \"{{count}} t\u00FD\u017Ed\u0148ov\",\n      past: \"{{count}} t\u00FD\u017Ed\u0148ami\",\n      future: \"{{count}} t\u00FD\u017Ed\u0148ov\",\n    },\n  },\n\n  xMonths: {\n    one: {\n      present: \"mesiac\",\n      past: \"mesiacom\",\n      future: \"mesiac\",\n    },\n    twoFour: {\n      present: \"{{count}} mesiace\",\n      past: \"{{count}} mesiacmi\",\n      future: \"{{count}} mesiace\",\n    },\n    other: {\n      present: \"{{count}} mesiacov\",\n      past: \"{{count}} mesiacmi\",\n      future: \"{{count}} mesiacov\",\n    },\n  },\n\n  xYears: {\n    one: {\n      present: \"rok\",\n      past: \"rokom\",\n      future: \"rok\",\n    },\n    twoFour: {\n      present: \"{{count}} roky\",\n      past: \"{{count}} rokmi\",\n      future: \"{{count}} roky\",\n    },\n    other: {\n      present: \"{{count}} rokov\",\n      past: \"{{count}} rokmi\",\n      future: \"{{count}} rokov\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const preposition = extractPreposition(token) || \"\";\n  const key = lowercaseFirstLetter(token.substring(preposition.length));\n  const scheme = formatDistanceLocale[key];\n\n  if (!options?.addSuffix) {\n    return (\n      prefixPreposition(preposition) +\n      suffixPreposition(preposition) +\n      declension(scheme, count, \"present\")\n    );\n  }\n\n  if (options.comparison && options.comparison > 0) {\n    return (\n      prefixPreposition(preposition) +\n      \"o \" +\n      suffixPreposition(preposition) +\n      declension(scheme, count, \"future\")\n    );\n  } else {\n    return (\n      prefixPreposition(preposition) +\n      \"pred \" +\n      suffixPreposition(preposition) +\n      declension(scheme, count, \"past\")\n    );\n  }\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1986\nconst dateFormats = {\n  full: \"EEEE d. MMMM y\",\n  long: \"d. MMMM y\",\n  medium: \"d. M. y\",\n  short: \"d. M. y\",\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#2149\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1994\nconst dateTimeFormats = {\n  full: \"{{date}}, {{time}}\",\n  long: \"{{date}}, {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308\nconst accusativeWeekdays = [\n  \"nede\u013Eu\",\n  \"pondelok\",\n  \"utorok\",\n  \"stredu\",\n  \"\u0161tvrtok\",\n  \"piatok\",\n  \"sobotu\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0: /* Sun */\n    case 3: /* Wed */\n    case 6 /* Sat */:\n      return \"'minul\u00FA \" + weekday + \" o' p\";\n    default:\n      return \"'minul\u00FD' eeee 'o' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  if (day === 4 /* Thu */) {\n    return \"'vo' eeee 'o' p\";\n  } else {\n    return \"'v \" + weekday + \" o' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0: /* Sun */\n    case 4: /* Wed */\n    case 6 /* Sat */:\n      return \"'bud\u00FAcu \" + weekday + \" o' p\";\n    default:\n      return \"'bud\u00FAci' eeee 'o' p\";\n  }\n}\n\nconst formatRelativeLocale = {\n  lastWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'v\u010Dera o' p\",\n  today: \"'dnes o' p\",\n  tomorrow: \"'zajtra o' p\",\n  nextWeek: (date, baseDate, options) => {\n    const day = date.getDay();\n    if (isSameWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1772\nconst eraValues = {\n  narrow: [\"pred Kr.\", \"po Kr.\"],\n  abbreviated: [\"pred Kr.\", \"po Kr.\"],\n  wide: [\"pred Kristom\", \"po Kristovi\"],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1780\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. \u0161tvr\u0165rok\", \"2. \u0161tvr\u0165rok\", \"3. \u0161tvr\u0165rok\", \"4. \u0161tvr\u0165rok\"],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1804\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"m\u00E1j\",\n    \"j\u00FAn\",\n    \"j\u00FAl\",\n    \"aug\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"janu\u00E1r\",\n    \"febru\u00E1r\",\n    \"marec\",\n    \"apr\u00EDl\",\n    \"m\u00E1j\",\n    \"j\u00FAn\",\n    \"j\u00FAl\",\n    \"august\",\n    \"september\",\n    \"okt\u00F3ber\",\n    \"november\",\n    \"december\",\n  ],\n};\nconst formattingMonthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"m\u00E1j\",\n    \"j\u00FAn\",\n    \"j\u00FAl\",\n    \"aug\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"janu\u00E1ra\",\n    \"febru\u00E1ra\",\n    \"marca\",\n    \"apr\u00EDla\",\n    \"m\u00E1ja\",\n    \"j\u00FAna\",\n    \"j\u00FAla\",\n    \"augusta\",\n    \"septembra\",\n    \"okt\u00F3bra\",\n    \"novembra\",\n    \"decembra\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1876\nconst dayValues = {\n  narrow: [\"n\", \"p\", \"u\", \"s\", \"\u0161\", \"p\", \"s\"],\n  short: [\"ne\", \"po\", \"ut\", \"st\", \"\u0161t\", \"pi\", \"so\"],\n  abbreviated: [\"ne\", \"po\", \"ut\", \"st\", \"\u0161t\", \"pi\", \"so\"],\n  wide: [\n    \"nede\u013Ea\",\n    \"pondelok\",\n    \"utorok\",\n    \"streda\",\n    \"\u0161tvrtok\",\n    \"piatok\",\n    \"sobota\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1932\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"poln.\",\n    noon: \"pol.\",\n    morning: \"r\u00E1no\",\n    afternoon: \"pop.\",\n    evening: \"ve\u010D.\",\n    night: \"noc\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"poln.\",\n    noon: \"pol.\",\n    morning: \"r\u00E1no\",\n    afternoon: \"popol.\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"polnoc\",\n    noon: \"poludnie\",\n    morning: \"r\u00E1no\",\n    afternoon: \"popoludnie\",\n    evening: \"ve\u010Der\",\n    night: \"noc\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"o poln.\",\n    noon: \"nap.\",\n    morning: \"r\u00E1no\",\n    afternoon: \"pop.\",\n    evening: \"ve\u010D.\",\n    night: \"v n.\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"o poln.\",\n    noon: \"napol.\",\n    morning: \"r\u00E1no\",\n    afternoon: \"popol.\",\n    evening: \"ve\u010Der\",\n    night: \"v noci\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"o polnoci\",\n    noon: \"napoludnie\",\n    morning: \"r\u00E1no\",\n    afternoon: \"popoludn\u00ED\",\n    evening: \"ve\u010Der\",\n    night: \"v noci\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(pred Kr\\.|pred n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\n  abbreviated: /^(pred Kr\\.|pred n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\n  wide: /^(pred Kristom|pred na[\u0161s][\u00EDi]m letopo[\u010Dc]tom|po Kristovi|n[\u00E1a][\u0161s]ho letopo[\u010Dc]tu)/i,\n};\nconst parseEraPatterns = {\n  any: [/^pr/i, /^(po|n)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234]\\. [\u0161s]tvr[\u0165t]rok/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|m[\u00E1a]j|j[\u00FAu]n|j[\u00FAu]l|aug|sep|okt|nov|dec)/i,\n  wide: /^(janu[\u00E1a]ra?|febru[\u00E1a]ra?|(marec|marca)|apr[\u00EDi]la?|m[\u00E1a]ja?|j[\u00FAu]na?|j[\u00FAu]la?|augusta?|(september|septembra)|(okt[\u00F3o]ber|okt[\u00F3o]bra)|(november|novembra)|(december|decembra))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^m[\u00E1a]j/i,\n    /^j[\u00FAu]n/i,\n    /^j[\u00FAu]l/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npus\u0161p]/i,\n  short: /^(ne|po|ut|st|\u0161t|pi|so)/i,\n  abbreviated: /^(ne|po|ut|st|\u0161t|pi|so)/i,\n  wide: /^(nede[\u013El]a|pondelok|utorok|streda|[\u0161s]tvrtok|piatok|sobota])/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^\u0161/i, /^p/i, /^s/i],\n  any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(\u0161t|stv)/i, /^pi/i, /^so/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(am|pm|(o )?poln\\.?|(nap\\.?|pol\\.?)|r[\u00E1a]no|pop\\.?|ve[\u010Dc]\\.?|(v n\\.?|noc))/i,\n  abbreviated:\n    /^(am|pm|(o )?poln\\.?|(napol\\.?|pol\\.?)|r[\u00E1a]no|pop\\.?|ve[\u010Dc]er|(v )?noci?)/i,\n  any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[\u00E1a]no|popoludn(ie|\u00ED|i)|ve[\u010Dc]er|(v )?noci?)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^am/i,\n    pm: /^pm/i,\n    midnight: /poln/i,\n    noon: /^(nap|(na)?pol(\\.|u))/i,\n    morning: /^r[\u00E1a]no/i,\n    afternoon: /^pop/i,\n    evening: /^ve[\u010Dc]/i,\n    night: /^(noc|v n\\.)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sk/_lib/formatDistance.js\";\nimport { formatLong } from \"./sk/_lib/formatLong.js\";\nimport { formatRelative } from \"./sk/_lib/formatRelative.js\";\nimport { localize } from \"./sk/_lib/localize.js\";\nimport { match } from \"./sk/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Slovak locale.\n * @language Slovak\n * @iso-639-2 slk\n * @author Marek Suscak [@mareksuscak](https://github.com/mareksuscak)\n */\nexport const sk = {\n  code: \"sk\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default sk;\n", "function isPluralType(val) {\n  return val.one !== undefined;\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    present: {\n      one: \"manj kot {{count}} sekunda\",\n      two: \"manj kot {{count}} sekundi\",\n      few: \"manj kot {{count}} sekunde\",\n      other: \"manj kot {{count}} sekund\",\n    },\n    past: {\n      one: \"manj kot {{count}} sekundo\",\n      two: \"manj kot {{count}} sekundama\",\n      few: \"manj kot {{count}} sekundami\",\n      other: \"manj kot {{count}} sekundami\",\n    },\n    future: {\n      one: \"manj kot {{count}} sekundo\",\n      two: \"manj kot {{count}} sekundi\",\n      few: \"manj kot {{count}} sekunde\",\n      other: \"manj kot {{count}} sekund\",\n    },\n  },\n\n  xSeconds: {\n    present: {\n      one: \"{{count}} sekunda\",\n      two: \"{{count}} sekundi\",\n      few: \"{{count}} sekunde\",\n      other: \"{{count}} sekund\",\n    },\n    past: {\n      one: \"{{count}} sekundo\",\n      two: \"{{count}} sekundama\",\n      few: \"{{count}} sekundami\",\n      other: \"{{count}} sekundami\",\n    },\n    future: {\n      one: \"{{count}} sekundo\",\n      two: \"{{count}} sekundi\",\n      few: \"{{count}} sekunde\",\n      other: \"{{count}} sekund\",\n    },\n  },\n\n  halfAMinute: \"pol minute\",\n\n  lessThanXMinutes: {\n    present: {\n      one: \"manj kot {{count}} minuta\",\n      two: \"manj kot {{count}} minuti\",\n      few: \"manj kot {{count}} minute\",\n      other: \"manj kot {{count}} minut\",\n    },\n    past: {\n      one: \"manj kot {{count}} minuto\",\n      two: \"manj kot {{count}} minutama\",\n      few: \"manj kot {{count}} minutami\",\n      other: \"manj kot {{count}} minutami\",\n    },\n    future: {\n      one: \"manj kot {{count}} minuto\",\n      two: \"manj kot {{count}} minuti\",\n      few: \"manj kot {{count}} minute\",\n      other: \"manj kot {{count}} minut\",\n    },\n  },\n\n  xMinutes: {\n    present: {\n      one: \"{{count}} minuta\",\n      two: \"{{count}} minuti\",\n      few: \"{{count}} minute\",\n      other: \"{{count}} minut\",\n    },\n    past: {\n      one: \"{{count}} minuto\",\n      two: \"{{count}} minutama\",\n      few: \"{{count}} minutami\",\n      other: \"{{count}} minutami\",\n    },\n    future: {\n      one: \"{{count}} minuto\",\n      two: \"{{count}} minuti\",\n      few: \"{{count}} minute\",\n      other: \"{{count}} minut\",\n    },\n  },\n\n  aboutXHours: {\n    present: {\n      one: \"pribli\u017Eno {{count}} ura\",\n      two: \"pribli\u017Eno {{count}} uri\",\n      few: \"pribli\u017Eno {{count}} ure\",\n      other: \"pribli\u017Eno {{count}} ur\",\n    },\n    past: {\n      one: \"pribli\u017Eno {{count}} uro\",\n      two: \"pribli\u017Eno {{count}} urama\",\n      few: \"pribli\u017Eno {{count}} urami\",\n      other: \"pribli\u017Eno {{count}} urami\",\n    },\n    future: {\n      one: \"pribli\u017Eno {{count}} uro\",\n      two: \"pribli\u017Eno {{count}} uri\",\n      few: \"pribli\u017Eno {{count}} ure\",\n      other: \"pribli\u017Eno {{count}} ur\",\n    },\n  },\n\n  xHours: {\n    present: {\n      one: \"{{count}} ura\",\n      two: \"{{count}} uri\",\n      few: \"{{count}} ure\",\n      other: \"{{count}} ur\",\n    },\n    past: {\n      one: \"{{count}} uro\",\n      two: \"{{count}} urama\",\n      few: \"{{count}} urami\",\n      other: \"{{count}} urami\",\n    },\n    future: {\n      one: \"{{count}} uro\",\n      two: \"{{count}} uri\",\n      few: \"{{count}} ure\",\n      other: \"{{count}} ur\",\n    },\n  },\n\n  xDays: {\n    present: {\n      one: \"{{count}} dan\",\n      two: \"{{count}} dni\",\n      few: \"{{count}} dni\",\n      other: \"{{count}} dni\",\n    },\n    past: {\n      one: \"{{count}} dnem\",\n      two: \"{{count}} dnevoma\",\n      few: \"{{count}} dnevi\",\n      other: \"{{count}} dnevi\",\n    },\n    future: {\n      one: \"{{count}} dan\",\n      two: \"{{count}} dni\",\n      few: \"{{count}} dni\",\n      other: \"{{count}} dni\",\n    },\n  },\n\n  // no tenses for weeks?\n  aboutXWeeks: {\n    one: \"pribli\u017Eno {{count}} teden\",\n    two: \"pribli\u017Eno {{count}} tedna\",\n    few: \"pribli\u017Eno {{count}} tedne\",\n    other: \"pribli\u017Eno {{count}} tednov\",\n  },\n\n  // no tenses for weeks?\n  xWeeks: {\n    one: \"{{count}} teden\",\n    two: \"{{count}} tedna\",\n    few: \"{{count}} tedne\",\n    other: \"{{count}} tednov\",\n  },\n\n  aboutXMonths: {\n    present: {\n      one: \"pribli\u017Eno {{count}} mesec\",\n      two: \"pribli\u017Eno {{count}} meseca\",\n      few: \"pribli\u017Eno {{count}} mesece\",\n      other: \"pribli\u017Eno {{count}} mesecev\",\n    },\n    past: {\n      one: \"pribli\u017Eno {{count}} mesecem\",\n      two: \"pribli\u017Eno {{count}} mesecema\",\n      few: \"pribli\u017Eno {{count}} meseci\",\n      other: \"pribli\u017Eno {{count}} meseci\",\n    },\n    future: {\n      one: \"pribli\u017Eno {{count}} mesec\",\n      two: \"pribli\u017Eno {{count}} meseca\",\n      few: \"pribli\u017Eno {{count}} mesece\",\n      other: \"pribli\u017Eno {{count}} mesecev\",\n    },\n  },\n\n  xMonths: {\n    present: {\n      one: \"{{count}} mesec\",\n      two: \"{{count}} meseca\",\n      few: \"{{count}} meseci\",\n      other: \"{{count}} mesecev\",\n    },\n    past: {\n      one: \"{{count}} mesecem\",\n      two: \"{{count}} mesecema\",\n      few: \"{{count}} meseci\",\n      other: \"{{count}} meseci\",\n    },\n    future: {\n      one: \"{{count}} mesec\",\n      two: \"{{count}} meseca\",\n      few: \"{{count}} mesece\",\n      other: \"{{count}} mesecev\",\n    },\n  },\n\n  aboutXYears: {\n    present: {\n      one: \"pribli\u017Eno {{count}} leto\",\n      two: \"pribli\u017Eno {{count}} leti\",\n      few: \"pribli\u017Eno {{count}} leta\",\n      other: \"pribli\u017Eno {{count}} let\",\n    },\n    past: {\n      one: \"pribli\u017Eno {{count}} letom\",\n      two: \"pribli\u017Eno {{count}} letoma\",\n      few: \"pribli\u017Eno {{count}} leti\",\n      other: \"pribli\u017Eno {{count}} leti\",\n    },\n    future: {\n      one: \"pribli\u017Eno {{count}} leto\",\n      two: \"pribli\u017Eno {{count}} leti\",\n      few: \"pribli\u017Eno {{count}} leta\",\n      other: \"pribli\u017Eno {{count}} let\",\n    },\n  },\n\n  xYears: {\n    present: {\n      one: \"{{count}} leto\",\n      two: \"{{count}} leti\",\n      few: \"{{count}} leta\",\n      other: \"{{count}} let\",\n    },\n    past: {\n      one: \"{{count}} letom\",\n      two: \"{{count}} letoma\",\n      few: \"{{count}} leti\",\n      other: \"{{count}} leti\",\n    },\n    future: {\n      one: \"{{count}} leto\",\n      two: \"{{count}} leti\",\n      few: \"{{count}} leta\",\n      other: \"{{count}} let\",\n    },\n  },\n\n  overXYears: {\n    present: {\n      one: \"ve\u010D kot {{count}} leto\",\n      two: \"ve\u010D kot {{count}} leti\",\n      few: \"ve\u010D kot {{count}} leta\",\n      other: \"ve\u010D kot {{count}} let\",\n    },\n    past: {\n      one: \"ve\u010D kot {{count}} letom\",\n      two: \"ve\u010D kot {{count}} letoma\",\n      few: \"ve\u010D kot {{count}} leti\",\n      other: \"ve\u010D kot {{count}} leti\",\n    },\n    future: {\n      one: \"ve\u010D kot {{count}} leto\",\n      two: \"ve\u010D kot {{count}} leti\",\n      few: \"ve\u010D kot {{count}} leta\",\n      other: \"ve\u010D kot {{count}} let\",\n    },\n  },\n\n  almostXYears: {\n    present: {\n      one: \"skoraj {{count}} leto\",\n      two: \"skoraj {{count}} leti\",\n      few: \"skoraj {{count}} leta\",\n      other: \"skoraj {{count}} let\",\n    },\n    past: {\n      one: \"skoraj {{count}} letom\",\n      two: \"skoraj {{count}} letoma\",\n      few: \"skoraj {{count}} leti\",\n      other: \"skoraj {{count}} leti\",\n    },\n    future: {\n      one: \"skoraj {{count}} leto\",\n      two: \"skoraj {{count}} leti\",\n      few: \"skoraj {{count}} leta\",\n      other: \"skoraj {{count}} let\",\n    },\n  },\n};\n\nfunction getFormFromCount(count) {\n  switch (count % 100) {\n    case 1:\n      return \"one\";\n    case 2:\n      return \"two\";\n    case 3:\n    case 4:\n      return \"few\";\n    default:\n      return \"other\";\n  }\n}\n\nexport const formatDistance = (token, count, options) => {\n  let result = \"\";\n  let tense = \"present\";\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      tense = \"future\";\n      result = \"\u010Dez \";\n    } else {\n      tense = \"past\";\n      result = \"pred \";\n    }\n  }\n\n  const tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === \"string\") {\n    result += tokenValue;\n  } else {\n    const form = getFormFromCount(count);\n    if (isPluralType(tokenValue)) {\n      result += tokenValue[form].replace(\"{{count}}\", String(count));\n    } else {\n      result += tokenValue[tense][form].replace(\"{{count}}\", String(count));\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, dd. MMMM y\",\n  long: \"dd. MMMM y\",\n  medium: \"d. MMM y\",\n  short: \"d. MM. yy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return \"'prej\u0161njo nedeljo ob' p\";\n      case 3:\n        return \"'prej\u0161njo sredo ob' p\";\n      case 6:\n        return \"'prej\u0161njo soboto ob' p\";\n      default:\n        return \"'prej\u0161nji' EEEE 'ob' p\";\n    }\n  },\n  yesterday: \"'v\u010Deraj ob' p\",\n  today: \"'danes ob' p\",\n  tomorrow: \"'jutri ob' p\",\n  nextWeek: (date) => {\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return \"'naslednjo nedeljo ob' p\";\n      case 3:\n        return \"'naslednjo sredo ob' p\";\n      case 6:\n        return \"'naslednjo soboto ob' p\";\n      default:\n        return \"'naslednji' EEEE 'ob' p\";\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"pr. n. \u0161t.\", \"po n. \u0161t.\"],\n  abbreviated: [\"pr. n. \u0161t.\", \"po n. \u0161t.\"],\n  wide: [\"pred na\u0161im \u0161tetjem\", \"po na\u0161em \u0161tetju\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1. \u010Det.\", \"2. \u010Det.\", \"3. \u010Det.\", \"4. \u010Det.\"],\n  wide: [\"1. \u010Detrtletje\", \"2. \u010Detrtletje\", \"3. \u010Detrtletje\", \"4. \u010Detrtletje\"],\n};\n\nconst monthValues = {\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mar.\",\n    \"apr.\",\n    \"maj\",\n    \"jun.\",\n    \"jul.\",\n    \"avg.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"marec\",\n    \"april\",\n    \"maj\",\n    \"junij\",\n    \"julij\",\n    \"avgust\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"december\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"n\", \"p\", \"t\", \"s\", \"\u010D\", \"p\", \"s\"],\n  short: [\"ned.\", \"pon.\", \"tor.\", \"sre.\", \"\u010Det.\", \"pet.\", \"sob.\"],\n  abbreviated: [\"ned.\", \"pon.\", \"tor.\", \"sre.\", \"\u010Det.\", \"pet.\", \"sob.\"],\n\n  wide: [\n    \"nedelja\",\n    \"ponedeljek\",\n    \"torek\",\n    \"sreda\",\n    \"\u010Detrtek\",\n    \"petek\",\n    \"sobota\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"d\",\n    pm: \"p\",\n    midnight: \"24.00\",\n    noon: \"12.00\",\n    morning: \"j\",\n    afternoon: \"p\",\n    evening: \"v\",\n    night: \"n\",\n  },\n  abbreviated: {\n    am: \"dop.\",\n    pm: \"pop.\",\n    midnight: \"poln.\",\n    noon: \"pold.\",\n    morning: \"jut.\",\n    afternoon: \"pop.\",\n    evening: \"ve\u010D.\",\n    night: \"no\u010D\",\n  },\n  wide: {\n    am: \"dop.\",\n    pm: \"pop.\",\n    midnight: \"polno\u010D\",\n    noon: \"poldne\",\n    morning: \"jutro\",\n    afternoon: \"popoldne\",\n    evening: \"ve\u010Der\",\n    night: \"no\u010D\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"d\",\n    pm: \"p\",\n    midnight: \"24.00\",\n    noon: \"12.00\",\n    morning: \"zj\",\n    afternoon: \"p\",\n    evening: \"zv\",\n    night: \"po\",\n  },\n  abbreviated: {\n    am: \"dop.\",\n    pm: \"pop.\",\n    midnight: \"opoln.\",\n    noon: \"opold.\",\n    morning: \"zjut.\",\n    afternoon: \"pop.\",\n    evening: \"zve\u010D.\",\n    night: \"pono\u010Di\",\n  },\n  wide: {\n    am: \"dop.\",\n    pm: \"pop.\",\n    midnight: \"opolno\u010Di\",\n    noon: \"opoldne\",\n    morning: \"zjutraj\",\n    afternoon: \"popoldan\",\n    evening: \"zve\u010Der\",\n    night: \"pono\u010Di\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  abbreviated: /^(pr\\. n\\. \u0161t\\.|po n\\. \u0161t\\.)/i,\n  wide: /^(pred Kristusom|pred na[s\u0161]im [s\u0161]tetjem|po Kristusu|po na[s\u0161]em [s\u0161]tetju|na[s\u0161]ega [s\u0161]tetja)/i,\n};\nconst parseEraPatterns = {\n  any: [/^pr/i, /^(po|na[s\u0161]em)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\.\\s?[\u010Dc]et\\.?/i,\n  wide: /^[1234]\\. [\u010Dc]etrtletje/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(jan\\.|feb\\.|mar\\.|apr\\.|maj|jun\\.|jul\\.|avg\\.|sep\\.|okt\\.|nov\\.|dec\\.)/i,\n  wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  abbreviated: [\n    /^ja/i,\n    /^fe/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^av/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  wide: [\n    /^ja/i,\n    /^fe/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^av/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npts\u010Dc]/i,\n  short: /^(ned\\.|pon\\.|tor\\.|sre\\.|[c\u010D]et\\.|pet\\.|sob\\.)/i,\n  abbreviated: /^(ned\\.|pon\\.|tor\\.|sre\\.|[c\u010D]et\\.|pet\\.|sob\\.)/i,\n  wide: /^(nedelja|ponedeljek|torek|sreda|[c\u010D]etrtek|petek|sobota)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[c\u010D]/i, /^p/i, /^s/i],\n  any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[c\u010D]/i, /^pe/i, /^so/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(d|po?|z?v|n|z?j|24\\.00|12\\.00)/i,\n  any: /^(dop\\.|pop\\.|o?poln(\\.|o[c\u010D]i?)|o?pold(\\.|ne)|z?ve[c\u010D](\\.|er)|(po)?no[c\u010D]i?|popold(ne|an)|jut(\\.|ro)|zjut(\\.|raj))/i,\n};\nconst parseDayPeriodPatterns = {\n  narrow: {\n    am: /^d/i,\n    pm: /^p/i,\n    midnight: /^24/i,\n    noon: /^12/i,\n    morning: /^(z?j)/i,\n    afternoon: /^p/i,\n    evening: /^(z?v)/i,\n    night: /^(n|po)/i,\n  },\n  any: {\n    am: /^dop\\./i,\n    pm: /^pop\\./i,\n    midnight: /^o?poln/i,\n    noon: /^o?pold/i,\n    morning: /j/i,\n    afternoon: /^pop\\./i,\n    evening: /^z?ve/i,\n    night: /(po)?no/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sl/_lib/formatDistance.js\";\nimport { formatLong } from \"./sl/_lib/formatLong.js\";\nimport { formatRelative } from \"./sl/_lib/formatRelative.js\";\nimport { localize } from \"./sl/_lib/localize.js\";\nimport { match } from \"./sl/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Slovenian locale.\n * @language Slovenian\n * @iso-639-2 slv\n * @author Adam Stradovnik [@Neoglyph](https://github.com/Neoglyph)\n * @author Mato \u017Dgajner [@mzgajner](https://github.com/mzgajner)\n */\nexport const sl = {\n  code: \"sl\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default sl;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"m\u00EB pak se nj\u00EB sekond\u00EB\",\n    other: \"m\u00EB pak se {{count}} sekonda\",\n  },\n\n  xSeconds: {\n    one: \"1 sekond\u00EB\",\n    other: \"{{count}} sekonda\",\n  },\n\n  halfAMinute: \"gjys\u00EBm minuti\",\n\n  lessThanXMinutes: {\n    one: \"m\u00EB pak se nj\u00EB minute\",\n    other: \"m\u00EB pak se {{count}} minuta\",\n  },\n\n  xMinutes: {\n    one: \"1 minut\u00EB\",\n    other: \"{{count}} minuta\",\n  },\n\n  aboutXHours: {\n    one: \"rreth 1 or\u00EB\",\n    other: \"rreth {{count}} or\u00EB\",\n  },\n\n  xHours: {\n    one: \"1 or\u00EB\",\n    other: \"{{count}} or\u00EB\",\n  },\n\n  xDays: {\n    one: \"1 dit\u00EB\",\n    other: \"{{count}} dit\u00EB\",\n  },\n\n  aboutXWeeks: {\n    one: \"rreth 1 jav\u00EB\",\n    other: \"rreth {{count}} jav\u00EB\",\n  },\n\n  xWeeks: {\n    one: \"1 jav\u00EB\",\n    other: \"{{count}} jav\u00EB\",\n  },\n\n  aboutXMonths: {\n    one: \"rreth 1 muaj\",\n    other: \"rreth {{count}} muaj\",\n  },\n\n  xMonths: {\n    one: \"1 muaj\",\n    other: \"{{count}} muaj\",\n  },\n\n  aboutXYears: {\n    one: \"rreth 1 vit\",\n    other: \"rreth {{count}} vite\",\n  },\n\n  xYears: {\n    one: \"1 vit\",\n    other: \"{{count}} vite\",\n  },\n\n  overXYears: {\n    one: \"mbi 1 vit\",\n    other: \"mbi {{count}} vite\",\n  },\n\n  almostXYears: {\n    one: \"pothuajse 1 vit\",\n    other: \"pothuajse {{count}} vite\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"n\u00EB \" + result;\n    } else {\n      return result + \" m\u00EB par\u00EB\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'n\u00EB' {{time}}\",\n  long: \"{{date}} 'n\u00EB' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'t\u00EB' eeee 'e shkuar n\u00EB' p\",\n  yesterday: \"'dje n\u00EB' p\",\n  today: \"'sot n\u00EB' p\",\n  tomorrow: \"'nes\u00EBr n\u00EB' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"P\", \"M\"],\n  abbreviated: [\"PK\", \"MK\"],\n  wide: [\"Para Krishtit\", \"Mbas Krishtit\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"4-mujori I\", \"4-mujori II\", \"4-mujori III\", \"4-mujori IV\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"S\", \"M\", \"P\", \"M\", \"Q\", \"K\", \"G\", \"S\", \"T\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Shk\",\n    \"Mar\",\n    \"Pri\",\n    \"Maj\",\n    \"Qer\",\n    \"Kor\",\n    \"Gus\",\n    \"Sht\",\n    \"Tet\",\n    \"N\u00EBn\",\n    \"Dhj\",\n  ],\n\n  wide: [\n    \"Janar\",\n    \"Shkurt\",\n    \"Mars\",\n    \"Prill\",\n    \"Maj\",\n    \"Qershor\",\n    \"Korrik\",\n    \"Gusht\",\n    \"Shtator\",\n    \"Tetor\",\n    \"N\u00EBntor\",\n    \"Dhjetor\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"H\", \"M\", \"M\", \"E\", \"P\", \"S\"],\n  short: [\"Di\", \"H\u00EB\", \"Ma\", \"M\u00EB\", \"En\", \"Pr\", \"Sh\"],\n  abbreviated: [\"Die\", \"H\u00EBn\", \"Mar\", \"M\u00EBr\", \"Enj\", \"Pre\", \"Sht\"],\n  wide: [\"Diel\u00EB\", \"H\u00EBn\u00EB\", \"Mart\u00EB\", \"M\u00EBrkur\u00EB\", \"Enjte\", \"Premte\", \"Shtun\u00EB\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"p\",\n    pm: \"m\",\n    midnight: \"m\",\n    noon: \"d\",\n    morning: \"m\u00EBngjes\",\n    afternoon: \"dite\",\n    evening: \"mbr\u00EBmje\",\n    night: \"nat\u00EB\",\n  },\n  abbreviated: {\n    am: \"PD\",\n    pm: \"MD\",\n    midnight: \"mesn\u00EBt\u00EB\",\n    noon: \"drek\",\n    morning: \"m\u00EBngjes\",\n    afternoon: \"mbasdite\",\n    evening: \"mbr\u00EBmje\",\n    night: \"nat\u00EB\",\n  },\n  wide: {\n    am: \"p.d.\",\n    pm: \"m.d.\",\n    midnight: \"mesn\u00EBt\u00EB\",\n    noon: \"drek\",\n    morning: \"m\u00EBngjes\",\n    afternoon: \"mbasdite\",\n    evening: \"mbr\u00EBmje\",\n    night: \"nat\u00EB\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"p\",\n    pm: \"m\",\n    midnight: \"m\",\n    noon: \"d\",\n    morning: \"n\u00EB m\u00EBngjes\",\n    afternoon: \"n\u00EB mbasdite\",\n    evening: \"n\u00EB mbr\u00EBmje\",\n    night: \"n\u00EB mesnat\u00EB\",\n  },\n  abbreviated: {\n    am: \"PD\",\n    pm: \"MD\",\n    midnight: \"mesnat\u00EB\",\n    noon: \"drek\",\n    morning: \"n\u00EB m\u00EBngjes\",\n    afternoon: \"n\u00EB mbasdite\",\n    evening: \"n\u00EB mbr\u00EBmje\",\n    night: \"n\u00EB mesnat\u00EB\",\n  },\n  wide: {\n    am: \"p.d.\",\n    pm: \"m.d.\",\n    midnight: \"mesnat\u00EB\",\n    noon: \"drek\",\n    morning: \"n\u00EB m\u00EBngjes\",\n    afternoon: \"n\u00EB mbasdite\",\n    evening: \"n\u00EB mbr\u00EBmje\",\n    night: \"n\u00EB mesnat\u00EB\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  if (options?.unit === \"hour\") return String(number);\n\n  if (number === 1) return number + \"-r\u00EB\";\n  if (number === 4) return number + \"t\";\n\n  return number + \"-t\u00EB\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-r\u00EB|-t\u00EB|t|)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(p|m)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(para krishtit|mbas krishtit)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(p|m)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234]-mujori (i{1,3}|iv)/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jsmpqkftnd]/i,\n  abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|n\u00EBn|dhj)/i,\n  wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|n\u00EBntor|dhjetor)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^s/i,\n    /^m/i,\n    /^p/i,\n    /^m/i,\n    /^q/i,\n    /^k/i,\n    /^g/i,\n    /^s/i,\n    /^t/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^shk/i,\n    /^mar/i,\n    /^pri/i,\n    /^maj/i,\n    /^qer/i,\n    /^kor/i,\n    /^gu/i,\n    /^sht/i,\n    /^tet/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dhmeps]/i,\n  short: /^(di|h\u00EB|ma|m\u00EB|en|pr|sh)/i,\n  abbreviated: /^(die|h\u00EBn|mar|m\u00EBr|enj|pre|sht)/i,\n  wide: /^(diel\u00EB|h\u00EBn\u00EB|mart\u00EB|m\u00EBrkur\u00EB|enjte|premte|shtun\u00EB)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i],\n  any: [/^d/i, /^h/i, /^ma/i, /^m\u00EB/i, /^e/i, /^p/i, /^s/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(p|m|me|n\u00EB (m\u00EBngjes|mbasdite|mbr\u00EBmje|mesnat\u00EB))/i,\n  any: /^([pm]\\.?\\s?d\\.?|drek|n\u00EB (m\u00EBngjes|mbasdite|mbr\u00EBmje|mesnat\u00EB))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^p/i,\n    pm: /^m/i,\n    midnight: /^me/i,\n    noon: /^dr/i,\n    morning: /m\u00EBngjes/i,\n    afternoon: /mbasdite/i,\n    evening: /mbr\u00EBmje/i,\n    night: /nat\u00EB/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sq/_lib/formatDistance.js\";\nimport { formatLong } from \"./sq/_lib/formatLong.js\";\nimport { formatRelative } from \"./sq/_lib/formatRelative.js\";\nimport { localize } from \"./sq/_lib/localize.js\";\nimport { match } from \"./sq/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Albanian locale.\n * @language Shqip\n * @iso-639-2 sqi\n * @author Ardit Dine [@arditdine](https://github.com/arditdine)\n */\nexport const sq = {\n  code: \"sq\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default sq;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      standalone: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u0441\u0435\u043A\u0443\u043D\u0434\u0435\",\n      withPrepositionAgo: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u0441\u0435\u043A\u0443\u043D\u0434\u0435\",\n      withPrepositionIn: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n    },\n    dual: \"\u043C\u0430\u045A\u0435 \u043E\u0434 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0435\",\n    other: \"\u043C\u0430\u045A\u0435 \u043E\u0434 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  xSeconds: {\n    one: {\n      standalone: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n      withPrepositionAgo: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0435\",\n      withPrepositionIn: \"1 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n    },\n    dual: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0435\",\n    other: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n  },\n\n  halfAMinute: \"\u043F\u043E\u043B\u0430 \u043C\u0438\u043D\u0443\u0442\u0435\",\n\n  lessThanXMinutes: {\n    one: {\n      standalone: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u043C\u0438\u043D\u0443\u0442\u0435\",\n      withPrepositionAgo: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u043C\u0438\u043D\u0443\u0442\u0435\",\n      withPrepositionIn: \"\u043C\u0430\u045A\u0435 \u043E\u0434 1 \u043C\u0438\u043D\u0443\u0442\u0443\",\n    },\n    dual: \"\u043C\u0430\u045A\u0435 \u043E\u0434 {{count}} \u043C\u0438\u043D\u0443\u0442\u0435\",\n    other: \"\u043C\u0430\u045A\u0435 \u043E\u0434 {{count}} \u043C\u0438\u043D\u0443\u0442\u0430\",\n  },\n\n  xMinutes: {\n    one: {\n      standalone: \"1 \u043C\u0438\u043D\u0443\u0442\u0430\",\n      withPrepositionAgo: \"1 \u043C\u0438\u043D\u0443\u0442\u0435\",\n      withPrepositionIn: \"1 \u043C\u0438\u043D\u0443\u0442\u0443\",\n    },\n    dual: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0435\",\n    other: \"{{count}} \u043C\u0438\u043D\u0443\u0442\u0430\",\n  },\n\n  aboutXHours: {\n    one: {\n      standalone: \"\u043E\u043A\u043E 1 \u0441\u0430\u0442\",\n      withPrepositionAgo: \"\u043E\u043A\u043E 1 \u0441\u0430\u0442\",\n      withPrepositionIn: \"\u043E\u043A\u043E 1 \u0441\u0430\u0442\",\n    },\n    dual: \"\u043E\u043A\u043E {{count}} \u0441\u0430\u0442\u0430\",\n    other: \"\u043E\u043A\u043E {{count}} \u0441\u0430\u0442\u0438\",\n  },\n\n  xHours: {\n    one: {\n      standalone: \"1 \u0441\u0430\u0442\",\n      withPrepositionAgo: \"1 \u0441\u0430\u0442\",\n      withPrepositionIn: \"1 \u0441\u0430\u0442\",\n    },\n    dual: \"{{count}} \u0441\u0430\u0442\u0430\",\n    other: \"{{count}} \u0441\u0430\u0442\u0438\",\n  },\n\n  xDays: {\n    one: {\n      standalone: \"1 \u0434\u0430\u043D\",\n      withPrepositionAgo: \"1 \u0434\u0430\u043D\",\n      withPrepositionIn: \"1 \u0434\u0430\u043D\",\n    },\n    dual: \"{{count}} \u0434\u0430\u043D\u0430\",\n    other: \"{{count}} \u0434\u0430\u043D\u0430\",\n  },\n\n  aboutXWeeks: {\n    one: {\n      standalone: \"\u043E\u043A\u043E 1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n      withPrepositionAgo: \"\u043E\u043A\u043E 1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n      withPrepositionIn: \"\u043E\u043A\u043E 1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n    },\n    dual: \"\u043E\u043A\u043E {{count}} \u043D\u0435\u0434\u0435\u0459\u0435\",\n    other: \"\u043E\u043A\u043E {{count}} \u043D\u0435\u0434\u0435\u0459\u0435\",\n  },\n\n  xWeeks: {\n    one: {\n      standalone: \"1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n      withPrepositionAgo: \"1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n      withPrepositionIn: \"1 \u043D\u0435\u0434\u0435\u0459\u0443\",\n    },\n    dual: \"{{count}} \u043D\u0435\u0434\u0435\u0459\u0435\",\n    other: \"{{count}} \u043D\u0435\u0434\u0435\u0459\u0435\",\n  },\n\n  aboutXMonths: {\n    one: {\n      standalone: \"\u043E\u043A\u043E 1 \u043C\u0435\u0441\u0435\u0446\",\n      withPrepositionAgo: \"\u043E\u043A\u043E 1 \u043C\u0435\u0441\u0435\u0446\",\n      withPrepositionIn: \"\u043E\u043A\u043E 1 \u043C\u0435\u0441\u0435\u0446\",\n    },\n    dual: \"\u043E\u043A\u043E {{count}} \u043C\u0435\u0441\u0435\u0446\u0430\",\n    other: \"\u043E\u043A\u043E {{count}} \u043C\u0435\u0441\u0435\u0446\u0438\",\n  },\n\n  xMonths: {\n    one: {\n      standalone: \"1 \u043C\u0435\u0441\u0435\u0446\",\n      withPrepositionAgo: \"1 \u043C\u0435\u0441\u0435\u0446\",\n      withPrepositionIn: \"1 \u043C\u0435\u0441\u0435\u0446\",\n    },\n    dual: \"{{count}} \u043C\u0435\u0441\u0435\u0446\u0430\",\n    other: \"{{count}} \u043C\u0435\u0441\u0435\u0446\u0438\",\n  },\n\n  aboutXYears: {\n    one: {\n      standalone: \"\u043E\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionAgo: \"\u043E\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionIn: \"\u043E\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n    },\n    dual: \"\u043E\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0435\",\n    other: \"\u043E\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0430\",\n  },\n\n  xYears: {\n    one: {\n      standalone: \"1 \u0433\u043E\u0434\u0438\u043D\u0430\",\n      withPrepositionAgo: \"1 \u0433\u043E\u0434\u0438\u043D\u0435\",\n      withPrepositionIn: \"1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n    },\n    dual: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0435\",\n    other: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0430\",\n  },\n\n  overXYears: {\n    one: {\n      standalone: \"\u043F\u0440\u0435\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionAgo: \"\u043F\u0440\u0435\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionIn: \"\u043F\u0440\u0435\u043A\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n    },\n    dual: \"\u043F\u0440\u0435\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0435\",\n    other: \"\u043F\u0440\u0435\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0430\",\n  },\n\n  almostXYears: {\n    one: {\n      standalone: \"\u0433\u043E\u0442\u043E\u0432\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionAgo: \"\u0433\u043E\u0442\u043E\u0432\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n      withPrepositionIn: \"\u0433\u043E\u0442\u043E\u0432\u043E 1 \u0433\u043E\u0434\u0438\u043D\u0443\",\n    },\n    dual: \"\u0433\u043E\u0442\u043E\u0432\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0435\",\n    other: \"\u0433\u043E\u0442\u043E\u0432\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0430\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        result = tokenValue.one.withPrepositionIn;\n      } else {\n        result = tokenValue.one.withPrepositionAgo;\n      }\n    } else {\n      result = tokenValue.one.standalone;\n    }\n  } else if (\n    count % 10 > 1 &&\n    count % 10 < 5 && // if last digit is between 2 and 4\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\n  ) {\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0437\u0430 \" + result;\n    } else {\n      return \"\u043F\u0440\u0435 \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM yyyy.\",\n  long: \"d. MMMM yyyy.\",\n  medium: \"d. MMM yy.\",\n  short: \"dd. MM. yy.\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss (zzzz)\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0443' {{time}}\",\n  long: \"{{date}} '\u0443' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return \"'\u043F\u0440\u043E\u0448\u043B\u0435 \u043D\u0435\u0434\u0435\u0459\u0435 \u0443' p\";\n      case 3:\n        return \"'\u043F\u0440\u043E\u0448\u043B\u0435 \u0441\u0440\u0435\u0434\u0435 \u0443' p\";\n      case 6:\n        return \"'\u043F\u0440\u043E\u0448\u043B\u0435 \u0441\u0443\u0431\u043E\u0442\u0435 \u0443' p\";\n      default:\n        return \"'\u043F\u0440\u043E\u0448\u043B\u0438' EEEE '\u0443' p\";\n    }\n  },\n  yesterday: \"'\u0458\u0443\u0447\u0435 \u0443' p\",\n  today: \"'\u0434\u0430\u043D\u0430\u0441 \u0443' p\",\n  tomorrow: \"'\u0441\u0443\u0442\u0440\u0430 \u0443' p\",\n  nextWeek: (date) => {\n    const day = date.getDay();\n\n    switch (day) {\n      case 0:\n        return \"'\u0441\u043B\u0435\u0434\u0435\u045B\u0435 \u043D\u0435\u0434\u0435\u0459\u0435 \u0443' p\";\n      case 3:\n        return \"'\u0441\u043B\u0435\u0434\u0435\u045B\u0443 \u0441\u0440\u0435\u0434\u0443 \u0443' p\";\n      case 6:\n        return \"'\u0441\u043B\u0435\u0434\u0435\u045B\u0443 \u0441\u0443\u0431\u043E\u0442\u0443 \u0443' p\";\n      default:\n        return \"'\u0441\u043B\u0435\u0434\u0435\u045B\u0438' EEEE '\u0443' p\";\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u043F\u0440.\u043D.\u0435.\", \"\u0410\u0414\"],\n  abbreviated: [\"\u043F\u0440. \u0425\u0440.\", \"\u043F\u043E. \u0425\u0440.\"],\n  wide: [\"\u041F\u0440\u0435 \u0425\u0440\u0438\u0441\u0442\u0430\", \"\u041F\u043E\u0441\u043B\u0435 \u0425\u0440\u0438\u0441\u0442\u0430\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\n  abbreviated: [\"1. \u043A\u0432.\", \"2. \u043A\u0432.\", \"3. \u043A\u0432.\", \"4. \u043A\u0432.\"],\n  wide: [\"1. \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2. \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3. \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4. \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"\u0458\u0430\u043D\",\n    \"\u0444\u0435\u0431\",\n    \"\u043C\u0430\u0440\",\n    \"\u0430\u043F\u0440\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\",\n    \"\u0458\u0443\u043B\",\n    \"\u0430\u0432\u0433\",\n    \"\u0441\u0435\u043F\",\n    \"\u043E\u043A\u0442\",\n    \"\u043D\u043E\u0432\",\n    \"\u0434\u0435\u0446\",\n  ],\n\n  wide: [\n    \"\u0458\u0430\u043D\u0443\u0430\u0440\",\n    \"\u0444\u0435\u0431\u0440\u0443\u0430\u0440\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0438\u043B\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\",\n    \"\u0458\u0443\u043B\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440\",\n    \"\u043E\u043A\u0442\u043E\u0431\u0430\u0440\",\n    \"\u043D\u043E\u0432\u0435\u043C\u0431\u0430\u0440\",\n    \"\u0434\u0435\u0446\u0435\u043C\u0431\u0430\u0440\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"\u0458\u0430\u043D\",\n    \"\u0444\u0435\u0431\",\n    \"\u043C\u0430\u0440\",\n    \"\u0430\u043F\u0440\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\",\n    \"\u0458\u0443\u043B\",\n    \"\u0430\u0432\u0433\",\n    \"\u0441\u0435\u043F\",\n    \"\u043E\u043A\u0442\",\n    \"\u043D\u043E\u0432\",\n    \"\u0434\u0435\u0446\",\n  ],\n\n  wide: [\n    \"\u0458\u0430\u043D\u0443\u0430\u0440\",\n    \"\u0444\u0435\u0431\u0440\u0443\u0430\u0440\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0438\u043B\",\n    \"\u043C\u0430\u0458\",\n    \"\u0458\u0443\u043D\",\n    \"\u0458\u0443\u043B\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440\",\n    \"\u043E\u043A\u0442\u043E\u0431\u0430\u0440\",\n    \"\u043D\u043E\u0432\u0435\u043C\u0431\u0430\u0440\",\n    \"\u0434\u0435\u0446\u0435\u043C\u0431\u0430\u0440\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0423\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0435\u0434\", \"\u043F\u043E\u043D\", \"\u0443\u0442\u043E\", \"\u0441\u0440\u0435\", \"\u0447\u0435\u0442\", \"\u043F\u0435\u0442\", \"\u0441\u0443\u0431\"],\n  abbreviated: [\"\u043D\u0435\u0434\", \"\u043F\u043E\u043D\", \"\u0443\u0442\u043E\", \"\u0441\u0440\u0435\", \"\u0447\u0435\u0442\", \"\u043F\u0435\u0442\", \"\u0441\u0443\u0431\"],\n  wide: [\n    \"\u043D\u0435\u0434\u0435\u0459\u0430\",\n    \"\u043F\u043E\u043D\u0435\u0434\u0435\u0459\u0430\u043A\",\n    \"\u0443\u0442\u043E\u0440\u0430\u043A\",\n    \"\u0441\u0440\u0435\u0434\u0430\",\n    \"\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043A\",\n    \"\u043F\u0435\u0442\u0430\u043A\",\n    \"\u0441\u0443\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0410\u041C\",\n    pm: \"\u041F\u041C\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n  abbreviated: {\n    am: \"\u0410\u041C\",\n    pm: \"\u041F\u041C\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u0441\u043B\u0435 \u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"\u043F\u043E\u043D\u043E\u045B\",\n    noon: \"\u043F\u043E\u0434\u043D\u0435\",\n    morning: \"\u0443\u0458\u0443\u0442\u0440\u0443\",\n    afternoon: \"\u043F\u043E\u0441\u043B\u0435 \u043F\u043E\u0434\u043D\u0435\",\n    evening: \"\u0443\u0432\u0435\u0447\u0435\",\n    night: \"\u043D\u043E\u045B\u0443\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u043F\u0440\\.\u043D\\.\u0435\\.|\u0410\u0414)/i,\n  abbreviated: /^(\u043F\u0440\\.\\s?\u0425\u0440\\.|\u043F\u043E\\.\\s?\u0425\u0440\\.)/i,\n  wide: /^(\u041F\u0440\u0435 \u0425\u0440\u0438\u0441\u0442\u0430|\u043F\u0440\u0435 \u043D\u043E\u0432\u0435 \u0435\u0440\u0435|\u041F\u043E\u0441\u043B\u0435 \u0425\u0440\u0438\u0441\u0442\u0430|\u043D\u043E\u0432\u0430 \u0435\u0440\u0430)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u043F\u0440/i, /^(\u043F\u043E|\u043D\u043E\u0432\u0430)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\.\\s?\u043A\u0432\\.?/i,\n  wide: /^[1234]\\. \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(10|11|12|[123456789])\\./i,\n  abbreviated: /^(\u0458\u0430\u043D|\u0444\u0435\u0431|\u043C\u0430\u0440|\u0430\u043F\u0440|\u043C\u0430\u0458|\u0458\u0443\u043D|\u0458\u0443\u043B|\u0430\u0432\u0433|\u0441\u0435\u043F|\u043E\u043A\u0442|\u043D\u043E\u0432|\u0434\u0435\u0446)/i,\n  wide: /^((\u0458\u0430\u043D\u0443\u0430\u0440|\u0458\u0430\u043D\u0443\u0430\u0440\u0430)|(\u0444\u0435\u0431\u0440\u0443\u0430\u0440|\u0444\u0435\u0431\u0440\u0443\u0430\u0440\u0430)|(\u043C\u0430\u0440\u0442|\u043C\u0430\u0440\u0442\u0430)|(\u0430\u043F\u0440\u0438\u043B|\u0430\u043F\u0440\u0438\u043B\u0430)|(\u043C\u0458\u0430|\u043C\u0430\u0458\u0430)|(\u0458\u0443\u043D|\u0458\u0443\u043D\u0430)|(\u0458\u0443\u043B|\u0458\u0443\u043B\u0430)|(\u0430\u0432\u0433\u0443\u0441\u0442|\u0430\u0432\u0433\u0443\u0441\u0442\u0430)|(\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0430\u0440|\u0441\u0435\u043F\u0442\u0435\u043C\u0431\u0440\u0430)|(\u043E\u043A\u0442\u043E\u0431\u0430\u0440|\u043E\u043A\u0442\u043E\u0431\u0440\u0430)|(\u043D\u043E\u0432\u0435\u043C\u0431\u0430\u0440|\u043D\u043E\u0432\u0435\u043C\u0431\u0440\u0430)|(\u0434\u0435\u0446\u0435\u043C\u0431\u0430\u0440|\u0434\u0435\u0446\u0435\u043C\u0431\u0440\u0430))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^1/i,\n    /^2/i,\n    /^3/i,\n    /^4/i,\n    /^5/i,\n    /^6/i,\n    /^7/i,\n    /^8/i,\n    /^9/i,\n    /^10/i,\n    /^11/i,\n    /^12/i,\n  ],\n\n  any: [\n    /^\u0458\u0430/i,\n    /^\u0444/i,\n    /^\u043C\u0430\u0440/i,\n    /^\u0430\u043F/i,\n    /^\u043C\u0430\u0458/i,\n    /^\u0458\u0443\u043D/i,\n    /^\u0458\u0443\u043B/i,\n    /^\u0430\u0432\u0433/i,\n    /^\u0441/i,\n    /^\u043E/i,\n    /^\u043D/i,\n    /^\u0434/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043F\u0443\u0441\u0447\u043D]/i,\n  short: /^(\u043D\u0435\u0434|\u043F\u043E\u043D|\u0443\u0442\u043E|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043F\u0435\u0442|\u0441\u0443\u0431)/i,\n  abbreviated: /^(\u043D\u0435\u0434|\u043F\u043E\u043D|\u0443\u0442\u043E|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043F\u0435\u0442|\u0441\u0443\u0431)/i,\n  wide: /^(\u043D\u0435\u0434\u0435\u0459\u0430|\u043F\u043E\u043D\u0435\u0434\u0435\u0459\u0430\u043A|\u0443\u0442\u043E\u0440\u0430\u043A|\u0441\u0440\u0435\u0434\u0430|\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043A|\u043F\u0435\u0442\u0430\u043A|\u0441\u0443\u0431\u043E\u0442\u0430)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u043F/i, /^\u0443/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i, /^\u043D/i],\n  any: [/^\u043D\u0435\u0434/i, /^\u043F\u043E\u043D/i, /^\u0443\u0442\u043E/i, /^\u0441\u0440\u0435/i, /^\u0447\u0435\u0442/i, /^\u043F\u0435\u0442/i, /^\u0441\u0443\u0431/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u0430\u043C|\u043F\u043C|\u043F\u043E\u043D\u043E\u045B|(\u043F\u043E)?\u043F\u043E\u0434\u043D\u0435|\u0443\u0432\u0435\u0447\u0435|\u043D\u043E\u045B\u0443|\u043F\u043E\u0441\u043B\u0435 \u043F\u043E\u0434\u043D\u0435|\u0443\u0458\u0443\u0442\u0440\u0443)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^\u043F\u043E\u043D\u043E/i,\n    noon: /^\u043F\u043E\u0434/i,\n    morning: /\u0443\u0458\u0443\u0442\u0440\u0443/i,\n    afternoon: /(\u043F\u043E\u0441\u043B\u0435\\s|\u043F\u043E)+\u043F\u043E\u0434\u043D\u0435/i,\n    evening: /(\u0443\u0432\u0435\u0447\u0435)/i,\n    night: /(\u043D\u043E\u045B\u0443)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sr/_lib/formatDistance.js\";\nimport { formatLong } from \"./sr/_lib/formatLong.js\";\nimport { formatRelative } from \"./sr/_lib/formatRelative.js\";\nimport { localize } from \"./sr/_lib/localize.js\";\nimport { match } from \"./sr/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Serbian cyrillic locale.\n * @language Serbian\n * @iso-639-2 srp\n * @author Igor Radivojevi\u0107 [@rogyvoje](https://github.com/rogyvoje)\n */\nexport const sr = {\n  code: \"sr\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default sr;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      standalone: \"manje od 1 sekunde\",\n      withPrepositionAgo: \"manje od 1 sekunde\",\n      withPrepositionIn: \"manje od 1 sekundu\",\n    },\n    dual: \"manje od {{count}} sekunde\",\n    other: \"manje od {{count}} sekundi\",\n  },\n\n  xSeconds: {\n    one: {\n      standalone: \"1 sekunda\",\n      withPrepositionAgo: \"1 sekunde\",\n      withPrepositionIn: \"1 sekundu\",\n    },\n    dual: \"{{count}} sekunde\",\n    other: \"{{count}} sekundi\",\n  },\n\n  halfAMinute: \"pola minute\",\n\n  lessThanXMinutes: {\n    one: {\n      standalone: \"manje od 1 minute\",\n      withPrepositionAgo: \"manje od 1 minute\",\n      withPrepositionIn: \"manje od 1 minutu\",\n    },\n    dual: \"manje od {{count}} minute\",\n    other: \"manje od {{count}} minuta\",\n  },\n\n  xMinutes: {\n    one: {\n      standalone: \"1 minuta\",\n      withPrepositionAgo: \"1 minute\",\n      withPrepositionIn: \"1 minutu\",\n    },\n    dual: \"{{count}} minute\",\n    other: \"{{count}} minuta\",\n  },\n\n  aboutXHours: {\n    one: {\n      standalone: \"oko 1 sat\",\n      withPrepositionAgo: \"oko 1 sat\",\n      withPrepositionIn: \"oko 1 sat\",\n    },\n    dual: \"oko {{count}} sata\",\n    other: \"oko {{count}} sati\",\n  },\n\n  xHours: {\n    one: {\n      standalone: \"1 sat\",\n      withPrepositionAgo: \"1 sat\",\n      withPrepositionIn: \"1 sat\",\n    },\n    dual: \"{{count}} sata\",\n    other: \"{{count}} sati\",\n  },\n\n  xDays: {\n    one: {\n      standalone: \"1 dan\",\n      withPrepositionAgo: \"1 dan\",\n      withPrepositionIn: \"1 dan\",\n    },\n    dual: \"{{count}} dana\",\n    other: \"{{count}} dana\",\n  },\n\n  aboutXWeeks: {\n    one: {\n      standalone: \"oko 1 nedelju\",\n      withPrepositionAgo: \"oko 1 nedelju\",\n      withPrepositionIn: \"oko 1 nedelju\",\n    },\n    dual: \"oko {{count}} nedelje\",\n    other: \"oko {{count}} nedelje\",\n  },\n\n  xWeeks: {\n    one: {\n      standalone: \"1 nedelju\",\n      withPrepositionAgo: \"1 nedelju\",\n      withPrepositionIn: \"1 nedelju\",\n    },\n    dual: \"{{count}} nedelje\",\n    other: \"{{count}} nedelje\",\n  },\n\n  aboutXMonths: {\n    one: {\n      standalone: \"oko 1 mesec\",\n      withPrepositionAgo: \"oko 1 mesec\",\n      withPrepositionIn: \"oko 1 mesec\",\n    },\n    dual: \"oko {{count}} meseca\",\n    other: \"oko {{count}} meseci\",\n  },\n\n  xMonths: {\n    one: {\n      standalone: \"1 mesec\",\n      withPrepositionAgo: \"1 mesec\",\n      withPrepositionIn: \"1 mesec\",\n    },\n    dual: \"{{count}} meseca\",\n    other: \"{{count}} meseci\",\n  },\n\n  aboutXYears: {\n    one: {\n      standalone: \"oko 1 godinu\",\n      withPrepositionAgo: \"oko 1 godinu\",\n      withPrepositionIn: \"oko 1 godinu\",\n    },\n    dual: \"oko {{count}} godine\",\n    other: \"oko {{count}} godina\",\n  },\n\n  xYears: {\n    one: {\n      standalone: \"1 godina\",\n      withPrepositionAgo: \"1 godine\",\n      withPrepositionIn: \"1 godinu\",\n    },\n    dual: \"{{count}} godine\",\n    other: \"{{count}} godina\",\n  },\n\n  overXYears: {\n    one: {\n      standalone: \"preko 1 godinu\",\n      withPrepositionAgo: \"preko 1 godinu\",\n      withPrepositionIn: \"preko 1 godinu\",\n    },\n    dual: \"preko {{count}} godine\",\n    other: \"preko {{count}} godina\",\n  },\n\n  almostXYears: {\n    one: {\n      standalone: \"gotovo 1 godinu\",\n      withPrepositionAgo: \"gotovo 1 godinu\",\n      withPrepositionIn: \"gotovo 1 godinu\",\n    },\n    dual: \"gotovo {{count}} godine\",\n    other: \"gotovo {{count}} godina\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    if (options?.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        result = tokenValue.one.withPrepositionIn;\n      } else {\n        result = tokenValue.one.withPrepositionAgo;\n      }\n    } else {\n      result = tokenValue.one.standalone;\n    }\n  } else if (\n    count % 10 > 1 &&\n    count % 10 < 5 && // if last digit is between 2 and 4\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\n  ) {\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"za \" + result;\n    } else {\n      return \"pre \" + result;\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, d. MMMM yyyy.\",\n  long: \"d. MMMM yyyy.\",\n  medium: \"d. MMM yy.\",\n  short: \"dd. MM. yy.\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss (zzzz)\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'u' {{time}}\",\n  long: \"{{date}} 'u' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'pro\u0161le nedelje u' p\";\n      case 3:\n        return \"'pro\u0161le srede u' p\";\n      case 6:\n        return \"'pro\u0161le subote u' p\";\n      default:\n        return \"'pro\u0161li' EEEE 'u' p\";\n    }\n  },\n  yesterday: \"'ju\u010De u' p\",\n  today: \"'danas u' p\",\n  tomorrow: \"'sutra u' p\",\n  nextWeek: (date) => {\n    switch (date.getDay()) {\n      case 0:\n        return \"'slede\u0107e nedelje u' p\";\n      case 3:\n        return \"'slede\u0107u sredu u' p\";\n      case 6:\n        return \"'slede\u0107u subotu u' p\";\n      default:\n        return \"'slede\u0107i' EEEE 'u' p\";\n    }\n  },\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"pr.n.e.\", \"AD\"],\n  abbreviated: [\"pr. Hr.\", \"po. Hr.\"],\n  wide: [\"Pre Hrista\", \"Posle Hrista\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avg\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mart\",\n    \"april\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avgust\",\n    \"septembar\",\n    \"oktobar\",\n    \"novembar\",\n    \"decembar\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\n    \"1.\",\n    \"2.\",\n    \"3.\",\n    \"4.\",\n    \"5.\",\n    \"6.\",\n    \"7.\",\n    \"8.\",\n    \"9.\",\n    \"10.\",\n    \"11.\",\n    \"12.\",\n  ],\n\n  abbreviated: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avg\",\n    \"sep\",\n    \"okt\",\n    \"nov\",\n    \"dec\",\n  ],\n\n  wide: [\n    \"januar\",\n    \"februar\",\n    \"mart\",\n    \"april\",\n    \"maj\",\n    \"jun\",\n    \"jul\",\n    \"avgust\",\n    \"septembar\",\n    \"oktobar\",\n    \"novembar\",\n    \"decembar\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"\u010C\", \"P\", \"S\"],\n  short: [\"ned\", \"pon\", \"uto\", \"sre\", \"\u010Det\", \"pet\", \"sub\"],\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sre\", \"\u010Det\", \"pet\", \"sub\"],\n  wide: [\n    \"nedelja\",\n    \"ponedeljak\",\n    \"utorak\",\n    \"sreda\",\n    \"\u010Detvrtak\",\n    \"petak\",\n    \"subota\",\n  ],\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"posle podne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"popodne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"pono\u0107\",\n    noon: \"podne\",\n    morning: \"ujutru\",\n    afternoon: \"posle podne\",\n    evening: \"uve\u010De\",\n    night: \"no\u0107u\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\n  abbreviated: /^(pr\\.\\s?Hr\\.|po\\.\\s?Hr\\.)/i,\n  wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^pr/i, /^(po|nova)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\n  wide: /^[1234]\\. kvartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(10|11|12|[123456789])\\./i,\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,\n  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^1/i,\n    /^2/i,\n    /^3/i,\n    /^4/i,\n    /^5/i,\n    /^6/i,\n    /^7/i,\n    /^8/i,\n    /^9/i,\n    /^10/i,\n    /^11/i,\n    /^12/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^avg/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[npus\u010Dc]/i,\n  short: /^(ned|pon|uto|sre|(\u010Det|cet)|pet|sub)/i,\n  abbreviated: /^(ned|pon|uto|sre|(\u010Det|cet)|pet|sub)/i,\n  wide: /^(nedelja|ponedeljak|utorak|sreda|(\u010Detvrtak|cetvrtak)|petak|subota)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(am|pm|ponoc|pono\u0107|(po)?podne|uvece|uve\u010De|no\u0107u|posle podne|ujutru)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^pono/i,\n    noon: /^pod/i,\n    morning: /jutro/i,\n    afternoon: /(posle\\s|po)+podne/i,\n    evening: /(uvece|uve\u010De)/i,\n    night: /(nocu|no\u0107u)/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sr-Latn/_lib/formatDistance.js\";\nimport { formatLong } from \"./sr-Latn/_lib/formatLong.js\";\nimport { formatRelative } from \"./sr-Latn/_lib/formatRelative.js\";\nimport { localize } from \"./sr-Latn/_lib/localize.js\";\nimport { match } from \"./sr-Latn/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Serbian latin locale.\n * @language Serbian\n * @iso-639-2 srp\n * @author Igor Radivojevi\u0107 [@rogyvoje](https://github.com/rogyvoje)\n */\nexport const srLatn = {\n  code: \"sr-Latn\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default srLatn;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"mindre \u00E4n en sekund\",\n    other: \"mindre \u00E4n {{count}} sekunder\",\n  },\n\n  xSeconds: {\n    one: \"en sekund\",\n    other: \"{{count}} sekunder\",\n  },\n\n  halfAMinute: \"en halv minut\",\n\n  lessThanXMinutes: {\n    one: \"mindre \u00E4n en minut\",\n    other: \"mindre \u00E4n {{count}} minuter\",\n  },\n\n  xMinutes: {\n    one: \"en minut\",\n    other: \"{{count}} minuter\",\n  },\n\n  aboutXHours: {\n    one: \"ungef\u00E4r en timme\",\n    other: \"ungef\u00E4r {{count}} timmar\",\n  },\n\n  xHours: {\n    one: \"en timme\",\n    other: \"{{count}} timmar\",\n  },\n\n  xDays: {\n    one: \"en dag\",\n    other: \"{{count}} dagar\",\n  },\n\n  aboutXWeeks: {\n    one: \"ungef\u00E4r en vecka\",\n    other: \"ungef\u00E4r {{count}} veckor\",\n  },\n\n  xWeeks: {\n    one: \"en vecka\",\n    other: \"{{count}} veckor\",\n  },\n\n  aboutXMonths: {\n    one: \"ungef\u00E4r en m\u00E5nad\",\n    other: \"ungef\u00E4r {{count}} m\u00E5nader\",\n  },\n\n  xMonths: {\n    one: \"en m\u00E5nad\",\n    other: \"{{count}} m\u00E5nader\",\n  },\n\n  aboutXYears: {\n    one: \"ungef\u00E4r ett \u00E5r\",\n    other: \"ungef\u00E4r {{count}} \u00E5r\",\n  },\n\n  xYears: {\n    one: \"ett \u00E5r\",\n    other: \"{{count}} \u00E5r\",\n  },\n\n  overXYears: {\n    one: \"\u00F6ver ett \u00E5r\",\n    other: \"\u00F6ver {{count}} \u00E5r\",\n  },\n\n  almostXYears: {\n    one: \"n\u00E4stan ett \u00E5r\",\n    other: \"n\u00E4stan {{count}} \u00E5r\",\n  },\n};\n\nconst wordMapping = [\n  \"noll\",\n  \"en\",\n  \"tv\u00E5\",\n  \"tre\",\n  \"fyra\",\n  \"fem\",\n  \"sex\",\n  \"sju\",\n  \"\u00E5tta\",\n  \"nio\",\n  \"tio\",\n  \"elva\",\n  \"tolv\",\n];\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\n      \"{{count}}\",\n      count < 13 ? wordMapping[count] : String(count),\n    );\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"om \" + result;\n    } else {\n      return result + \" sedan\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"y-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"'kl'. HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'kl.' {{time}}\",\n  long: \"{{date}} 'kl.' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'i' EEEE's kl.' p\",\n  yesterday: \"'ig\u00E5r kl.' p\",\n  today: \"'idag kl.' p\",\n  tomorrow: \"'imorgon kl.' p\",\n  nextWeek: \"EEEE 'kl.' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\n  wide: [\"f\u00F6re Kristus\", \"efter Kristus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1:a kvartalet\", \"2:a kvartalet\", \"3:e kvartalet\", \"4:e kvartalet\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"jan.\",\n    \"feb.\",\n    \"mars\",\n    \"apr.\",\n    \"maj\",\n    \"juni\",\n    \"juli\",\n    \"aug.\",\n    \"sep.\",\n    \"okt.\",\n    \"nov.\",\n    \"dec.\",\n  ],\n\n  wide: [\n    \"januari\",\n    \"februari\",\n    \"mars\",\n    \"april\",\n    \"maj\",\n    \"juni\",\n    \"juli\",\n    \"augusti\",\n    \"september\",\n    \"oktober\",\n    \"november\",\n    \"december\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\n  short: [\"s\u00F6\", \"m\u00E5\", \"ti\", \"on\", \"to\", \"fr\", \"l\u00F6\"],\n  abbreviated: [\"s\u00F6n\", \"m\u00E5n\", \"tis\", \"ons\", \"tors\", \"fre\", \"l\u00F6r\"],\n  wide: [\"s\u00F6ndag\", \"m\u00E5ndag\", \"tisdag\", \"onsdag\", \"torsdag\", \"fredag\", \"l\u00F6rdag\"],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/sv.html#1888\nconst dayPeriodValues = {\n  narrow: {\n    am: \"fm\",\n    pm: \"em\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"morg.\",\n    afternoon: \"efterm.\",\n    evening: \"kv\u00E4ll\",\n    night: \"natt\",\n  },\n  abbreviated: {\n    am: \"f.m.\",\n    pm: \"e.m.\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"morgon\",\n    afternoon: \"efterm.\",\n    evening: \"kv\u00E4ll\",\n    night: \"natt\",\n  },\n  wide: {\n    am: \"f\u00F6rmiddag\",\n    pm: \"eftermiddag\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"morgon\",\n    afternoon: \"eftermiddag\",\n    evening: \"kv\u00E4ll\",\n    night: \"natt\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"fm\",\n    pm: \"em\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 efterm.\",\n    evening: \"p\u00E5 kv\u00E4llen\",\n    night: \"p\u00E5 natten\",\n  },\n  abbreviated: {\n    am: \"fm\",\n    pm: \"em\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morg.\",\n    afternoon: \"p\u00E5 efterm.\",\n    evening: \"p\u00E5 kv\u00E4llen\",\n    night: \"p\u00E5 natten\",\n  },\n  wide: {\n    am: \"fm\",\n    pm: \"em\",\n    midnight: \"midnatt\",\n    noon: \"middag\",\n    morning: \"p\u00E5 morgonen\",\n    afternoon: \"p\u00E5 eftermiddagen\",\n    evening: \"p\u00E5 kv\u00E4llen\",\n    night: \"p\u00E5 natten\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n      case 2:\n        return number + \":a\";\n    }\n  }\n  return number + \":e\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(:a|:e)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(f\\.? ?Kr\\.?|f\\.? ?v\\.? ?t\\.?|e\\.? ?Kr\\.?|v\\.? ?t\\.?)/i,\n  abbreviated: /^(f\\.? ?Kr\\.?|f\\.? ?v\\.? ?t\\.?|e\\.? ?Kr\\.?|v\\.? ?t\\.?)/i,\n  wide: /^(f\u00F6re Kristus|f\u00F6re v\u00E5r tid|efter Kristus|v\u00E5r tid)/i,\n};\nconst parseEraPatterns = {\n  any: [/^f/i, /^[ev]/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](:a|:e)? kvartalet/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(jan|feb|mar[s]?|apr|maj|jun[i]?|jul[i]?|aug|sep|okt|nov|dec)\\.?/i,\n  wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^maj/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtofl]/i,\n  short: /^(s\u00F6|m\u00E5|ti|on|to|fr|l\u00F6)/i,\n  abbreviated: /^(s\u00F6n|m\u00E5n|tis|ons|tors|fre|l\u00F6r)/i,\n  wide: /^(s\u00F6ndag|m\u00E5ndag|tisdag|onsdag|torsdag|fredag|l\u00F6rdag)/i,\n};\nconst parseDayPatterns = {\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^([fe]\\.?\\s?m\\.?|midn(att)?|midd(ag)?|(p\u00E5) (morgonen|eftermiddagen|kv\u00E4llen|natten))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^f/i,\n    pm: /^e/i,\n    midnight: /^midn/i,\n    noon: /^midd/i,\n    morning: /morgon/i,\n    afternoon: /eftermiddag/i,\n    evening: /kv\u00E4ll/i,\n    night: /natt/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./sv/_lib/formatDistance.js\";\nimport { formatLong } from \"./sv/_lib/formatLong.js\";\nimport { formatRelative } from \"./sv/_lib/formatRelative.js\";\nimport { localize } from \"./sv/_lib/localize.js\";\nimport { match } from \"./sv/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Swedish locale.\n * @language Swedish\n * @iso-639-2 swe\n * @author Johannes Ul\u00E9n [@ejulen](https://github.com/ejulen)\n * @author Alexander Nanberg [@alexandernanberg](https://github.com/alexandernanberg)\n * @author Henrik Andersson [@limelights](https://github.com/limelights)\n */\nexport const sv = {\n  code: \"sv\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default sv;\n", "function isPluralType(val) {\n  return val.one !== undefined;\n}\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: {\n      default: \"\u0B92\u0BB0\u0BC1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BCD\u0B95\u0BC1 \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95\",\n      in: \"\u0B92\u0BB0\u0BC1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BCD\u0B95\u0BC1\u0BB3\u0BCD\",\n      ago: \"\u0B92\u0BB0\u0BC1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95\",\n      in: \"{{count}} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1\u0BB3\u0BCD\",\n      ago: \"{{count}} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xSeconds: {\n    one: {\n      default: \"1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\",\n      in: \"1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0BAF\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BB5\u0BBF\u0BA8\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BB5\u0BBF\u0BA8\u0BBE\u0B9F\u0BBF\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  halfAMinute: {\n    default: \"\u0B85\u0BB0\u0BC8 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD\",\n    in: \"\u0B85\u0BB0\u0BC8 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n    ago: \"\u0B85\u0BB0\u0BC8 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n  },\n\n  lessThanXMinutes: {\n    one: {\n      default: \"\u0B92\u0BB0\u0BC1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95\",\n      in: \"\u0B92\u0BB0\u0BC1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1\u0BB3\u0BCD\",\n      ago: \"\u0B92\u0BB0\u0BC1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0B95\u0BC1\u0BB1\u0BC8\u0BB5\u0BBE\u0B95\",\n      in: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1\u0BB3\u0BCD\",\n      ago: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xMinutes: {\n    one: {\n      default: \"1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD\",\n      in: \"1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BA8\u0BBF\u0BAE\u0BBF\u0B9F\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  aboutXHours: {\n    one: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n    },\n  },\n\n  xHours: {\n    one: {\n      default: \"1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n      in: \"1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\n      in: \"{{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xDays: {\n    one: {\n      default: \"1 \u0BA8\u0BBE\u0BB3\u0BCD\",\n      in: \"1 \u0BA8\u0BBE\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BA8\u0BBE\u0BB3\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  aboutXWeeks: {\n    one: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BB5\u0BBE\u0BB0\u0BAE\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BB5\u0BBE\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BB5\u0BBE\u0BB0\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xWeeks: {\n    one: {\n      default: \"1 \u0BB5\u0BBE\u0BB0\u0BAE\u0BCD\",\n      in: \"1 \u0BB5\u0BBE\u0BB0\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BB5\u0BBE\u0BB0\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BB5\u0BBE\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  aboutXMonths: {\n    one: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BBE\u0BA4\u0BAE\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BBE\u0BA4\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BAE\u0BBE\u0BA4\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xMonths: {\n    one: {\n      default: \"1 \u0BAE\u0BBE\u0BA4\u0BAE\u0BCD\",\n      in: \"1 \u0BAE\u0BBE\u0BA4\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BAE\u0BBE\u0BA4\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0BAE\u0BBE\u0BA4\u0B99\u0BCD\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  aboutXYears: {\n    one: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0B86\u0BA3\u0BCD\u0B9F\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD 1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD\",\n      in: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B9A\u0BC1\u0BAE\u0BBE\u0BB0\u0BCD {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  xYears: {\n    one: {\n      default: \"1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD\",\n      in: \"1 \u0B86\u0BA3\u0BCD\u0B9F\u0BBF\u0BB2\u0BCD\",\n      ago: \"1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD\",\n      in: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  overXYears: {\n    one: {\n      default: \"1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1 \u0BAE\u0BC7\u0BB2\u0BCD\",\n      in: \"1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BA4\u0BCD\u0BA4\u0BBF\u0BB1\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0BAE\u0BC7\u0BB2\u0BBE\u0B95\",\n      ago: \"1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1\u0BAE\u0BCD \u0BAE\u0BC7\u0BB2\u0BBE\u0B95\",\n      in: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"{{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n\n  almostXYears: {\n    one: {\n      default: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F 1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD\",\n      in: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F 1 \u0B86\u0BA3\u0BCD\u0B9F\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F 1 \u0BB5\u0BB0\u0BC1\u0B9F\u0BAE\u0BCD \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n    other: {\n      default: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD\",\n      in: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BBF\u0BB2\u0BCD\",\n      ago: \"\u0B95\u0BBF\u0B9F\u0BCD\u0B9F\u0BA4\u0BCD\u0BA4\u0B9F\u0BCD\u0B9F {{count}} \u0B86\u0BA3\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\u0BAA\u0BC1\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const tense = options?.addSuffix\n    ? options.comparison && options.comparison > 0\n      ? \"in\"\n      : \"ago\"\n    : \"default\";\n\n  const tokenValue = formatDistanceLocale[token];\n\n  if (!isPluralType(tokenValue)) return tokenValue[tense];\n\n  if (count === 1) {\n    return tokenValue.one[tense];\n  } else {\n    return tokenValue.other[tense].replace(\"{{count}}\", String(count));\n  }\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html\n\n// CLDR #1846 - #1849\nconst dateFormats = {\n  full: \"EEEE, d MMMM, y\",\n  long: \"d MMMM, y\",\n  medium: \"d MMM, y\",\n  short: \"d/M/yy\",\n};\n\n// CLDR #1850 - #1853\nconst timeFormats = {\n  full: \"a h:mm:ss zzzz\",\n  long: \"a h:mm:ss z\",\n  medium: \"a h:mm:ss\",\n  short: \"a h:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0B95\u0B9F\u0BA8\u0BCD\u0BA4' eeee p '\u0BAE\u0BA3\u0BBF\u0B95\u0BCD\u0B95\u0BC1'\",\n  yesterday: \"'\u0BA8\u0BC7\u0BB1\u0BCD\u0BB1\u0BC1 ' p '\u0BAE\u0BA3\u0BBF\u0B95\u0BCD\u0B95\u0BC1'\",\n  today: \"'\u0B87\u0BA9\u0BCD\u0BB1\u0BC1 ' p '\u0BAE\u0BA3\u0BBF\u0B95\u0BCD\u0B95\u0BC1'\",\n  tomorrow: \"'\u0BA8\u0BBE\u0BB3\u0BC8 ' p '\u0BAE\u0BA3\u0BBF\u0B95\u0BCD\u0B95\u0BC1'\",\n  nextWeek: \"eeee p '\u0BAE\u0BA3\u0BBF\u0B95\u0BCD\u0B95\u0BC1'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html\n\nconst eraValues = {\n  narrow: [\"\u0B95\u0BBF.\u0BAE\u0BC1.\", \"\u0B95\u0BBF.\u0BAA\u0BBF.\"],\n  abbreviated: [\"\u0B95\u0BBF.\u0BAE\u0BC1.\", \"\u0B95\u0BBF.\u0BAA\u0BBF.\"], // CLDR #1624, #1626\n  wide: [\"\u0B95\u0BBF\u0BB1\u0BBF\u0BB8\u0BCD\u0BA4\u0BC1\u0BB5\u0BC1\u0B95\u0BCD\u0B95\u0BC1 \u0BAE\u0BC1\u0BA9\u0BCD\", \"\u0B85\u0BA9\u0BCD\u0BA9\u0BCB \u0B9F\u0BCB\u0BAE\u0BBF\u0BA9\u0BBF\"], // CLDR #1620, #1622\n};\n\nconst quarterValues = {\n  // CLDR #1644 - #1647\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  // CLDR #1636 - #1639\n  abbreviated: [\"\u0B95\u0BBE\u0BB2\u0BBE.1\", \"\u0B95\u0BBE\u0BB2\u0BBE.2\", \"\u0B95\u0BBE\u0BB2\u0BBE.3\", \"\u0B95\u0BBE\u0BB2\u0BBE.4\"],\n  // CLDR #1628 - #1631\n  wide: [\n    \"\u0B92\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD \u0B95\u0BBE\u0BB2\u0BBE\u0BA3\u0BCD\u0B9F\u0BC1\",\n    \"\u0B87\u0BB0\u0BA3\u0BCD\u0B9F\u0BBE\u0BAE\u0BCD \u0B95\u0BBE\u0BB2\u0BBE\u0BA3\u0BCD\u0B9F\u0BC1\",\n    \"\u0BAE\u0BC2\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD \u0B95\u0BBE\u0BB2\u0BBE\u0BA3\u0BCD\u0B9F\u0BC1\",\n    \"\u0BA8\u0BBE\u0BA9\u0BCD\u0B95\u0BBE\u0BAE\u0BCD \u0B95\u0BBE\u0BB2\u0BBE\u0BA3\u0BCD\u0B9F\u0BC1\",\n  ],\n};\n\nconst monthValues = {\n  // CLDR #700 - #711\n  narrow: [\"\u0B9C\", \"\u0BAA\u0BBF\", \"\u0BAE\u0BBE\", \"\u0B8F\", \"\u0BAE\u0BC7\", \"\u0B9C\u0BC2\", \"\u0B9C\u0BC2\", \"\u0B86\", \"\u0B9A\u0BC6\", \"\u0B85\", \"\u0BA8\", \"\u0B9F\u0BBF\"],\n\n  // CLDR #1676 - #1687\n  abbreviated: [\n    \"\u0B9C\u0BA9.\",\n    \"\u0BAA\u0BBF\u0BAA\u0BCD.\",\n    \"\u0BAE\u0BBE\u0BB0\u0BCD.\",\n    \"\u0B8F\u0BAA\u0BCD.\",\n    \"\u0BAE\u0BC7\",\n    \"\u0B9C\u0BC2\u0BA9\u0BCD\",\n    \"\u0B9C\u0BC2\u0BB2\u0BC8\",\n    \"\u0B86\u0B95.\",\n    \"\u0B9A\u0BC6\u0BAA\u0BCD.\",\n    \"\u0B85\u0B95\u0BCD.\",\n    \"\u0BA8\u0BB5.\",\n    \"\u0B9F\u0BBF\u0B9A.\",\n  ],\n\n  // CLDR #1652 - #1663\n  wide: [\n    \"\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF\", // January\n    \"\u0BAA\u0BBF\u0BAA\u0BCD\u0BB0\u0BB5\u0BB0\u0BBF\", // February\n    \"\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD\", // March\n    \"\u0B8F\u0BAA\u0BCD\u0BB0\u0BB2\u0BCD\", // April\n    \"\u0BAE\u0BC7\", // May\n    \"\u0B9C\u0BC2\u0BA9\u0BCD\", // June\n    \"\u0B9C\u0BC2\u0BB2\u0BC8\", // July\n    \"\u0B86\u0B95\u0BB8\u0BCD\u0B9F\u0BCD\", // August\n    \"\u0B9A\u0BC6\u0BAA\u0BCD\u0B9F\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD\", // September\n    \"\u0B85\u0B95\u0BCD\u0B9F\u0BCB\u0BAA\u0BB0\u0BCD\", // October\n    \"\u0BA8\u0BB5\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD\", // November\n    \"\u0B9F\u0BBF\u0B9A\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD\", // December\n  ],\n};\n\nconst dayValues = {\n  // CLDR #1766 - #1772\n  narrow: [\"\u0B9E\u0BBE\", \"\u0BA4\u0BBF\", \"\u0B9A\u0BC6\", \"\u0BAA\u0BC1\", \"\u0BB5\u0BBF\", \"\u0BB5\u0BC6\", \"\u0B9A\"],\n  // CLDR #1752 - #1758\n  short: [\"\u0B9E\u0BBE\", \"\u0BA4\u0BBF\", \"\u0B9A\u0BC6\", \"\u0BAA\u0BC1\", \"\u0BB5\u0BBF\", \"\u0BB5\u0BC6\", \"\u0B9A\"],\n  // CLDR #1738 - #1744\n  abbreviated: [\"\u0B9E\u0BBE\u0BAF\u0BBF.\", \"\u0BA4\u0BBF\u0B99\u0BCD.\", \"\u0B9A\u0BC6\u0BB5\u0BCD.\", \"\u0BAA\u0BC1\u0BA4.\", \"\u0BB5\u0BBF\u0BAF\u0BBE.\", \"\u0BB5\u0BC6\u0BB3\u0BCD.\", \"\u0B9A\u0BA9\u0BBF\"],\n\n  // CLDR #1724 - #1730\n  wide: [\n    \"\u0B9E\u0BBE\u0BAF\u0BBF\u0BB1\u0BC1\", // Sunday\n    \"\u0BA4\u0BBF\u0B99\u0BCD\u0B95\u0BB3\u0BCD\", // Monday\n    \"\u0B9A\u0BC6\u0BB5\u0BCD\u0BB5\u0BBE\u0BAF\u0BCD\", // Tuesday\n    \"\u0BAA\u0BC1\u0BA4\u0BA9\u0BCD\", // Wednesday\n    \"\u0BB5\u0BBF\u0BAF\u0BBE\u0BB4\u0BA9\u0BCD\", // Thursday\n    \"\u0BB5\u0BC6\u0BB3\u0BCD\u0BB3\u0BBF\", // Friday\n    \"\u0B9A\u0BA9\u0BBF\", // Saturday\n  ],\n};\n\n// CLDR #1780 - #1845\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0BAE\u0BC1.\u0BAA\",\n    pm: \"\u0BAA\u0BBF.\u0BAA\",\n    midnight: \"\u0BA8\u0BB3\u0BCD.\",\n    noon: \"\u0BA8\u0BA3\u0BCD.\",\n    morning: \"\u0B95\u0BBE.\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF.\",\n    evening: \"\u0BAE\u0BBE.\",\n    night: \"\u0B87\u0BB0.\",\n  },\n  abbreviated: {\n    am: \"\u0BAE\u0BC1\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    pm: \"\u0BAA\u0BBF\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    midnight: \"\u0BA8\u0BB3\u0BCD\u0BB3\u0BBF\u0BB0\u0BB5\u0BC1\",\n    noon: \"\u0BA8\u0BA3\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    morning: \"\u0B95\u0BBE\u0BB2\u0BC8\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD\",\n    evening: \"\u0BAE\u0BBE\u0BB2\u0BC8\",\n    night: \"\u0B87\u0BB0\u0BB5\u0BC1\",\n  },\n  wide: {\n    am: \"\u0BAE\u0BC1\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    pm: \"\u0BAA\u0BBF\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    midnight: \"\u0BA8\u0BB3\u0BCD\u0BB3\u0BBF\u0BB0\u0BB5\u0BC1\",\n    noon: \"\u0BA8\u0BA3\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    morning: \"\u0B95\u0BBE\u0BB2\u0BC8\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD\",\n    evening: \"\u0BAE\u0BBE\u0BB2\u0BC8\",\n    night: \"\u0B87\u0BB0\u0BB5\u0BC1\",\n  },\n};\n\n// CLDR #1780 - #1845\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0BAE\u0BC1.\u0BAA\",\n    pm: \"\u0BAA\u0BBF.\u0BAA\",\n    midnight: \"\u0BA8\u0BB3\u0BCD.\",\n    noon: \"\u0BA8\u0BA3\u0BCD.\",\n    morning: \"\u0B95\u0BBE.\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF.\",\n    evening: \"\u0BAE\u0BBE.\",\n    night: \"\u0B87\u0BB0.\",\n  },\n  abbreviated: {\n    am: \"\u0BAE\u0BC1\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    pm: \"\u0BAA\u0BBF\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    midnight: \"\u0BA8\u0BB3\u0BCD\u0BB3\u0BBF\u0BB0\u0BB5\u0BC1\",\n    noon: \"\u0BA8\u0BA3\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    morning: \"\u0B95\u0BBE\u0BB2\u0BC8\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD\",\n    evening: \"\u0BAE\u0BBE\u0BB2\u0BC8\",\n    night: \"\u0B87\u0BB0\u0BB5\u0BC1\",\n  },\n  wide: {\n    am: \"\u0BAE\u0BC1\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    pm: \"\u0BAA\u0BBF\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    midnight: \"\u0BA8\u0BB3\u0BCD\u0BB3\u0BBF\u0BB0\u0BB5\u0BC1\",\n    noon: \"\u0BA8\u0BA3\u0BCD\u0BAA\u0B95\u0BB2\u0BCD\",\n    morning: \"\u0B95\u0BBE\u0BB2\u0BC8\",\n    afternoon: \"\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD\",\n    evening: \"\u0BAE\u0BBE\u0BB2\u0BC8\",\n    night: \"\u0B87\u0BB0\u0BB5\u0BC1\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u0BB5\u0BA4\u0BC1)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0B95\u0BBF.\u0BAE\u0BC1.|\u0B95\u0BBF.\u0BAA\u0BBF.)/i,\n  abbreviated: /^(\u0B95\u0BBF\\.?\\s?\u0BAE\u0BC1\\.?|\u0B95\u0BBF\\.?\\s?\u0BAA\u0BBF\\.?)/,\n  wide: /^(\u0B95\u0BBF\u0BB1\u0BBF\u0BB8\u0BCD\u0BA4\u0BC1\u0BB5\u0BC1\u0B95\u0BCD\u0B95\u0BC1\\s\u0BAE\u0BC1\u0BA9\u0BCD|\u0B85\u0BA9\u0BCD\u0BA9\u0BCB\\s\u0B9F\u0BCB\u0BAE\u0BBF\u0BA9\u0BBF)/i,\n};\nconst parseEraPatterns = {\n  any: [/\u0B95\u0BBF\\.?\\s?\u0BAE\u0BC1\\.?/, /\u0B95\u0BBF\\.?\\s?\u0BAA\u0BBF\\.?/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0B95\u0BBE\u0BB2\u0BBE.[1234]/i,\n  wide: /^(\u0B92\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD|\u0B87\u0BB0\u0BA3\u0BCD\u0B9F\u0BBE\u0BAE\u0BCD|\u0BAE\u0BC2\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD|\u0BA8\u0BBE\u0BA9\u0BCD\u0B95\u0BBE\u0BAE\u0BCD) \u0B95\u0BBE\u0BB2\u0BBE\u0BA3\u0BCD\u0B9F\u0BC1/i,\n};\nconst parseQuarterPatterns = {\n  narrow: [/1/i, /2/i, /3/i, /4/i],\n  any: [\n    /(1|\u0B95\u0BBE\u0BB2\u0BBE.1|\u0B92\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD)/i,\n    /(2|\u0B95\u0BBE\u0BB2\u0BBE.2|\u0B87\u0BB0\u0BA3\u0BCD\u0B9F\u0BBE\u0BAE\u0BCD)/i,\n    /(3|\u0B95\u0BBE\u0BB2\u0BBE.3|\u0BAE\u0BC2\u0BA9\u0BCD\u0BB1\u0BBE\u0BAE\u0BCD)/i,\n    /(4|\u0B95\u0BBE\u0BB2\u0BBE.4|\u0BA8\u0BBE\u0BA9\u0BCD\u0B95\u0BBE\u0BAE\u0BCD)/i,\n  ],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u0B9C|\u0BAA\u0BBF|\u0BAE\u0BBE|\u0B8F|\u0BAE\u0BC7|\u0B9C\u0BC2|\u0B86|\u0B9A\u0BC6|\u0B85|\u0BA8|\u0B9F\u0BBF)$/i,\n  abbreviated: /^(\u0B9C\u0BA9.|\u0BAA\u0BBF\u0BAA\u0BCD.|\u0BAE\u0BBE\u0BB0\u0BCD.|\u0B8F\u0BAA\u0BCD.|\u0BAE\u0BC7|\u0B9C\u0BC2\u0BA9\u0BCD|\u0B9C\u0BC2\u0BB2\u0BC8|\u0B86\u0B95.|\u0B9A\u0BC6\u0BAA\u0BCD.|\u0B85\u0B95\u0BCD.|\u0BA8\u0BB5.|\u0B9F\u0BBF\u0B9A.)/i,\n  wide: /^(\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF|\u0BAA\u0BBF\u0BAA\u0BCD\u0BB0\u0BB5\u0BB0\u0BBF|\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD|\u0B8F\u0BAA\u0BCD\u0BB0\u0BB2\u0BCD|\u0BAE\u0BC7|\u0B9C\u0BC2\u0BA9\u0BCD|\u0B9C\u0BC2\u0BB2\u0BC8|\u0B86\u0B95\u0BB8\u0BCD\u0B9F\u0BCD|\u0B9A\u0BC6\u0BAA\u0BCD\u0B9F\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD|\u0B85\u0B95\u0BCD\u0B9F\u0BCB\u0BAA\u0BB0\u0BCD|\u0BA8\u0BB5\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD|\u0B9F\u0BBF\u0B9A\u0BAE\u0BCD\u0BAA\u0BB0\u0BCD)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0B9C$/i,\n    /^\u0BAA\u0BBF/i,\n    /^\u0BAE\u0BBE/i,\n    /^\u0B8F/i,\n    /^\u0BAE\u0BC7/i,\n    /^\u0B9C\u0BC2/i,\n    /^\u0B9C\u0BC2/i,\n    /^\u0B86/i,\n    /^\u0B9A\u0BC6/i,\n    /^\u0B85/i,\n    /^\u0BA8/i,\n    /^\u0B9F\u0BBF/i,\n  ],\n\n  any: [\n    /^\u0B9C\u0BA9/i,\n    /^\u0BAA\u0BBF/i,\n    /^\u0BAE\u0BBE/i,\n    /^\u0B8F/i,\n    /^\u0BAE\u0BC7/i,\n    /^\u0B9C\u0BC2\u0BA9\u0BCD/i,\n    /^\u0B9C\u0BC2\u0BB2\u0BC8/i,\n    /^\u0B86/i,\n    /^\u0B9A\u0BC6/i,\n    /^\u0B85/i,\n    /^\u0BA8/i,\n    /^\u0B9F\u0BBF/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0B9E\u0BBE|\u0BA4\u0BBF|\u0B9A\u0BC6|\u0BAA\u0BC1|\u0BB5\u0BBF|\u0BB5\u0BC6|\u0B9A)/i,\n  short: /^(\u0B9E\u0BBE|\u0BA4\u0BBF|\u0B9A\u0BC6|\u0BAA\u0BC1|\u0BB5\u0BBF|\u0BB5\u0BC6|\u0B9A)/i,\n  abbreviated: /^(\u0B9E\u0BBE\u0BAF\u0BBF.|\u0BA4\u0BBF\u0B99\u0BCD.|\u0B9A\u0BC6\u0BB5\u0BCD.|\u0BAA\u0BC1\u0BA4.|\u0BB5\u0BBF\u0BAF\u0BBE.|\u0BB5\u0BC6\u0BB3\u0BCD.|\u0B9A\u0BA9\u0BBF)/i,\n  wide: /^(\u0B9E\u0BBE\u0BAF\u0BBF\u0BB1\u0BC1|\u0BA4\u0BBF\u0B99\u0BCD\u0B95\u0BB3\u0BCD|\u0B9A\u0BC6\u0BB5\u0BCD\u0BB5\u0BBE\u0BAF\u0BCD|\u0BAA\u0BC1\u0BA4\u0BA9\u0BCD|\u0BB5\u0BBF\u0BAF\u0BBE\u0BB4\u0BA9\u0BCD|\u0BB5\u0BC6\u0BB3\u0BCD\u0BB3\u0BBF|\u0B9A\u0BA9\u0BBF)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0B9E\u0BBE/i, /^\u0BA4\u0BBF/i, /^\u0B9A\u0BC6/i, /^\u0BAA\u0BC1/i, /^\u0BB5\u0BBF/i, /^\u0BB5\u0BC6/i, /^\u0B9A/i],\n  any: [/^\u0B9E\u0BBE/i, /^\u0BA4\u0BBF/i, /^\u0B9A\u0BC6/i, /^\u0BAA\u0BC1/i, /^\u0BB5\u0BBF/i, /^\u0BB5\u0BC6/i, /^\u0B9A/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0BAE\u0BC1.\u0BAA|\u0BAA\u0BBF.\u0BAA|\u0BA8\u0BB3\u0BCD|\u0BA8\u0BA3\u0BCD|\u0B95\u0BBE\u0BB2\u0BC8|\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD|\u0BAE\u0BBE\u0BB2\u0BC8|\u0B87\u0BB0\u0BB5\u0BC1)/i,\n  any: /^(\u0BAE\u0BC1.\u0BAA|\u0BAA\u0BBF.\u0BAA|\u0BAE\u0BC1\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD|\u0BAA\u0BBF\u0BB1\u0BCD\u0BAA\u0B95\u0BB2\u0BCD|\u0BA8\u0BB3\u0BCD\u0BB3\u0BBF\u0BB0\u0BB5\u0BC1|\u0BA8\u0BA3\u0BCD\u0BAA\u0B95\u0BB2\u0BCD|\u0B95\u0BBE\u0BB2\u0BC8|\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD|\u0BAE\u0BBE\u0BB2\u0BC8|\u0B87\u0BB0\u0BB5\u0BC1)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0BAE\u0BC1/i,\n    pm: /^\u0BAA\u0BBF/i,\n    midnight: /^\u0BA8\u0BB3\u0BCD/i,\n    noon: /^\u0BA8\u0BA3\u0BCD/i,\n    morning: /\u0B95\u0BBE\u0BB2\u0BC8/i,\n    afternoon: /\u0BAE\u0BA4\u0BBF\u0BAF\u0BAE\u0BCD/i,\n    evening: /\u0BAE\u0BBE\u0BB2\u0BC8/i,\n    night: /\u0B87\u0BB0\u0BB5\u0BC1/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ta/_lib/formatDistance.js\";\nimport { formatLong } from \"./ta/_lib/formatLong.js\";\nimport { formatRelative } from \"./ta/_lib/formatRelative.js\";\nimport { localize } from \"./ta/_lib/localize.js\";\nimport { match } from \"./ta/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Tamil locale (India).\n * @language Tamil\n * @iso-639-2 tam\n * @author Sibiraj [@sibiraj-s](https://github.com/sibiraj-s)\n */\nexport const ta = {\n  code: \"ta\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ta;\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: \"\u0C38\u0C46\u0C15\u0C28\u0C41 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\",\n      other: \"{{count}} \u0C38\u0C46\u0C15\u0C28\u0C4D\u0C32 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\",\n    },\n    withPreposition: {\n      one: \"\u0C38\u0C46\u0C15\u0C28\u0C41\",\n      other: \"{{count}} \u0C38\u0C46\u0C15\u0C28\u0C4D\u0C32\",\n    },\n  },\n\n  xSeconds: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C38\u0C46\u0C15\u0C28\u0C41\", // CLDR #1314\n      other: \"{{count}} \u0C38\u0C46\u0C15\u0C28\u0C4D\u0C32\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C38\u0C46\u0C15\u0C28\u0C41\",\n      other: \"{{count}} \u0C38\u0C46\u0C15\u0C28\u0C4D\u0C32\",\n    },\n  },\n\n  halfAMinute: {\n    standalone: \"\u0C05\u0C30 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02\",\n    withPreposition: \"\u0C05\u0C30 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02\",\n  },\n\n  lessThanXMinutes: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\",\n      other: \"{{count}} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32 \u0C15\u0C28\u0C4D\u0C28\u0C3E \u0C24\u0C15\u0C4D\u0C15\u0C41\u0C35\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02\",\n      other: \"{{count}} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32\",\n    },\n  },\n\n  xMinutes: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02\", // CLDR #1311\n      other: \"{{count}} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C02\", // CLDR #1311\n      other: \"{{count}} \u0C28\u0C3F\u0C2E\u0C3F\u0C37\u0C3E\u0C32\",\n    },\n  },\n\n  aboutXHours: {\n    standalone: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C17\u0C02\u0C1F\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C17\u0C02\u0C1F\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C17\u0C02\u0C1F\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C17\u0C02\u0C1F\u0C32\",\n    },\n  },\n\n  xHours: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C17\u0C02\u0C1F\", // CLDR #1308\n      other: \"{{count}} \u0C17\u0C02\u0C1F\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C17\u0C02\u0C1F\",\n      other: \"{{count}} \u0C17\u0C02\u0C1F\u0C32\",\n    },\n  },\n\n  xDays: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C30\u0C4B\u0C1C\u0C41\", // CLDR #1292\n      other: \"{{count}} \u0C30\u0C4B\u0C1C\u0C41\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C30\u0C4B\u0C1C\u0C41\",\n      other: \"{{count}} \u0C30\u0C4B\u0C1C\u0C41\u0C32\",\n    },\n  },\n\n  aboutXWeeks: {\n    standalone: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C35\u0C3E\u0C30\u0C02\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C35\u0C3E\u0C30\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C35\u0C3E\u0C30\u0C02\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C35\u0C3E\u0C30\u0C3E\u0C32\u0C32\",\n    },\n  },\n\n  xWeeks: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C35\u0C3E\u0C30\u0C02\",\n      other: \"{{count}} \u0C35\u0C3E\u0C30\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C35\u0C3E\u0C30\u0C02\",\n      other: \"{{count}} \u0C35\u0C3E\u0C30\u0C3E\u0C32\u0C32\",\n    },\n  },\n\n  aboutXMonths: {\n    standalone: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C28\u0C46\u0C32\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C28\u0C46\u0C32\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C28\u0C46\u0C32\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C28\u0C46\u0C32\u0C32\",\n    },\n  },\n\n  xMonths: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C28\u0C46\u0C32\", // CLDR #1281\n      other: \"{{count}} \u0C28\u0C46\u0C32\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C28\u0C46\u0C32\",\n      other: \"{{count}} \u0C28\u0C46\u0C32\u0C32\",\n    },\n  },\n\n  aboutXYears: {\n    standalone: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"\u0C38\u0C41\u0C2E\u0C3E\u0C30\u0C41 {{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\",\n    },\n  },\n\n  xYears: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\", // CLDR #1275\n      other: \"{{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"{{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\",\n    },\n  },\n\n  overXYears: {\n    standalone: {\n      one: \"\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02 \u0C2A\u0C48\u0C17\u0C3E\",\n      other: \"{{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C15\u0C41 \u0C2A\u0C48\u0C17\u0C3E\",\n    },\n    withPreposition: {\n      one: \"\u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"{{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\",\n    },\n  },\n\n  almostXYears: {\n    standalone: {\n      one: \"\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 {{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\u0C41\",\n    },\n    withPreposition: {\n      one: \"\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 \u0C12\u0C15 \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C02\",\n      other: \"\u0C26\u0C3E\u0C26\u0C3E\u0C2A\u0C41 {{count}} \u0C38\u0C02\u0C35\u0C24\u0C4D\u0C38\u0C30\u0C3E\u0C32\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = options?.addSuffix\n    ? formatDistanceLocale[token].withPreposition\n    : formatDistanceLocale[token].standalone;\n\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u0C32\u0C4B\";\n    } else {\n      return result + \" \u0C15\u0C4D\u0C30\u0C3F\u0C24\u0C02\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\n// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\n\n// CLDR #1807 - #1811\nconst dateFormats = {\n  full: \"d, MMMM y, EEEE\",\n  long: \"d MMMM, y\",\n  medium: \"d MMM, y\",\n  short: \"dd-MM-yy\",\n};\n\n// CLDR #1807 - #1811\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\n// CLDR #1815 - #1818\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}'\u0C15\u0C3F'\",\n  long: \"{{date}} {{time}}'\u0C15\u0C3F'\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\n\nconst formatRelativeLocale = {\n  lastWeek: \"'\u0C17\u0C24' eeee p\", // CLDR #1384\n  yesterday: \"'\u0C28\u0C3F\u0C28\u0C4D\u0C28' p\", // CLDR #1393\n  today: \"'\u0C08 \u0C30\u0C4B\u0C1C\u0C41' p\", // CLDR #1394\n  tomorrow: \"'\u0C30\u0C47\u0C2A\u0C41' p\", // CLDR #1395\n  nextWeek: \"'\u0C24\u0C26\u0C41\u0C2A\u0C30\u0C3F' eeee p\", // CLDR #1386\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\n// Source: https://dsal.uchicago.edu/dictionaries/brown/\n\n// CLDR #1605 - #1608\nconst eraValues = {\n  narrow: [\"\u0C15\u0C4D\u0C30\u0C40.\u0C2A\u0C42.\", \"\u0C15\u0C4D\u0C30\u0C40.\u0C36.\"],\n  abbreviated: [\"\u0C15\u0C4D\u0C30\u0C40.\u0C2A\u0C42.\", \"\u0C15\u0C4D\u0C30\u0C40.\u0C36.\"],\n  wide: [\"\u0C15\u0C4D\u0C30\u0C40\u0C38\u0C4D\u0C24\u0C41 \u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C02\", \"\u0C15\u0C4D\u0C30\u0C40\u0C38\u0C4D\u0C24\u0C41\u0C36\u0C15\u0C02\"],\n};\n\n// CLDR #1613 - #1628\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u0C24\u0C4D\u0C30\u0C481\", \"\u0C24\u0C4D\u0C30\u0C482\", \"\u0C24\u0C4D\u0C30\u0C483\", \"\u0C24\u0C4D\u0C30\u0C484\"],\n  wide: [\"1\u0C35 \u0C24\u0C4D\u0C30\u0C48\u0C2E\u0C3E\u0C38\u0C3F\u0C15\u0C02\", \"2\u0C35 \u0C24\u0C4D\u0C30\u0C48\u0C2E\u0C3E\u0C38\u0C3F\u0C15\u0C02\", \"3\u0C35 \u0C24\u0C4D\u0C30\u0C48\u0C2E\u0C3E\u0C38\u0C3F\u0C15\u0C02\", \"4\u0C35 \u0C24\u0C4D\u0C30\u0C48\u0C2E\u0C3E\u0C38\u0C3F\u0C15\u0C02\"],\n};\n\n// CLDR #1637 - #1708\nconst monthValues = {\n  narrow: [\"\u0C1C\", \"\u0C2B\u0C3F\", \"\u0C2E\u0C3E\", \"\u0C0F\", \"\u0C2E\u0C47\", \"\u0C1C\u0C42\", \"\u0C1C\u0C41\", \"\u0C06\", \"\u0C38\u0C46\", \"\u0C05\", \"\u0C28\", \"\u0C21\u0C3F\"],\n\n  abbreviated: [\n    \"\u0C1C\u0C28\",\n    \"\u0C2B\u0C3F\u0C2C\u0C4D\u0C30\",\n    \"\u0C2E\u0C3E\u0C30\u0C4D\u0C1A\u0C3F\",\n    \"\u0C0F\u0C2A\u0C4D\u0C30\u0C3F\",\n    \"\u0C2E\u0C47\",\n    \"\u0C1C\u0C42\u0C28\u0C4D\",\n    \"\u0C1C\u0C41\u0C32\u0C48\",\n    \"\u0C06\u0C17\",\n    \"\u0C38\u0C46\u0C2A\u0C4D\u0C1F\u0C46\u0C02\",\n    \"\u0C05\u0C15\u0C4D\u0C1F\u0C4B\",\n    \"\u0C28\u0C35\u0C02\",\n    \"\u0C21\u0C3F\u0C38\u0C46\u0C02\",\n  ],\n\n  wide: [\n    \"\u0C1C\u0C28\u0C35\u0C30\u0C3F\",\n    \"\u0C2B\u0C3F\u0C2C\u0C4D\u0C30\u0C35\u0C30\u0C3F\",\n    \"\u0C2E\u0C3E\u0C30\u0C4D\u0C1A\u0C3F\",\n    \"\u0C0F\u0C2A\u0C4D\u0C30\u0C3F\u0C32\u0C4D\",\n    \"\u0C2E\u0C47\",\n    \"\u0C1C\u0C42\u0C28\u0C4D\",\n    \"\u0C1C\u0C41\u0C32\u0C48\",\n    \"\u0C06\u0C17\u0C38\u0C4D\u0C1F\u0C41\",\n    \"\u0C38\u0C46\u0C2A\u0C4D\u0C1F\u0C46\u0C02\u0C2C\u0C30\u0C4D\",\n    \"\u0C05\u0C15\u0C4D\u0C1F\u0C4B\u0C2C\u0C30\u0C4D\",\n    \"\u0C28\u0C35\u0C02\u0C2C\u0C30\u0C4D\",\n    \"\u0C21\u0C3F\u0C38\u0C46\u0C02\u0C2C\u0C30\u0C4D\",\n  ],\n};\n\n// CLDR #1709 - #1764\nconst dayValues = {\n  narrow: [\"\u0C06\", \"\u0C38\u0C4B\", \"\u0C2E\", \"\u0C2C\u0C41\", \"\u0C17\u0C41\", \"\u0C36\u0C41\", \"\u0C36\"],\n  short: [\"\u0C06\u0C26\u0C3F\", \"\u0C38\u0C4B\u0C2E\", \"\u0C2E\u0C02\u0C17\u0C33\", \"\u0C2C\u0C41\u0C27\", \"\u0C17\u0C41\u0C30\u0C41\", \"\u0C36\u0C41\u0C15\u0C4D\u0C30\", \"\u0C36\u0C28\u0C3F\"],\n  abbreviated: [\"\u0C06\u0C26\u0C3F\", \"\u0C38\u0C4B\u0C2E\", \"\u0C2E\u0C02\u0C17\u0C33\", \"\u0C2C\u0C41\u0C27\", \"\u0C17\u0C41\u0C30\u0C41\", \"\u0C36\u0C41\u0C15\u0C4D\u0C30\", \"\u0C36\u0C28\u0C3F\"],\n  wide: [\n    \"\u0C06\u0C26\u0C3F\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C38\u0C4B\u0C2E\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C2E\u0C02\u0C17\u0C33\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C2C\u0C41\u0C27\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C17\u0C41\u0C30\u0C41\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C36\u0C41\u0C15\u0C4D\u0C30\u0C35\u0C3E\u0C30\u0C02\",\n    \"\u0C36\u0C28\u0C3F\u0C35\u0C3E\u0C30\u0C02\",\n  ],\n};\n\n// CLDR #1767 - #1806\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n  abbreviated: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n  wide: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n  abbreviated: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n  wide: {\n    am: \"\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    pm: \"\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    midnight: \"\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n    noon: \"\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    morning: \"\u0C09\u0C26\u0C2F\u0C02\",\n    afternoon: \"\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02\",\n    evening: \"\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02\",\n    night: \"\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\u0C35\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u0C35)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0C15\u0C4D\u0C30\u0C40\\.\u0C2A\u0C42\\.|\u0C15\u0C4D\u0C30\u0C40\\.\u0C36\\.)/i,\n  abbreviated:\n    /^(\u0C15\u0C4D\u0C30\u0C40\\.?\\s?\u0C2A\u0C42\\.?|\u0C2A\u0C4D\u0C30\\.?\\s?\u0C36\\.?\\s?\u0C2A\u0C42\\.?|\u0C15\u0C4D\u0C30\u0C40\\.?\\s?\u0C36\\.?|\u0C38\u0C3E\\.?\\s?\u0C36\\.?)/i,\n  wide: /^(\u0C15\u0C4D\u0C30\u0C40\u0C38\u0C4D\u0C24\u0C41 \u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C02|\u0C2A\u0C4D\u0C30\u0C38\u0C4D\u0C24\u0C41\u0C24 \u0C36\u0C15\u0C3E\u0C28\u0C3F\u0C15\u0C3F \u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C02|\u0C15\u0C4D\u0C30\u0C40\u0C38\u0C4D\u0C24\u0C41 \u0C36\u0C15\u0C02|\u0C2A\u0C4D\u0C30\u0C38\u0C4D\u0C24\u0C41\u0C24 \u0C36\u0C15\u0C02)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u0C2A\u0C42|\u0C36)/i, /^\u0C38\u0C3E/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0C24\u0C4D\u0C30\u0C48[1234]/i,\n  wide: /^[1234](\u0C35)? \u0C24\u0C4D\u0C30\u0C48\u0C2E\u0C3E\u0C38\u0C3F\u0C15\u0C02/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u0C1C\u0C42|\u0C1C\u0C41|\u0C1C|\u0C2B\u0C3F|\u0C2E\u0C3E|\u0C0F|\u0C2E\u0C47|\u0C06|\u0C38\u0C46|\u0C05|\u0C28|\u0C21\u0C3F)/i,\n  abbreviated: /^(\u0C1C\u0C28|\u0C2B\u0C3F\u0C2C\u0C4D\u0C30|\u0C2E\u0C3E\u0C30\u0C4D\u0C1A\u0C3F|\u0C0F\u0C2A\u0C4D\u0C30\u0C3F|\u0C2E\u0C47|\u0C1C\u0C42\u0C28\u0C4D|\u0C1C\u0C41\u0C32\u0C48|\u0C06\u0C17|\u0C38\u0C46\u0C2A\u0C4D|\u0C05\u0C15\u0C4D\u0C1F\u0C4B|\u0C28\u0C35|\u0C21\u0C3F\u0C38\u0C46)/i,\n  wide: /^(\u0C1C\u0C28\u0C35\u0C30\u0C3F|\u0C2B\u0C3F\u0C2C\u0C4D\u0C30\u0C35\u0C30\u0C3F|\u0C2E\u0C3E\u0C30\u0C4D\u0C1A\u0C3F|\u0C0F\u0C2A\u0C4D\u0C30\u0C3F\u0C32\u0C4D|\u0C2E\u0C47|\u0C1C\u0C42\u0C28\u0C4D|\u0C1C\u0C41\u0C32\u0C48|\u0C06\u0C17\u0C38\u0C4D\u0C1F\u0C41|\u0C38\u0C46\u0C2A\u0C4D\u0C1F\u0C46\u0C02\u0C2C\u0C30\u0C4D|\u0C05\u0C15\u0C4D\u0C1F\u0C4B\u0C2C\u0C30\u0C4D|\u0C28\u0C35\u0C02\u0C2C\u0C30\u0C4D|\u0C21\u0C3F\u0C38\u0C46\u0C02\u0C2C\u0C30\u0C4D)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0C1C/i,\n    /^\u0C2B\u0C3F/i,\n    /^\u0C2E\u0C3E/i,\n    /^\u0C0F/i,\n    /^\u0C2E\u0C47/i,\n    /^\u0C1C\u0C42/i,\n    /^\u0C1C\u0C41/i,\n    /^\u0C06/i,\n    /^\u0C38\u0C46/i,\n    /^\u0C05/i,\n    /^\u0C28/i,\n    /^\u0C21\u0C3F/i,\n  ],\n\n  any: [\n    /^\u0C1C\u0C28/i,\n    /^\u0C2B\u0C3F/i,\n    /^\u0C2E\u0C3E/i,\n    /^\u0C0F/i,\n    /^\u0C2E\u0C47/i,\n    /^\u0C1C\u0C42\u0C28\u0C4D/i,\n    /^\u0C1C\u0C41\u0C32\u0C48/i,\n    /^\u0C06\u0C17/i,\n    /^\u0C38\u0C46/i,\n    /^\u0C05/i,\n    /^\u0C28/i,\n    /^\u0C21\u0C3F/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0C06|\u0C38\u0C4B|\u0C2E|\u0C2C\u0C41|\u0C17\u0C41|\u0C36\u0C41|\u0C36)/i,\n  short: /^(\u0C06\u0C26\u0C3F|\u0C38\u0C4B\u0C2E|\u0C2E\u0C02|\u0C2C\u0C41\u0C27|\u0C17\u0C41\u0C30\u0C41|\u0C36\u0C41\u0C15\u0C4D\u0C30|\u0C36\u0C28\u0C3F)/i,\n  abbreviated: /^(\u0C06\u0C26\u0C3F|\u0C38\u0C4B\u0C2E|\u0C2E\u0C02|\u0C2C\u0C41\u0C27|\u0C17\u0C41\u0C30\u0C41|\u0C36\u0C41\u0C15\u0C4D\u0C30|\u0C36\u0C28\u0C3F)/i,\n  wide: /^(\u0C06\u0C26\u0C3F\u0C35\u0C3E\u0C30\u0C02|\u0C38\u0C4B\u0C2E\u0C35\u0C3E\u0C30\u0C02|\u0C2E\u0C02\u0C17\u0C33\u0C35\u0C3E\u0C30\u0C02|\u0C2C\u0C41\u0C27\u0C35\u0C3E\u0C30\u0C02|\u0C17\u0C41\u0C30\u0C41\u0C35\u0C3E\u0C30\u0C02|\u0C36\u0C41\u0C15\u0C4D\u0C30\u0C35\u0C3E\u0C30\u0C02|\u0C36\u0C28\u0C3F\u0C35\u0C3E\u0C30\u0C02)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u0C06/i, /^\u0C38\u0C4B/i, /^\u0C2E/i, /^\u0C2C\u0C41/i, /^\u0C17\u0C41/i, /^\u0C36\u0C41/i, /^\u0C36/i],\n  any: [/^\u0C06\u0C26\u0C3F/i, /^\u0C38\u0C4B\u0C2E/i, /^\u0C2E\u0C02/i, /^\u0C2C\u0C41\u0C27/i, /^\u0C17\u0C41\u0C30\u0C41/i, /^\u0C36\u0C41\u0C15\u0C4D\u0C30/i, /^\u0C36\u0C28\u0C3F/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow:\n    /^(\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F|\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C09\u0C26\u0C2F\u0C02|\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02|\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F)/i,\n  any: /^(\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C05\u0C30\u0C4D\u0C27\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F|\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C09\u0C26\u0C2F\u0C02|\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02|\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02|\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0C2A\u0C42\u0C30\u0C4D\u0C35\u0C3E\u0C39\u0C4D\u0C28\u0C02/i,\n    pm: /^\u0C05\u0C2A\u0C30\u0C3E\u0C39\u0C4D\u0C28\u0C02/i,\n    midnight: /^\u0C05\u0C30\u0C4D\u0C27/i,\n    noon: /^\u0C2E\u0C3F\u0C1F\u0C4D\u0C1F/i,\n    morning: /\u0C09\u0C26\u0C2F\u0C02/i,\n    afternoon: /\u0C2E\u0C27\u0C4D\u0C2F\u0C3E\u0C39\u0C4D\u0C28\u0C02/i,\n    evening: /\u0C38\u0C3E\u0C2F\u0C02\u0C24\u0C4D\u0C30\u0C02/i,\n    night: /\u0C30\u0C3E\u0C24\u0C4D\u0C30\u0C3F/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./te/_lib/formatDistance.js\";\nimport { formatLong } from \"./te/_lib/formatLong.js\";\nimport { formatRelative } from \"./te/_lib/formatRelative.js\";\nimport { localize } from \"./te/_lib/localize.js\";\nimport { match } from \"./te/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Telugu locale\n * @language Telugu\n * @iso-639-2 tel\n * @author Kranthi Lakum [@kranthilakum](https://github.com/kranthilakum)\n */\nexport const te = {\n  code: \"te\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default te;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 1 \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35\",\n    other: \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 {{count}} \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35\",\n    other: \"{{count}} \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35\",\n  },\n\n  halfAMinute: \"\u0E04\u0E23\u0E36\u0E48\u0E07\u0E19\u0E32\u0E17\u0E35\",\n\n  lessThanXMinutes: {\n    one: \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 1 \u0E19\u0E32\u0E17\u0E35\",\n    other: \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 {{count}} \u0E19\u0E32\u0E17\u0E35\",\n  },\n\n  xMinutes: {\n    one: \"1 \u0E19\u0E32\u0E17\u0E35\",\n    other: \"{{count}} \u0E19\u0E32\u0E17\u0E35\",\n  },\n\n  aboutXHours: {\n    one: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 1 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07\",\n    other: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 {{count}} \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07\",\n  },\n\n  xHours: {\n    one: \"1 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07\",\n    other: \"{{count}} \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07\",\n  },\n\n  xDays: {\n    one: \"1 \u0E27\u0E31\u0E19\",\n    other: \"{{count}} \u0E27\u0E31\u0E19\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 1 \u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C\",\n    other: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 {{count}} \u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C\",\n    other: \"{{count}} \u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 1 \u0E40\u0E14\u0E37\u0E2D\u0E19\",\n    other: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 {{count}} \u0E40\u0E14\u0E37\u0E2D\u0E19\",\n  },\n\n  xMonths: {\n    one: \"1 \u0E40\u0E14\u0E37\u0E2D\u0E19\",\n    other: \"{{count}} \u0E40\u0E14\u0E37\u0E2D\u0E19\",\n  },\n\n  aboutXYears: {\n    one: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 1 \u0E1B\u0E35\",\n    other: \"\u0E1B\u0E23\u0E30\u0E21\u0E32\u0E13 {{count}} \u0E1B\u0E35\",\n  },\n\n  xYears: {\n    one: \"1 \u0E1B\u0E35\",\n    other: \"{{count}} \u0E1B\u0E35\",\n  },\n\n  overXYears: {\n    one: \"\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 1 \u0E1B\u0E35\",\n    other: \"\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 {{count}} \u0E1B\u0E35\",\n  },\n\n  almostXYears: {\n    one: \"\u0E40\u0E01\u0E37\u0E2D\u0E1A 1 \u0E1B\u0E35\",\n    other: \"\u0E40\u0E01\u0E37\u0E2D\u0E1A {{count}} \u0E1B\u0E35\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      if (token === \"halfAMinute\") {\n        return \"\u0E43\u0E19\" + result;\n      } else {\n        return \"\u0E43\u0E19 \" + result;\n      }\n    } else {\n      return result + \"\u0E17\u0E35\u0E48\u0E1C\u0E48\u0E32\u0E19\u0E21\u0E32\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"\u0E27\u0E31\u0E19EEEE\u0E17\u0E35\u0E48 do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss \u0E19. zzzz\",\n  long: \"H:mm:ss \u0E19. z\",\n  medium: \"H:mm:ss \u0E19.\",\n  short: \"H:mm \u0E19.\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u0E40\u0E27\u0E25\u0E32' {{time}}\",\n  long: \"{{date}} '\u0E40\u0E27\u0E25\u0E32' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"medium\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee'\u0E17\u0E35\u0E48\u0E41\u0E25\u0E49\u0E27\u0E40\u0E27\u0E25\u0E32' p\",\n  yesterday: \"'\u0E40\u0E21\u0E37\u0E48\u0E2D\u0E27\u0E32\u0E19\u0E19\u0E35\u0E49\u0E40\u0E27\u0E25\u0E32' p\",\n  today: \"'\u0E27\u0E31\u0E19\u0E19\u0E35\u0E49\u0E40\u0E27\u0E25\u0E32' p\",\n  tomorrow: \"'\u0E1E\u0E23\u0E38\u0E48\u0E07\u0E19\u0E35\u0E49\u0E40\u0E27\u0E25\u0E32' p\",\n  nextWeek: \"eeee '\u0E40\u0E27\u0E25\u0E32' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"\u0E04\u0E28\"],\n  abbreviated: [\"BC\", \"\u0E04.\u0E28.\"],\n  wide: [\"\u0E1B\u0E35\u0E01\u0E48\u0E2D\u0E19\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E01\u0E32\u0E25\", \"\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E4C\u0E28\u0E31\u0E01\u0E23\u0E32\u0E0A\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"\u0E44\u0E15\u0E23\u0E21\u0E32\u0E2A\u0E41\u0E23\u0E01\", \"\u0E44\u0E15\u0E23\u0E21\u0E32\u0E2A\u0E17\u0E35\u0E48\u0E2A\u0E2D\u0E07\", \"\u0E44\u0E15\u0E23\u0E21\u0E32\u0E2A\u0E17\u0E35\u0E48\u0E2A\u0E32\u0E21\", \"\u0E44\u0E15\u0E23\u0E21\u0E32\u0E2A\u0E17\u0E35\u0E48\u0E2A\u0E35\u0E48\"],\n};\n\nconst dayValues = {\n  narrow: [\"\u0E2D\u0E32.\", \"\u0E08.\", \"\u0E2D.\", \"\u0E1E.\", \"\u0E1E\u0E24.\", \"\u0E28.\", \"\u0E2A.\"],\n  short: [\"\u0E2D\u0E32.\", \"\u0E08.\", \"\u0E2D.\", \"\u0E1E.\", \"\u0E1E\u0E24.\", \"\u0E28.\", \"\u0E2A.\"],\n  abbreviated: [\"\u0E2D\u0E32.\", \"\u0E08.\", \"\u0E2D.\", \"\u0E1E.\", \"\u0E1E\u0E24.\", \"\u0E28.\", \"\u0E2A.\"],\n  wide: [\"\u0E2D\u0E32\u0E17\u0E34\u0E15\u0E22\u0E4C\", \"\u0E08\u0E31\u0E19\u0E17\u0E23\u0E4C\", \"\u0E2D\u0E31\u0E07\u0E04\u0E32\u0E23\", \"\u0E1E\u0E38\u0E18\", \"\u0E1E\u0E24\u0E2B\u0E31\u0E2A\u0E1A\u0E14\u0E35\", \"\u0E28\u0E38\u0E01\u0E23\u0E4C\", \"\u0E40\u0E2A\u0E32\u0E23\u0E4C\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u0E21.\u0E04.\",\n    \"\u0E01.\u0E1E.\",\n    \"\u0E21\u0E35.\u0E04.\",\n    \"\u0E40\u0E21.\u0E22.\",\n    \"\u0E1E.\u0E04.\",\n    \"\u0E21\u0E34.\u0E22.\",\n    \"\u0E01.\u0E04.\",\n    \"\u0E2A.\u0E04.\",\n    \"\u0E01.\u0E22.\",\n    \"\u0E15.\u0E04.\",\n    \"\u0E1E.\u0E22.\",\n    \"\u0E18.\u0E04.\",\n  ],\n\n  abbreviated: [\n    \"\u0E21.\u0E04.\",\n    \"\u0E01.\u0E1E.\",\n    \"\u0E21\u0E35.\u0E04.\",\n    \"\u0E40\u0E21.\u0E22.\",\n    \"\u0E1E.\u0E04.\",\n    \"\u0E21\u0E34.\u0E22.\",\n    \"\u0E01.\u0E04.\",\n    \"\u0E2A.\u0E04.\",\n    \"\u0E01.\u0E22.\",\n    \"\u0E15.\u0E04.\",\n    \"\u0E1E.\u0E22.\",\n    \"\u0E18.\u0E04.\",\n  ],\n\n  wide: [\n    \"\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21\",\n    \"\u0E01\u0E38\u0E21\u0E20\u0E32\u0E1E\u0E31\u0E19\u0E18\u0E4C\",\n    \"\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21\",\n    \"\u0E40\u0E21\u0E29\u0E32\u0E22\u0E19\",\n    \"\u0E1E\u0E24\u0E29\u0E20\u0E32\u0E04\u0E21\",\n    \"\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19\",\n    \"\u0E01\u0E23\u0E01\u0E0E\u0E32\u0E04\u0E21\",\n    \"\u0E2A\u0E34\u0E07\u0E2B\u0E32\u0E04\u0E21\",\n    \"\u0E01\u0E31\u0E19\u0E22\u0E32\u0E22\u0E19\",\n    \"\u0E15\u0E38\u0E25\u0E32\u0E04\u0E21\",\n    \"\u0E1E\u0E24\u0E28\u0E08\u0E34\u0E01\u0E32\u0E22\u0E19\",\n    \"\u0E18\u0E31\u0E19\u0E27\u0E32\u0E04\u0E21\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E1A\u0E48\u0E32\u0E22\",\n    evening: \"\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n  abbreviated: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E1A\u0E48\u0E32\u0E22\",\n    evening: \"\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n  wide: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E1A\u0E48\u0E32\u0E22\",\n    evening: \"\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E15\u0E2D\u0E19\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E27\u0E31\u0E19\",\n    evening: \"\u0E15\u0E2D\u0E19\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n  abbreviated: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E15\u0E2D\u0E19\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E27\u0E31\u0E19\",\n    evening: \"\u0E15\u0E2D\u0E19\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n  wide: {\n    am: \"\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    pm: \"\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    midnight: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19\",\n    noon: \"\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\",\n    morning: \"\u0E15\u0E2D\u0E19\u0E40\u0E0A\u0E49\u0E32\",\n    afternoon: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E27\u0E31\u0E19\",\n    evening: \"\u0E15\u0E2D\u0E19\u0E40\u0E22\u0E47\u0E19\",\n    night: \"\u0E15\u0E2D\u0E19\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^\\d+/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^([bB]|[aA]|\u0E04\u0E28)/i,\n  abbreviated:\n    /^([bB]\\.?\\s?[cC]\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?|\u0E04\\.?\u0E28\\.?)/i,\n  wide: /^(\u0E01\u0E48\u0E2D\u0E19\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E01\u0E32\u0E25|\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E4C\u0E28\u0E31\u0E01\u0E23\u0E32\u0E0A|\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E01\u0E32\u0E25)/i,\n};\nconst parseEraPatterns = {\n  any: [/^[bB]/i, /^(^[aA]|\u0E04\\.?\u0E28\\.?|\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E01\u0E32\u0E25|\u0E04\u0E23\u0E34\u0E2A\u0E15\u0E4C\u0E28\u0E31\u0E01\u0E23\u0E32\u0E0A|)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^\u0E44\u0E15\u0E23\u0E21\u0E32\u0E2A(\u0E17\u0E35\u0E48)? ?[1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u0E41\u0E23\u0E01|\u0E2B\u0E19\u0E36\u0E48\u0E07)/i, /(2|\u0E2A\u0E2D\u0E07)/i, /(3|\u0E2A\u0E32\u0E21)/i, /(4|\u0E2A\u0E35\u0E48)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow:\n    /^(\u0E21\\.?\u0E04\\.?|\u0E01\\.?\u0E1E\\.?|\u0E21\u0E35\\.?\u0E04\\.?|\u0E40\u0E21\\.?\u0E22\\.?|\u0E1E\\.?\u0E04\\.?|\u0E21\u0E34\\.?\u0E22\\.?|\u0E01\\.?\u0E04\\.?|\u0E2A\\.?\u0E04\\.?|\u0E01\\.?\u0E22\\.?|\u0E15\\.?\u0E04\\.?|\u0E1E\\.?\u0E22\\.?|\u0E18\\.?\u0E04\\.?)/i,\n  abbreviated:\n    /^(\u0E21\\.?\u0E04\\.?|\u0E01\\.?\u0E1E\\.?|\u0E21\u0E35\\.?\u0E04\\.?|\u0E40\u0E21\\.?\u0E22\\.?|\u0E1E\\.?\u0E04\\.?|\u0E21\u0E34\\.?\u0E22\\.?|\u0E01\\.?\u0E04\\.?|\u0E2A\\.?\u0E04\\.?|\u0E01\\.?\u0E22\\.?|\u0E15\\.?\u0E04\\.?|\u0E1E\\.?\u0E22\\.?|\u0E18\\.?\u0E04\\.?')/i,\n  wide: /^(\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21|\u0E01\u0E38\u0E21\u0E20\u0E32\u0E1E\u0E31\u0E19\u0E18\u0E4C|\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21|\u0E40\u0E21\u0E29\u0E32\u0E22\u0E19|\u0E1E\u0E24\u0E29\u0E20\u0E32\u0E04\u0E21|\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19|\u0E01\u0E23\u0E01\u0E0E\u0E32\u0E04\u0E21|\u0E2A\u0E34\u0E07\u0E2B\u0E32\u0E04\u0E21|\u0E01\u0E31\u0E19\u0E22\u0E32\u0E22\u0E19|\u0E15\u0E38\u0E25\u0E32\u0E04\u0E21|\u0E1E\u0E24\u0E28\u0E08\u0E34\u0E01\u0E32\u0E22\u0E19|\u0E18\u0E31\u0E19\u0E27\u0E32\u0E04\u0E21)/i,\n};\nconst parseMonthPatterns = {\n  wide: [\n    /^\u0E21\u0E01/i,\n    /^\u0E01\u0E38\u0E21/i,\n    /^\u0E21\u0E35/i,\n    /^\u0E40\u0E21/i,\n    /^\u0E1E\u0E24\u0E29/i,\n    /^\u0E21\u0E34/i,\n    /^\u0E01\u0E23\u0E01/i,\n    /^\u0E2A/i,\n    /^\u0E01\u0E31\u0E19/i,\n    /^\u0E15/i,\n    /^\u0E1E\u0E24\u0E28/i,\n    /^\u0E18/i,\n  ],\n\n  any: [\n    /^\u0E21\\.?\u0E04\\.?/i,\n    /^\u0E01\\.?\u0E1E\\.?/i,\n    /^\u0E21\u0E35\\.?\u0E04\\.?/i,\n    /^\u0E40\u0E21\\.?\u0E22\\.?/i,\n    /^\u0E1E\\.?\u0E04\\.?/i,\n    /^\u0E21\u0E34\\.?\u0E22\\.?/i,\n    /^\u0E01\\.?\u0E04\\.?/i,\n    /^\u0E2A\\.?\u0E04\\.?/i,\n    /^\u0E01\\.?\u0E22\\.?/i,\n    /^\u0E15\\.?\u0E04\\.?/i,\n    /^\u0E1E\\.?\u0E22\\.?/i,\n    /^\u0E18\\.?\u0E04\\.?/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(\u0E2D\u0E32\\.?|\u0E08\\.?|\u0E2D\\.?|\u0E1E\u0E24\\.?|\u0E1E\\.?|\u0E28\\.?|\u0E2A\\.?)/i,\n  short: /^(\u0E2D\u0E32\\.?|\u0E08\\.?|\u0E2D\\.?|\u0E1E\u0E24\\.?|\u0E1E\\.?|\u0E28\\.?|\u0E2A\\.?)/i,\n  abbreviated: /^(\u0E2D\u0E32\\.?|\u0E08\\.?|\u0E2D\\.?|\u0E1E\u0E24\\.?|\u0E1E\\.?|\u0E28\\.?|\u0E2A\\.?)/i,\n  wide: /^(\u0E2D\u0E32\u0E17\u0E34\u0E15\u0E22\u0E4C|\u0E08\u0E31\u0E19\u0E17\u0E23\u0E4C|\u0E2D\u0E31\u0E07\u0E04\u0E32\u0E23|\u0E1E\u0E38\u0E18|\u0E1E\u0E24\u0E2B\u0E31\u0E2A\u0E1A\u0E14\u0E35|\u0E28\u0E38\u0E01\u0E23\u0E4C|\u0E40\u0E2A\u0E32\u0E23\u0E4C)/i,\n};\nconst parseDayPatterns = {\n  wide: [/^\u0E2D\u0E32/i, /^\u0E08\u0E31/i, /^\u0E2D\u0E31/i, /^\u0E1E\u0E38\u0E18/i, /^\u0E1E\u0E24/i, /^\u0E28/i, /^\u0E40\u0E2A/i],\n  any: [/^\u0E2D\u0E32/i, /^\u0E08/i, /^\u0E2D/i, /^\u0E1E(?!\u0E24)/i, /^\u0E1E\u0E24/i, /^\u0E28/i, /^\u0E2A/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07|\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07|\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19|\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07|(\u0E15\u0E2D\u0E19.*?)?.*(\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07|\u0E40\u0E0A\u0E49\u0E32|\u0E1A\u0E48\u0E32\u0E22|\u0E40\u0E22\u0E47\u0E19|\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0E01\u0E48\u0E2D\u0E19\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07/i,\n    pm: /^\u0E2B\u0E25\u0E31\u0E07\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07/i,\n    midnight: /^\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07\u0E04\u0E37\u0E19/i,\n    noon: /^\u0E40\u0E17\u0E35\u0E48\u0E22\u0E07/i,\n    morning: /\u0E40\u0E0A\u0E49\u0E32/i,\n    afternoon: /\u0E1A\u0E48\u0E32\u0E22/i,\n    evening: /\u0E40\u0E22\u0E47\u0E19/i,\n    night: /\u0E01\u0E25\u0E32\u0E07\u0E04\u0E37\u0E19/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./th/_lib/formatDistance.js\";\nimport { formatLong } from \"./th/_lib/formatLong.js\";\nimport { formatRelative } from \"./th/_lib/formatRelative.js\";\nimport { localize } from \"./th/_lib/localize.js\";\nimport { match } from \"./th/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Thai locale.\n * @language Thai\n * @iso-639-2 tha\n * @author Athiwat Hirunworawongkun [@athivvat](https://github.com/athivvat)\n * @author [@hawkup](https://github.com/hawkup)\n * @author  Jirawat I. [@nodtem66](https://github.com/nodtem66)\n */\nexport const th = {\n  code: \"th\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default th;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"bir saniyeden az\",\n    other: \"{{count}} saniyeden az\",\n  },\n\n  xSeconds: {\n    one: \"1 saniye\",\n    other: \"{{count}} saniye\",\n  },\n\n  halfAMinute: \"yar\u0131m dakika\",\n\n  lessThanXMinutes: {\n    one: \"bir dakikadan az\",\n    other: \"{{count}} dakikadan az\",\n  },\n\n  xMinutes: {\n    one: \"1 dakika\",\n    other: \"{{count}} dakika\",\n  },\n\n  aboutXHours: {\n    one: \"yakla\u015F\u0131k 1 saat\",\n    other: \"yakla\u015F\u0131k {{count}} saat\",\n  },\n\n  xHours: {\n    one: \"1 saat\",\n    other: \"{{count}} saat\",\n  },\n\n  xDays: {\n    one: \"1 g\u00FCn\",\n    other: \"{{count}} g\u00FCn\",\n  },\n\n  aboutXWeeks: {\n    one: \"yakla\u015F\u0131k 1 hafta\",\n    other: \"yakla\u015F\u0131k {{count}} hafta\",\n  },\n\n  xWeeks: {\n    one: \"1 hafta\",\n    other: \"{{count}} hafta\",\n  },\n\n  aboutXMonths: {\n    one: \"yakla\u015F\u0131k 1 ay\",\n    other: \"yakla\u015F\u0131k {{count}} ay\",\n  },\n\n  xMonths: {\n    one: \"1 ay\",\n    other: \"{{count}} ay\",\n  },\n\n  aboutXYears: {\n    one: \"yakla\u015F\u0131k 1 y\u0131l\",\n    other: \"yakla\u015F\u0131k {{count}} y\u0131l\",\n  },\n\n  xYears: {\n    one: \"1 y\u0131l\",\n    other: \"{{count}} y\u0131l\",\n  },\n\n  overXYears: {\n    one: \"1 y\u0131ldan fazla\",\n    other: \"{{count}} y\u0131ldan fazla\",\n  },\n\n  almostXYears: {\n    one: \"neredeyse 1 y\u0131l\",\n    other: \"neredeyse {{count}} y\u0131l\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" sonra\";\n    } else {\n      return result + \" \u00F6nce\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"d MMMM y EEEE\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd.MM.yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'saat' {{time}}\",\n  long: \"{{date}} 'saat' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'ge\u00E7en hafta' eeee 'saat' p\",\n  yesterday: \"'d\u00FCn saat' p\",\n  today: \"'bug\u00FCn saat' p\",\n  tomorrow: \"'yar\u0131n saat' p\",\n  nextWeek: \"eeee 'saat' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"M\u00D6\", \"MS\"],\n  abbreviated: [\"M\u00D6\", \"MS\"],\n  wide: [\"Milattan \u00D6nce\", \"Milattan Sonra\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1\u00C7\", \"2\u00C7\", \"3\u00C7\", \"4\u00C7\"],\n  wide: [\"\u0130lk \u00E7eyrek\", \"\u0130kinci \u00C7eyrek\", \"\u00DC\u00E7\u00FCnc\u00FC \u00E7eyrek\", \"Son \u00E7eyrek\"],\n};\n\nconst monthValues = {\n  narrow: [\"O\", \"\u015E\", \"M\", \"N\", \"M\", \"H\", \"T\", \"A\", \"E\", \"E\", \"K\", \"A\"],\n  abbreviated: [\n    \"Oca\",\n    \"\u015Eub\",\n    \"Mar\",\n    \"Nis\",\n    \"May\",\n    \"Haz\",\n    \"Tem\",\n    \"A\u011Fu\",\n    \"Eyl\",\n    \"Eki\",\n    \"Kas\",\n    \"Ara\",\n  ],\n\n  wide: [\n    \"Ocak\",\n    \"\u015Eubat\",\n    \"Mart\",\n    \"Nisan\",\n    \"May\u0131s\",\n    \"Haziran\",\n    \"Temmuz\",\n    \"A\u011Fustos\",\n    \"Eyl\u00FCl\",\n    \"Ekim\",\n    \"Kas\u0131m\",\n    \"Aral\u0131k\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"P\", \"P\", \"S\", \"\u00C7\", \"P\", \"C\", \"C\"],\n  short: [\"Pz\", \"Pt\", \"Sa\", \"\u00C7a\", \"Pe\", \"Cu\", \"Ct\"],\n  abbreviated: [\"Paz\", \"Pzt\", \"Sal\", \"\u00C7ar\", \"Per\", \"Cum\", \"Cts\"],\n  wide: [\n    \"Pazar\",\n    \"Pazartesi\",\n    \"Sal\u0131\",\n    \"\u00C7ar\u015Famba\",\n    \"Per\u015Fembe\",\n    \"Cuma\",\n    \"Cumartesi\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u00F6\u00F6\",\n    pm: \"\u00F6s\",\n    midnight: \"gy\",\n    noon: \"\u00F6\",\n    morning: \"sa\",\n    afternoon: \"\u00F6s\",\n    evening: \"ak\",\n    night: \"ge\",\n  },\n  abbreviated: {\n    am: \"\u00D6\u00D6\",\n    pm: \"\u00D6S\",\n    midnight: \"gece yar\u0131s\u0131\",\n    noon: \"\u00F6\u011Fle\",\n    morning: \"sabah\",\n    afternoon: \"\u00F6\u011Fleden sonra\",\n    evening: \"ak\u015Fam\",\n    night: \"gece\",\n  },\n  wide: {\n    am: \"\u00D6.\u00D6.\",\n    pm: \"\u00D6.S.\",\n    midnight: \"gece yar\u0131s\u0131\",\n    noon: \"\u00F6\u011Fle\",\n    morning: \"sabah\",\n    afternoon: \"\u00F6\u011Fleden sonra\",\n    evening: \"ak\u015Fam\",\n    night: \"gece\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u00F6\u00F6\",\n    pm: \"\u00F6s\",\n    midnight: \"gy\",\n    noon: \"\u00F6\",\n    morning: \"sa\",\n    afternoon: \"\u00F6s\",\n    evening: \"ak\",\n    night: \"ge\",\n  },\n  abbreviated: {\n    am: \"\u00D6\u00D6\",\n    pm: \"\u00D6S\",\n    midnight: \"gece yar\u0131s\u0131\",\n    noon: \"\u00F6\u011Flen\",\n    morning: \"sabahleyin\",\n    afternoon: \"\u00F6\u011Fleden sonra\",\n    evening: \"ak\u015Famleyin\",\n    night: \"geceleyin\",\n  },\n  wide: {\n    am: \"\u00F6.\u00F6.\",\n    pm: \"\u00F6.s.\",\n    midnight: \"gece yar\u0131s\u0131\",\n    noon: \"\u00F6\u011Flen\",\n    morning: \"sabahleyin\",\n    afternoon: \"\u00F6\u011Fleden sonra\",\n    evening: \"ak\u015Famleyin\",\n    night: \"geceleyin\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(m\u00F6|ms)/i,\n  abbreviated: /^(m\u00F6|ms)/i,\n  wide: /^(milattan \u00F6nce|milattan sonra)/i,\n};\nconst parseEraPatterns = {\n  any: [/(^m\u00F6|^milattan \u00F6nce)/i, /(^ms|^milattan sonra)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]\u00E7/i,\n  wide: /^((i|\u0130)lk|(i|\u0130)kinci|\u00FC\u00E7\u00FCnc\u00FC|son) \u00E7eyrek/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n  abbreviated: [/1\u00E7/i, /2\u00E7/i, /3\u00E7/i, /4\u00E7/i],\n  wide: [\n    /^(i|\u0130)lk \u00E7eyrek/i,\n    /(i|\u0130)kinci \u00E7eyrek/i,\n    /\u00FC\u00E7\u00FCnc\u00FC \u00E7eyrek/i,\n    /son \u00E7eyrek/i,\n  ],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[o\u015Fmnhtaek]/i,\n  abbreviated: /^(oca|\u015Fub|mar|nis|may|haz|tem|a\u011Fu|eyl|eki|kas|ara)/i,\n  wide: /^(ocak|\u015Fubat|mart|nisan|may\u0131s|haziran|temmuz|a\u011Fustos|eyl\u00FCl|ekim|kas\u0131m|aral\u0131k)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^o/i,\n    /^\u015F/i,\n    /^m/i,\n    /^n/i,\n    /^m/i,\n    /^h/i,\n    /^t/i,\n    /^a/i,\n    /^e/i,\n    /^e/i,\n    /^k/i,\n    /^a/i,\n  ],\n\n  any: [\n    /^o/i,\n    /^\u015F/i,\n    /^mar/i,\n    /^n/i,\n    /^may/i,\n    /^h/i,\n    /^t/i,\n    /^a\u011F/i,\n    /^ey/i,\n    /^ek/i,\n    /^k/i,\n    /^ar/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[ps\u00E7c]/i,\n  short: /^(pz|pt|sa|\u00E7a|pe|cu|ct)/i,\n  abbreviated: /^(paz|pzt|sal|\u00E7ar|per|cum|cts)/i,\n  wide: /^(pazar(?!tesi)|pazartesi|sal\u0131|\u00E7ar\u015Famba|per\u015Fembe|cuma(?!rtesi)|cumartesi)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^p/i, /^p/i, /^s/i, /^\u00E7/i, /^p/i, /^c/i, /^c/i],\n  any: [/^pz/i, /^pt/i, /^sa/i, /^\u00E7a/i, /^pe/i, /^cu/i, /^ct/i],\n  wide: [\n    /^pazar(?!tesi)/i,\n    /^pazartesi/i,\n    /^sal\u0131/i,\n    /^\u00E7ar\u015Famba/i,\n    /^per\u015Fembe/i,\n    /^cuma(?!rtesi)/i,\n    /^cumartesi/i,\n  ],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u00F6\u00F6|\u00F6s|gy|\u00F6|sa|\u00F6s|ak|ge)/i,\n  any: /^(\u00F6\\.?\\s?[\u00F6s]\\.?|\u00F6\u011Fleden sonra|gece yar\u0131s\u0131|\u00F6\u011Fle|(sabah|\u00F6\u011F|ak\u015Fam|gece)(leyin))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u00F6\\.?\u00F6\\.?/i,\n    pm: /^\u00F6\\.?s\\.?/i,\n    midnight: /^(gy|gece yar\u0131s\u0131)/i,\n    noon: /^\u00F6\u011F/i,\n    morning: /^sa/i,\n    afternoon: /^\u00F6\u011Fleden sonra/i,\n    evening: /^ak/i,\n    night: /^ge/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./tr/_lib/formatDistance.js\";\nimport { formatLong } from \"./tr/_lib/formatLong.js\";\nimport { formatRelative } from \"./tr/_lib/formatRelative.js\";\nimport { localize } from \"./tr/_lib/localize.js\";\nimport { match } from \"./tr/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Turkish locale.\n * @language Turkish\n * @iso-639-2 tur\n * @author Alpcan Ayd\u0131n [@alpcanaydin](https://github.com/alpcanaydin)\n * @author Berkay Sarg\u0131n [@berkaey](https://github.com/berkaey)\n * @author Fatih Bulut [@bulutfatih](https://github.com/bulutfatih)\n * @author Ismail Demirbilek [@dbtek](https://github.com/dbtek)\n * @author \u0130smail Kayar [@ikayar](https://github.com/ikayar)\n *\n *\n */\nexport const tr = {\n  code: \"tr\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default tr;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u0628\u0649\u0631 \u0633\u0649\u0643\u06C7\u0646\u062A \u0626\u0649\u0686\u0649\u062F\u06D5\",\n    other: \"\u0633\u0649\u0643\u06C7\u0646\u062A \u0626\u0649\u0686\u0649\u062F\u06D5 {{count}}\",\n  },\n\n  xSeconds: {\n    one: \"\u0628\u0649\u0631 \u0633\u0649\u0643\u06C7\u0646\u062A\",\n    other: \"\u0633\u0649\u0643\u06C7\u0646\u062A {{count}}\",\n  },\n\n  halfAMinute: \"\u064A\u0649\u0631\u0649\u0645 \u0645\u0649\u0646\u06C7\u062A\",\n\n  lessThanXMinutes: {\n    one: \"\u0628\u0649\u0631 \u0645\u0649\u0646\u06C7\u062A \u0626\u0649\u0686\u0649\u062F\u06D5\",\n    other: \"\u0645\u0649\u0646\u06C7\u062A \u0626\u0649\u0686\u0649\u062F\u06D5 {{count}}\",\n  },\n\n  xMinutes: {\n    one: \"\u0628\u0649\u0631 \u0645\u0649\u0646\u06C7\u062A\",\n    other: \"\u0645\u0649\u0646\u06C7\u062A {{count}}\",\n  },\n\n  aboutXHours: {\n    one: \"\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u0633\u0627\u0626\u06D5\u062A\",\n    other: \"\u0633\u0627\u0626\u06D5\u062A {{count}} \u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646\",\n  },\n\n  xHours: {\n    one: \"\u0628\u0649\u0631 \u0633\u0627\u0626\u06D5\u062A\",\n    other: \"\u0633\u0627\u0626\u06D5\u062A {{count}}\",\n  },\n\n  xDays: {\n    one: \"\u0628\u0649\u0631 \u0643\u06C8\u0646\",\n    other: \"\u0643\u06C8\u0646 {{count}}\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631\u06BE\u06D5\u067E\u062A\u06D5\",\n    other: \"\u06BE\u06D5\u067E\u062A\u06D5 {{count}} \u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646\",\n  },\n\n  xWeeks: {\n    one: \"\u0628\u0649\u0631\u06BE\u06D5\u067E\u062A\u06D5\",\n    other: \"\u06BE\u06D5\u067E\u062A\u06D5 {{count}}\",\n  },\n\n  aboutXMonths: {\n    one: \"\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u0626\u0627\u064A\",\n    other: \"\u0626\u0627\u064A {{count}} \u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646\",\n  },\n\n  xMonths: {\n    one: \"\u0628\u0649\u0631 \u0626\u0627\u064A\",\n    other: \"\u0626\u0627\u064A {{count}}\",\n  },\n\n  aboutXYears: {\n    one: \"\u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646 \u0628\u0649\u0631 \u064A\u0649\u0644\",\n    other: \"\u064A\u0649\u0644 {{count}} \u062A\u06D5\u062E\u0645\u0649\u0646\u06D5\u0646\",\n  },\n\n  xYears: {\n    one: \"\u0628\u0649\u0631 \u064A\u0649\u0644\",\n    other: \"\u064A\u0649\u0644 {{count}}\",\n  },\n\n  overXYears: {\n    one: \"\u0628\u0649\u0631 \u064A\u0649\u0644\u062F\u0649\u0646 \u0626\u0627\u0631\u062A\u06C7\u0642\",\n    other: \"\u064A\u0649\u0644\u062F\u0649\u0646 \u0626\u0627\u0631\u062A\u06C7\u0642 {{count}}\",\n  },\n\n  almostXYears: {\n    one: \"\u0626\u0627\u0633\u0627\u0633\u06D5\u0646 \u0628\u0649\u0631 \u064A\u0649\u0644\",\n    other: \"\u064A\u0649\u0644 {{count}} \u0626\u0627\u0633\u0627\u0633\u06D5\u0646\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result;\n    } else {\n      return result + \" \u0628\u0648\u0644\u062F\u0649\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u062F\u06D5' {{time}}\",\n  long: \"{{date}} '\u062F\u06D5' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u0626\u200D\u06C6\u062A\u0643\u06D5\u0646' eeee '\u062F\u06D5' p\",\n  yesterday: \"'\u062A\u06C8\u0646\u06C8\u06AF\u06C8\u0646 \u062F\u06D5' p\",\n  today: \"'\u0628\u06C8\u06AF\u06C8\u0646 \u062F\u06D5' p\",\n  tomorrow: \"'\u0626\u06D5\u062A\u06D5 \u062F\u06D5' p\",\n  nextWeek: \"eeee '\u062F\u06D5' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0628\", \"\u0643\"],\n  abbreviated: [\"\u0628\", \"\u0643\"],\n  wide: [\"\u0645\u0649\u064A\u0644\u0627\u062F\u0649\u062F\u0649\u0646 \u0628\u06C7\u0631\u06C7\u0646\", \"\u0645\u0649\u064A\u0644\u0627\u062F\u0649\u062F\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1\", \"2\", \"3\", \"4\"],\n  wide: [\"\u0628\u0649\u0631\u0649\u0646\u062C\u0649 \u0686\u0627\u0631\u06D5\u0643\", \"\u0626\u0649\u0643\u0643\u0649\u0646\u062C\u0649 \u0686\u0627\u0631\u06D5\u0643\", \"\u0626\u06C8\u0686\u0649\u0646\u062C\u0649 \u0686\u0627\u0631\u06D5\u0643\", \"\u062A\u06C6\u062A\u0649\u0646\u062C\u0649 \u0686\u0627\u0631\u06D5\u0643\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"\u064A\", \"\u0641\", \"\u0645\", \"\u0627\", \"\u0645\", \"\u0649\", \"\u0649\", \"\u0627\", \"\u0633\", \"\u06C6\", \"\u0646\", \"\u062F\"],\n  abbreviated: [\n    \"\u064A\u0627\u0646\u06CB\u0627\u0631\",\n    \"\u0641\u06D0\u06CB\u0649\u0631\u0627\u0644\",\n    \"\u0645\u0627\u0631\u062A\",\n    \"\u0626\u0627\u067E\u0631\u0649\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u0626\u0649\u064A\u06C7\u0646\",\n    \"\u0626\u0649\u064A\u0648\u0644\",\n    \"\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A\",\n    \"\u0633\u0649\u0646\u062A\u06D5\u0628\u0649\u0631\",\n    \"\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631\",\n    \"\u0646\u0648\u064A\u0627\u0628\u0649\u0631\",\n    \"\u062F\u0649\u0643\u0627\u0628\u0649\u0631\",\n  ],\n\n  wide: [\n    \"\u064A\u0627\u0646\u06CB\u0627\u0631\",\n    \"\u0641\u06D0\u06CB\u0649\u0631\u0627\u0644\",\n    \"\u0645\u0627\u0631\u062A\",\n    \"\u0626\u0627\u067E\u0631\u0649\u0644\",\n    \"\u0645\u0627\u064A\",\n    \"\u0626\u0649\u064A\u06C7\u0646\",\n    \"\u0626\u0649\u064A\u0648\u0644\",\n    \"\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A\",\n    \"\u0633\u0649\u0646\u062A\u06D5\u0628\u0649\u0631\",\n    \"\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631\",\n    \"\u0646\u0648\u064A\u0627\u0628\u0649\u0631\",\n    \"\u062F\u0649\u0643\u0627\u0628\u0649\u0631\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u064A\", \"\u062F\", \"\u0633\", \"\u0686\", \"\u067E\", \"\u062C\", \"\u0634\"],\n  short: [\"\u064A\", \"\u062F\", \"\u0633\", \"\u0686\", \"\u067E\", \"\u062C\", \"\u0634\"],\n  abbreviated: [\n    \"\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u062C\u06C8\u0645\u06D5\",\n    \"\u0634\u06D5\u0646\u0628\u06D5\",\n  ],\n\n  wide: [\n    \"\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5\",\n    \"\u062C\u06C8\u0645\u06D5\",\n    \"\u0634\u06D5\u0646\u0628\u06D5\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0649\u0645\",\n    night: \"\u0643\u0649\u0686\u06D5\",\n  },\n  abbreviated: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0649\u0645\",\n    night: \"\u0643\u0649\u0686\u06D5\",\n  },\n  wide: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0649\u0645\",\n    night: \"\u0643\u0649\u0686\u06D5\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\u062F\u06D5\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0627\u0645\u062F\u0627\",\n    night: \"\u0643\u0649\u0686\u0649\u062F\u06D5\",\n  },\n  abbreviated: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\u062F\u06D5\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0627\u0645\u062F\u0627\",\n    night: \"\u0643\u0649\u0686\u0649\u062F\u06D5\",\n  },\n  wide: {\n    am: \"\u0626\u06D5\",\n    pm: \"\u0686\",\n    midnight: \"\u0643\",\n    noon: \"\u0686\",\n    morning: \"\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646\u062F\u06D5\",\n    afternoon: \"\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646\",\n    evening: \"\u0626\u0627\u062E\u0634\u0627\u0645\u062F\u0627\",\n    night: \"\u0643\u0649\u0686\u0649\u062F\u06D5\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u0628|\u0643)/i,\n  wide: /^(\u0645\u0649\u064A\u0644\u0627\u062F\u0649\u062F\u0649\u0646 \u0628\u06C7\u0631\u06C7\u0646|\u0645\u0649\u064A\u0644\u0627\u062F\u0649\u062F\u0649\u0646 \u0643\u0649\u064A\u0649\u0646)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u0628\u06C7\u0631\u06C7\u0646/i, /^\u0643\u0649\u064A\u0649\u0646/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u0686[1234]/i,\n  wide: /^\u0686\u0627\u0631\u06D5\u0643 [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  // eslint-disable-next-line no-misleading-character-class\n  narrow: /^[\u064A\u0641\u0645\u0626\u0627\u0645\u0626\u200D\u0626\u0627\u0633\u06C6\u0646\u062F]/i,\n  abbreviated:\n    /^(\u064A\u0627\u0646\u06CB\u0627\u0631|\u0641\u06D0\u06CB\u0649\u0631\u0627\u0644|\u0645\u0627\u0631\u062A|\u0626\u0627\u067E\u0631\u0649\u0644|\u0645\u0627\u064A|\u0626\u0649\u064A\u06C7\u0646|\u0626\u0649\u064A\u0648\u0644|\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A|\u0633\u0649\u0646\u062A\u06D5\u0628\u0649\u0631|\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631|\u0646\u0648\u064A\u0627\u0628\u0649\u0631|\u062F\u0649\u0643\u0627\u0628\u0649\u0631)/i,\n  wide: /^(\u064A\u0627\u0646\u06CB\u0627\u0631|\u0641\u06D0\u06CB\u0649\u0631\u0627\u0644|\u0645\u0627\u0631\u062A|\u0626\u0627\u067E\u0631\u0649\u0644|\u0645\u0627\u064A|\u0626\u0649\u064A\u06C7\u0646|\u0626\u0649\u064A\u0648\u0644|\u0626\u0627\u06CB\u063A\u06C7\u0633\u062A|\u0633\u0649\u0646\u062A\u06D5\u0628\u0649\u0631|\u0626\u06C6\u0643\u062A\u06D5\u0628\u0649\u0631|\u0646\u0648\u064A\u0627\u0628\u0649\u0631|\u062F\u0649\u0643\u0627\u0628\u0649\u0631)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u064A/i,\n    /^\u0641/i,\n    /^\u0645/i,\n    /^\u0627/i,\n    /^\u0645/i,\n    /^\u0649\u200D/i,\n    /^\u0649\u200D/i,\n    /^\u0627\u200D/i,\n    /^\u0633/i,\n    /^\u06C6/i,\n    /^\u0646/i,\n    /^\u062F/i,\n  ],\n\n  any: [\n    /^\u064A\u0627\u0646/i,\n    /^\u0641\u06D0\u06CB/i,\n    /^\u0645\u0627\u0631/i,\n    /^\u0626\u0627\u067E/i,\n    /^\u0645\u0627\u064A/i,\n    /^\u0626\u0649\u064A\u06C7\u0646/i,\n    /^\u0626\u0649\u064A\u0648\u0644/i,\n    /^\u0626\u0627\u06CB/i,\n    /^\u0633\u0649\u0646/i,\n    /^\u0626\u06C6\u0643/i,\n    /^\u0646\u0648\u064A/i,\n    /^\u062F\u0649\u0643/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u062F\u0633\u0686\u067E\u062C\u0634\u064A]/i,\n  short: /^(\u064A\u06D5|\u062F\u06C8|\u0633\u06D5|\u0686\u0627|\u067E\u06D5|\u062C\u06C8|\u0634\u06D5)/i,\n  abbreviated: /^(\u064A\u06D5|\u062F\u06C8|\u0633\u06D5|\u0686\u0627|\u067E\u06D5|\u062C\u06C8|\u0634\u06D5)/i,\n  wide: /^(\u064A\u06D5\u0643\u0634\u06D5\u0646\u0628\u06D5|\u062F\u06C8\u0634\u06D5\u0646\u0628\u06D5|\u0633\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5|\u0686\u0627\u0631\u0634\u06D5\u0646\u0628\u06D5|\u067E\u06D5\u064A\u0634\u06D5\u0646\u0628\u06D5|\u062C\u06C8\u0645\u06D5|\u0634\u06D5\u0646\u0628\u06D5)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u064A/i, /^\u062F/i, /^\u0633/i, /^\u0686/i, /^\u067E/i, /^\u062C/i, /^\u0634/i],\n  any: [/^\u064A/i, /^\u062F/i, /^\u0633/i, /^\u0686/i, /^\u067E/i, /^\u062C/i, /^\u0634/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(\u0626\u06D5|\u0686|\u0643|\u0686|(\u062F\u06D5|\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646) ( \u0626\u06D5\u200D|\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646|\u0626\u0627\u062E\u0634\u0649\u0645|\u0643\u0649\u0686\u06D5))/i,\n  any: /^(\u0626\u06D5|\u0686|\u0643|\u0686|(\u062F\u06D5|\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646) ( \u0626\u06D5\u200D|\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646|\u0626\u0627\u062E\u0634\u0649\u0645|\u0643\u0649\u0686\u06D5))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0626\u06D5/i,\n    pm: /^\u0686/i,\n    midnight: /^\u0643/i,\n    noon: /^\u0686/i,\n    morning: /\u0626\u06D5\u062A\u0649\u06AF\u06D5\u0646/i,\n    afternoon: /\u0686\u06C8\u0634\u062A\u0649\u0646 \u0643\u0649\u064A\u0649\u0646/i,\n    evening: /\u0626\u0627\u062E\u0634\u0649\u0645/i,\n    night: /\u0643\u0649\u0686\u06D5/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./ug/_lib/formatDistance.js\";\nimport { formatLong } from \"./ug/_lib/formatLong.js\";\nimport { formatRelative } from \"./ug/_lib/formatRelative.js\";\nimport { localize } from \"./ug/_lib/localize.js\";\nimport { match } from \"./ug/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Uighur locale\n * @language Uighur\n * @iso-639-2 uig\n * @author Abduwaly M. [@abduwaly](https://github.com/abduwaly)\n */\nexport const ug = {\n  code: \"ug\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ug;\n", "function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  const rem10 = count % 10;\n  const rem100 = count % 100;\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\n\n    // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\n\n    // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return (count, options) => {\n    if (options && options.addSuffix) {\n      if (options.comparison && options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return \"\u0437\u0430 \" + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + \" \u0442\u043E\u043C\u0443\";\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nconst halfAtMinute = (_, options) => {\n  if (options && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"\u0437\u0430 \u043F\u0456\u0432\u0445\u0432\u0438\u043B\u0438\u043D\u0438\";\n    } else {\n      return \"\u043F\u0456\u0432\u0445\u0432\u0438\u043B\u0438\u043D\u0438 \u0442\u043E\u043C\u0443\";\n    }\n  }\n\n  return \"\u043F\u0456\u0432\u0445\u0432\u0438\u043B\u0438\u043D\u0438\";\n};\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448\u0435 \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n      singularNominative: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0430\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443 \u0442\u043E\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438 \u0442\u043E\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0441\u0435\u043A\u0443\u043D\u0434 \u0442\u043E\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0443\",\n      singularGenitive: \"\u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\u0438\",\n      pluralGenitive: \"\u0437\u0430 {{count}} \u0441\u0435\u043A\u0443\u043D\u0434\",\n    },\n  }),\n\n  halfAMinute: halfAtMinute,\n\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: \"\u043C\u0435\u043D\u0448\u0435 \u0445\u0432\u0438\u043B\u0438\u043D\u0438\",\n      singularNominative: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0438\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448\u0435 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\",\n    },\n    future: {\n      one: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 \u0445\u0432\u0438\u043B\u0438\u043D\u0443\",\n      singularNominative: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0443\",\n      singularGenitive: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0438\",\n      pluralGenitive: \"\u043C\u0435\u043D\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\",\n    },\n  }),\n\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0430\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0438\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D\",\n    },\n    past: {\n      singularNominative: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0443 \u0442\u043E\u043C\u0443\",\n      singularGenitive: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0438 \u0442\u043E\u043C\u0443\",\n      pluralGenitive: \"{{count}} \u0445\u0432\u0438\u043B\u0438\u043D \u0442\u043E\u043C\u0443\",\n    },\n    future: {\n      singularNominative: \"\u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0443\",\n      singularGenitive: \"\u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\u0438\",\n      pluralGenitive: \"\u0437\u0430 {{count}} \u0445\u0432\u0438\u043B\u0438\u043D\",\n    },\n  }),\n\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n      singularGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\",\n      pluralGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0433\u043E\u0434\u0438\u043D\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0433\u043E\u0434\u0438\u043D\u0443\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0433\u043E\u0434\u0438\u043D\",\n    },\n  }),\n\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0443\",\n      singularGenitive: \"{{count}} \u0433\u043E\u0434\u0438\u043D\u0438\",\n      pluralGenitive: \"{{count}} \u0433\u043E\u0434\u0438\u043D\",\n    },\n  }),\n\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0434\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0434\u043Di\",\n      pluralGenitive: \"{{count}} \u0434\u043D\u0456\u0432\",\n    },\n  }),\n\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0442\u0438\u0436\u043D\u044F\",\n      singularGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0442\u0438\u0436\u043D\u0456\u0432\",\n      pluralGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0442\u0438\u0436\u043D\u0456\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0442\u0438\u0436\u0434\u0435\u043D\u044C\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0442\u0438\u0436\u043D\u0456\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0442\u0438\u0436\u043D\u0456\u0432\",\n    },\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0442\u0438\u0436\u0434\u0435\u043D\u044C\",\n      singularGenitive: \"{{count}} \u0442\u0438\u0436\u043D\u0456\",\n      pluralGenitive: \"{{count}} \u0442\u0438\u0436\u043D\u0456\u0432\",\n    },\n  }),\n\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u043C\u0456\u0441\u044F\u0446\u044F\",\n      singularGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u043C\u0456\u0441\u044F\u0446\u0456\u0432\",\n      pluralGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u043C\u0456\u0441\u044F\u0446\u0456\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u043C\u0456\u0441\u044F\u0446\u044C\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u043C\u0456\u0441\u044F\u0446\u0456\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u043C\u0456\u0441\u044F\u0446\u0456\u0432\",\n    },\n  }),\n\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u043C\u0456\u0441\u044F\u0446\u044C\",\n      singularGenitive: \"{{count}} \u043C\u0456\u0441\u044F\u0446\u0456\",\n      pluralGenitive: \"{{count}} \u043C\u0456\u0441\u044F\u0446\u0456\u0432\",\n    },\n  }),\n\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0440\u043E\u043A\u0443\",\n      singularGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0440\u043E\u043A\u0456\u0432\",\n      pluralGenitive: \"\u0431\u043B\u0438\u0437\u044C\u043A\u043E {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0440\u0456\u043A\",\n      singularGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0440\u043E\u043A\u0438\",\n      pluralGenitive: \"\u043F\u0440\u0438\u0431\u043B\u0438\u0437\u043D\u043E \u0437\u0430 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n  }),\n\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"{{count}} \u0440\u0456\u043A\",\n      singularGenitive: \"{{count}} \u0440\u043E\u043A\u0438\",\n      pluralGenitive: \"{{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n  }),\n\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u0431\u0456\u043B\u044C\u0448\u0435 {{count}} \u0440\u043E\u043A\u0443\",\n      singularGenitive: \"\u0431\u0456\u043B\u044C\u0448\u0435 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n      pluralGenitive: \"\u0431\u0456\u043B\u044C\u0448\u0435 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n    future: {\n      singularNominative: \"\u0431\u0456\u043B\u044C\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0440\u0456\u043A\",\n      singularGenitive: \"\u0431\u0456\u043B\u044C\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0440\u043E\u043A\u0438\",\n      pluralGenitive: \"\u0431\u0456\u043B\u044C\u0448\u0435, \u043D\u0456\u0436 \u0437\u0430 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n  }),\n\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: \"\u043C\u0430\u0439\u0436\u0435 {{count}} \u0440\u0456\u043A\",\n      singularGenitive: \"\u043C\u0430\u0439\u0436\u0435 {{count}} \u0440\u043E\u043A\u0438\",\n      pluralGenitive: \"\u043C\u0430\u0439\u0436\u0435 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n    future: {\n      singularNominative: \"\u043C\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u0456\u043A\",\n      singularGenitive: \"\u043C\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u043E\u043A\u0438\",\n      pluralGenitive: \"\u043C\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u043E\u043A\u0456\u0432\",\n    },\n  }),\n};\n\nexport const formatDistance = (token, count, options) => {\n  options = options || {};\n\n  return formatDistanceLocale[token](count, options);\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM y '\u0440.'\",\n  long: \"do MMMM y '\u0440.'\",\n  medium: \"d MMM y '\u0440.'\",\n  short: \"dd.MM.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} '\u043E' {{time}}\",\n  long: \"{{date}} '\u043E' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\nimport { toDate } from \"../../../toDate.js\";\n\nconst accusativeWeekdays = [\n  \"\u043D\u0435\u0434\u0456\u043B\u044E\",\n  \"\u043F\u043E\u043D\u0435\u0434\u0456\u043B\u043E\u043A\",\n  \"\u0432\u0456\u0432\u0442\u043E\u0440\u043E\u043A\",\n  \"\u0441\u0435\u0440\u0435\u0434\u0443\",\n  \"\u0447\u0435\u0442\u0432\u0435\u0440\",\n  \"\u043F\u2019\u044F\u0442\u043D\u0438\u0446\u044E\",\n  \"\u0441\u0443\u0431\u043E\u0442\u0443\",\n];\n\nfunction lastWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043C\u0438\u043D\u0443\u043B\u0443 \" + weekday + \" \u043E' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043C\u0438\u043D\u0443\u043B\u0438\u0439 \" + weekday + \" \u043E' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  return \"'\u0443 \" + weekday + \" \u043E' p\";\n}\n\nfunction nextWeek(day) {\n  const weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n    case 3:\n    case 5:\n    case 6:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0443 \" + weekday + \" \u043E' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'\u0443 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0438\u0439 \" + weekday + \" \u043E' p\";\n  }\n}\n\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return lastWeek(day);\n  }\n};\n\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\n  const date = toDate(dirtyDate);\n  const day = date.getDay();\n  if (isSameWeek(date, baseDate, options)) {\n    return thisWeek(day);\n  } else {\n    return nextWeek(day);\n  }\n};\n\nconst formatRelativeLocale = {\n  lastWeek: lastWeekFormat,\n  yesterday: \"'\u0432\u0447\u043E\u0440\u0430 \u043E' p\",\n  today: \"'\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456 \u043E' p\",\n  tomorrow: \"'\u0437\u0430\u0432\u0442\u0440\u0430 \u043E' p\",\n  nextWeek: nextWeekFormat,\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u0434\u043E \u043D.\u0435.\", \"\u043D.\u0435.\"],\n  abbreviated: [\"\u0434\u043E \u043D. \u0435.\", \"\u043D. \u0435.\"],\n  wide: [\"\u0434\u043E \u043D\u0430\u0448\u043E\u0457 \u0435\u0440\u0438\", \"\u043D\u0430\u0448\u043E\u0457 \u0435\u0440\u0438\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0439 \u043A\u0432.\", \"2-\u0439 \u043A\u0432.\", \"3-\u0439 \u043A\u0432.\", \"4-\u0439 \u043A\u0432.\"],\n  wide: [\"1-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"2-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"3-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\", \"4-\u0439 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\"],\n};\n\nconst monthValues = {\n  // \u0414\u0421\u0422\u0423 3582:2013\n  narrow: [\"\u0421\", \"\u041B\", \"\u0411\", \"\u041A\", \"\u0422\", \"\u0427\", \"\u041B\", \"\u0421\", \"\u0412\", \"\u0416\", \"\u041B\", \"\u0413\"],\n  abbreviated: [\n    \"\u0441\u0456\u0447.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0431\u0435\u0440\u0435\u0437.\",\n    \"\u043A\u0432\u0456\u0442.\",\n    \"\u0442\u0440\u0430\u0432.\",\n    \"\u0447\u0435\u0440\u0432.\",\n    \"\u043B\u0438\u043F.\",\n    \"\u0441\u0435\u0440\u043F.\",\n    \"\u0432\u0435\u0440\u0435\u0441.\",\n    \"\u0436\u043E\u0432\u0442.\",\n    \"\u043B\u0438\u0441\u0442\u043E\u043F.\",\n    \"\u0433\u0440\u0443\u0434.\",\n  ],\n\n  wide: [\n    \"\u0441\u0456\u0447\u0435\u043D\u044C\",\n    \"\u043B\u044E\u0442\u0438\u0439\",\n    \"\u0431\u0435\u0440\u0435\u0437\u0435\u043D\u044C\",\n    \"\u043A\u0432\u0456\u0442\u0435\u043D\u044C\",\n    \"\u0442\u0440\u0430\u0432\u0435\u043D\u044C\",\n    \"\u0447\u0435\u0440\u0432\u0435\u043D\u044C\",\n    \"\u043B\u0438\u043F\u0435\u043D\u044C\",\n    \"\u0441\u0435\u0440\u043F\u0435\u043D\u044C\",\n    \"\u0432\u0435\u0440\u0435\u0441\u0435\u043D\u044C\",\n    \"\u0436\u043E\u0432\u0442\u0435\u043D\u044C\",\n    \"\u043B\u0438\u0441\u0442\u043E\u043F\u0430\u0434\",\n    \"\u0433\u0440\u0443\u0434\u0435\u043D\u044C\",\n  ],\n};\n\nconst formattingMonthValues = {\n  narrow: [\"\u0421\", \"\u041B\", \"\u0411\", \"\u041A\", \"\u0422\", \"\u0427\", \"\u041B\", \"\u0421\", \"\u0412\", \"\u0416\", \"\u041B\", \"\u0413\"],\n  abbreviated: [\n    \"\u0441\u0456\u0447.\",\n    \"\u043B\u044E\u0442.\",\n    \"\u0431\u0435\u0440\u0435\u0437.\",\n    \"\u043A\u0432\u0456\u0442.\",\n    \"\u0442\u0440\u0430\u0432.\",\n    \"\u0447\u0435\u0440\u0432.\",\n    \"\u043B\u0438\u043F.\",\n    \"\u0441\u0435\u0440\u043F.\",\n    \"\u0432\u0435\u0440\u0435\u0441.\",\n    \"\u0436\u043E\u0432\u0442.\",\n    \"\u043B\u0438\u0441\u0442\u043E\u043F.\",\n    \"\u0433\u0440\u0443\u0434.\",\n  ],\n\n  wide: [\n    \"\u0441\u0456\u0447\u043D\u044F\",\n    \"\u043B\u044E\u0442\u043E\u0433\u043E\",\n    \"\u0431\u0435\u0440\u0435\u0437\u043D\u044F\",\n    \"\u043A\u0432\u0456\u0442\u043D\u044F\",\n    \"\u0442\u0440\u0430\u0432\u043D\u044F\",\n    \"\u0447\u0435\u0440\u0432\u043D\u044F\",\n    \"\u043B\u0438\u043F\u043D\u044F\",\n    \"\u0441\u0435\u0440\u043F\u043D\u044F\",\n    \"\u0432\u0435\u0440\u0435\u0441\u043D\u044F\",\n    \"\u0436\u043E\u0432\u0442\u043D\u044F\",\n    \"\u043B\u0438\u0441\u0442\u043E\u043F\u0430\u0434\u0430\",\n    \"\u0433\u0440\u0443\u0434\u043D\u044F\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u041D\", \"\u041F\", \"\u0412\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0421\"],\n  short: [\"\u043D\u0434\", \"\u043F\u043D\", \"\u0432\u0442\", \"\u0441\u0440\", \"\u0447\u0442\", \"\u043F\u0442\", \"\u0441\u0431\"],\n  abbreviated: [\"\u043D\u0435\u0434\", \"\u043F\u043E\u043D\", \"\u0432\u0456\u0432\", \"\u0441\u0435\u0440\", \"\u0447\u0442\u0432\", \"\u043F\u0442\u043D\", \"\u0441\u0443\u0431\"],\n  wide: [\n    \"\u043D\u0435\u0434\u0456\u043B\u044F\",\n    \"\u043F\u043E\u043D\u0435\u0434\u0456\u043B\u043E\u043A\",\n    \"\u0432\u0456\u0432\u0442\u043E\u0440\u043E\u043A\",\n    \"\u0441\u0435\u0440\u0435\u0434\u0430\",\n    \"\u0447\u0435\u0442\u0432\u0435\u0440\",\n    \"\u043F\u2019\u044F\u0442\u043D\u0438\u0446\u044F\",\n    \"\u0441\u0443\u0431\u043E\u0442\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D.\",\n    noon: \"\u043F\u043E\u043B.\",\n    morning: \"\u0440\u0430\u043D\u043E\u043A\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u0456\u0447\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D.\",\n    noon: \"\u043F\u043E\u043B.\",\n    morning: \"\u0440\u0430\u043D\u043E\u043A\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u0456\u0447\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D\u0456\u0447\",\n    noon: \"\u043F\u043E\u043B\u0443\u0434\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u043E\u043A\",\n    afternoon: \"\u0434\u0435\u043D\u044C\",\n    evening: \"\u0432\u0435\u0447\u0456\u0440\",\n    night: \"\u043D\u0456\u0447\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D.\",\n    noon: \"\u043F\u043E\u043B.\",\n    morning: \"\u0440\u0430\u043D\u043A\u0443\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u0456\",\n  },\n  abbreviated: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D.\",\n    noon: \"\u043F\u043E\u043B.\",\n    morning: \"\u0440\u0430\u043D\u043A\u0443\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u0456\",\n  },\n  wide: {\n    am: \"\u0414\u041F\",\n    pm: \"\u041F\u041F\",\n    midnight: \"\u043F\u0456\u0432\u043D\u0456\u0447\",\n    noon: \"\u043F\u043E\u043B\u0443\u0434\u0435\u043D\u044C\",\n    morning: \"\u0440\u0430\u043D\u043A\u0443\",\n    afternoon: \"\u0434\u043D\u044F\",\n    evening: \"\u0432\u0435\u0447.\",\n    night: \"\u043D\u043E\u0447\u0456\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const unit = String(options?.unit);\n  const number = Number(dirtyNumber);\n  let suffix;\n\n  if (unit === \"date\") {\n    if (number === 3 || number === 23) {\n      suffix = \"-\u0454\";\n    } else {\n      suffix = \"-\u0435\";\n    }\n  } else if (unit === \"minute\" || unit === \"second\" || unit === \"hour\") {\n    suffix = \"-\u0430\";\n  } else {\n    suffix = \"-\u0439\";\n  }\n\n  return number + suffix;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(\u0435|\u0439|\u0454|\u0430|\u044F))?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^((\u0434\u043E )?\u043D\\.?\\s?\u0435\\.?)/i,\n  abbreviated: /^((\u0434\u043E )?\u043D\\.?\\s?\u0435\\.?)/i,\n  wide: /^(\u0434\u043E \u043D\u0430\u0448\u043E\u0457 \u0435\u0440\u0438|\u043D\u0430\u0448\u043E\u0457 \u0435\u0440\u0438|\u043D\u0430\u0448\u0430 \u0435\u0440\u0430)/i,\n};\n\nconst parseEraPatterns = {\n  any: [/^\u0434/i, /^\u043D/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[\u0438\u0456]?\u0439?)? \u043A\u0432.?/i,\n  wide: /^[1234](-?[\u0438\u0456]?\u0439?)? \u043A\u0432\u0430\u0440\u0442\u0430\u043B/i,\n};\n\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u0441\u043B\u0431\u043A\u0442\u0447\u0432\u0436\u0433]/i,\n  abbreviated:\n    /^(\u0441\u0456\u0447|\u043B\u044E\u0442|\u0431\u0435\u0440(\u0435\u0437)?|\u043A\u0432\u0456\u0442|\u0442\u0440\u0430\u0432|\u0447\u0435\u0440\u0432|\u043B\u0438\u043F|\u0441\u0435\u0440\u043F|\u0432\u0435\u0440(\u0435\u0441)?|\u0436\u043E\u0432\u0442|\u043B\u0438\u0441(\u0442\u043E\u043F)?|\u0433\u0440\u0443\u0434)\\.?/i,\n  wide: /^(\u0441\u0456\u0447\u0435\u043D\u044C|\u0441\u0456\u0447\u043D\u044F|\u043B\u044E\u0442\u0438\u0439|\u043B\u044E\u0442\u043E\u0433\u043E|\u0431\u0435\u0440\u0435\u0437\u0435\u043D\u044C|\u0431\u0435\u0440\u0435\u0437\u043D\u044F|\u043A\u0432\u0456\u0442\u0435\u043D\u044C|\u043A\u0432\u0456\u0442\u043D\u044F|\u0442\u0440\u0430\u0432\u0435\u043D\u044C|\u0442\u0440\u0430\u0432\u043D\u044F|\u0447\u0435\u0440\u0432\u043D\u044F|\u0447\u0435\u0440\u0432\u0435\u043D\u044C|\u043B\u0438\u043F\u0435\u043D\u044C|\u043B\u0438\u043F\u043D\u044F|\u0441\u0435\u0440\u043F\u0435\u043D\u044C|\u0441\u0435\u0440\u043F\u043D\u044F|\u0432\u0435\u0440\u0435\u0441\u0435\u043D\u044C|\u0432\u0435\u0440\u0435\u0441\u043D\u044F|\u0436\u043E\u0432\u0442\u0435\u043D\u044C|\u0436\u043E\u0432\u0442\u043D\u044F|\u043B\u0438\u0441\u0442\u043E\u043F\u0430\u0434[\u0430]?|\u0433\u0440\u0443\u0434\u0435\u043D\u044C|\u0433\u0440\u0443\u0434\u043D\u044F)/i,\n};\n\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u0441/i,\n    /^\u043B/i,\n    /^\u0431/i,\n    /^\u043A/i,\n    /^\u0442/i,\n    /^\u0447/i,\n    /^\u043B/i,\n    /^\u0441/i,\n    /^\u0432/i,\n    /^\u0436/i,\n    /^\u043B/i,\n    /^\u0433/i,\n  ],\n\n  any: [\n    /^\u0441\u0456/i,\n    /^\u043B\u044E/i,\n    /^\u0431/i,\n    /^\u043A/i,\n    /^\u0442/i,\n    /^\u0447/i,\n    /^\u043B\u0438\u043F/i,\n    /^\u0441\u0435/i,\n    /^\u0432/i,\n    /^\u0436/i,\n    /^\u043B\u0438\u0441/i,\n    /^\u0433/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u043D\u043F\u0432\u0441\u0447]/i,\n  short: /^(\u043D\u0434|\u043F\u043D|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u043F\u0442|\u0441\u0431)\\.?/i,\n  abbreviated: /^(\u043D\u0435\u0434|\u043F\u043E\u043D|\u0432\u0456\u0432|\u0441\u0435\u0440|\u0447\u0435?\u0442\u0432|\u043F\u0442\u043D?|\u0441\u0443\u0431)\\.?/i,\n  wide: /^(\u043D\u0435\u0434\u0456\u043B[\u044F\u0456]|\u043F\u043E\u043D\u0435\u0434\u0456\u043B[\u043E\u043A][\u043A\u0430]|\u0432\u0456\u0432\u0442\u043E\u0440[\u043E\u043A][\u043A\u0430]|\u0441\u0435\u0440\u0435\u0434[\u0430\u0438]|\u0447\u0435\u0442\u0432\u0435\u0440(\u0433\u0430)?|\u043F\\W*?\u044F\u0442\u043D\u0438\u0446[\u044F\u0456]|\u0441\u0443\u0431\u043E\u0442[\u0430\u0438])/i,\n};\n\nconst parseDayPatterns = {\n  narrow: [/^\u043D/i, /^\u043F/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0441/i],\n  any: [/^\u043D/i, /^\u043F[\u043E\u043D]/i, /^\u0432/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043F\\W*?[\u044F\u0442]/i, /^\u0441[\u0443\u0431]/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^([\u0434\u043F]\u043F|\u043F\u0456\u0432\u043D\\.?|\u043F\u043E\u043B\\.?|\u0440\u0430\u043D\u043E\u043A|\u0440\u0430\u043D\u043A\u0443|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u0456\u0447|\u043D\u043E\u0447\u0456)/i,\n  abbreviated: /^([\u0434\u043F]\u043F|\u043F\u0456\u0432\u043D\\.?|\u043F\u043E\u043B\\.?|\u0440\u0430\u043D\u043E\u043A|\u0440\u0430\u043D\u043A\u0443|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\\.?|\u043D\u0456\u0447|\u043D\u043E\u0447\u0456)/i,\n  wide: /^([\u0434\u043F]\u043F|\u043F\u0456\u0432\u043D\u0456\u0447|\u043F\u043E\u043B\u0443\u0434\u0435\u043D\u044C|\u0440\u0430\u043D\u043E\u043A|\u0440\u0430\u043D\u043A\u0443|\u0434\u0435\u043D\u044C|\u0434\u043D\u044F|\u0432\u0435\u0447\u0456\u0440|\u0432\u0435\u0447\u043E\u0440\u0430|\u043D\u0456\u0447|\u043D\u043E\u0447\u0456)/i,\n};\n\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u0434\u043F/i,\n    pm: /^\u043F\u043F/i,\n    midnight: /^\u043F\u0456\u0432\u043D/i,\n    noon: /^\u043F\u043E\u043B/i,\n    morning: /^\u0440/i,\n    afternoon: /^\u0434[\u0435\u043D]/i,\n    evening: /^\u0432/i,\n    night: /^\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./uk/_lib/formatDistance.js\";\nimport { formatLong } from \"./uk/_lib/formatLong.js\";\nimport { formatRelative } from \"./uk/_lib/formatRelative.js\";\nimport { localize } from \"./uk/_lib/localize.js\";\nimport { match } from \"./uk/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Ukrainian locale.\n * @language Ukrainian\n * @iso-639-2 ukr\n * @author Andrii Korzh [@korzhyk](https://github.com/korzhyk)\n * @author Andriy Shcherbyak [@shcherbyakdev](https://github.com/shcherbyakdev)\n */\nexport const uk = {\n  code: \"uk\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default uk;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"sekunddan kam\",\n    other: \"{{count}} sekunddan kam\",\n  },\n\n  xSeconds: {\n    one: \"1 sekund\",\n    other: \"{{count}} sekund\",\n  },\n\n  halfAMinute: \"yarim minut\",\n\n  lessThanXMinutes: {\n    one: \"bir minutdan kam\",\n    other: \"{{count}} minutdan kam\",\n  },\n\n  xMinutes: {\n    one: \"1 minut\",\n    other: \"{{count}} minut\",\n  },\n\n  aboutXHours: {\n    one: \"tahminan 1 soat\",\n    other: \"tahminan {{count}} soat\",\n  },\n\n  xHours: {\n    one: \"1 soat\",\n    other: \"{{count}} soat\",\n  },\n\n  xDays: {\n    one: \"1 kun\",\n    other: \"{{count}} kun\",\n  },\n\n  aboutXWeeks: {\n    one: \"tahminan 1 hafta\",\n    other: \"tahminan {{count}} hafta\",\n  },\n\n  xWeeks: {\n    one: \"1 hafta\",\n    other: \"{{count}} hafta\",\n  },\n\n  aboutXMonths: {\n    one: \"tahminan 1 oy\",\n    other: \"tahminan {{count}} oy\",\n  },\n\n  xMonths: {\n    one: \"1 oy\",\n    other: \"{{count}} oy\",\n  },\n\n  aboutXYears: {\n    one: \"tahminan 1 yil\",\n    other: \"tahminan {{count}} yil\",\n  },\n\n  xYears: {\n    one: \"1 yil\",\n    other: \"{{count}} yil\",\n  },\n\n  overXYears: {\n    one: \"1 yildan ko'p\",\n    other: \"{{count}} yildan ko'p\",\n  },\n\n  almostXYears: {\n    one: \"deyarli 1 yil\",\n    other: \"deyarli {{count}} yil\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" dan keyin\";\n    } else {\n      return result + \" oldin\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM, y\",\n  long: \"do MMMM, y\",\n  medium: \"d MMM, y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss zzzz\",\n  long: \"h:mm:ss z\",\n  medium: \"h:mm:ss\",\n  short: \"h:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'oldingi' eeee p 'da'\",\n  yesterday: \"'kecha' p 'da'\",\n  today: \"'bugun' p 'da'\",\n  tomorrow: \"'ertaga' p 'da'\",\n  nextWeek: \"eeee p 'da'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"M.A\", \"M.\"],\n  abbreviated: [\"M.A\", \"M.\"],\n  wide: [\"Miloddan Avvalgi\", \"Milodiy\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"CH.1\", \"CH.2\", \"CH.3\", \"CH.4\"],\n  wide: [\"1-chi chorak\", \"2-chi chorak\", \"3-chi chorak\", \"4-chi chorak\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"Y\", \"F\", \"M\", \"A\", \"M\", \"I\", \"I\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Yan\",\n    \"Fev\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Iyun\",\n    \"Iyul\",\n    \"Avg\",\n    \"Sen\",\n    \"Okt\",\n    \"Noy\",\n    \"Dek\",\n  ],\n\n  wide: [\n    \"Yanvar\",\n    \"Fevral\",\n    \"Mart\",\n    \"Aprel\",\n    \"May\",\n    \"Iyun\",\n    \"Iyul\",\n    \"Avgust\",\n    \"Sentabr\",\n    \"Oktabr\",\n    \"Noyabr\",\n    \"Dekabr\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"Y\", \"D\", \"S\", \"CH\", \"P\", \"J\", \"SH\"],\n  short: [\"Ya\", \"Du\", \"Se\", \"Cho\", \"Pa\", \"Ju\", \"Sha\"],\n  abbreviated: [\"Yak\", \"Dush\", \"Sesh\", \"Chor\", \"Pay\", \"Jum\", \"Shan\"],\n  wide: [\n    \"Yakshanba\",\n    \"Dushanba\",\n    \"Seshanba\",\n    \"Chorshanba\",\n    \"Payshanba\",\n    \"Juma\",\n    \"Shanba\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"y.t\",\n    noon: \"p.\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"yarim tun\",\n    noon: \"peshin\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"yarim tun\",\n    noon: \"peshin\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"y.t\",\n    noon: \"p.\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"yarim tun\",\n    noon: \"peshin\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"yarim tun\",\n    noon: \"peshin\",\n    morning: \"ertalab\",\n    afternoon: \"tushdan keyin\",\n    evening: \"kechqurun\",\n    night: \"tun\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(chi)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(m\\.a|m\\.)/i,\n  abbreviated: /^(m\\.a\\.?\\s?m\\.?)/i,\n  wide: /^(miloddan avval|miloddan keyin)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](chi)? chorak/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[yfmasond]/i,\n  abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,\n  wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^y/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^i/i,\n    /^i/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ya/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^iyun/i,\n    /^iyul/i,\n    /^av/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[ydschj]/i,\n  short: /^(ya|du|se|cho|pa|ju|sha)/i,\n  abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,\n  wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i],\n  any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|y\\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,\n  any: /^([ap]\\.?\\s?m\\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^y\\.t/i,\n    noon: /^pe/i,\n    morning: /ertalab/i,\n    afternoon: /tushdan keyin/i,\n    evening: /kechqurun/i,\n    night: /tun/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./uz/_lib/formatDistance.js\";\nimport { formatLong } from \"./uz/_lib/formatLong.js\";\nimport { formatRelative } from \"./uz/_lib/formatRelative.js\";\nimport { localize } from \"./uz/_lib/localize.js\";\nimport { match } from \"./uz/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Uzbek locale.\n * @language Uzbek\n * @iso-639-2 uzb\n * @author Mukhammadali [@mukhammadali](https://github.com/Mukhammadali)\n */\nexport const uz = {\n  code: \"uz\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default uz;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"1 \u0441\u043E\u043D\u0438\u044F\u0434\u0430\u043D \u043A\u0430\u043C\",\n    other: \"{{count}} \u0441\u043E\u043D\u0438\u044F\u0434\u0430\u043D \u043A\u0430\u043C\",\n  },\n\n  xSeconds: {\n    one: \"1 \u0441\u043E\u043D\u0438\u044F\",\n    other: \"{{count}} \u0441\u043E\u043D\u0438\u044F\",\n  },\n\n  halfAMinute: \"\u044F\u0440\u0438\u043C \u0434\u0430\u049B\u0438\u049B\u0430\",\n\n  lessThanXMinutes: {\n    one: \"1 \u0434\u0430\u049B\u0438\u049B\u0430\u0434\u0430\u043D \u043A\u0430\u043C\",\n    other: \"{{count}} \u0434\u0430\u049B\u0438\u049B\u0430\u0434\u0430\u043D \u043A\u0430\u043C\",\n  },\n\n  xMinutes: {\n    one: \"1 \u0434\u0430\u049B\u0438\u049B\u0430\",\n    other: \"{{count}} \u0434\u0430\u049B\u0438\u049B\u0430\",\n  },\n\n  aboutXHours: {\n    one: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D 1 \u0441\u043E\u0430\u0442\",\n    other: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D {{count}} \u0441\u043E\u0430\u0442\",\n  },\n\n  xHours: {\n    one: \"1 \u0441\u043E\u0430\u0442\",\n    other: \"{{count}} \u0441\u043E\u0430\u0442\",\n  },\n\n  xDays: {\n    one: \"1 \u043A\u0443\u043D\",\n    other: \"{{count}} \u043A\u0443\u043D\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D 1 \u0445\u0430\u0444\u0442\u0430\",\n    other: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D {{count}} \u0445\u0430\u0444\u0442\u0430\",\n  },\n\n  xWeeks: {\n    one: \"1 \u0445\u0430\u0444\u0442\u0430\",\n    other: \"{{count}} \u0445\u0430\u0444\u0442\u0430\",\n  },\n\n  aboutXMonths: {\n    one: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D 1 \u043E\u0439\",\n    other: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D {{count}} \u043E\u0439\",\n  },\n\n  xMonths: {\n    one: \"1 \u043E\u0439\",\n    other: \"{{count}} \u043E\u0439\",\n  },\n\n  aboutXYears: {\n    one: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D 1 \u0439\u0438\u043B\",\n    other: \"\u0442\u0430\u0445\u043C\u0438\u043D\u0430\u043D {{count}} \u0439\u0438\u043B\",\n  },\n\n  xYears: {\n    one: \"1 \u0439\u0438\u043B\",\n    other: \"{{count}} \u0439\u0438\u043B\",\n  },\n\n  overXYears: {\n    one: \"1 \u0439\u0438\u043B\u0434\u0430\u043D \u043A\u045E\u043F\",\n    other: \"{{count}} \u0439\u0438\u043B\u0434\u0430\u043D \u043A\u045E\u043F\",\n  },\n\n  almostXYears: {\n    one: \"\u0434\u0435\u044F\u0440\u043B\u0438 1 \u0439\u0438\u043B\",\n    other: \"\u0434\u0435\u044F\u0440\u043B\u0438 {{count}} \u0439\u0438\u043B\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D\";\n    } else {\n      return result + \" \u043E\u043B\u0434\u0438\u043D\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, do MMMM, y\",\n  long: \"do MMMM, y\",\n  medium: \"d MMM, y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  any: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"any\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u045E\u0442\u0433\u0430\u043D' eeee p '\u0434\u0430'\",\n  yesterday: \"'\u043A\u0435\u0447\u0430' p '\u0434\u0430'\",\n  today: \"'\u0431\u0443\u0433\u0443\u043D' p '\u0434\u0430'\",\n  tomorrow: \"'\u044D\u0440\u0442\u0430\u0433\u0430' p '\u0434\u0430'\",\n  nextWeek: \"eeee p '\u0434\u0430'\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u041C.\u0410\", \"\u041C\"],\n  abbreviated: [\"\u041C.\u0410\", \"\u041C\"],\n  wide: [\"\u041C\u0438\u043B\u043E\u0434\u0434\u0430\u043D \u0410\u0432\u0432\u0430\u043B\u0433\u0438\", \"\u041C\u0438\u043B\u043E\u0434\u0438\u0439\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"1-\u0447\u043E\u0440.\", \"2-\u0447\u043E\u0440.\", \"3-\u0447\u043E\u0440.\", \"4-\u0447\u043E\u0440.\"],\n  wide: [\"1-\u0447\u043E\u0440\u0430\u043A\", \"2-\u0447\u043E\u0440\u0430\u043A\", \"3-\u0447\u043E\u0440\u0430\u043A\", \"4-\u0447\u043E\u0440\u0430\u043A\"],\n};\n\nconst monthValues = {\n  narrow: [\"\u042F\", \"\u0424\", \"\u041C\", \"\u0410\", \"\u041C\", \"\u0418\", \"\u0418\", \"\u0410\", \"\u0421\", \"\u041E\", \"\u041D\", \"\u0414\"],\n  abbreviated: [\n    \"\u044F\u043D\u0432\",\n    \"\u0444\u0435\u0432\",\n    \"\u043C\u0430\u0440\",\n    \"\u0430\u043F\u0440\",\n    \"\u043C\u0430\u0439\",\n    \"\u0438\u044E\u043D\",\n    \"\u0438\u044E\u043B\",\n    \"\u0430\u0432\u0433\",\n    \"\u0441\u0435\u043D\",\n    \"\u043E\u043A\u0442\",\n    \"\u043D\u043E\u044F\",\n    \"\u0434\u0435\u043A\",\n  ],\n\n  wide: [\n    \"\u044F\u043D\u0432\u0430\u0440\",\n    \"\u0444\u0435\u0432\u0440\u0430\u043B\",\n    \"\u043C\u0430\u0440\u0442\",\n    \"\u0430\u043F\u0440\u0435\u043B\",\n    \"\u043C\u0430\u0439\",\n    \"\u0438\u044E\u043D\",\n    \"\u0438\u044E\u043B\",\n    \"\u0430\u0432\u0433\u0443\u0441\u0442\",\n    \"\u0441\u0435\u043D\u0442\u0430\u0431\u0440\",\n    \"\u043E\u043A\u0442\u0430\u0431\u0440\",\n    \"\u043D\u043E\u044F\u0431\u0440\",\n    \"\u0434\u0435\u043A\u0430\u0431\u0440\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u042F\", \"\u0414\", \"\u0421\", \"\u0427\", \"\u041F\", \"\u0416\", \"\u0428\"],\n  short: [\"\u044F\u043A\", \"\u0434\u0443\", \"\u0441\u0435\", \"\u0447\u043E\", \"\u043F\u0430\", \"\u0436\u0443\", \"\u0448\u0430\"],\n  abbreviated: [\"\u044F\u043A\u0448\", \"\u0434\u0443\u0448\", \"\u0441\u0435\u0448\", \"\u0447\u043E\u0440\", \"\u043F\u0430\u0439\", \"\u0436\u0443\u043C\", \"\u0448\u0430\u043D\"],\n  wide: [\n    \"\u044F\u043A\u0448\u0430\u043D\u0431\u0430\",\n    \"\u0434\u0443\u0448\u0430\u043D\u0431\u0430\",\n    \"\u0441\u0435\u0448\u0430\u043D\u0431\u0430\",\n    \"\u0447\u043E\u0440\u0448\u0430\u043D\u0431\u0430\",\n    \"\u043F\u0430\u0439\u0448\u0430\u043D\u0431\u0430\",\n    \"\u0436\u0443\u043C\u0430\",\n    \"\u0448\u0430\u043D\u0431\u0430\",\n  ],\n};\n\nconst dayPeriodValues = {\n  any: {\n    am: \"\u041F.\u041E.\",\n    pm: \"\u041F.\u041A.\",\n    midnight: \"\u044F\u0440\u0438\u043C \u0442\u0443\u043D\",\n    noon: \"\u043F\u0435\u0448\u0438\u043D\",\n    morning: \"\u044D\u0440\u0442\u0430\u043B\u0430\u0431\",\n    afternoon: \"\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D\",\n    evening: \"\u043A\u0435\u0447\u0430\u0441\u0438\",\n    night: \"\u0442\u0443\u043D\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  any: {\n    am: \"\u041F.\u041E.\",\n    pm: \"\u041F.\u041A.\",\n    midnight: \"\u044F\u0440\u0438\u043C \u0442\u0443\u043D\",\n    noon: \"\u043F\u0435\u0448\u0438\u043D\",\n    morning: \"\u044D\u0440\u0442\u0430\u043B\u0430\u0431\",\n    afternoon: \"\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D\",\n    evening: \"\u043A\u0435\u0447\u0430\u0441\u0438\",\n    night: \"\u0442\u0443\u043D\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  return String(dirtyNumber);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"any\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"any\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\u0447\u0438)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u043C\\.\u0430|\u043C\\.)/i,\n  abbreviated: /^(\u043C\\.\u0430|\u043C\\.)/i,\n  wide: /^(\u043C\u0438\u043B\u043E\u0434\u0434\u0430\u043D \u0430\u0432\u0432\u0430\u043B|\u043C\u0438\u043B\u043E\u0434\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D)/i,\n};\nconst parseEraPatterns = {\n  any: [/^\u043C/i, /^\u0430/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234]-\u0447\u043E\u0440./i,\n  wide: /^[1234]-\u0447\u043E\u0440\u0430\u043A/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[\u044F\u0444\u043C\u0430\u043C\u0438\u0438\u0430\u0441\u043E\u043D\u0434]/i,\n  abbreviated: /^(\u044F\u043D\u0432|\u0444\u0435\u0432|\u043C\u0430\u0440|\u0430\u043F\u0440|\u043C\u0430\u0439|\u0438\u044E\u043D|\u0438\u044E\u043B|\u0430\u0432\u0433|\u0441\u0435\u043D|\u043E\u043A\u0442|\u043D\u043E\u044F|\u0434\u0435\u043A)/i,\n  wide: /^(\u044F\u043D\u0432\u0430\u0440|\u0444\u0435\u0432\u0440\u0430\u043B|\u043C\u0430\u0440\u0442|\u0430\u043F\u0440\u0435\u043B|\u043C\u0430\u0439|\u0438\u044E\u043D|\u0438\u044E\u043B|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043D\u0442\u0430\u0431\u0440|\u043E\u043A\u0442\u0430\u0431\u0440|\u043D\u043E\u044F\u0431\u0440|\u0434\u0435\u043A\u0430\u0431\u0440)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u044F/i,\n    /^\u0444/i,\n    /^\u043C/i,\n    /^\u0430/i,\n    /^\u043C/i,\n    /^\u0438/i,\n    /^\u0438/i,\n    /^\u0430/i,\n    /^\u0441/i,\n    /^\u043E/i,\n    /^\u043D/i,\n    /^\u0434/i,\n  ],\n\n  any: [\n    /^\u044F/i,\n    /^\u0444/i,\n    /^\u043C\u0430\u0440/i,\n    /^\u0430\u043F/i,\n    /^\u043C\u0430\u0439/i,\n    /^\u0438\u044E\u043D/i,\n    /^\u0438\u044E\u043B/i,\n    /^\u0430\u0432/i,\n    /^\u0441/i,\n    /^\u043E/i,\n    /^\u043D/i,\n    /^\u0434/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u044F\u0434\u0441\u0447\u043F\u0436\u0448]/i,\n  short: /^(\u044F\u043A|\u0434\u0443|\u0441\u0435|\u0447\u043E|\u043F\u0430|\u0436\u0443|\u0448\u0430)/i,\n  abbreviated: /^(\u044F\u043A\u0448|\u0434\u0443\u0448|\u0441\u0435\u0448|\u0447\u043E\u0440|\u043F\u0430\u0439|\u0436\u0443\u043C|\u0448\u0430\u043D)/i,\n  wide: /^(\u044F\u043A\u0448\u0430\u043D\u0431\u0430|\u0434\u0443\u0448\u0430\u043D\u0431\u0430|\u0441\u0435\u0448\u0430\u043D\u0431\u0430|\u0447\u043E\u0440\u0448\u0430\u043D\u0431\u0430|\u043F\u0430\u0439\u0448\u0430\u043D\u0431\u0430|\u0436\u0443\u043C\u0430|\u0448\u0430\u043D\u0431\u0430)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^\u044F/i, /^\u0434/i, /^\u0441/i, /^\u0447/i, /^\u043F/i, /^\u0436/i, /^\u0448/i],\n  any: [/^\u044F\u043A/i, /^\u0434\u0443/i, /^\u0441\u0435/i, /^\u0447\u043E\u0440/i, /^\u043F\u0430\u0439/i, /^\u0436\u0443/i, /^\u0448\u0430\u043D/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u043F\\.\u043E\\.|\u043F\\.\u043A\\.|\u044F\u0440\u0438\u043C \u0442\u0443\u043D|\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D|(\u044D\u0440\u0442\u0430\u043B\u0430\u0431|\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D|\u043A\u0435\u0447\u0430\u0441\u0438|\u0442\u0443\u043D))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u043F\\.\u043E\\./i,\n    pm: /^\u043F\\.\u043A\\./i,\n    midnight: /^\u044F\u0440\u0438\u043C \u0442\u0443\u043D/i,\n    noon: /^\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D/i,\n    morning: /\u044D\u0440\u0442\u0430\u043B\u0430\u0431/i,\n    afternoon: /\u043F\u0435\u0448\u0438\u043D\u0434\u0430\u043D \u043A\u0435\u0439\u0438\u043D/i,\n    evening: /\u043A\u0435\u0447\u0430\u0441\u0438/i,\n    night: /\u0442\u0443\u043D/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./uz-Cyrl/_lib/formatDistance.js\";\nimport { formatLong } from \"./uz-Cyrl/_lib/formatLong.js\";\nimport { formatRelative } from \"./uz-Cyrl/_lib/formatRelative.js\";\nimport { localize } from \"./uz-Cyrl/_lib/localize.js\";\nimport { match } from \"./uz-Cyrl/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Uzbek Cyrillic locale.\n * @language Uzbek\n * @iso-639-2 uzb\n * @author Kamronbek Shodmonov [@kamronbek28](https://github.com/kamronbek28)\n */\nexport const uzCyrl = {\n  code: \"uz-Cyrl\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default uzCyrl;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"d\u01B0\u1EDBi 1 gi\u00E2y\",\n    other: \"d\u01B0\u1EDBi {{count}} gi\u00E2y\",\n  },\n\n  xSeconds: {\n    one: \"1 gi\u00E2y\",\n    other: \"{{count}} gi\u00E2y\",\n  },\n\n  halfAMinute: \"n\u1EEDa ph\u00FAt\",\n\n  lessThanXMinutes: {\n    one: \"d\u01B0\u1EDBi 1 ph\u00FAt\",\n    other: \"d\u01B0\u1EDBi {{count}} ph\u00FAt\",\n  },\n\n  xMinutes: {\n    one: \"1 ph\u00FAt\",\n    other: \"{{count}} ph\u00FAt\",\n  },\n\n  aboutXHours: {\n    one: \"kho\u1EA3ng 1 gi\u1EDD\",\n    other: \"kho\u1EA3ng {{count}} gi\u1EDD\",\n  },\n\n  xHours: {\n    one: \"1 gi\u1EDD\",\n    other: \"{{count}} gi\u1EDD\",\n  },\n\n  xDays: {\n    one: \"1 ng\u00E0y\",\n    other: \"{{count}} ng\u00E0y\",\n  },\n\n  aboutXWeeks: {\n    one: \"kho\u1EA3ng 1 tu\u1EA7n\",\n    other: \"kho\u1EA3ng {{count}} tu\u1EA7n\",\n  },\n\n  xWeeks: {\n    one: \"1 tu\u1EA7n\",\n    other: \"{{count}} tu\u1EA7n\",\n  },\n\n  aboutXMonths: {\n    one: \"kho\u1EA3ng 1 th\u00E1ng\",\n    other: \"kho\u1EA3ng {{count}} th\u00E1ng\",\n  },\n\n  xMonths: {\n    one: \"1 th\u00E1ng\",\n    other: \"{{count}} th\u00E1ng\",\n  },\n\n  aboutXYears: {\n    one: \"kho\u1EA3ng 1 n\u0103m\",\n    other: \"kho\u1EA3ng {{count}} n\u0103m\",\n  },\n\n  xYears: {\n    one: \"1 n\u0103m\",\n    other: \"{{count}} n\u0103m\",\n  },\n\n  overXYears: {\n    one: \"h\u01A1n 1 n\u0103m\",\n    other: \"h\u01A1n {{count}} n\u0103m\",\n  },\n\n  almostXYears: {\n    one: \"g\u1EA7n 1 n\u0103m\",\n    other: \"g\u1EA7n {{count}} n\u0103m\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \" n\u1EEFa\";\n    } else {\n      return result + \" tr\u01B0\u1EDBc\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  // th\u1EE9 S\u00E1u, ng\u00E0y 25 th\u00E1ng 08 n\u0103m 2017\n  full: \"EEEE, 'ng\u00E0y' d MMMM 'n\u0103m' y\",\n  // ng\u00E0y 25 th\u00E1ng 08 n\u0103m 2017\n  long: \"'ng\u00E0y' d MMMM 'n\u0103m' y\",\n  // 25 thg 08 n\u0103m 2017\n  medium: \"d MMM 'n\u0103m' y\",\n  // 25/08/2017\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  // th\u1EE9 S\u00E1u, ng\u00E0y 25 th\u00E1ng 08 n\u0103m 2017 23:25:59\n  full: \"{{date}} {{time}}\",\n  // ng\u00E0y 25 th\u00E1ng 08 n\u0103m 2017 23:25\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"eeee 'tu\u1EA7n tr\u01B0\u1EDBc v\u00E0o l\u00FAc' p\",\n  yesterday: \"'h\u00F4m qua v\u00E0o l\u00FAc' p\",\n  today: \"'h\u00F4m nay v\u00E0o l\u00FAc' p\",\n  tomorrow: \"'ng\u00E0y mai v\u00E0o l\u00FAc' p\",\n  nextWeek: \"eeee 't\u1EDBi v\u00E0o l\u00FAc' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\n// Vietnamese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html\n// Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134\n\nconst eraValues = {\n  narrow: [\"TCN\", \"SCN\"],\n  abbreviated: [\"tr\u01B0\u1EDBc CN\", \"sau CN\"],\n  wide: [\"tr\u01B0\u1EDBc C\u00F4ng Nguy\u00EAn\", \"sau C\u00F4ng Nguy\u00EAn\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"Qu\u00FD 1\", \"Qu\u00FD 2\", \"Qu\u00FD 3\", \"Qu\u00FD 4\"],\n};\n\nconst formattingQuarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  // I notice many news outlet use this \"qu\u00FD II/2018\"\n  wide: [\"qu\u00FD I\", \"qu\u00FD II\", \"qu\u00FD III\", \"qu\u00FD IV\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"Thg 1\",\n    \"Thg 2\",\n    \"Thg 3\",\n    \"Thg 4\",\n    \"Thg 5\",\n    \"Thg 6\",\n    \"Thg 7\",\n    \"Thg 8\",\n    \"Thg 9\",\n    \"Thg 10\",\n    \"Thg 11\",\n    \"Thg 12\",\n  ],\n\n  wide: [\n    \"Th\u00E1ng M\u1ED9t\",\n    \"Th\u00E1ng Hai\",\n    \"Th\u00E1ng Ba\",\n    \"Th\u00E1ng T\u01B0\",\n    \"Th\u00E1ng N\u0103m\",\n    \"Th\u00E1ng S\u00E1u\",\n    \"Th\u00E1ng B\u1EA3y\",\n    \"Th\u00E1ng T\u00E1m\",\n    \"Th\u00E1ng Ch\u00EDn\",\n    \"Th\u00E1ng M\u01B0\u1EDDi\",\n    \"Th\u00E1ng M\u01B0\u1EDDi M\u1ED9t\",\n    \"Th\u00E1ng M\u01B0\u1EDDi Hai\",\n  ],\n};\n// In Vietnamese date formatting, month number less than 10 expected to have leading zero\nconst formattingMonthValues = {\n  narrow: [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ],\n\n  abbreviated: [\n    \"thg 1\",\n    \"thg 2\",\n    \"thg 3\",\n    \"thg 4\",\n    \"thg 5\",\n    \"thg 6\",\n    \"thg 7\",\n    \"thg 8\",\n    \"thg 9\",\n    \"thg 10\",\n    \"thg 11\",\n    \"thg 12\",\n  ],\n\n  wide: [\n    \"th\u00E1ng 01\",\n    \"th\u00E1ng 02\",\n    \"th\u00E1ng 03\",\n    \"th\u00E1ng 04\",\n    \"th\u00E1ng 05\",\n    \"th\u00E1ng 06\",\n    \"th\u00E1ng 07\",\n    \"th\u00E1ng 08\",\n    \"th\u00E1ng 09\",\n    \"th\u00E1ng 10\",\n    \"th\u00E1ng 11\",\n    \"th\u00E1ng 12\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"],\n  short: [\"CN\", \"Th 2\", \"Th 3\", \"Th 4\", \"Th 5\", \"Th 6\", \"Th 7\"],\n  abbreviated: [\"CN\", \"Th\u1EE9 2\", \"Th\u1EE9 3\", \"Th\u1EE9 4\", \"Th\u1EE9 5\", \"Th\u1EE9 6\", \"Th\u1EE9 7\"],\n\n  wide: [\n    \"Ch\u1EE7 Nh\u1EADt\",\n    \"Th\u1EE9 Hai\",\n    \"Th\u1EE9 Ba\",\n    \"Th\u1EE9 T\u01B0\",\n    \"Th\u1EE9 N\u0103m\",\n    \"Th\u1EE9 S\u00E1u\",\n    \"Th\u1EE9 B\u1EA3y\",\n  ],\n};\n\n// Vietnamese are used to AM/PM borrowing from English, hence `narrow` and\n// `abbreviated` are just like English but I'm leaving the `wide`\n// format being localized with abbreviations found in some systems (S\u00C1ng / CHi\u1EC1u);\n// however, personally, I don't think `Chi\u1EC1u` sounds appropriate for `PM`\nconst dayPeriodValues = {\n  // narrow date period is extremely rare in Vietnamese\n  // I used abbreviated form for noon, morning and afternoon\n  // which are regconizable by Vietnamese, others cannot be any shorter\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"tr\",\n    morning: \"sg\",\n    afternoon: \"ch\",\n    evening: \"t\u1ED1i\",\n    night: \"\u0111\u00EAm\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"tr\u01B0a\",\n    morning: \"s\u00E1ng\",\n    afternoon: \"chi\u1EC1u\",\n    evening: \"t\u1ED1i\",\n    night: \"\u0111\u00EAm\",\n  },\n  wide: {\n    am: \"SA\",\n    pm: \"CH\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"tr\u01B0a\",\n    morning: \"s\u00E1ng\",\n    afternoon: \"chi\u1EC1u\",\n    evening: \"t\u1ED1i\",\n    night: \"\u0111\u00EAm\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"am\",\n    pm: \"pm\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"tr\",\n    morning: \"sg\",\n    afternoon: \"ch\",\n    evening: \"t\u1ED1i\",\n    night: \"\u0111\u00EAm\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"tr\u01B0a\",\n    morning: \"s\u00E1ng\",\n    afternoon: \"chi\u1EC1u\",\n    evening: \"t\u1ED1i\",\n    night: \"\u0111\u00EAm\",\n  },\n  wide: {\n    am: \"SA\",\n    pm: \"CH\",\n    midnight: \"n\u1EEDa \u0111\u00EAm\",\n    noon: \"gi\u1EEFa tr\u01B0a\",\n    morning: \"v\u00E0o bu\u1ED5i s\u00E1ng\",\n    afternoon: \"v\u00E0o bu\u1ED5i chi\u1EC1u\",\n    evening: \"v\u00E0o bu\u1ED5i t\u1ED1i\",\n    night: \"v\u00E0o ban \u0111\u00EAm\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  if (unit === \"quarter\") {\n    // many news outlets use \"qu\u00FD I\"...\n    switch (number) {\n      case 1:\n        return \"I\";\n      case 2:\n        return \"II\";\n      case 3:\n        return \"III\";\n      case 4:\n        return \"IV\";\n    }\n  } else if (unit === \"day\") {\n    // day of week in Vietnamese has ordinal number meaning,\n    // so we should use them, else it'll sound weird\n    switch (number) {\n      case 1:\n        return \"th\u1EE9 2\"; // meaning 2nd day but it's the first day of the week :D\n      case 2:\n        return \"th\u1EE9 3\"; // meaning 3rd day\n      case 3:\n        return \"th\u1EE9 4\"; // meaning 4th day and so on\n      case 4:\n        return \"th\u1EE9 5\";\n      case 5:\n        return \"th\u1EE9 6\";\n      case 6:\n        return \"th\u1EE9 7\";\n      case 7:\n        return \"ch\u1EE7 nh\u1EADt\"; // meaning Sunday, there's no 8th day :D\n    }\n  } else if (unit === \"week\") {\n    if (number === 1) {\n      return \"th\u1EE9 nh\u1EA5t\";\n    } else {\n      return \"th\u1EE9 \" + number;\n    }\n  } else if (unit === \"dayOfYear\") {\n    if (number === 1) {\n      return \"\u0111\u1EA7u ti\u00EAn\";\n    } else {\n      return \"th\u1EE9 \" + number;\n    }\n  }\n\n  // there are no different forms of ordinal numbers in Vietnamese\n  return String(number);\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingQuarterValues,\n    defaultFormattingWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(tcn|scn)/i,\n  abbreviated: /^(tr\u01B0\u1EDBc CN|sau CN)/i,\n  wide: /^(tr\u01B0\u1EDBc C\u00F4ng Nguy\u00EAn|sau C\u00F4ng Nguy\u00EAn)/i,\n};\nconst parseEraPatterns = {\n  any: [/^t/i, /^s/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^([1234]|i{1,3}v?)/i,\n  abbreviated: /^q([1234]|i{1,3}v?)/i,\n  wide: /^qu\u00FD ([1234]|i{1,3}v?)/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i],\n};\n\nconst matchMonthPatterns = {\n  // month number may contain leading 0, 'thg' prefix may have space, underscore or empty before number\n  // note the order of '1' since it is a sub-string of '10', so must be lower priority\n  narrow: /^(0?[2-9]|10|11|12|0?1)/i,\n  // note the order of 'thg 1' since it is sub-string of 'thg 10', so must be lower priority\n  abbreviated: /^thg[ _]?(0?[1-9](?!\\d)|10|11|12)/i,\n  // note the order of 'M\u01B0\u1EDDi' since it is sub-string of M\u01B0\u1EDDi M\u1ED9t, so must be lower priority\n  wide: /^th\u00E1ng ?(M\u1ED9t|Hai|Ba|T\u01B0|N\u0103m|S\u00E1u|B\u1EA3y|T\u00E1m|Ch\u00EDn|M\u01B0\u1EDDi|M\u01B0\u1EDDi ?M\u1ED9t|M\u01B0\u1EDDi ?Hai|0?[1-9](?!\\d)|10|11|12)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /0?1$/i,\n    /0?2/i,\n    /3/,\n    /4/,\n    /5/,\n    /6/,\n    /7/,\n    /8/,\n    /9/,\n    /10/,\n    /11/,\n    /12/,\n  ],\n\n  abbreviated: [\n    /^thg[ _]?0?1(?!\\d)/i,\n    /^thg[ _]?0?2/i,\n    /^thg[ _]?0?3/i,\n    /^thg[ _]?0?4/i,\n    /^thg[ _]?0?5/i,\n    /^thg[ _]?0?6/i,\n    /^thg[ _]?0?7/i,\n    /^thg[ _]?0?8/i,\n    /^thg[ _]?0?9/i,\n    /^thg[ _]?10/i,\n    /^thg[ _]?11/i,\n    /^thg[ _]?12/i,\n  ],\n\n  wide: [\n    /^th\u00E1ng ?(M\u1ED9t|0?1(?!\\d))/i,\n    /^th\u00E1ng ?(Hai|0?2)/i,\n    /^th\u00E1ng ?(Ba|0?3)/i,\n    /^th\u00E1ng ?(T\u01B0|0?4)/i,\n    /^th\u00E1ng ?(N\u0103m|0?5)/i,\n    /^th\u00E1ng ?(S\u00E1u|0?6)/i,\n    /^th\u00E1ng ?(B\u1EA3y|0?7)/i,\n    /^th\u00E1ng ?(T\u00E1m|0?8)/i,\n    /^th\u00E1ng ?(Ch\u00EDn|0?9)/i,\n    /^th\u00E1ng ?(M\u01B0\u1EDDi|10)/i,\n    /^th\u00E1ng ?(M\u01B0\u1EDDi ?M\u1ED9t|11)/i,\n    /^th\u00E1ng ?(M\u01B0\u1EDDi ?Hai|12)/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,\n  short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\n  abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\n  wide: /^(Ch\u1EE7 ?Nh\u1EADt|Ch\u00FAa ?Nh\u1EADt|th\u1EE9 ?Hai|th\u1EE9 ?Ba|th\u1EE9 ?T\u01B0|th\u1EE9 ?N\u0103m|th\u1EE9 ?S\u00E1u|th\u1EE9 ?B\u1EA3y)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\n  wide: [/(Ch\u1EE7|Ch\u00FAa) ?Nh\u1EADt/i, /Hai/i, /Ba/i, /T\u01B0/i, /N\u0103m/i, /S\u00E1u/i, /B\u1EA3y/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|n\u1EEDa \u0111\u00EAm|tr\u01B0a|(gi\u1EDD) (s\u00E1ng|chi\u1EC1u|t\u1ED1i|\u0111\u00EAm))/i,\n  abbreviated: /^(am|pm|n\u1EEDa \u0111\u00EAm|tr\u01B0a|(gi\u1EDD) (s\u00E1ng|chi\u1EC1u|t\u1ED1i|\u0111\u00EAm))/i,\n  wide: /^(ch[^i]*|sa|n\u1EEDa \u0111\u00EAm|tr\u01B0a|(gi\u1EDD) (s\u00E1ng|chi\u1EC1u|t\u1ED1i|\u0111\u00EAm))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^(a|sa)/i,\n    pm: /^(p|ch[^i]*)/i,\n    midnight: /n\u1EEDa \u0111\u00EAm/i,\n    noon: /tr\u01B0a/i,\n    morning: /s\u00E1ng/i,\n    afternoon: /chi\u1EC1u/i,\n    evening: /t\u1ED1i/i,\n    night: /^\u0111\u00EAm/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"wide\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./vi/_lib/formatDistance.js\";\nimport { formatLong } from \"./vi/_lib/formatLong.js\";\nimport { formatRelative } from \"./vi/_lib/formatRelative.js\";\nimport { localize } from \"./vi/_lib/localize.js\";\nimport { match } from \"./vi/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Vietnamese locale (Vietnam).\n * @language Vietnamese\n * @iso-639-2 vie\n * @author Thanh Tran [@trongthanh](https://github.com/trongthanh)\n * @author Leroy Hopson [@lihop](https://github.com/lihop)\n */\nexport const vi = {\n  code: \"vi\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1 /* First week of new year contains Jan 1st  */,\n  },\n};\n\n// Fallback for modularized imports:\nexport default vi;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u4E0D\u5230 1 \u79D2\",\n    other: \"\u4E0D\u5230 {{count}} \u79D2\",\n  },\n\n  xSeconds: {\n    one: \"1 \u79D2\",\n    other: \"{{count}} \u79D2\",\n  },\n\n  halfAMinute: \"\u534A\u5206\u949F\",\n\n  lessThanXMinutes: {\n    one: \"\u4E0D\u5230 1 \u5206\u949F\",\n    other: \"\u4E0D\u5230 {{count}} \u5206\u949F\",\n  },\n\n  xMinutes: {\n    one: \"1 \u5206\u949F\",\n    other: \"{{count}} \u5206\u949F\",\n  },\n\n  xHours: {\n    one: \"1 \u5C0F\u65F6\",\n    other: \"{{count}} \u5C0F\u65F6\",\n  },\n\n  aboutXHours: {\n    one: \"\u5927\u7EA6 1 \u5C0F\u65F6\",\n    other: \"\u5927\u7EA6 {{count}} \u5C0F\u65F6\",\n  },\n\n  xDays: {\n    one: \"1 \u5929\",\n    other: \"{{count}} \u5929\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u5927\u7EA6 1 \u4E2A\u661F\u671F\",\n    other: \"\u5927\u7EA6 {{count}} \u4E2A\u661F\u671F\",\n  },\n\n  xWeeks: {\n    one: \"1 \u4E2A\u661F\u671F\",\n    other: \"{{count}} \u4E2A\u661F\u671F\",\n  },\n\n  aboutXMonths: {\n    one: \"\u5927\u7EA6 1 \u4E2A\u6708\",\n    other: \"\u5927\u7EA6 {{count}} \u4E2A\u6708\",\n  },\n\n  xMonths: {\n    one: \"1 \u4E2A\u6708\",\n    other: \"{{count}} \u4E2A\u6708\",\n  },\n\n  aboutXYears: {\n    one: \"\u5927\u7EA6 1 \u5E74\",\n    other: \"\u5927\u7EA6 {{count}} \u5E74\",\n  },\n\n  xYears: {\n    one: \"1 \u5E74\",\n    other: \"{{count}} \u5E74\",\n  },\n\n  overXYears: {\n    one: \"\u8D85\u8FC7 1 \u5E74\",\n    other: \"\u8D85\u8FC7 {{count}} \u5E74\",\n  },\n\n  almostXYears: {\n    one: \"\u5C06\u8FD1 1 \u5E74\",\n    other: \"\u5C06\u8FD1 {{count}} \u5E74\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u5185\";\n    } else {\n      return result + \"\u524D\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y'\u5E74'M'\u6708'd'\u65E5' EEEE\",\n  long: \"y'\u5E74'M'\u6708'd'\u65E5'\",\n  medium: \"yyyy-MM-dd\",\n  short: \"yy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"zzzz a h:mm:ss\",\n  long: \"z a h:mm:ss\",\n  medium: \"a h:mm:ss\",\n  short: \"a h:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\n\nfunction checkWeek(date, baseDate, options) {\n  const baseFormat = \"eeee p\";\n\n  if (isSameWeek(date, baseDate, options)) {\n    return baseFormat; // in same week\n  } else if (date.getTime() > baseDate.getTime()) {\n    return \"'\u4E0B\u4E2A'\" + baseFormat; // in next week\n  }\n  return \"'\u4E0A\u4E2A'\" + baseFormat; // in last week\n}\n\nconst formatRelativeLocale = {\n  lastWeek: checkWeek, // days before yesterday, maybe in this week or last week\n  yesterday: \"'\u6628\u5929' p\",\n  today: \"'\u4ECA\u5929' p\",\n  tomorrow: \"'\u660E\u5929' p\",\n  nextWeek: checkWeek, // days after tomorrow, maybe in this week or next week\n  other: \"PP p\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u524D\", \"\u516C\u5143\"],\n  abbreviated: [\"\u524D\", \"\u516C\u5143\"],\n  wide: [\"\u516C\u5143\u524D\", \"\u516C\u5143\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u7B2C\u4E00\u5B63\", \"\u7B2C\u4E8C\u5B63\", \"\u7B2C\u4E09\u5B63\", \"\u7B2C\u56DB\u5B63\"],\n  wide: [\"\u7B2C\u4E00\u5B63\u5EA6\", \"\u7B2C\u4E8C\u5B63\u5EA6\", \"\u7B2C\u4E09\u5B63\u5EA6\", \"\u7B2C\u56DB\u5B63\u5EA6\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u4E00\",\n    \"\u4E8C\",\n    \"\u4E09\",\n    \"\u56DB\",\n    \"\u4E94\",\n    \"\u516D\",\n    \"\u4E03\",\n    \"\u516B\",\n    \"\u4E5D\",\n    \"\u5341\",\n    \"\u5341\u4E00\",\n    \"\u5341\u4E8C\",\n  ],\n\n  abbreviated: [\n    \"1\u6708\",\n    \"2\u6708\",\n    \"3\u6708\",\n    \"4\u6708\",\n    \"5\u6708\",\n    \"6\u6708\",\n    \"7\u6708\",\n    \"8\u6708\",\n    \"9\u6708\",\n    \"10\u6708\",\n    \"11\u6708\",\n    \"12\u6708\",\n  ],\n\n  wide: [\n    \"\u4E00\u6708\",\n    \"\u4E8C\u6708\",\n    \"\u4E09\u6708\",\n    \"\u56DB\u6708\",\n    \"\u4E94\u6708\",\n    \"\u516D\u6708\",\n    \"\u4E03\u6708\",\n    \"\u516B\u6708\",\n    \"\u4E5D\u6708\",\n    \"\u5341\u6708\",\n    \"\u5341\u4E00\u6708\",\n    \"\u5341\u4E8C\u6708\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  short: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  abbreviated: [\"\u5468\u65E5\", \"\u5468\u4E00\", \"\u5468\u4E8C\", \"\u5468\u4E09\", \"\u5468\u56DB\", \"\u5468\u4E94\", \"\u5468\u516D\"],\n\n  wide: [\"\u661F\u671F\u65E5\", \"\u661F\u671F\u4E00\", \"\u661F\u671F\u4E8C\", \"\u661F\u671F\u4E09\", \"\u661F\u671F\u56DB\", \"\u661F\u671F\u4E94\", \"\u661F\u671F\u516D\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u5348\",\n    morning: \"\u65E9\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u95F4\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u95F4\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u5348\",\n    morning: \"\u65E9\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u95F4\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u95F4\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  switch (options?.unit) {\n    case \"date\":\n      return number.toString() + \"\u65E5\";\n    case \"hour\":\n      return number.toString() + \"\u65F6\";\n    case \"minute\":\n      return number.toString() + \"\u5206\";\n    case \"second\":\n      return number.toString() + \"\u79D2\";\n    default:\n      return \"\u7B2C \" + number.toString();\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\u7B2C\\s*)?\\d+(\u65E5|\u65F6|\u5206|\u79D2)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u524D)/i,\n  abbreviated: /^(\u524D)/i,\n  wide: /^(\u516C\u5143\u524D|\u516C\u5143)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u524D)/i, /^(\u516C\u5143)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u523B/i,\n  wide: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u523B\u949F/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u4E00)/i, /(2|\u4E8C)/i, /(3|\u4E09)/i, /(4|\u56DB)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])/i,\n  abbreviated: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00]|\\d|1[12])\u6708/i,\n  wide: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])\u6708/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u4E00/i,\n    /^\u4E8C/i,\n    /^\u4E09/i,\n    /^\u56DB/i,\n    /^\u4E94/i,\n    /^\u516D/i,\n    /^\u4E03/i,\n    /^\u516B/i,\n    /^\u4E5D/i,\n    /^\u5341(?!(\u4E00|\u4E8C))/i,\n    /^\u5341\u4E00/i,\n    /^\u5341\u4E8C/i,\n  ],\n\n  any: [\n    /^\u4E00|1/i,\n    /^\u4E8C|2/i,\n    /^\u4E09|3/i,\n    /^\u56DB|4/i,\n    /^\u4E94|5/i,\n    /^\u516D|6/i,\n    /^\u4E03|7/i,\n    /^\u516B|8/i,\n    /^\u4E5D|9/i,\n    /^\u5341(?!(\u4E00|\u4E8C))|10/i,\n    /^\u5341\u4E00|11/i,\n    /^\u5341\u4E8C|12/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  short: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  abbreviated: /^\u5468[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  wide: /^\u661F\u671F[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n};\nconst parseDayPatterns = {\n  any: [/\u65E5/i, /\u4E00/i, /\u4E8C/i, /\u4E09/i, /\u56DB/i, /\u4E94/i, /\u516D/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u4E0A\u5348?|\u4E0B\u5348?|\u5348\u591C|[\u4E2D\u6B63]\u5348|\u65E9\u4E0A?|\u4E0B\u5348|\u665A\u4E0A?|\u51CC\u6668|)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u4E0A\u5348?/i,\n    pm: /^\u4E0B\u5348?/i,\n    midnight: /^\u5348\u591C/i,\n    noon: /^[\u4E2D\u6B63]\u5348/i,\n    morning: /^\u65E9\u4E0A/i,\n    afternoon: /^\u4E0B\u5348/i,\n    evening: /^\u665A\u4E0A?/i,\n    night: /^\u51CC\u6668/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./zh-CN/_lib/formatDistance.js\";\nimport { formatLong } from \"./zh-CN/_lib/formatLong.js\";\nimport { formatRelative } from \"./zh-CN/_lib/formatRelative.js\";\nimport { localize } from \"./zh-CN/_lib/localize.js\";\nimport { match } from \"./zh-CN/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Chinese Simplified locale.\n * @language Chinese Simplified\n * @iso-639-2 zho\n * @author Changyu Geng [@KingMario](https://github.com/KingMario)\n * @author Song Shuoyun [@fnlctrl](https://github.com/fnlctrl)\n * @author sabrinaM [@sabrinamiao](https://github.com/sabrinamiao)\n * @author Carney Wu [@cubicwork](https://github.com/cubicwork)\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\n */\nexport const zhCN = {\n  code: \"zh-CN\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default zhCN;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u5C11\u65BC 1 \u79D2\",\n    other: \"\u5C11\u65BC {{count}} \u79D2\",\n  },\n\n  xSeconds: {\n    one: \"1 \u79D2\",\n    other: \"{{count}} \u79D2\",\n  },\n\n  halfAMinute: \"\u534A\u5206\u9418\",\n\n  lessThanXMinutes: {\n    one: \"\u5C11\u65BC 1 \u5206\u9418\",\n    other: \"\u5C11\u65BC {{count}} \u5206\u9418\",\n  },\n\n  xMinutes: {\n    one: \"1 \u5206\u9418\",\n    other: \"{{count}} \u5206\u9418\",\n  },\n\n  xHours: {\n    one: \"1 \u5C0F\u6642\",\n    other: \"{{count}} \u5C0F\u6642\",\n  },\n\n  aboutXHours: {\n    one: \"\u5927\u7D04 1 \u5C0F\u6642\",\n    other: \"\u5927\u7D04 {{count}} \u5C0F\u6642\",\n  },\n\n  xDays: {\n    one: \"1 \u5929\",\n    other: \"{{count}} \u5929\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u5927\u7D04 1 \u500B\u661F\u671F\",\n    other: \"\u5927\u7D04 {{count}} \u500B\u661F\u671F\",\n  },\n\n  xWeeks: {\n    one: \"1 \u500B\u661F\u671F\",\n    other: \"{{count}} \u500B\u661F\u671F\",\n  },\n\n  aboutXMonths: {\n    one: \"\u5927\u7D04 1 \u500B\u6708\",\n    other: \"\u5927\u7D04 {{count}} \u500B\u6708\",\n  },\n\n  xMonths: {\n    one: \"1 \u500B\u6708\",\n    other: \"{{count}} \u500B\u6708\",\n  },\n\n  aboutXYears: {\n    one: \"\u5927\u7D04 1 \u5E74\",\n    other: \"\u5927\u7D04 {{count}} \u5E74\",\n  },\n\n  xYears: {\n    one: \"1 \u5E74\",\n    other: \"{{count}} \u5E74\",\n  },\n\n  overXYears: {\n    one: \"\u8D85\u904E 1 \u5E74\",\n    other: \"\u8D85\u904E {{count}} \u5E74\",\n  },\n\n  almostXYears: {\n    one: \"\u5C07\u8FD1 1 \u5E74\",\n    other: \"\u5C07\u8FD1 {{count}} \u5E74\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u5167\";\n    } else {\n      return result + \"\u524D\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y'\u5E74'M'\u6708'd'\u65E5' EEEE\",\n  long: \"y'\u5E74'M'\u6708'd'\u65E5'\",\n  medium: \"yyyy-MM-dd\",\n  short: \"yy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"zzzz a h:mm:ss\",\n  long: \"z a h:mm:ss\",\n  medium: \"a h:mm:ss\",\n  short: \"a h:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u4E0A\u500B'eeee p\",\n  yesterday: \"'\u6628\u5929' p\",\n  today: \"'\u4ECA\u5929' p\",\n  tomorrow: \"'\u660E\u5929' p\",\n  nextWeek: \"'\u4E0B\u500B'eeee p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u524D\", \"\u516C\u5143\"],\n  abbreviated: [\"\u524D\", \"\u516C\u5143\"],\n  wide: [\"\u516C\u5143\u524D\", \"\u516C\u5143\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u7B2C\u4E00\u5B63\", \"\u7B2C\u4E8C\u5B63\", \"\u7B2C\u4E09\u5B63\", \"\u7B2C\u56DB\u5B63\"],\n  wide: [\"\u7B2C\u4E00\u5B63\u5EA6\", \"\u7B2C\u4E8C\u5B63\u5EA6\", \"\u7B2C\u4E09\u5B63\u5EA6\", \"\u7B2C\u56DB\u5B63\u5EA6\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u4E00\",\n    \"\u4E8C\",\n    \"\u4E09\",\n    \"\u56DB\",\n    \"\u4E94\",\n    \"\u516D\",\n    \"\u4E03\",\n    \"\u516B\",\n    \"\u4E5D\",\n    \"\u5341\",\n    \"\u5341\u4E00\",\n    \"\u5341\u4E8C\",\n  ],\n\n  abbreviated: [\n    \"1\u6708\",\n    \"2\u6708\",\n    \"3\u6708\",\n    \"4\u6708\",\n    \"5\u6708\",\n    \"6\u6708\",\n    \"7\u6708\",\n    \"8\u6708\",\n    \"9\u6708\",\n    \"10\u6708\",\n    \"11\u6708\",\n    \"12\u6708\",\n  ],\n\n  wide: [\n    \"\u4E00\u6708\",\n    \"\u4E8C\u6708\",\n    \"\u4E09\u6708\",\n    \"\u56DB\u6708\",\n    \"\u4E94\u6708\",\n    \"\u516D\u6708\",\n    \"\u4E03\u6708\",\n    \"\u516B\u6708\",\n    \"\u4E5D\u6708\",\n    \"\u5341\u6708\",\n    \"\u5341\u4E00\u6708\",\n    \"\u5341\u4E8C\u6708\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  short: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  abbreviated: [\"\u9031\u65E5\", \"\u9031\u4E00\", \"\u9031\u4E8C\", \"\u9031\u4E09\", \"\u9031\u56DB\", \"\u9031\u4E94\", \"\u9031\u516D\"],\n\n  wide: [\"\u661F\u671F\u65E5\", \"\u661F\u671F\u4E00\", \"\u661F\u671F\u4E8C\", \"\u661F\u671F\u4E09\", \"\u661F\u671F\u56DB\", \"\u661F\u671F\u4E94\", \"\u661F\u671F\u516D\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u664C\",\n    morning: \"\u65E9\",\n    afternoon: \"\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u4E0A\u5348\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u665A\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u4E0A\u5348\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u665A\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u664C\",\n    morning: \"\u65E9\",\n    afternoon: \"\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u4E0A\u5348\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u665A\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u5348\u591C\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u4E0A\u5348\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u665A\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  switch (options?.unit) {\n    case \"date\":\n      return number + \"\u65E5\";\n    case \"hour\":\n      return number + \"\u6642\";\n    case \"minute\":\n      return number + \"\u5206\";\n    case \"second\":\n      return number + \"\u79D2\";\n    default:\n      return \"\u7B2C \" + number;\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\u7B2C\\s*)?\\d+(\u65E5|\u6642|\u5206|\u79D2)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u524D)/i,\n  abbreviated: /^(\u524D)/i,\n  wide: /^(\u516C\u5143\u524D|\u516C\u5143)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u524D)/i, /^(\u516C\u5143)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u5B63/i,\n  wide: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u5B63\u5EA6/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u4E00)/i, /(2|\u4E8C)/i, /(3|\u4E09)/i, /(4|\u56DB)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])/i,\n  abbreviated: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00]|\\d|1[12])\u6708/i,\n  wide: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])\u6708/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u4E00/i,\n    /^\u4E8C/i,\n    /^\u4E09/i,\n    /^\u56DB/i,\n    /^\u4E94/i,\n    /^\u516D/i,\n    /^\u4E03/i,\n    /^\u516B/i,\n    /^\u4E5D/i,\n    /^\u5341(?!(\u4E00|\u4E8C))/i,\n    /^\u5341\u4E00/i,\n    /^\u5341\u4E8C/i,\n  ],\n\n  any: [\n    /^\u4E00|1/i,\n    /^\u4E8C|2/i,\n    /^\u4E09|3/i,\n    /^\u56DB|4/i,\n    /^\u4E94|5/i,\n    /^\u516D|6/i,\n    /^\u4E03|7/i,\n    /^\u516B|8/i,\n    /^\u4E5D|9/i,\n    /^\u5341(?!(\u4E00|\u4E8C))|10/i,\n    /^\u5341\u4E00|11/i,\n    /^\u5341\u4E8C|12/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  short: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  abbreviated: /^\u9031[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  wide: /^\u661F\u671F[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n};\nconst parseDayPatterns = {\n  any: [/\u65E5/i, /\u4E00/i, /\u4E8C/i, /\u4E09/i, /\u56DB/i, /\u4E94/i, /\u516D/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u4E0A\u5348?|\u4E0B\u5348?|\u5348\u591C|[\u4E2D\u6B63]\u5348|\u65E9\u4E0A?|\u4E0B\u5348|\u665A\u4E0A?|\u51CC\u6668)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u4E0A\u5348?/i,\n    pm: /^\u4E0B\u5348?/i,\n    midnight: /^\u5348\u591C/i,\n    noon: /^[\u4E2D\u6B63]\u5348/i,\n    morning: /^\u65E9\u4E0A/i,\n    afternoon: /^\u4E0B\u5348/i,\n    evening: /^\u665A\u4E0A?/i,\n    night: /^\u51CC\u6668/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./zh-HK/_lib/formatDistance.js\";\nimport { formatLong } from \"./zh-HK/_lib/formatLong.js\";\nimport { formatRelative } from \"./zh-HK/_lib/formatRelative.js\";\nimport { localize } from \"./zh-HK/_lib/localize.js\";\nimport { match } from \"./zh-HK/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Chinese Traditional locale.\n * @language Chinese Traditional\n * @iso-639-2 zho\n * @author Gary Ip [@gaplo](https://github.com/gaplo)\n */\nexport const zhHK = {\n  code: \"zh-HK\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default zhHK;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"\u5C11\u65BC 1 \u79D2\",\n    other: \"\u5C11\u65BC {{count}} \u79D2\",\n  },\n\n  xSeconds: {\n    one: \"1 \u79D2\",\n    other: \"{{count}} \u79D2\",\n  },\n\n  halfAMinute: \"\u534A\u5206\u9418\",\n\n  lessThanXMinutes: {\n    one: \"\u5C11\u65BC 1 \u5206\u9418\",\n    other: \"\u5C11\u65BC {{count}} \u5206\u9418\",\n  },\n\n  xMinutes: {\n    one: \"1 \u5206\u9418\",\n    other: \"{{count}} \u5206\u9418\",\n  },\n\n  xHours: {\n    one: \"1 \u5C0F\u6642\",\n    other: \"{{count}} \u5C0F\u6642\",\n  },\n\n  aboutXHours: {\n    one: \"\u5927\u7D04 1 \u5C0F\u6642\",\n    other: \"\u5927\u7D04 {{count}} \u5C0F\u6642\",\n  },\n\n  xDays: {\n    one: \"1 \u5929\",\n    other: \"{{count}} \u5929\",\n  },\n\n  aboutXWeeks: {\n    one: \"\u5927\u7D04 1 \u500B\u661F\u671F\",\n    other: \"\u5927\u7D04 {{count}} \u500B\u661F\u671F\",\n  },\n\n  xWeeks: {\n    one: \"1 \u500B\u661F\u671F\",\n    other: \"{{count}} \u500B\u661F\u671F\",\n  },\n\n  aboutXMonths: {\n    one: \"\u5927\u7D04 1 \u500B\u6708\",\n    other: \"\u5927\u7D04 {{count}} \u500B\u6708\",\n  },\n\n  xMonths: {\n    one: \"1 \u500B\u6708\",\n    other: \"{{count}} \u500B\u6708\",\n  },\n\n  aboutXYears: {\n    one: \"\u5927\u7D04 1 \u5E74\",\n    other: \"\u5927\u7D04 {{count}} \u5E74\",\n  },\n\n  xYears: {\n    one: \"1 \u5E74\",\n    other: \"{{count}} \u5E74\",\n  },\n\n  overXYears: {\n    one: \"\u8D85\u904E 1 \u5E74\",\n    other: \"\u8D85\u904E {{count}} \u5E74\",\n  },\n\n  almostXYears: {\n    one: \"\u5C07\u8FD1 1 \u5E74\",\n    other: \"\u5C07\u8FD1 {{count}} \u5E74\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"\u5167\";\n    } else {\n      return result + \"\u524D\";\n    }\n  }\n\n  return result;\n};\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y'\u5E74'M'\u6708'd'\u65E5' EEEE\",\n  long: \"y'\u5E74'M'\u6708'd'\u65E5'\",\n  medium: \"yyyy-MM-dd\",\n  short: \"yy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"zzzz a h:mm:ss\",\n  long: \"z a h:mm:ss\",\n  medium: \"a h:mm:ss\",\n  short: \"a h:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'\u4E0A\u500B'eeee p\",\n  yesterday: \"'\u6628\u5929' p\",\n  today: \"'\u4ECA\u5929' p\",\n  tomorrow: \"'\u660E\u5929' p\",\n  nextWeek: \"'\u4E0B\u500B'eeee p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"\u524D\", \"\u516C\u5143\"],\n  abbreviated: [\"\u524D\", \"\u516C\u5143\"],\n  wide: [\"\u516C\u5143\u524D\", \"\u516C\u5143\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"\u7B2C\u4E00\u523B\", \"\u7B2C\u4E8C\u523B\", \"\u7B2C\u4E09\u523B\", \"\u7B2C\u56DB\u523B\"],\n  wide: [\"\u7B2C\u4E00\u523B\u9418\", \"\u7B2C\u4E8C\u523B\u9418\", \"\u7B2C\u4E09\u523B\u9418\", \"\u7B2C\u56DB\u523B\u9418\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"\u4E00\",\n    \"\u4E8C\",\n    \"\u4E09\",\n    \"\u56DB\",\n    \"\u4E94\",\n    \"\u516D\",\n    \"\u4E03\",\n    \"\u516B\",\n    \"\u4E5D\",\n    \"\u5341\",\n    \"\u5341\u4E00\",\n    \"\u5341\u4E8C\",\n  ],\n\n  abbreviated: [\n    \"1\u6708\",\n    \"2\u6708\",\n    \"3\u6708\",\n    \"4\u6708\",\n    \"5\u6708\",\n    \"6\u6708\",\n    \"7\u6708\",\n    \"8\u6708\",\n    \"9\u6708\",\n    \"10\u6708\",\n    \"11\u6708\",\n    \"12\u6708\",\n  ],\n\n  wide: [\n    \"\u4E00\u6708\",\n    \"\u4E8C\u6708\",\n    \"\u4E09\u6708\",\n    \"\u56DB\u6708\",\n    \"\u4E94\u6708\",\n    \"\u516D\u6708\",\n    \"\u4E03\u6708\",\n    \"\u516B\u6708\",\n    \"\u4E5D\u6708\",\n    \"\u5341\u6708\",\n    \"\u5341\u4E00\u6708\",\n    \"\u5341\u4E8C\u6708\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  short: [\"\u65E5\", \"\u4E00\", \"\u4E8C\", \"\u4E09\", \"\u56DB\", \"\u4E94\", \"\u516D\"],\n  abbreviated: [\"\u9031\u65E5\", \"\u9031\u4E00\", \"\u9031\u4E8C\", \"\u9031\u4E09\", \"\u9031\u56DB\", \"\u9031\u4E94\", \"\u9031\u516D\"],\n\n  wide: [\"\u661F\u671F\u65E5\", \"\u661F\u671F\u4E00\", \"\u661F\u671F\u4E8C\", \"\u661F\u671F\u4E09\", \"\u661F\u671F\u56DB\", \"\u661F\u671F\u4E94\", \"\u661F\u671F\u516D\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u5348\",\n    morning: \"\u65E9\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u9593\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u9593\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"\u4E0A\",\n    pm: \"\u4E0B\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u5348\",\n    morning: \"\u65E9\",\n    afternoon: \"\u4E0B\u5348\",\n    evening: \"\u665A\",\n    night: \"\u591C\",\n  },\n  abbreviated: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u9593\",\n  },\n  wide: {\n    am: \"\u4E0A\u5348\",\n    pm: \"\u4E0B\u5348\",\n    midnight: \"\u51CC\u6668\",\n    noon: \"\u4E2D\u5348\",\n    morning: \"\u65E9\u6668\",\n    afternoon: \"\u4E2D\u5348\",\n    evening: \"\u665A\u4E0A\",\n    night: \"\u591C\u9593\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  switch (options?.unit) {\n    case \"date\":\n      return number + \"\u65E5\";\n    case \"hour\":\n      return number + \"\u6642\";\n    case \"minute\":\n      return number + \"\u5206\";\n    case \"second\":\n      return number + \"\u79D2\";\n    default:\n      return \"\u7B2C \" + number;\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\u7B2C\\s*)?\\d+(\u65E5|\u6642|\u5206|\u79D2)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(\u524D)/i,\n  abbreviated: /^(\u524D)/i,\n  wide: /^(\u516C\u5143\u524D|\u516C\u5143)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(\u524D)/i, /^(\u516C\u5143)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u523B/i,\n  wide: /^\u7B2C[\u4E00\u4E8C\u4E09\u56DB]\u523B\u9418/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|\u4E00)/i, /(2|\u4E8C)/i, /(3|\u4E09)/i, /(4|\u56DB)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])/i,\n  abbreviated: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00]|\\d|1[12])\u6708/i,\n  wide: /^(\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341[\u4E8C\u4E00])\u6708/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^\u4E00/i,\n    /^\u4E8C/i,\n    /^\u4E09/i,\n    /^\u56DB/i,\n    /^\u4E94/i,\n    /^\u516D/i,\n    /^\u4E03/i,\n    /^\u516B/i,\n    /^\u4E5D/i,\n    /^\u5341(?!(\u4E00|\u4E8C))/i,\n    /^\u5341\u4E00/i,\n    /^\u5341\u4E8C/i,\n  ],\n\n  any: [\n    /^\u4E00|1/i,\n    /^\u4E8C|2/i,\n    /^\u4E09|3/i,\n    /^\u56DB|4/i,\n    /^\u4E94|5/i,\n    /^\u516D|6/i,\n    /^\u4E03|7/i,\n    /^\u516B|8/i,\n    /^\u4E5D|9/i,\n    /^\u5341(?!(\u4E00|\u4E8C))|10/i,\n    /^\u5341\u4E00|11/i,\n    /^\u5341\u4E8C|12/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  short: /^[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  abbreviated: /^\u9031[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n  wide: /^\u661F\u671F[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u65E5]/i,\n};\nconst parseDayPatterns = {\n  any: [/\u65E5/i, /\u4E00/i, /\u4E8C/i, /\u4E09/i, /\u56DB/i, /\u4E94/i, /\u516D/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(\u4E0A\u5348?|\u4E0B\u5348?|\u5348\u591C|[\u4E2D\u6B63]\u5348|\u65E9\u4E0A?|\u4E0B\u5348|\u665A\u4E0A?|\u51CC\u6668)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^\u4E0A\u5348?/i,\n    pm: /^\u4E0B\u5348?/i,\n    midnight: /^\u5348\u591C/i,\n    noon: /^[\u4E2D\u6B63]\u5348/i,\n    morning: /^\u65E9\u4E0A/i,\n    afternoon: /^\u4E0B\u5348/i,\n    evening: /^\u665A\u4E0A?/i,\n    night: /^\u51CC\u6668/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./zh-TW/_lib/formatDistance.js\";\nimport { formatLong } from \"./zh-TW/_lib/formatLong.js\";\nimport { formatRelative } from \"./zh-TW/_lib/formatRelative.js\";\nimport { localize } from \"./zh-TW/_lib/localize.js\";\nimport { match } from \"./zh-TW/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Chinese Traditional locale.\n * @language Chinese Traditional\n * @iso-639-2 zho\n * @author tonypai [@tpai](https://github.com/tpai)\n * @author Jack Hsu [@jackhsu978](https://github.com/jackhsu978)\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\n */\nexport const zhTW = {\n  code: \"zh-TW\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default zhTW;\n"],
  "mappings": "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",
  "names": []
}
