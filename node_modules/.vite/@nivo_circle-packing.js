import {
  hierarchy,
  pack_default
} from "./chunk-RLBK3QIQ.js";
import {
  require_cloneDeep
} from "./chunk-VACFL5DY.js";
import {
  Xe,
  pr
} from "./chunk-LIF42OKE.js";
import {
  require_sortBy
} from "./chunk-6JM3GFV6.js";
import "./chunk-DZU3R4ZD.js";
import "./chunk-NIFAYVBJ.js";
import {
  In,
  It,
  Mn,
  Ot,
  Sn,
  St,
  Ur,
  Wn,
  gn,
  k,
  require_jsx_runtime,
  w,
  wt,
  zt
} from "./chunk-CIEVK6OE.js";
import {
  AnimatedObject,
  FluidValue,
  addFluidObserver,
  callFluidObservers,
  colors2,
  createHost,
  createStringInterpolator2,
  each,
  eachProp,
  getFluidValue,
  globals_exports,
  hasFluidValue,
  is,
  removeFluidObserver,
  to,
  toArray,
  useTransition
} from "./chunk-UROOLUEL.js";
import "./chunk-JMENM4FH.js";
import "./chunk-B7PIYN4Z.js";
import "./chunk-V2CXUUTH.js";
import {
  require_react_dom
} from "./chunk-2J4CPGJC.js";
import "./chunk-SEBMSOEZ.js";
import {
  require_react
} from "./chunk-3HGGCXHU.js";
import {
  __objRest,
  __toModule
} from "./chunk-AXQKKFRM.js";

// node_modules/@nivo/circle-packing/dist/nivo-circle-packing.es.js
var e = __toModule(require_react());
var import_react = __toModule(require_react());
var import_cloneDeep = __toModule(require_cloneDeep());
var import_sortBy = __toModule(require_sortBy());
var import_jsx_runtime = __toModule(require_jsx_runtime());

// node_modules/@nivo/circle-packing/node_modules/@react-spring/web/dist/react-spring_web.legacy-esm.js
var import_react_dom = __toModule(require_react_dom());
var isCustomPropRE = /^--/;
function dangerousStyleValue(name, value) {
  if (value == null || typeof value === "boolean" || value === "")
    return "";
  if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
    return value + "px";
  return ("" + value).trim();
}
var attributeCache = {};
function applyAnimatedValues(instance, props) {
  if (!instance.nodeType || !instance.setAttribute) {
    return false;
  }
  const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
  const _a = props, {
    className,
    style,
    children,
    scrollTop,
    scrollLeft,
    viewBox
  } = _a, attributes = __objRest(_a, [
    "className",
    "style",
    "children",
    "scrollTop",
    "scrollLeft",
    "viewBox"
  ]);
  const values = Object.values(attributes);
  const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n2) => "-" + n2.toLowerCase())));
  if (children !== void 0) {
    instance.textContent = children;
  }
  for (const name in style) {
    if (style.hasOwnProperty(name)) {
      const value = dangerousStyleValue(name, style[name]);
      if (isCustomPropRE.test(name)) {
        instance.style.setProperty(name, value);
      } else {
        instance.style[name] = value;
      }
    }
  }
  names.forEach((name, i2) => {
    instance.setAttribute(name, values[i2]);
  });
  if (className !== void 0) {
    instance.className = className;
  }
  if (scrollTop !== void 0) {
    instance.scrollTop = scrollTop;
  }
  if (scrollLeft !== void 0) {
    instance.scrollLeft = scrollLeft;
  }
  if (viewBox !== void 0) {
    instance.setAttribute("viewBox", viewBox);
  }
}
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);
var prefixes = ["Webkit", "Ms", "Moz", "O"];
isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);
  return acc;
}, isUnitlessNumber);
var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
var pxTransforms = /^(translate)/;
var degTransforms = /^(rotate|skew)/;
var addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;
var isValueIdentity = (value, id) => is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;
var AnimatedStyle = class extends AnimatedObject {
  constructor(_a) {
    var _b = _a, { x, y, z: z2 } = _b, style = __objRest(_b, ["x", "y", "z"]);
    const inputs = [];
    const transforms = [];
    if (x || y || z2) {
      inputs.push([x || 0, y || 0, z2 || 0]);
      transforms.push((xyz) => [
        `translate3d(${xyz.map((v) => addUnit(v, "px")).join(",")})`,
        isValueIdentity(xyz, 0)
      ]);
    }
    eachProp(style, (value, key) => {
      if (key === "transform") {
        inputs.push([value || ""]);
        transforms.push((transform) => [transform, transform === ""]);
      } else if (domTransforms.test(key)) {
        delete style[key];
        if (is.und(value))
          return;
        const unit = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
        inputs.push(toArray(value));
        transforms.push(key === "rotate3d" ? ([x2, y2, z22, deg]) => [
          `rotate3d(${x2},${y2},${z22},${addUnit(deg, unit)})`,
          isValueIdentity(deg, 0)
        ] : (input) => [
          `${key}(${input.map((v) => addUnit(v, unit)).join(",")})`,
          isValueIdentity(input, key.startsWith("scale") ? 1 : 0)
        ]);
      }
    });
    if (inputs.length) {
      style.transform = new FluidTransform(inputs, transforms);
    }
    super(style);
  }
};
var FluidTransform = class extends FluidValue {
  constructor(inputs, transforms) {
    super();
    this.inputs = inputs;
    this.transforms = transforms;
    this._value = null;
  }
  get() {
    return this._value || (this._value = this._get());
  }
  _get() {
    let transform = "";
    let identity = true;
    each(this.inputs, (input, i2) => {
      const arg1 = getFluidValue(input[0]);
      const [t2, id] = this.transforms[i2](is.arr(arg1) ? arg1 : input.map(getFluidValue));
      transform += " " + t2;
      identity = identity && id;
    });
    return identity ? "none" : transform;
  }
  observerAdded(count) {
    if (count == 1)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && addFluidObserver(value, this)));
  }
  observerRemoved(count) {
    if (count == 0)
      each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && removeFluidObserver(value, this)));
  }
  eventObserved(event) {
    if (event.type == "change") {
      this._value = null;
    }
    callFluidObservers(this, event);
  }
};
var primitives = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
globals_exports.assign({
  batchedUpdates: import_react_dom.unstable_batchedUpdates,
  createStringInterpolator: createStringInterpolator2,
  colors: colors2
});
var host = createHost(primitives, {
  applyAnimatedValues,
  createAnimatedStyle: (style) => new AnimatedStyle(style),
  getComponentProps: (_a) => {
    var _b = _a, { scrollTop, scrollLeft } = _b, props = __objRest(_b, ["scrollTop", "scrollLeft"]);
    return props;
  }
});
var animated = host.animated;

// node_modules/@nivo/circle-packing/dist/nivo-circle-packing.es.js
function O() {
  return O = Object.assign ? Object.assign.bind() : function(e2) {
    for (var o2 = 1; o2 < arguments.length; o2++) {
      var r2 = arguments[o2];
      for (var i2 in r2)
        Object.prototype.hasOwnProperty.call(r2, i2) && (e2[i2] = r2[i2]);
    }
    return e2;
  }, O.apply(this, arguments);
}
function P(e2, o2) {
  if (e2 == null)
    return {};
  var r2, i2, n2 = {}, t2 = Object.keys(e2);
  for (i2 = 0; i2 < t2.length; i2++)
    r2 = t2[i2], o2.indexOf(r2) >= 0 || (n2[r2] = e2[r2]);
  return n2;
}
var B;
var S = function(e2) {
  var o2, r2 = e2.data, i2 = e2.id, n2 = e2.value, t2 = e2.valueFormat, l2 = e2.width, c = e2.height, s = e2.padding, v = e2.leavesOnly, f = e2.colors, h = e2.colorBy, p = e2.inheritColorFromParent, m = e2.childColor, b = Wn(i2), w2 = Wn(n2), I = Ot(t2), E2 = pr(f, h), F2 = zt(), W = Xe(m, F2), L = (0, import_cloneDeep.default)(r2), R = hierarchy(L).sum(w2), O2 = pack_default().size([l2, c]).padding(s)(R), P2 = v ? O2.leaves() : O2.descendants(), B2 = (0, import_sortBy.default)(P2, "depth"), S2 = (o2 = R.value) != null ? o2 : 0, T2 = B2.reduce(function(e3, o3) {
    var r3, i3 = b(o3.data), n3 = o3.value, l3 = 100 * n3 / S2, a = o3.ancestors().map(function(e4) {
      return b(e4.data);
    });
    o3.parent && (r3 = e3.find(function(e4) {
      return e4.id === b(o3.parent.data);
    }));
    var d = { id: i3, path: a, value: n3, percentage: l3, formattedValue: t2 ? I(n3) : l3.toFixed(2) + "%", x: o3.x, y: o3.y, radius: o3.r, color: "", data: o3.data, depth: o3.depth, height: o3.height };
    return p && r3 && d.depth > 1 ? d.color = W(r3) : d.color = E2(d), [].concat(e3, [d]);
  }, []);
  return T2;
};
var T = function(e2, r2, i2, n2) {
  return (0, import_react.useMemo)(function() {
    if (!r2)
      return e2;
    var o2 = e2.find(function(e3) {
      return e3.id === r2;
    });
    if (!o2)
      return e2;
    var t2 = Math.min(i2, n2) / (2 * o2.radius), l2 = i2 / 2 - o2.x * t2, a = n2 / 2 - o2.y * t2;
    return e2.map(function(e3) {
      return O({}, e3, { x: e3.x * t2 + l2, y: e3.y * t2 + a, radius: e3.radius * t2 });
    });
  }, [e2, r2, i2, n2]);
};
var j = function(e2) {
  var r2 = e2.nodes, i2 = e2.label, n2 = e2.filter, t2 = e2.skipRadius, l2 = e2.textColor, d = Wn(i2), c = zt(), s = Xe(l2, c), v = (0, import_react.useMemo)(function() {
    return r2.filter(function(e3) {
      return e3.radius >= t2;
    }).map(function(e3) {
      return { label: d(e3), textColor: s(e3), node: e3 };
    });
  }, [r2, t2, d, s]);
  return (0, import_react.useMemo)(function() {
    return n2 ? v.filter(n2) : v;
  }, [v, n2]);
};
var z = function(e2, r2) {
  var i2 = r2.onMouseEnter, n2 = r2.onMouseMove, t2 = r2.onMouseLeave, l2 = r2.onClick;
  return (0, import_react.useMemo)(function() {
    return { onMouseEnter: i2 ? function(o2) {
      i2(e2, o2);
    } : void 0, onMouseMove: n2 ? function(o2) {
      n2(e2, o2);
    } : void 0, onMouseLeave: t2 ? function(o2) {
      t2(e2, o2);
    } : void 0, onClick: l2 ? function(o2) {
      l2(e2, o2);
    } : void 0 };
  }, [e2, i2, n2, t2, l2]);
};
var H = function(e2) {
  var i2 = e2.nodes, n2 = e2.canvasEl, t2 = e2.margin, l2 = (0, import_react.useMemo)(function() {
    return (0, import_sortBy.default)(i2, "height");
  }, [i2]);
  return (0, import_react.useCallback)(function(e3) {
    if (!n2.current)
      return null;
    var o2 = Sn(n2.current, e3), r2 = o2[0], i3 = o2[1];
    return l2.find(function(e4) {
      return Mn(e4.x, e4.y, r2 - t2.left, i3 - t2.top) <= e4.radius;
    });
  }, [n2, t2, l2]);
};
var A = function(e2) {
  var r2 = e2.nodes;
  return (0, import_react.useMemo)(function() {
    return { nodes: r2 };
  }, [r2]);
};
var V = { id: "id", value: "value", padding: 0, leavesOnly: false, layers: ["circles", "labels"], colors: { scheme: "nivo" }, colorBy: "depth", inheritColorFromParent: false, childColor: { from: "color", modifiers: [["darker", 0.3]] }, borderWidth: 0, borderColor: { from: "color", modifiers: [["darker", 0.3]] }, defs: [], fill: [], enableLabels: false, label: "id", labelTextColor: { from: "color", modifiers: [["darker", 1.6]] }, labelsSkipRadius: 8, isInteractive: true, tooltip: function(e2) {
  var o2 = e2.id, r2 = e2.formattedValue, i2 = e2.color;
  return (0, import_jsx_runtime.jsx)(w, { id: o2, value: r2, enableChip: true, color: i2 });
}, animate: true, motionConfig: "gentle", role: "img", pixelRatio: typeof window != "undefined" && (B = window.devicePixelRatio) != null ? B : 1 };
var D = function(e2) {
  return to([e2], function(e3) {
    return Math.max(0, e3);
  });
};
var K = function(r2) {
  var n2 = r2.nodes, t2 = r2.borderWidth, l2 = r2.borderColor, a = r2.component, d = r2.isInteractive, c = r2.onMouseEnter, s = r2.onMouseMove, f = r2.onMouseLeave, h = r2.onClick, p = r2.tooltip, m = k(), b = m.showTooltipFromEvent, y = m.hideTooltip, C = (0, import_react.useMemo)(function() {
    if (d)
      return function(e2, o2) {
        b((0, import_react.createElement)(p, e2), o2), c == null || c(e2, o2);
      };
  }, [d, b, p, c]), g2 = (0, import_react.useMemo)(function() {
    if (d)
      return function(e2, o2) {
        b((0, import_react.createElement)(p, e2), o2), s == null || s(e2, o2);
      };
  }, [d, b, p, s]), M2 = (0, import_react.useMemo)(function() {
    if (d)
      return function(e2, o2) {
        y(), f == null || f(e2, o2);
      };
  }, [d, y, f]), x = (0, import_react.useMemo)(function() {
    if (d)
      return function(e2, o2) {
        h == null || h(e2, o2);
      };
  }, [d, h]), w2 = Ur(), L = w2.animate, R = w2.config, P2 = zt(), B2 = Xe(l2, P2), S2 = (0, import_react.useMemo)(function() {
    return function(e2) {
      return { enter: function(o2) {
        return { x: o2.x, y: o2.y, radius: 0, color: o2.color, borderColor: e2(o2), opacity: 0 };
      }, update: function(o2) {
        return { x: o2.x, y: o2.y, radius: o2.radius, color: o2.color, borderColor: e2(o2), opacity: 1 };
      }, leave: function(o2) {
        return { x: o2.x, y: o2.y, radius: 0, color: o2.color, borderColor: e2(o2), opacity: 0 };
      } };
    }(B2);
  }, [B2]), T2 = useTransition(n2, { keys: function(e2) {
    return e2.id;
  }, initial: S2.update, from: S2.enter, enter: S2.update, update: S2.update, leave: S2.leave, config: R, immediate: !L });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: T2(function(o2, r3) {
    return e.createElement(a, { key: r3.id, node: r3, style: O({}, o2, { radius: D(o2.radius), borderWidth: t2 }), onMouseEnter: C, onMouseMove: g2, onMouseLeave: M2, onClick: x });
  }) });
};
var q = function(e2) {
  var o2 = e2.node, r2 = e2.style, i2 = e2.onMouseEnter, n2 = e2.onMouseMove, t2 = e2.onMouseLeave, l2 = e2.onClick, a = z(o2, { onMouseEnter: i2, onMouseMove: n2, onMouseLeave: t2, onClick: l2 });
  return (0, import_jsx_runtime.jsx)(animated.circle, { cx: r2.x, cy: r2.y, r: r2.radius, fill: o2.fill || r2.color, stroke: r2.borderColor, strokeWidth: r2.borderWidth, opacity: r2.opacity, onMouseEnter: a.onMouseEnter, onMouseMove: a.onMouseMove, onMouseLeave: a.onMouseLeave, onClick: a.onClick }, o2.id);
};
var G = function(e2) {
  var r2 = e2.nodes, n2 = e2.label, t2 = e2.filter, l2 = e2.skipRadius, a = e2.textColor, d = e2.component, u = Ur(), c = u.animate, s = u.config, f = j({ nodes: r2, label: n2, filter: t2, skipRadius: l2, textColor: a }), h = (0, import_react.useMemo)(function() {
    return { enter: function(e3) {
      return { x: e3.node.x, y: e3.node.y, radius: e3.node.radius, textColor: e3.textColor, opacity: 0 };
    }, update: function(e3) {
      return { x: e3.node.x, y: e3.node.y, radius: e3.node.radius, textColor: e3.textColor, opacity: 1 };
    }, leave: function(e3) {
      return { x: e3.node.x, y: e3.node.y, radius: e3.node.radius, textColor: e3.textColor, opacity: 0 };
    } };
  }, []), p = useTransition(f, { keys: function(e3) {
    return e3.node.id;
  }, initial: h.update, from: h.enter, enter: h.update, update: h.update, leave: h.leave, config: s, immediate: !c });
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: p(function(e3, o2) {
    return (0, import_react.createElement)(d, { key: o2.node.id, label: o2.label, style: O({}, e3, { radius: D(e3.radius) }), node: o2.node });
  }) });
};
var J = function(e2) {
  var o2 = e2.node, r2 = e2.label, i2 = e2.style, n2 = zt();
  return (0, import_jsx_runtime.jsx)(animated.text, { x: i2.x, y: i2.y, textAnchor: "middle", dominantBaseline: "central", style: O({}, n2.labels.text, { fill: i2.textColor, opacity: i2.opacity, pointerEvents: "none" }), children: r2 }, o2.id);
};
var N = ["theme", "isInteractive", "animate", "motionConfig", "renderWrapper"];
var Q = function(e2) {
  var r2 = e2.data, t2 = e2.id, l2 = t2 === void 0 ? V.id : t2, a = e2.value, d = a === void 0 ? V.value : a, u = e2.valueFormat, c = e2.width, s = e2.height, v = e2.margin, f = e2.padding, b = f === void 0 ? V.padding : f, y = e2.leavesOnly, C = y === void 0 ? V.leavesOnly : y, g2 = e2.colors, M2 = g2 === void 0 ? V.colors : g2, x = e2.colorBy, k2 = x === void 0 ? V.colorBy : x, w2 = e2.inheritColorFromParent, I = w2 === void 0 ? V.inheritColorFromParent : w2, F2 = e2.childColor, W = F2 === void 0 ? V.childColor : F2, L = e2.borderWidth, R = L === void 0 ? V.borderWidth : L, O2 = e2.borderColor, P2 = O2 === void 0 ? V.borderColor : O2, B2 = e2.circleComponent, j2 = B2 === void 0 ? q : B2, z2 = e2.defs, H2 = z2 === void 0 ? V.defs : z2, D2 = e2.fill, N2 = D2 === void 0 ? V.fill : D2, Q2 = e2.enableLabels, U2 = Q2 === void 0 ? V.enableLabels : Q2, X2 = e2.label, Y2 = X2 === void 0 ? V.label : X2, Z2 = e2.labelsFilter, $2 = e2.labelsSkipRadius, _2 = $2 === void 0 ? V.labelsSkipRadius : $2, ee2 = e2.labelTextColor, oe2 = ee2 === void 0 ? V.labelTextColor : ee2, re2 = e2.labelComponent, ie2 = re2 === void 0 ? J : re2, ne2 = e2.layers, te2 = ne2 === void 0 ? V.layers : ne2, le2 = e2.isInteractive, ae2 = e2.onMouseEnter, de = e2.onMouseMove, ue = e2.onMouseLeave, ce = e2.onClick, se = e2.tooltip, ve = se === void 0 ? V.tooltip : se, fe = e2.zoomedId, he = e2.role, pe = he === void 0 ? V.role : he, me = wt(c, s, v), be = me.outerWidth, ye = me.outerHeight, Ce = me.margin, ge = me.innerWidth, Me = me.innerHeight, xe = S({ data: r2, id: l2, value: d, valueFormat: u, width: ge, height: Me, padding: b, leavesOnly: C, colors: M2, colorBy: k2, inheritColorFromParent: I, childColor: W }), ke = T(xe, fe, ge, Me), we = (0, import_react.useMemo)(function() {
    return In(H2, ke, N2, { targetKey: "fill" });
  }, [H2, ke, N2]), Ie = { circles: null, labels: null };
  te2.includes("circles") && (Ie.circles = (0, import_jsx_runtime.jsx)(K, { nodes: ke, borderWidth: R, borderColor: P2, isInteractive: le2, onMouseEnter: ae2, onMouseMove: de, onMouseLeave: ue, onClick: ce, component: j2, tooltip: ve }, "circles")), U2 && te2.includes("labels") && (Ie.labels = (0, import_jsx_runtime.jsx)(G, { nodes: ke, label: Y2, filter: Z2, skipRadius: _2, textColor: oe2, component: ie2 }, "labels"));
  var Ee = A({ nodes: xe });
  return (0, import_jsx_runtime.jsx)(gn, { width: be, height: ye, margin: Ce, defs: we, role: pe, children: te2.map(function(e3, o2) {
    return Ie[e3] !== void 0 ? Ie[e3] : typeof e3 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e3, Ee) }, o2) : null;
  }) });
};
var U = function(e2) {
  var o2 = e2.theme, r2 = e2.isInteractive, i2 = r2 === void 0 ? V.isInteractive : r2, n2 = e2.animate, t2 = n2 === void 0 ? V.animate : n2, l2 = e2.motionConfig, a = l2 === void 0 ? V.motionConfig : l2, d = e2.renderWrapper, u = P(e2, N);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: i2, animate: t2, motionConfig: a, renderWrapper: d, theme: o2, children: (0, import_jsx_runtime.jsx)(Q, O({ isInteractive: i2 }, u)) });
};
var X = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(o2) {
    var r2 = o2.width, i2 = o2.height;
    return (0, import_jsx_runtime.jsx)(U, O({ width: r2, height: i2 }, e2));
  } });
};
var Y = function(e2, o2) {
  return to([e2, o2], function(e3, o3) {
    return e3 - o3;
  });
};
var Z = function(e2) {
  return to([e2], function(e3) {
    return 2 * e3;
  });
};
var $ = function(e2) {
  var o2, r2, i2 = e2.node, n2 = e2.style, t2 = e2.onMouseEnter, l2 = e2.onMouseMove, a = e2.onMouseLeave, d = e2.onClick, u = Z(n2.radius), c = z(i2, { onMouseEnter: t2, onMouseMove: l2, onMouseLeave: a, onClick: d });
  return (0, import_jsx_runtime.jsx)(animated.div, { style: { position: "absolute", top: Y(n2.y, n2.radius), left: Y(n2.x, n2.radius), height: u, width: u, borderRadius: n2.radius, backgroundColor: n2.color, borderWidth: (o2 = n2.borderWidth, r2 = n2.radius, to([r2], function(e3) {
    return Math.min(o2, e3);
  })), borderStyle: "solid", borderColor: n2.borderColor, boxSizing: "border-box" }, onMouseEnter: c.onMouseEnter, onMouseMove: c.onMouseMove, onMouseLeave: c.onMouseLeave, onClick: c.onClick });
};
var _ = function(e2) {
  var o2 = e2.node, r2 = e2.label, i2 = e2.style, n2 = zt(), t2 = Z(i2.radius);
  return (0, import_jsx_runtime.jsx)(animated.div, { style: O({}, n2.labels.text, { position: "absolute", display: "flex", justifyContent: "center", alignItems: "center", top: Y(i2.y, i2.radius), left: Y(i2.x, i2.radius), width: t2, height: t2, color: i2.textColor, opacity: i2.opacity, pointerEvents: "none" }), children: r2 }, o2.id);
};
var ee = ["theme", "isInteractive", "animate", "motionConfig"];
var oe = function(e2) {
  var o2 = e2.data, r2 = e2.id, t2 = r2 === void 0 ? V.id : r2, l2 = e2.value, a = l2 === void 0 ? V.value : l2, d = e2.valueFormat, u = e2.width, c = e2.height, s = e2.margin, v = e2.padding, f = v === void 0 ? V.padding : v, p = e2.leavesOnly, m = p === void 0 ? V.leavesOnly : p, b = e2.colors, y = b === void 0 ? V.colors : b, C = e2.colorBy, g2 = C === void 0 ? V.colorBy : C, M2 = e2.inheritColorFromParent, x = M2 === void 0 ? V.inheritColorFromParent : M2, k2 = e2.childColor, w2 = k2 === void 0 ? V.childColor : k2, I = e2.borderWidth, F2 = I === void 0 ? V.borderWidth : I, W = e2.borderColor, L = W === void 0 ? V.borderColor : W, R = e2.circleComponent, O2 = R === void 0 ? $ : R, P2 = e2.enableLabels, B2 = P2 === void 0 ? V.enableLabels : P2, j2 = e2.label, z2 = j2 === void 0 ? V.label : j2, H2 = e2.labelsFilter, D2 = e2.labelsSkipRadius, q2 = D2 === void 0 ? V.labelsSkipRadius : D2, J2 = e2.labelTextColor, N2 = J2 === void 0 ? V.labelTextColor : J2, Q2 = e2.labelComponent, U2 = Q2 === void 0 ? _ : Q2, X2 = e2.layers, Y2 = X2 === void 0 ? V.layers : X2, Z2 = e2.isInteractive, ee2 = e2.onMouseEnter, oe2 = e2.onMouseMove, re2 = e2.onMouseLeave, ie2 = e2.onClick, ne2 = e2.tooltip, te2 = ne2 === void 0 ? V.tooltip : ne2, le2 = e2.zoomedId, ae2 = e2.role, de = ae2 === void 0 ? V.role : ae2, ue = wt(u, c, s), ce = ue.outerWidth, se = ue.outerHeight, ve = ue.margin, fe = ue.innerWidth, he = ue.innerHeight, pe = S({ data: o2, id: t2, value: a, valueFormat: d, width: fe, height: he, padding: f, leavesOnly: m, colors: y, colorBy: g2, inheritColorFromParent: x, childColor: w2 }), me = T(pe, le2, fe, he), be = { circles: null, labels: null };
  Y2.includes("circles") && (be.circles = (0, import_jsx_runtime.jsx)(K, { nodes: me, borderWidth: F2, borderColor: L, isInteractive: Z2, onMouseEnter: ee2, onMouseMove: oe2, onMouseLeave: re2, onClick: ie2, component: O2, tooltip: te2 }, "circles")), B2 && Y2.includes("labels") && (be.labels = (0, import_jsx_runtime.jsx)(G, { nodes: me, label: z2, filter: H2, skipRadius: q2, textColor: N2, component: U2 }, "labels"));
  var ye = A({ nodes: pe });
  return (0, import_jsx_runtime.jsx)("div", { role: de, style: { position: "relative", overflow: "hidden", width: ce, height: se }, children: (0, import_jsx_runtime.jsx)("div", { style: { position: "absolute", top: ve.top, left: ve.left }, children: Y2.map(function(e3, o3) {
    return be[e3] !== void 0 ? be[e3] : typeof e3 == "function" ? (0, import_jsx_runtime.jsx)(import_react.Fragment, { children: (0, import_react.createElement)(e3, ye) }, o3) : null;
  }) }) });
};
var re = function(e2) {
  var o2 = e2.theme, r2 = e2.isInteractive, i2 = r2 === void 0 ? V.isInteractive : r2, n2 = e2.animate, t2 = n2 === void 0 ? V.animate : n2, l2 = e2.motionConfig, a = l2 === void 0 ? V.motionConfig : l2, d = P(e2, ee);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: i2, animate: t2, motionConfig: a, theme: o2, children: (0, import_jsx_runtime.jsx)(oe, O({ isInteractive: i2 }, d)) });
};
var ie = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(o2) {
    var r2 = o2.width, i2 = o2.height;
    return (0, import_jsx_runtime.jsx)(re, O({ width: r2, height: i2 }, e2));
  } });
};
var ne = ["isInteractive", "theme"];
var te = function(e2) {
  var o2 = e2.data, n2 = e2.id, a = n2 === void 0 ? V.id : n2, d = e2.value, c = d === void 0 ? V.value : d, s = e2.valueFormat, v = e2.width, f = e2.height, p = e2.margin, m = e2.padding, b = m === void 0 ? V.padding : m, y = e2.leavesOnly, C = y === void 0 ? V.leavesOnly : y, g2 = e2.colors, M2 = g2 === void 0 ? V.colors : g2, x = e2.colorBy, w2 = x === void 0 ? V.colorBy : x, F2 = e2.inheritColorFromParent, W = F2 === void 0 ? V.inheritColorFromParent : F2, L = e2.childColor, R = L === void 0 ? V.childColor : L, O2 = e2.borderWidth, P2 = O2 === void 0 ? V.borderWidth : O2, B2 = e2.borderColor, z2 = B2 === void 0 ? V.borderColor : B2, A2 = e2.enableLabels, D2 = A2 === void 0 ? V.enableLabels : A2, K2 = e2.label, q2 = K2 === void 0 ? V.label : K2, G2 = e2.labelsFilter, J2 = e2.labelsSkipRadius, N2 = J2 === void 0 ? V.labelsSkipRadius : J2, Q2 = e2.labelTextColor, U2 = Q2 === void 0 ? V.labelTextColor : Q2, X2 = e2.isInteractive, Y2 = e2.onMouseMove, Z2 = e2.onClick, $2 = e2.tooltip, _2 = $2 === void 0 ? V.tooltip : $2, ee2 = e2.zoomedId, oe2 = e2.role, re2 = oe2 === void 0 ? V.role : oe2, ie2 = e2.pixelRatio, ne2 = ie2 === void 0 ? V.pixelRatio : ie2, te2 = (0, import_react.useRef)(null), le2 = zt(), ae2 = wt(v, f, p), de = ae2.margin, ue = ae2.innerWidth, ce = ae2.innerHeight, se = ae2.outerWidth, ve = ae2.outerHeight, fe = S({ data: o2, id: a, value: c, valueFormat: s, width: ue, height: ce, padding: b, leavesOnly: C, colors: M2, colorBy: w2, inheritColorFromParent: W, childColor: R }), he = T(fe, ee2, ue, ce), pe = j({ nodes: he, label: q2, filter: G2, skipRadius: N2, textColor: U2 }), me = Xe(z2, le2);
  (0, import_react.useEffect)(function() {
    if (te2.current) {
      te2.current.width = se * ne2, te2.current.height = ve * ne2;
      var e3 = te2.current.getContext("2d");
      e3.scale(ne2, ne2), e3.fillStyle = le2.background, e3.fillRect(0, 0, se, ve), e3.save(), e3.translate(de.left, de.top), he.forEach(function(o3) {
        P2 > 0 && (e3.strokeStyle = me(o3), e3.lineWidth = P2), e3.beginPath(), e3.arc(o3.x, o3.y, o3.radius, 0, 2 * Math.PI), e3.fillStyle = o3.color, e3.fill(), P2 > 0 && e3.stroke();
      }), D2 && (e3.textAlign = "center", e3.textBaseline = "middle", e3.font = le2.labels.text.fontSize + "px " + le2.labels.text.fontFamily, pe.forEach(function(o3) {
        e3.fillStyle = o3.textColor, e3.fillText("" + o3.label, o3.node.x, o3.node.y);
      }));
    }
  }, [te2, ue, ce, se, ve, de.top, de.left, le2, ne2, he, D2, pe, P2, me]);
  var be = H({ nodes: he, canvasEl: te2, margin: de }), ye = k(), Ce = ye.showTooltipFromEvent, ge = ye.hideTooltip, Me = (0, import_react.useCallback)(function(e3) {
    var o3 = be(e3);
    o3 ? (Y2 == null || Y2(o3, e3), Ce((0, import_react.createElement)(_2, o3), e3)) : ge();
  }, [be, Ce, _2, ge]), xe = (0, import_react.useCallback)(function() {
    ge();
  }, [ge]), ke = (0, import_react.useCallback)(function(e3) {
    if (Z2) {
      var o3 = be(e3);
      o3 && Z2(o3, e3);
    }
  }, [be, Z2]);
  return (0, import_jsx_runtime.jsx)("canvas", { ref: te2, width: se * ne2, height: ve * ne2, style: { width: se, height: ve, cursor: X2 ? "auto" : "normal" }, role: re2, onMouseEnter: X2 ? Me : void 0, onMouseMove: X2 ? Me : void 0, onMouseLeave: X2 ? xe : void 0, onClick: X2 ? ke : void 0 });
};
var le = function(e2) {
  var o2 = e2.isInteractive, r2 = o2 === void 0 ? V.isInteractive : o2, i2 = e2.theme, n2 = P(e2, ne);
  return (0, import_jsx_runtime.jsx)(St, { isInteractive: r2, theme: i2, children: (0, import_jsx_runtime.jsx)(te, O({ isInteractive: r2 }, n2)) });
};
var ae = function(e2) {
  return (0, import_jsx_runtime.jsx)(It, { children: function(o2) {
    var r2 = o2.width, i2 = o2.height;
    return (0, import_jsx_runtime.jsx)(le, O({ width: r2, height: i2 }, e2));
  } });
};
export {
  U as CirclePacking,
  le as CirclePackingCanvas,
  re as CirclePackingHtml,
  oe as InnerCirclePackingHtml,
  X as ResponsiveCirclePacking,
  ae as ResponsiveCirclePackingCanvas,
  ie as ResponsiveCirclePackingHtml,
  V as defaultProps,
  S as useCirclePacking,
  j as useCirclePackingLabels,
  A as useCirclePackingLayerContext,
  T as useCirclePackingZoom,
  H as useMouseCircleDetection,
  z as useNodeMouseHandlers
};
//# sourceMappingURL=@nivo_circle-packing.js.map
