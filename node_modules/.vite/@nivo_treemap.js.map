{
  "version": 3,
  "sources": ["../lodash/_arrayReduce.js", "../lodash/_basePropertyOf.js", "../lodash/_deburrLetter.js", "../lodash/deburr.js", "../lodash/_asciiWords.js", "../lodash/_hasUnicodeWord.js", "../lodash/_unicodeWords.js", "../lodash/words.js", "../lodash/_createCompounder.js", "../lodash/startCase.js", "../@nivo/treemap/node_modules/@react-spring/web/src/index.ts", "../@nivo/treemap/node_modules/@react-spring/web/src/applyAnimatedValues.ts", "../@nivo/treemap/node_modules/@react-spring/web/src/AnimatedStyle.ts", "../@nivo/treemap/node_modules/@react-spring/web/src/primitives.ts", "../@nivo/treemap/src/transitions.ts", "../@nivo/treemap/src/TreeMapNode.tsx", "../@nivo/treemap/src/TreeMapNodeTooltip.tsx", "../@nivo/treemap/src/TreeMapHtmlNode.tsx", "../@nivo/treemap/src/defaults.ts", "../@nivo/treemap/src/tiling.ts", "../@nivo/treemap/src/hooks.ts", "../@nivo/treemap/src/TreeMapNodes.tsx", "../@nivo/treemap/src/TreeMap.tsx", "../@nivo/treemap/src/ResponsiveTreeMap.tsx", "../@nivo/treemap/src/TreeMapHtml.tsx", "../@nivo/treemap/src/ResponsiveTreeMapHtml.tsx", "../@nivo/treemap/src/TreeMapCanvas.tsx", "../@nivo/treemap/src/ResponsiveTreeMapCanvas.tsx"],
  "sourcesContent": ["/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n", "var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n", "var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d\u00E9j\u00E0 vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n", "/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n", "/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n", "var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n", "var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n", "var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n", "import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n", "import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const {\n    className,\n    style,\n    children,\n    scrollTop,\n    scrollLeft,\n    viewBox,\n    ...attributes\n  } = props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (className !== void 0) {\n    instance.className = className\n  }\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute('viewBox', viewBox)\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n", "import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n      ? value === id\n      : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n            ? 'deg'\n            : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(\n    readonly inputs: Inputs,\n    readonly transforms: Transforms\n  ) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n", "export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n", "import { to, SpringValue } from '@react-spring/web'\n\nexport const svgNodeTransform = (x: SpringValue<number>, y: SpringValue<number>) =>\n    to([x, y], (x, y) => `translate(${x},${y})`)\n\nexport const htmlNodeTransform = (x: SpringValue<number>, y: SpringValue<number>) =>\n    to([x, y], (x, y) => `translate(${x}px, ${y}px)`)\n\nexport const svgLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) => to([x, y, rotation], (x, y, rotation) => `translate(${x},${y}) rotate(${rotation})`)\n\nexport const htmlLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) => to([x, y, rotation], (x, y, rotation) => `translate(${x}px,${y}px) rotate(${rotation}deg)`)\n\nexport const htmlParentLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) =>\n    to(\n        [x, y, rotation],\n        (x, y, rotation) =>\n            `translate(${x - (rotation === 0 ? 0 : 5)}px,${\n                y - (rotation === 0 ? 5 : 0)\n            }px) rotate(${rotation}deg)`\n    )\n", "import { memo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { NodeProps } from './types'\nimport { svgNodeTransform, svgLabelTransform } from './transitions'\n\nconst NonMemoizedTreeMapNode = <Datum extends object>({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}: NodeProps<Datum>) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.g transform={svgNodeTransform(animatedProps.x, animatedProps.y)}>\n            <animated.rect\n                data-testid={`node.${node.id}`}\n                width={to(animatedProps.width, v => Math.max(v, 0))}\n                height={to(animatedProps.height, v => Math.max(v, 0))}\n                fill={node.fill ? node.fill : animatedProps.color}\n                strokeWidth={borderWidth}\n                stroke={node.borderColor}\n                fillOpacity={node.opacity}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.text\n                    data-testid={`label.${node.id}`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.labelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.labelOpacity}\n                    transform={svgLabelTransform(\n                        animatedProps.labelX,\n                        animatedProps.labelY,\n                        animatedProps.labelRotation\n                    )}\n                >\n                    {node.label}\n                </animated.text>\n            )}\n            {showParentLabel && (\n                <animated.text\n                    data-testid={`parentLabel.${node.id}`}\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.parentLabelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.parentLabelOpacity}\n                    transform={svgLabelTransform(\n                        animatedProps.parentLabelX,\n                        animatedProps.parentLabelY,\n                        animatedProps.parentLabelRotation\n                    )}\n                >\n                    {node.parentLabel}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nexport const TreeMapNode = memo(NonMemoizedTreeMapNode) as typeof NonMemoizedTreeMapNode\n", "import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nconst NonMemoizedTreeMapNodeTooltip = <Datum extends object>({ node }: TooltipProps<Datum>) => (\n    <BasicTooltip id={node.id} value={node.formattedValue} enableChip={true} color={node.color} />\n)\n\nexport const TreeMapNodeTooltip = memo(\n    NonMemoizedTreeMapNodeTooltip\n) as typeof NonMemoizedTreeMapNodeTooltip\n", "import { memo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { NodeProps } from './types'\nimport { htmlNodeTransform, htmlLabelTransform, htmlParentLabelTransform } from './transitions'\n\nconst NonMemoizedTreeMapHtmlNode = <Datum extends object>({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}: NodeProps<Datum>) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.div\n            data-testid={`node.${node.id}`}\n            id={node.path.replace(/[^\\w]/gi, '-')}\n            style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                transform: htmlNodeTransform(animatedProps.x, animatedProps.y),\n                width: animatedProps.width,\n                height: animatedProps.height,\n                borderWidth,\n                borderStyle: 'solid',\n                borderColor: node.borderColor,\n                overflow: 'hidden',\n            }}\n        >\n            <animated.div\n                style={{\n                    boxSizing: 'border-box',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    opacity: node.opacity,\n                    width: animatedProps.width,\n                    height: animatedProps.height,\n                    background: animatedProps.color,\n                }}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.span\n                    data-testid={`label.${node.id}`}\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        top: -5,\n                        left: -5,\n                        width: 10,\n                        height: 10,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        color: node.labelTextColor,\n                        transformOrigin: 'center center',\n                        transform: htmlLabelTransform(\n                            animatedProps.labelX,\n                            animatedProps.labelY,\n                            animatedProps.labelRotation\n                        ),\n                        opacity: animatedProps.labelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.label}\n                </animated.span>\n            )}\n            {showParentLabel && (\n                <animated.span\n                    data-testid={`parentLabel.${node.id}`}\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        width: 10,\n                        height: 10,\n                        color: node.parentLabelTextColor,\n                        transformOrigin: 'top left',\n                        transform: htmlParentLabelTransform(\n                            animatedProps.parentLabelX,\n                            animatedProps.parentLabelY,\n                            animatedProps.parentLabelRotation\n                        ),\n                        opacity: animatedProps.parentLabelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.parentLabel}\n                </animated.span>\n            )}\n        </animated.div>\n    )\n}\n\nexport const TreeMapHtmlNode = memo(NonMemoizedTreeMapHtmlNode) as typeof NonMemoizedTreeMapHtmlNode\n", "import { TreeMapCommonProps, DefaultTreeMapDatum, LayerId } from './types'\nimport { TreeMapNode } from './TreeMapNode'\nimport { TreeMapNodeTooltip } from './TreeMapNodeTooltip'\nimport { TreeMapHtmlNode } from './TreeMapHtmlNode'\n\nexport const commonDefaultProps: Omit<\n    TreeMapCommonProps<DefaultTreeMapDatum>,\n    | 'valueFormat'\n    | 'margin'\n    | 'theme'\n    | 'labelFormat'\n    | 'onMouseEnter'\n    | 'onMouseMove'\n    | 'onMouseLeave'\n    | 'onClick'\n    | 'renderWrapper'\n    | 'ariaLabel'\n    | 'ariaLabelledBy'\n    | 'ariaDescribedBy'\n> & {\n    layers: LayerId[]\n} = {\n    layers: ['nodes'],\n\n    identity: 'id',\n    value: 'value',\n\n    tile: 'squarify',\n    leavesOnly: false,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    colors: { scheme: 'nivo' as const },\n    colorBy: 'pathComponents.1',\n    nodeOpacity: 0.33,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipSize: 0,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    orientLabel: true,\n\n    enableParentLabel: true,\n    parentLabel: 'id',\n    parentLabelSize: 20,\n    parentLabelPosition: 'top',\n    parentLabelPadding: 6,\n    parentLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    isInteractive: true,\n    tooltip: TreeMapNodeTooltip,\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    defs: [],\n    fill: [],\n}\n\nexport const htmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n", "import {\n    treemapBinary,\n    treemapDice,\n    treemapSlice,\n    treemapSliceDice,\n    treemapSquarify,\n} from 'd3-hierarchy'\n\nexport const tileByType = {\n    binary: treemapBinary,\n    dice: treemapDice,\n    slice: treemapSlice,\n    sliceDice: treemapSliceDice,\n    squarify: treemapSquarify,\n} as const\n\nexport type TileType = keyof typeof tileByType\n", "import { createElement, useCallback, useMemo, MouseEvent } from 'react'\nimport omit from 'lodash/omit'\nimport cloneDeep from 'lodash/cloneDeep'\nimport startCase from 'lodash/startCase'\nimport {\n    treemap as d3Treemap,\n    hierarchy,\n    HierarchyNode,\n    HierarchyRectangularNode,\n} from 'd3-hierarchy'\nimport { useTheme, useValueFormatter, PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { commonDefaultProps } from './defaults'\nimport {\n    DefaultTreeMapDatum,\n    TreeMapCommonProps,\n    TreeMapDataProps,\n    ComputedNode,\n    ComputedNodeWithoutStyles,\n    ComputedNodeWithHandlers,\n    CustomLayerProps,\n} from './types'\nimport { tileByType } from './tiling'\n\nexport const useTreeMapLayout = <Datum extends object>({\n    width,\n    height,\n    tile,\n    innerPadding,\n    outerPadding,\n    enableParentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    leavesOnly,\n}: {\n    width: number\n    height: number\n    tile: TreeMapCommonProps<Datum>['tile']\n    innerPadding: TreeMapCommonProps<Datum>['innerPadding']\n    outerPadding: TreeMapCommonProps<Datum>['outerPadding']\n    enableParentLabel: TreeMapCommonProps<Datum>['enableParentLabel']\n    parentLabelSize: TreeMapCommonProps<Datum>['parentLabelSize']\n    parentLabelPosition: TreeMapCommonProps<Datum>['parentLabelPosition']\n    leavesOnly: TreeMapCommonProps<Datum>['leavesOnly']\n}) =>\n    useMemo(() => {\n        const treemap = d3Treemap<Datum>()\n            .size([width, height])\n            .tile(tileByType[tile])\n            .round(true)\n            .paddingInner(innerPadding)\n            .paddingOuter(outerPadding)\n\n        if (enableParentLabel && !leavesOnly) {\n            const parentLabelPadding = parentLabelSize + outerPadding * 2\n            // @ts-ignore\n            treemap[`padding${startCase(parentLabelPosition)}`](parentLabelPadding)\n        }\n\n        return treemap\n    }, [\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    ])\n\nexport const useHierarchy = <Datum extends object>({\n    root,\n    getValue,\n}: {\n    root: Datum\n    getValue: (datum: Datum) => number\n}) => useMemo(() => hierarchy<Datum>(root).sum(getValue), [root, getValue])\n\nconst computeNodeIdAndPath = <Datum extends object>(\n    node: HierarchyNode<Datum>,\n    getIdentity: (node: Datum) => string\n) => {\n    const path = node\n        .ancestors()\n        .map(ancestor => getIdentity(ancestor.data))\n        .reverse()\n\n    return { path: path.join('.'), pathComponents: path }\n}\n\nexport const useTreeMap = <Datum extends object = DefaultTreeMapDatum>({\n    data,\n    width,\n    height,\n    identity = commonDefaultProps.identity as PropertyAccessor<Datum, string>,\n    value = commonDefaultProps.value as PropertyAccessor<Datum, number>,\n    valueFormat,\n    leavesOnly = commonDefaultProps.leavesOnly,\n    tile = commonDefaultProps.tile,\n    innerPadding = commonDefaultProps.innerPadding,\n    outerPadding = commonDefaultProps.outerPadding,\n    label = commonDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    orientLabel = commonDefaultProps.orientLabel,\n    enableParentLabel = commonDefaultProps.enableParentLabel,\n    parentLabel = commonDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = commonDefaultProps.parentLabelSize,\n    parentLabelPosition = commonDefaultProps.parentLabelPosition,\n    parentLabelPadding = commonDefaultProps.parentLabelPadding,\n    colors = commonDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = commonDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = commonDefaultProps.nodeOpacity,\n    borderColor = commonDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    labelTextColor = commonDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    parentLabelTextColor = commonDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n}: {\n    data: TreeMapDataProps<Datum>['data']\n    width: number\n    height: number\n    identity?: TreeMapCommonProps<Datum>['identity']\n    value?: TreeMapCommonProps<Datum>['value']\n    valueFormat?: TreeMapCommonProps<Datum>['valueFormat']\n    tile?: TreeMapCommonProps<Datum>['tile']\n    leavesOnly?: TreeMapCommonProps<Datum>['leavesOnly']\n    innerPadding?: TreeMapCommonProps<Datum>['innerPadding']\n    outerPadding?: TreeMapCommonProps<Datum>['outerPadding']\n    label?: TreeMapCommonProps<Datum>['label']\n    orientLabel?: TreeMapCommonProps<Datum>['orientLabel']\n    enableParentLabel?: TreeMapCommonProps<Datum>['enableParentLabel']\n    parentLabel?: TreeMapCommonProps<Datum>['parentLabel']\n    parentLabelSize?: TreeMapCommonProps<Datum>['parentLabelSize']\n    parentLabelPosition?: TreeMapCommonProps<Datum>['parentLabelPosition']\n    parentLabelPadding?: TreeMapCommonProps<Datum>['parentLabelPadding']\n    colors?: TreeMapCommonProps<Datum>['colors']\n    colorBy?: TreeMapCommonProps<Datum>['colorBy']\n    nodeOpacity?: TreeMapCommonProps<Datum>['nodeOpacity']\n    borderColor?: TreeMapCommonProps<Datum>['borderColor']\n    labelTextColor?: TreeMapCommonProps<Datum>['labelTextColor']\n    parentLabelTextColor?: TreeMapCommonProps<Datum>['parentLabelTextColor']\n}) => {\n    const getIdentity = usePropertyAccessor(identity)\n    const getValue = usePropertyAccessor(value)\n    const formatValue = useValueFormatter(valueFormat)\n    const getLabel = usePropertyAccessor(label)\n    const getParentLabel = usePropertyAccessor(parentLabel)\n\n    const layout = useTreeMapLayout<Datum>({\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    })\n\n    const hierarchy = useHierarchy<Datum>({ root: data, getValue })\n\n    const rawNodes = useMemo(() => {\n        // d3 treemap mutates the data, so we need to copy it\n        // to have proper behavior for subsequents useMemo()\n        const root = cloneDeep(hierarchy)\n        layout(root)\n\n        return (\n            leavesOnly ? root.leaves() : root.descendants()\n        ) as HierarchyRectangularNode<Datum>[]\n    }, [hierarchy, layout, leavesOnly])\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                const { path, pathComponents } = computeNodeIdAndPath(rawNode, getIdentity)\n\n                const node = {\n                    id: getIdentity(rawNode.data),\n                    path,\n                    pathComponents,\n                    data: omit(rawNode.data, 'children'),\n                    x: rawNode.x0,\n                    y: rawNode.y0,\n                    width: rawNode.x1 - rawNode.x0,\n                    height: rawNode.y1 - rawNode.y0,\n                    value: rawNode.value!,\n                    formattedValue: formatValue(rawNode.value!),\n                    treeDepth: rawNode.depth,\n                    treeHeight: rawNode.height,\n                    isParent: rawNode.height > 0,\n                    isLeaf: rawNode.height === 0,\n                    parentLabelX: 0,\n                    parentLabelY: 0,\n                    parentLabelRotation: 0,\n                } as ComputedNodeWithoutStyles<Datum>\n\n                node.labelRotation = orientLabel && node.height > node.width ? -90 : 0\n\n                if (parentLabelPosition === 'top') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = outerPadding + parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'right') {\n                    node.parentLabelX = node.width - outerPadding - parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n                if (parentLabelPosition === 'bottom') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = node.height - outerPadding - parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'left') {\n                    node.parentLabelX = outerPadding + parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n\n                node.label = getLabel(node)\n                node.parentLabel = getParentLabel(node)\n\n                return node\n            }),\n        [\n            rawNodes,\n            getIdentity,\n            formatValue,\n            getLabel,\n            orientLabel,\n            getParentLabel,\n            parentLabelSize,\n            parentLabelPosition,\n            parentLabelPadding,\n            outerPadding,\n        ]\n    )\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getParentLabelTextColor = useInheritedColor(parentLabelTextColor, theme)\n\n    const nodesWithStyles = useMemo(\n        () =>\n            nodes.map(node => {\n                const nodeWithStyles = {\n                    ...node,\n                    color: getColor(node),\n                    opacity: nodeOpacity,\n                } as ComputedNode<Datum>\n\n                nodeWithStyles.borderColor = getBorderColor(nodeWithStyles)\n                nodeWithStyles.labelTextColor = getLabelTextColor(nodeWithStyles)\n                nodeWithStyles.parentLabelTextColor = getParentLabelTextColor(nodeWithStyles)\n\n                return nodeWithStyles\n            }),\n        [nodes, getColor, nodeOpacity, getBorderColor, getLabelTextColor, getParentLabelTextColor]\n    )\n\n    return {\n        hierarchy,\n        nodes: nodesWithStyles,\n        layout,\n    }\n}\n\nexport const useInteractiveTreeMapNodes = <Datum extends object>(\n    nodes: ComputedNode<Datum>[],\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: {\n        isInteractive: TreeMapCommonProps<Datum>['isInteractive']\n        onMouseEnter?: TreeMapCommonProps<Datum>['onMouseEnter']\n        onMouseMove?: TreeMapCommonProps<Datum>['onMouseMove']\n        onMouseLeave?: TreeMapCommonProps<Datum>['onMouseLeave']\n        onClick?: TreeMapCommonProps<Datum>['onClick']\n        tooltip: TreeMapCommonProps<Datum>['tooltip']\n    }\n): ComputedNodeWithHandlers<Datum>[] => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltip(node, event)\n            onMouseEnter?.(node, event)\n        },\n        [onMouseEnter, showTooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltip(node, event)\n            onMouseMove?.(node, event)\n        },\n        [onMouseMove, showTooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [onMouseLeave, hideTooltip]\n    )\n\n    const handleClick = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            onClick?.(node, event)\n        },\n        [onClick]\n    )\n\n    return useMemo(\n        () =>\n            nodes.map(node => {\n                if (!isInteractive) return node\n\n                return {\n                    ...node,\n                    onMouseEnter: (event: MouseEvent) => handleMouseEnter(node, event),\n                    onMouseMove: (event: MouseEvent) => handleMouseMove(node, event),\n                    onMouseLeave: (event: MouseEvent) => handleMouseLeave(node, event),\n                    onClick: (event: MouseEvent) => handleClick(node, event),\n                }\n            }),\n        [isInteractive, nodes, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n}\n\nexport const useCustomLayerProps = <Datum extends object>({\n    nodes,\n}: CustomLayerProps<Datum>): CustomLayerProps<Datum> =>\n    useMemo(\n        () => ({\n            nodes,\n        }),\n        [nodes]\n    )\n", "import { createElement, memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useInteractiveTreeMapNodes } from './hooks'\nimport {\n    ComputedNode,\n    TreeMapCommonProps,\n    NodeAnimatedProps,\n    NodeComponent,\n    ComputedNodeWithHandlers,\n} from './types'\n\nconst getAnimatedNodeProps = <Datum extends object>(\n    node: ComputedNodeWithHandlers<Datum>\n): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    width: node.width,\n    height: node.height,\n    color: node.color,\n    labelX: node.width / 2,\n    labelY: node.height / 2,\n    labelRotation: node.labelRotation,\n    labelOpacity: 1,\n    parentLabelX: node.parentLabelX,\n    parentLabelY: node.parentLabelY,\n    parentLabelRotation: node.parentLabelRotation,\n    parentLabelOpacity: 1,\n})\n\nconst getEndingAnimatedNodeProps = <Datum extends object>(\n    node: ComputedNodeWithHandlers<Datum>\n): NodeAnimatedProps => {\n    const x = node.x + node.width / 2\n    const y = node.y + node.height / 2\n\n    return {\n        x,\n        y,\n        width: 0,\n        height: 0,\n        color: node.color,\n        labelX: 0,\n        labelY: 0,\n        labelRotation: node.labelRotation,\n        labelOpacity: 0,\n        parentLabelX: 0,\n        parentLabelY: 0,\n        parentLabelRotation: node.parentLabelRotation,\n        parentLabelOpacity: 0,\n    }\n}\n\ninterface TreeMapNodesProps<Datum extends object> {\n    nodes: ComputedNode<Datum>[]\n    nodeComponent: NodeComponent<Datum>\n    borderWidth: TreeMapCommonProps<Datum>['borderWidth']\n    enableLabel: TreeMapCommonProps<Datum>['enableLabel']\n    labelSkipSize: TreeMapCommonProps<Datum>['labelSkipSize']\n    enableParentLabel: TreeMapCommonProps<Datum>['enableParentLabel']\n    isInteractive: TreeMapCommonProps<Datum>['isInteractive']\n    onMouseEnter?: TreeMapCommonProps<Datum>['onMouseEnter']\n    onMouseMove?: TreeMapCommonProps<Datum>['onMouseMove']\n    onMouseLeave?: TreeMapCommonProps<Datum>['onMouseLeave']\n    onClick?: TreeMapCommonProps<Datum>['onClick']\n    tooltip: TreeMapCommonProps<Datum>['tooltip']\n}\n\nconst NonMemoizedTreeMapNodes = <Datum extends object>({\n    nodes,\n    nodeComponent,\n    borderWidth,\n    enableLabel,\n    labelSkipSize,\n    enableParentLabel,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: TreeMapNodesProps<Datum>) => {\n    const nodesWithHandlers = useInteractiveTreeMapNodes<Datum>(nodes, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<ComputedNodeWithHandlers<Datum>, NodeAnimatedProps>(\n        nodesWithHandlers,\n        {\n            keys: node => node.path,\n            initial: getAnimatedNodeProps,\n            from: getEndingAnimatedNodeProps,\n            enter: getAnimatedNodeProps,\n            update: getAnimatedNodeProps,\n            leave: getEndingAnimatedNodeProps,\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((animatedProps, node) =>\n                createElement(nodeComponent, {\n                    key: node.path,\n                    node,\n                    animatedProps,\n                    borderWidth,\n                    enableLabel,\n                    labelSkipSize,\n                    enableParentLabel,\n                })\n            )}\n        </>\n    )\n}\n\nexport const TreeMapNodes = memo(NonMemoizedTreeMapNodes) as typeof NonMemoizedTreeMapNodes\n", "import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    SvgWrapper,\n    Container,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { useTreeMap, useCustomLayerProps } from './hooks'\nimport { TreeMapNodes } from './TreeMapNodes'\nimport {\n    DefaultTreeMapDatum,\n    NodeComponent,\n    TreeMapCommonProps,\n    TreeMapSvgProps,\n    LayerId,\n} from './types'\nimport { svgDefaultProps } from './defaults'\n\ntype InnerTreeMapProps<Datum extends object> = Omit<\n    TreeMapSvgProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMap = <Datum extends object>({\n    data,\n    identity = svgDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = svgDefaultProps.value as TreeMapCommonProps<Datum>['value'],\n    valueFormat,\n    tile = svgDefaultProps.tile,\n    nodeComponent = svgDefaultProps.nodeComponent as NodeComponent<Datum>,\n    innerPadding = svgDefaultProps.innerPadding,\n    outerPadding = svgDefaultProps.outerPadding,\n    leavesOnly = svgDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers as NonNullable<TreeMapSvgProps<Datum>['layers']>,\n    colors = svgDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = svgDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = svgDefaultProps.nodeOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    enableLabel = svgDefaultProps.enableLabel,\n    label = svgDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = svgDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = svgDefaultProps.orientLabel,\n    labelSkipSize = svgDefaultProps.labelSkipSize,\n    enableParentLabel = svgDefaultProps.enableParentLabel,\n    parentLabel = svgDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = svgDefaultProps.parentLabelSize,\n    parentLabelPosition = svgDefaultProps.parentLabelPosition,\n    parentLabelPadding = svgDefaultProps.parentLabelPadding,\n    parentLabelTextColor = svgDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n    isInteractive = svgDefaultProps.isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = svgDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapProps<Datum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        nodes: null,\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <TreeMapNodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    const customLayerProps = useCustomLayerProps<Datum>({ nodes })\n\n    const boundDefs = bindDefs(defs, nodes, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const TreeMap = <Datum extends object = DefaultTreeMapDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: TreeMapSvgProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerTreeMap<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapSvgProps } from './types'\nimport { TreeMap } from './TreeMap'\n\nexport const ResponsiveTreeMap = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapSvgProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMap<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n", "import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions } from '@nivo/core'\nimport { useCustomLayerProps, useTreeMap } from './hooks'\nimport { TreeMapNodes } from './TreeMapNodes'\nimport { DefaultTreeMapDatum, TreeMapCommonProps, TreeMapHtmlProps, LayerId } from './types'\nimport { htmlDefaultProps, svgDefaultProps } from './defaults'\n\ntype InnerTreeMapHtmlProps<Datum extends object> = Omit<\n    TreeMapHtmlProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMapHtml = <Datum extends object>({\n    data,\n    identity = htmlDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = htmlDefaultProps.value as TreeMapCommonProps<Datum>['value'],\n    tile = htmlDefaultProps.tile,\n    nodeComponent = htmlDefaultProps.nodeComponent,\n    valueFormat,\n    innerPadding = htmlDefaultProps.innerPadding,\n    outerPadding = htmlDefaultProps.outerPadding,\n    leavesOnly = htmlDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers as NonNullable<TreeMapHtmlProps<Datum>['layers']>,\n    colors = htmlDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = htmlDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = htmlDefaultProps.nodeOpacity,\n    borderWidth = htmlDefaultProps.borderWidth,\n    borderColor = htmlDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    enableLabel = htmlDefaultProps.enableLabel,\n    label = htmlDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = htmlDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = htmlDefaultProps.orientLabel,\n    labelSkipSize = htmlDefaultProps.labelSkipSize,\n    enableParentLabel = htmlDefaultProps.enableParentLabel,\n    parentLabel = htmlDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = htmlDefaultProps.parentLabelSize,\n    parentLabelPosition = htmlDefaultProps.parentLabelPosition,\n    parentLabelPadding = htmlDefaultProps.parentLabelPadding,\n    parentLabelTextColor = htmlDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n    isInteractive = htmlDefaultProps.isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = htmlDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapHtmlProps<Datum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        nodes: null,\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <TreeMapNodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    const customLayerProps = useCustomLayerProps<Datum>({ nodes })\n\n    return (\n        <div\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n            style={{\n                position: 'relative',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div style={{ position: 'absolute', top: margin.top, left: margin.left }}>\n                {layers.map((layer, i) => {\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                    }\n\n                    return layerById?.[layer] ?? null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport const TreeMapHtml = <Datum extends object = DefaultTreeMapDatum>({\n    isInteractive = htmlDefaultProps.isInteractive,\n    animate = htmlDefaultProps.animate,\n    motionConfig = htmlDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: TreeMapHtmlProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerTreeMapHtml<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapHtmlProps } from './types'\nimport { TreeMapHtml } from './TreeMapHtml'\n\nexport const ResponsiveTreeMapHtml = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapHtmlProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapHtml<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n", "import { createElement, useCallback, useEffect, useRef, MouseEvent } from 'react'\nimport {\n    degreesToRadians,\n    getRelativeCursor,\n    isCursorInRect,\n    Container,\n    useDimensions,\n    useTheme,\n    Margin,\n} from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useTreeMap } from './hooks'\nimport { ComputedNode, DefaultTreeMapDatum, TreeMapCanvasProps, TreeMapCommonProps } from './types'\nimport { canvasDefaultProps } from './defaults'\n\nconst findNodeUnderCursor = <Datum extends object>(\n    nodes: ComputedNode<Datum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\ntype InnerTreeMapCanvasProps<Datum extends object> = Omit<\n    TreeMapCanvasProps<Datum>,\n    'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMapCanvas = <Datum extends object>({\n    data,\n    identity = canvasDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = canvasDefaultProps.identity as TreeMapCommonProps<Datum>['value'],\n    tile = canvasDefaultProps.tile,\n    valueFormat,\n    innerPadding = canvasDefaultProps.innerPadding,\n    outerPadding = canvasDefaultProps.outerPadding,\n    leavesOnly = canvasDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors = canvasDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = canvasDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = canvasDefaultProps.nodeOpacity,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor = canvasDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    enableLabel = canvasDefaultProps.enableLabel,\n    label = canvasDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = canvasDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = canvasDefaultProps.orientLabel,\n    labelSkipSize = canvasDefaultProps.labelSkipSize,\n    isInteractive = canvasDefaultProps.isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip = canvasDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapCanvasProps<Datum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel: false,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        if (canvasEl.current === null) return\n\n        const ctx = canvasEl.current.getContext('2d')\n        if (ctx === null) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        nodes.forEach(node => {\n            ctx.fillStyle = node.color\n            ctx.fillRect(node.x, node.y, node.width, node.height)\n\n            if (borderWidth > 0) {\n                ctx.strokeStyle = node.borderColor\n                ctx.lineWidth = borderWidth\n                ctx.strokeRect(node.x, node.y, node.width, node.height)\n            }\n        })\n\n        if (enableLabel) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            nodes.forEach(node => {\n                const showLabel =\n                    node.isLeaf &&\n                    (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n                if (!showLabel) return\n\n                const rotate = orientLabel && node.height > node.width\n\n                ctx.save()\n                ctx.translate(node.x + node.width / 2, node.y + node.height / 2)\n                ctx.rotate(degreesToRadians(rotate ? -90 : 0))\n\n                ctx.fillStyle = node.labelTextColor\n                ctx.fillText(`${node.label}`, 0, 0)\n\n                ctx.restore()\n            })\n        }\n    }, [\n        canvasEl,\n        nodes,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        borderWidth,\n        enableLabel,\n        orientLabel,\n        labelSkipSize,\n        theme,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node !== undefined) {\n                showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n                onMouseMove?.(node, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [canvasEl, nodes, margin, showTooltipFromEvent, hideTooltip, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node === undefined) return\n\n            onClick?.(node, event)\n        },\n        [canvasEl, nodes, margin, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n        />\n    )\n}\n\nexport const TreeMapCanvas = <Datum extends object = DefaultTreeMapDatum>({\n    theme,\n    isInteractive = canvasDefaultProps.isInteractive,\n    animate = canvasDefaultProps.animate,\n    motionConfig = canvasDefaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: TreeMapCanvasProps<Datum>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerTreeMapCanvas<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapCanvasProps } from './types'\nimport { TreeMapCanvas } from './TreeMapCanvas'\n\nexport const ResponsiveTreeMapCanvas = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapCanvasProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapCanvas<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],
  "mappings": "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",
  "names": []
}
